Class {
	#name : #VBParser,
	#superclass : #VBAbstractParser,
	#category : #'VBParser-ParsingCore'
}

{ #category : #generated }
VBParser class >> ambiguousTransitions [
^#(
#[ 0 10 0 37] 
#[ 0 10 2 113] 
#[ 0 10 2 117] 
#[ 0 10 2 121] 
#[ 0 10 2 125] 
#[ 0 10 2 129] 
#[ 0 10 2 133] 
#[ 0 10 2 137] 
#[ 0 10 2 141] 
#[ 0 10 2 145] 
#[ 0 10 2 149] 
#[ 0 10 2 153] 
#[ 0 10 2 157] 
#[ 0 10 2 161] 
#[ 0 10 2 165] 
#[ 0 10 0 61] 
#[ 0 10 0 73] 
#[ 0 10 2 169] 
#[ 0 10 0 89] 
#[ 0 10 2 173] 
#[ 0 10 0 97] 
#[ 0 10 0 101] 
#[ 0 10 0 105] 
#[ 0 10 0 109] 
#[ 0 10 0 113] 
#[ 0 10 2 177] 
#[ 0 10 0 117] 
#[ 0 10 0 125] 
#[ 0 10 0 129] 
#[ 0 10 0 137] 
#[ 0 10 2 181] 
#[ 0 10 0 141] 
#[ 0 10 0 145] 
#[ 0 10 2 185] 
#[ 0 10 0 161] 
#[ 0 10 2 189] 
#[ 0 10 2 193] 
#[ 0 10 2 197] 
#[ 0 10 0 181] 
#[ 0 10 2 201] 
#[ 0 10 0 185] 
#[ 0 10 0 189] 
#[ 0 10 2 205] 
#[ 0 10 2 209] 
#[ 0 10 2 213] 
#[ 0 10 0 213] 
#[ 0 10 0 217] 
#[ 0 10 3 65] 
#[ 0 10 2 217] 
#[ 0 10 0 237] 
#[ 0 10 0 241] 
#[ 0 10 3 69] 
#[ 0 30 3 153] 
#[ 0 54 3 181] 
#[ 0 74 0 78] 
#[ 0 82 3 225] 
#[ 0 94 3 241] 
#[ 0 102 0 106] 
#[ 0 134 0 142 0 146 4 17] 
#[ 1 18 1 22] 
#[ 1 126 1 130] 
#[ 1 186 1 190] 
#[ 1 222 1 226] 
#[ 1 230 1 234] 
#[ 1 238 4 69] 
#[ 1 246 1 250] 
#[ 2 66 3 249] 
#[ 0 146 4 105] 
#[ 0 114 4 125] 
#[ 0 37 2 182] 
#[ 0 61 2 182] 
#[ 2 182 5 109] 
#[ 2 169 2 182] 
#[ 0 97 2 182] 
#[ 2 182 5 121] 
#[ 0 109 2 182] 
#[ 2 182 5 129] 
#[ 0 141 2 182] 
#[ 0 161 2 182] 
#[ 2 182 2 189] 
#[ 2 182 2 193] 
#[ 2 182 2 205] 
#[ 0 213 2 182] 
#[ 0 221 2 182] 
#[ 2 182 2 217] 
#[ 0 237 2 182] 
#[ 0 241 2 182] 
#[ 2 186 5 245] 
#[ 2 210 4 45] 
#[ 0 10 0 221] 
#[ 3 50 3 54] 
#[ 0 134 3 66] 
#[ 0 138 3 66] 
#[ 3 66 3 70 7 173] 
#[ 3 74 7 177] 
#[ 3 122 3 126] 
#[ 1 18 3 134] 
#[ 1 22 3 134] 
#[ 1 222 7 185] 
#[ 1 230 3 138] 
#[ 1 234 3 138] 
#[ 1 230 3 138 3 142] 
#[ 1 246 3 146] 
#[ 1 250 3 146] 
#[ 1 246 3 146 3 150] 
#[ 0 26 3 162] 
#[ 0 42 3 174] 
#[ 0 50 3 182] 
#[ 3 230 7 205] 
#[ 3 250 4 45] 
#[ 0 146 4 2] 
#[ 0 146 4 2 7 241] 
#[ 4 6 8 1] 
#[ 4 14 8 41] 
#[ 4 18 8 49] 
#[ 4 22 4 26] 
#[ 0 146 3 66 4 2] 
#[ 0 146 3 66 3 70 4 2 8 121] 
#[ 4 90 8 1] 
#[ 4 98 7 177] 
#[ 4 110 8 1] 
#[ 0 54 7 177] 
#[ 4 122 7 177] 
#[ 4 126 8 1] 
#[ 0 134 8 197] 
#[ 4 154 8 229] 
#[ 3 177 4 154] 
#[ 4 174 9 65] 
#[ 0 134 0 138] 
#[ 4 61 4 202] 
#[ 4 210 7 205] 
#[ 3 177 4 218] 
#[ 4 218 10 41] 
#[ 0 146 4 226] 
#[ 0 146 4 226 7 241] 
#[ 4 238 8 1] 
#[ 4 242 10 109] 
#[ 4 254 10 133] 
#[ 5 18 10 185] 
#[ 5 26 7 177] 
#[ 5 30 7 177] 
#[ 2 182 11 25] 
#[ 5 42 11 85] 
#[ 5 46 11 89] 
#[ 0 134 3 66 3 70 11 97] 
#[ 5 62 7 177] 
#[ 4 154 11 109] 
#[ 0 6 11 133] 
#[ 0 146 5 78] 
#[ 0 146 5 78 11 161] 
#[ 4 174 5 82] 
#[ 4 174 5 82 11 205] 
#[ 4 174 11 205] 
#[ 4 61 5 106] 
#[ 4 61 5 114] 
#[ 4 218 12 125] 
#[ 4 218 12 141] 
#[ 0 146 5 202] 
#[ 0 146 5 202 7 241] 
#[ 5 222 12 233] 
#[ 0 146 5 238] 
#[ 0 146 5 238 7 241] 
#[ 0 54 5 254] 
#[ 3 177 5 254] 
#[ 0 54 5 254 13 45] 
#[ 5 254 13 45] 
#[ 6 10 7 177] 
#[ 6 14 8 1] 
#[ 6 22 7 177] 
#[ 6 34 7 177] 
#[ 6 38 7 177] 
#[ 6 42 6 46 7 177] 
#[ 6 50 13 121] 
#[ 4 45 6 54] 
#[ 6 66 7 177] 
#[ 6 70 7 177] 
#[ 6 82 13 185] 
#[ 6 86 13 189] 
#[ 3 177 6 94] 
#[ 6 94 13 193] 
#[ 3 177 6 98] 
#[ 6 98 13 201] 
#[ 0 146 5 78 13 225] 
#[ 0 146 5 78 7 241] 
#[ 6 42 7 177] 
#[ 4 174 14 49] 
#[ 4 174 14 93] 
#[ 4 218 14 229] 
#[ 4 218 15 1] 
#[ 0 146 6 166] 
#[ 0 146 6 166 7 241] 
#[ 6 190 7 177] 
#[ 6 226 15 105] 
#[ 6 238 15 169] 
#[ 6 242 15 177] 
#[ 6 246 15 185] 
#[ 0 146 7 241] 
#[ 7 2 7 177] 
#[ 7 14 7 177] 
#[ 7 22 7 177] 
#[ 3 177 7 34] 
#[ 3 177 7 42] 
#[ 0 33 0 146] 
#[ 0 54 0 146] 
#[ 0 37 0 146] 
#[ 0 41 0 146] 
#[ 0 45 0 146] 
#[ 0 49 0 146] 
#[ 0 53 0 146] 
#[ 0 57 0 146] 
#[ 0 61 0 146] 
#[ 0 65 0 146] 
#[ 0 69 0 146] 
#[ 0 73 0 146] 
#[ 0 77 0 146] 
#[ 0 81 0 146] 
#[ 0 85 0 146] 
#[ 0 89 0 146] 
#[ 0 93 0 146] 
#[ 0 97 0 146] 
#[ 0 101 0 146] 
#[ 0 105 0 146] 
#[ 0 109 0 146] 
#[ 0 113 0 146] 
#[ 0 117 0 146] 
#[ 0 121 0 146] 
#[ 0 125 0 146] 
#[ 0 129 0 146] 
#[ 0 133 0 146] 
#[ 0 137 0 146] 
#[ 0 141 0 146] 
#[ 0 145 0 146] 
#[ 0 146 0 149] 
#[ 0 146 0 153] 
#[ 0 146 0 157] 
#[ 0 146 0 161] 
#[ 0 146 0 165] 
#[ 0 146 0 169] 
#[ 0 146 0 173] 
#[ 0 146 0 177] 
#[ 0 146 0 181] 
#[ 0 146 0 185] 
#[ 0 146 0 189] 
#[ 0 146 0 193] 
#[ 0 146 0 197] 
#[ 0 146 0 201] 
#[ 0 146 0 205] 
#[ 0 146 0 209] 
#[ 0 146 0 213] 
#[ 0 146 0 217] 
#[ 0 146 0 221] 
#[ 0 146 0 225] 
#[ 0 146 0 229] 
#[ 0 146 3 177] 
#[ 0 146 0 233] 
#[ 0 146 0 237] 
#[ 0 146 0 241] 
#[ 0 54 0 146 7 241] 
#[ 0 146 5 78 16 117] 
#[ 0 146 5 78 16 177] 
#[ 7 66 7 177] 
#[ 7 70 7 177] 
#[ 7 74 7 177] 
#[ 7 78 7 177] 
#[ 7 82 7 177] 
#[ 7 86 7 177] 
#[ 0 134 3 70] 
#[ 0 138 3 70] 
#[ 7 90 7 181] 
#[ 1 230 3 142] 
#[ 1 234 3 142] 
#[ 1 246 3 150] 
#[ 1 250 3 150] 
#[ 7 94 7 177] 
#[ 7 98 7 177] 
#[ 7 102 7 177] 
#[ 7 134 7 177] 
#[ 4 218 17 13] 
#[ 7 146 7 177] 
#[ 7 150 7 177] 
#[ 7 177 7 178] 
#[ 7 177 7 182] 
#[ 7 210 17 125] 
#[ 7 214 17 133] 
#[ 4 174 17 173] 
#[ 7 177 7 222] 
#[ 7 177 7 254] 
#[ 7 177 8 6] 
#[ 7 177 8 10] 
#[ 7 177 8 14] 
#[ 7 177 8 18] 
#[ 4 122 5 30] 
#[ 4 122 5 30 7 177] 
#[ 0 146 5 78 18 81] 
#[ 4 174 18 145] 
#[ 0 146 5 78 18 157] 
#[ 7 177 8 30] 
#[ 7 177 8 34] 
#[ 7 177 8 38] 
#[ 7 177 8 42] 
#[ 7 177 8 50] 
#[ 7 177 8 70] 
#[ 8 90 19 85] 
#[ 3 177 8 94] 
#[ 4 174 19 141] 
#[ 7 177 8 122] 
#[ 7 177 8 126] 
#[ 6 46 7 66] 
#[ 6 46 7 66 7 177] 
#[ 7 177 8 134] 
#[ 5 26 6 34] 
#[ 5 26 6 34 7 177] 
#[ 0 146 5 78 20 93] 
#[ 0 54 20 185] 
#[ 7 177 8 150] 
#[ 7 177 8 154] 
#[ 8 170 20 205] 
#[ 7 177 8 194] 
#[ 7 177 8 198] 
#[ 0 134 9 10] 
#[ 1 222 9 14] 
#[ 7 177 9 30] 
#[ 0 146 5 78 21 217] 
#[ 9 46 22 61] 
#[ 7 177 9 62] 
#[ 3 177 9 86] 
#[ 0 54 5 254 22 173] 
#[ 5 254 9 94] 
#[ 3 177 5 254 9 94] 
#[ 0 54 5 254 22 189] 
#[ 5 254 9 98] 
#[ 3 177 5 254 9 98] 
#[ 9 158 23 161] 
#[ 9 162 23 181] 
#[ 5 254 23 189] 
#[ 0 54 5 254 7 74 23 193] 
#[ 9 166 23 209] 
#[ 5 254 9 198] 
#[ 3 177 5 254 9 198] 
#[ 5 254 9 214] 
#[ 3 177 5 254 9 214] 
#[ 10 18 24 221] 
#[ 10 22 24 229] 
#[ 10 26 10 30] 
#[ 10 26 10 30 24 241] 
#[ 3 177 10 46] 
#[ 0 54 5 254 25 49] 
#[ 5 254 10 70] 
#[ 3 177 5 254 10 70] 
#[ 0 54 5 254 25 61] 
#[ 5 254 10 74] 
#[ 3 177 5 254 10 74] 
#[ 10 154 25 197] 
#[ 10 162 25 213] 
#[ 10 166 25 229] 
#[ 10 174 25 241] 
#[ 10 178 25 249] 
#[ 5 254 10 198] 
#[ 3 177 5 254 10 198] 
#[ 5 254 10 210] 
#[ 3 177 5 254 10 210] 
#[ 11 10 26 117] 
#[ 11 22 26 129] 
#[ 3 177 11 30] 
#[ 11 110 26 233] 
#[ 11 114 26 245] 
#[ 11 150 27 33] 
#[ 11 178 27 93] 
#[ 7 177 11 186] 
#[ 11 206 27 117] 
#[ 11 218 27 145] 
#[ 7 177 11 222] 
#[ 7 177 11 226] 
#[ 7 177 11 238]
	).
]

{ #category : #'generated-accessing' }
VBParser class >> cacheId [
	^'2022-06-14T07:27:09.646783+02:00'
]

{ #category : #generated }
VBParser class >> definitionComment [
"%glr;
%ignorecase;
%annotate_tokens;

#expression operators -- lowest precedence are first.

%left "")""  ;
%nonassoc  ""="" "":="";
%nonassoc  ""New"";
%left "","";
%right "":"";
%left ""eqv"" ;

%left ""xor"";
%left  ""or"";
%left  ""and"";
%nonassoc  ""<>"" ""<"" "">"" ""<="" "">="" ""Like"" ""Is"" ""IsNot"";
%left ""<<"" "">>"";
%left ""&"" ;
%left ""+"" ""-"";
%left ""*"" ""/"" ""Mod"";
%right ""not"" ;
%right ""^"";
%right  ""~"";
%right ""["" ""("";
%right ""!"" ;


%prefix VB;
%root Program;
%suffix Node;
%start module Statement ModuleStatement BehaviourDefinition;

<lineContinuation>
   :   ( \x20 | \xA0 | \x9) (_) ( \x20 | \xA0 | \x9)* ( \r | \n | \r\n | \x2028 ) ( \x20 | \xA0 | \x9)*
   ;

<DECIMAL_INTEGER>
	: 0 | [1-9] [0-9]*	
	;
<HEX_INTEGER>
	: 0[xX][0-9a-fA-F]+	
	;
<OCTAL_INTEGER>
	: 0[0-7]+	
	;
	
<EXPONENT>
	: [eE] [\-\+]? [0-9]+ 	
	;
<FLOAT_TYPE>
	: [fFdD]	
	;

<DATE_LITERAL>
   : (\#) ([^\#\r\n])* (\#)
   ;

<COLOR_LITERAL>
   : \& H [0-9a-fA-F]+ \&?
   ;


<INTEGER_LITERAL>
	: (<DECIMAL_INTEGER> | <HEX_INTEGER> | <OCTAL_INTEGER>) [lL]?	
	;
<FLOATING_POINT_LITERAL>
	: [0-9]+ \. [0-9]* <EXPONENT>? <FLOAT_TYPE>? 
	| \. [0-9]+ <EXPONENT>? <FLOAT_TYPE>? 
	| [0-9]+ <EXPONENT> <FLOAT_TYPE>? 
	| [0-9]+ <FLOAT_TYPE>	
	| <HEX_INTEGER> \. [0-9a-fA-F]+ [pP] [\-\+]? [0-9]+ <FLOAT_TYPE>?
	;
<BOOLEAN_LITERAL>
	: true
	| false
	;
<STRING_LITERAL>
   : \"" ([^\""\r\n] | \""\"")* \""
   ;
<NULL_LITERAL>
	: Nothing	
	;

<IDENTIFIER>
	: (<isLetter> | [a-zA-Z_$] ) (<isLetter>|\w|$)* 
	;

<SBIDENTIFIER>
	: (\[) (<isLetter> | [a-zA-Z_$] ) (<isLetter>|\w|/|$|\s)* (\]) 
	;
<DEFTYPE> 
	: ([a-zA-Z]) (\-) ([a-zA-Z]); 
	
<HASH_NUMBER>
	: ( \#) (<DECIMAL_INTEGER>)
	;
	
<HASH_IDENTIFIER>
	: ( \#) (<isLetter>|\w|$)*
	;

<whitespace> : ( \x20 | \xA0 | \x9) + ; 

<eol>
   : (<whitespace>?) ( \r | \n | \r\n | \x2028 | \ ) (<whitespace>?)
   ;

<comment>
   :  (<whitespace>?)(\' | :?  REM  \ ) ( [^\n\r])* 
   ;

###################################################### 
########## Basic module
###################################################### 

module: <eol>* (header 'header' <eol>*)? (ModuleStatement 'element')?  (<eol>* ModuleStatement 'element' )*  <eol>* {{Module}};

###################################################### 
########## Literals
###################################################### 
literal 
	: 
	  FileDescriptorLiteral
	| IntegerLiteral
	| ColorLiteral
	| DateLiteral
	| FloatLiteral
	| BooleanLiteral
	| StringLiteral
	| Null
	| GuidLiteral
;

FileDescriptorLiteral 	: <HASH_NUMBER> 'token' 			{{FileDescriptorLiteral}};
IntegerLiteral 			: <INTEGER_LITERAL> 'token' 		{{IntegerLiteral}};
ColorLiteral			: <COLOR_LITERAL> 'token' 			{{ColorLiteral}} ; 
DateLiteral				: <DATE_LITERAL> 'token' 			{{DateLiteral}};
FloatLiteral			: <FLOATING_POINT_LITERAL> 'token' 	{{FloatLiteral}};
BooleanLiteral			: <BOOLEAN_LITERAL> 'token' 		{{BooleanLiteral}};
StringLiteral			: <STRING_LITERAL> 'token' 			{{StringLiteral}};
Null					: <NULL_LITERAL> 'token' 			{{Null}};




GuidLiteral: 
		""{""
		<HEX_INTEGER> + 
		""-""
		<HEX_INTEGER> +
		""-"" 
		<HEX_INTEGER> + 
		""-""
		<HEX_INTEGER> + 
		""-""
		<HEX_INTEGER> + 
		""}"" 
		{{GuidLiteral}};


Identifier : 
	 SimpleIdentifier
	| HashIdentifier
	| SquareBracketIdentifier;

KeywordIdentifier : UsableKeywords 'token'  {{SimpleIdentifier}} | SquareBracketIdentifier;


UsableKeywords  :  
  IdentifierWords  
| ""open"" 
| ""type"" 
| ""select"" 
| ""case"" 
| ""else""   
;

IdentifierWords :  
  <IDENTIFIER>     
| ""text"" | ""name"" | ""version"" | ""database"" 
| ""collection"" | ""bold"" | ""append"" | ""Object""  
| ""len"" | ""get"" | ""set"" | ""let"" |  ""date"" | ""input"" | ""print""
;

HashIdentifier 			: <HASH_IDENTIFIER> 'token' {{HashIdentifier}};
SquareBracketIdentifier : <SBIDENTIFIER> 'token' 	{{SquareBracketIdentifier}};
SimpleIdentifier 		: IdentifierWords 'token'  	{{SimpleIdentifier}};


LabelTag : <IDENTIFIER> 'name' "":""  {{LabelTag}};

###################################################### 
########## Module header and configuration
###################################################### 

header: ""version"" <whitespace> FloatLiteral  'version'  (""class"")?  {{}};
Option
   :   ""option"" <whitespace> IntegerLiteral 'value' {{OptionValue}}
   |   ""option"" <whitespace> ""compare"" <whitespace> ""database"" {{OptionCompareDatabase}}
   |   ""option"" <whitespace> ""compare"" <whitespace> (""binary""| ""text"" 'compare') {{OptionCompare}}
   |   ""option"" <whitespace> ""explicit"" {{OptionExplicit}}
   |   ""option"" <whitespace> ""private"" <whitespace> ""module""{{OptionPrivateModule}}
   | OptionBase
   ;
OptionBase : ""option"" <whitespace> ""base"" <whitespace> Expression 'value' {{OptionBase}} ;
SetUpAssignation :  
	(Identifier  'identifier' | MemberAccess 'identifier') <whitespace> ""="" <whitespace> Expression 'value' {{SetUpAssignation}} 
;
Attribute
 : ""attribute"" <whitespace> SetUpAssignation 'setting' {{ModuleAttribute}}
 ;
Configuration 
:	""begin""  <eol>* SetUpAssignation 'setting' ( <eol>+ SetUpAssignation 'setting')* <eol>*""end"" {{Configuration}};

Implements : ""implements"" <whitespace> Identifier 'interface' {{Implements}}; 

DefTypeLabel : 
  ""DefBool"" | ""DefByte"" |""DefCur"" 
| ""DefDate"" | ""DefDec"" | ""DefDbl"" 
| ""DefInt"" | ""DefLng"" | ""DefLnglng"" 
| ""DefLngPtr"" | ""DefObj"" | ""DefSng"" 
| ""DefStr"" | ""DefVar"" 
;

DefType : DefTypeLabel 'deftype' <whitespace> <DEFTYPE> 'pattern' {{DefType}}; 

ModuleStatement :  
  Option  
| Configuration 
| Attribute 
| DeclareExternal 
| VariableDefinition 
| BehaviourDefinition 
| Types 
| Implements 
| DefType
 ;

###################################################### 
########## Body statements
###################################################### 

Statement :  
  StatementAssignment 
| VariableDefinition 
| Attribute 
| OptionBase 
| StatementCalls  
| ControlFlowStatement 
| Types 
| Label 
| Exits 
| Go 
| FileClauses 
| RaiseEvent 
| OtherStatements ;

# A Block is a list of statements. Each entry can be headed with a line number. Lines are splitted by newline 
Block: 
       (IntegerLiteral 'lineNumber' <whitespace>)? 
	   (Statement 'statement') ? 
	   (
		 (<eol>| <whitespace>?"":""<whitespace>?)+ 
		 (IntegerLiteral 'lineNumber' <whitespace>)? 
		  Statement 'statement' 
	   )*
	   <eol>+ 
	   {{Block}};
	   
# Oneline blocks can have one or more ""lines"" splitted by "":"" 

OneLineBlock : 
		 <whitespace>? (Statement 'statement')? 
		(<whitespace>? "":"" <whitespace>? Statement 'statement')* 
		(<whitespace>? "":"" <whitespace>?) ? 
		{{Block}};

BaseType : 
  ""boolean"" 
| ""byte"" 
| ""currency"" 
| ""collection"" 
| ""date"" 
| ""decimal"" 
| ""double"" 
| ""integer"" 
| ""long"" 
| ""longlong""
| ""longptr"" 
| ""object"" 
| ""single"" 
| ""string"" 
| ""variant"" 
{{BaseType}};

Visibility: 
  ""private"" 
| ""public"" 
| ""friend"" 
| ""global"" ; 

ComplexType: 
	(Identifier 'base')?  
	(""."" UsableKeywords 'member')* 
	{{ComplexType}}
;

Type: 
  BaseType 
| ComplexType 
;



TypedThing : 
			 (<whitespace> ""as"" <whitespace> Type 'type')?
			 (<whitespace>? ""*"" <whitespace>? Expression 'fixedSize')?  
			 {{TypedThing}}
;
			 
TypedAndInstantiatedThing:	 
			<whitespace> ""as"" <whitespace>
			""new"" <whitespace> 
			Type 'type'
			{{AsTypeAndNew}}
; 

TypeSize : ""("" 
			Expression 'size'? 
			("",""<whitespace>? Expression 'size')* 
			"")"" 
			{{TypeSize}} 
;

AsType : 
  TypedThing 
| TypedAndInstantiatedThing;



###################################################### 
########## assign statements
###################################################### 

StatementAssignment : Assignment | ExplicitAssignement ;

ExplicitLetSet: ""let"" | ""set""; 

Assignment : 
		(Identifier 'left' | StateAccessBase 'left') <whitespace> 
		(""="" 'operator' | "":="" 'operator') <whitespace> 
		Expression 'right' 
		{{ExplicitAssignement}};
		
ExplicitAssignement : 
		ExplicitLetSet 'kind' <whitespace> 
		(Identifier 'left' | StateAccessBase 'left') <whitespace> 
		(""="" 'operator' |  "":="" 'operator') <whitespace> 
		Expression 'right' 
		{{ExplicitAssignement}};

###################################################### 
########## other statements
###################################################### 
 
OtherStatements : 
  Rename 
| Beep 
| DoEvents;

Rename : 
	""name"" <whitespace> 
	Expression 'oldName' <whitespace> 
	""as"" <whitespace> 
	Expression 'newName' 
	{{Rename}} ;
	
Beep : ""beep"" ;
DoEvents : ""DoEvents"" {{DoEvents}} ;

###################################################### 
########## Types
###################################################### 

Types : 
  DefineEnum 
| DefineType 
| Event ;

DefineType : 
      (Visibility 'visibility' <whitespace>)? 
	  ""type"" <whitespace> 
	  Identifier 'name' 
	  ( <eol>* TypeEntry 'field' )* 
	  <eol>* 
	  ""end"" <whitespace>  ""type"" 
	  {{DefineType}} ;
	  
TypeEntry :
	  Identifier 'name'
	  AsType 'type' 
	  (<whitespace>?""*""<whitespace>? IntegerLiteral 'size' )? 
	  {{TypeEntry}};
	  
Event  : 
	  (Visibility 'visibility' <whitespace>)?  
	  ""event"" <whitespace> 
	  Identifier 'selector' <whitespace>?
	  ParameterList 'parameters'
	  {{Event}} ;
	  
DefineEnum :  
	  (Visibility 'visibility' <whitespace>)?  
	  ""enum"" <whitespace> 
	  Identifier 'name'  
	  ( <eol>* EnumEntry 'field')* 
	  <eol>*  
	  ""end"" <whitespace> ""enum"" 
	  {{DefineEnum}};
	  
EnumEntry : 
      Identifier 'name'  
	  ( <whitespace> ""="" <whitespace> Expression 'value')? 
	  {{EnumEntry}};

###################################################### 
########## Parameters
###################################################### 

ParameterPassingStrategy :  ""byval"" | ""byref"" {{ParameterPassingStrategy}};
ParameterList:""(""(Parameter 'parameter' ("","" <whitespace> Parameter 'parameter')* )? <whitespace>? "")"" {{ParameterList}};
	
Parameter: 
	(""optional"" <whitespace>)? 
	(ParameterPassingStrategy 'strategy' <whitespace>)? 
	(""paramarray"" <whitespace>)? 
	Identifier 'name' 
	(TypeSize 'size')?
	(AsType 'type')? 
	(<whitespace> ""="" <whitespace> Expression 'default')? 
	{{Parameter}};

###################################################### 
########## External declaration
###################################################### 

DeclareSub: 
			(Visibility 'visibility' <whitespace> )? 
			""declare"" <whitespace> 
			""sub"" <whitespace> 
			Identifier 'selector' <whitespace> 
			""lib"" <whitespace> 
			StringLiteral 'library' <whitespace>?
			(""alias"" <whitespace> StringLiteral 'alias' <whitespace>?)? 
			ParameterList 'parameters' 
			{{ExternalSub}};
			
DeclareFunction: 
		(Visibility 'visibility' <whitespace> )? 
		""declare"" <whitespace> 
		""function"" <whitespace> 
		Identifier 'selector' <whitespace> 
		""lib"" <whitespace> 
		StringLiteral 'library' <whitespace>? 
		(""alias"" <whitespace>  StringLiteral 'alias' <whitespace>? )? 
		ParameterList 'parameters'
		AsType 'type'
		{{ExternalFunction}};
		
		
DeclareExternal : DeclareSub|DeclareFunction; 

###################################################### 
########## Function / Sub Definition 
###################################################### 

Modifier: ""static"" ;

DefineFunction: 
	(Visibility 'visibility' <whitespace>)? 
	(Modifier 'modifier' <whitespace>)? 
	""function""  <whitespace>
	Identifier 'selector'<whitespace>?
	ParameterList 'parameters' <whitespace>?
	(AsType 'type' TypeSize 'size'?  )?
	Block 'block' 
	""end""  <whitespace> ""function"" 
   {{FunctionDefinition}};

DefineSub: 
	(Visibility 'visibility' <whitespace>)? 
	(Modifier 'modifier' <whitespace>)? 
	""sub""  <whitespace>
	Identifier 'selector'<whitespace>?
	(ParameterList 'parameters')? <whitespace>?
	Block 'block' 
	""end"" <whitespace> ""sub"" 
   {{SubDefinition}};
   

ModulePropertyGet : 
	(Visibility 'visibility' <whitespace>)? 
	(Modifier 'modifier' <whitespace>)? 
	""property"" <whitespace> ""get""  <whitespace>
	Identifier 'selector'
	ParameterList 'parameters'
	(AsType 'type' TypeSize 'size'?)? 
	Block 'block' 
	""end"" <whitespace> ""property"" 
    {{ModulePropertyGet}}; 
	
	
ModulePropertySet : 
	(Visibility 'visibility' <whitespace>)? 
	(Modifier 'modifier' <whitespace>)? 
	""property"" <whitespace> ""set""  <whitespace>
	Identifier 'selector'
	ParameterList 'parameters'
	Block 'block'  
	""end"" <whitespace> ""property"" 
  {{ModulePropertyGet}}; 
  
ModulePropertyLet : 
	(Visibility 'visibility' <whitespace>)? 
	(Modifier 'modifier' <whitespace>)? 
	""property"" <whitespace> ""let""  <whitespace>
	Identifier 'selector' 
	ParameterList 'parameters'
	 Block 'block'  
	 ""end"" <whitespace> ""property"" 
{{ModulePropertyGet}}; 

BehaviourDefinition:  
  DefineFunction 
| DefineSub 
| ModulePropertyGet 
| ModulePropertySet 
| ModulePropertyLet ;

###################################################### 
########## Variable / And Multiple Variables
###################################################### 

ModuleProperty : 
	Visibility 'visibility' <whitespace>
	Variable 'variable' 
	{{ModuleProperty}};
	
ModuleConstant : 
	(Visibility 'visibility' <whitespace>)? 
	""const"" <whitespace> 
	Constant 'constant'
	{{ModuleConstant}};

DefineVariable : 
	""dim"" <whitespace> 
	Variable 'variable' 
	{{DimVariable}};


ReDefineVariable : 
	""redim"" <whitespace> 
	(""preserve"" <whitespace>)? 
	Variable 'variable' 
	{{ReDimVariable}};
	
ReDefineExpression : 
	""redim"" <whitespace>
	(""preserve"" <whitespace>)? 
	Expression 'variable' 
	{{ReDimVariable}};
	
StaticVariable : 
	""static""  <whitespace>  
	Variable 'variable'
	{{StaticVariable}};
	
Variable : 
	(""WithEvents""  <whitespace> )? 
	Identifier 'name'
	(TypeSize 'size')?
	(AsType 'type') ? 
	{{Variable}};
	
Constant :  
	Identifier 'constant'
	(AsType 'type') ? 
	<whitespace> ""=""  <whitespace> 
	Expression 'value' 
	{{Constant}} ;

ModuleProperties : 
	Visibility 'visibility'  <whitespace>
	VariableList 'variables' 
	{{ModuleMultipleProperties}};
	
	
ModuleConstants : 
	(Visibility 'visibility'  <whitespace> )? 
	""const""  <whitespace> 
	ConstantList 'constants' 
	{{ModuleMultipleConstants}};
	
DefineVariables : 
	""dim""  <whitespace>
	VariableList 'variables' 
	{{DimMultipleVariables}};
	
ReDefineVariables : 
	""redim""  <whitespace> 
	(""preserve""  <whitespace>)?  
	VariableList 'variables' 
	{{ReDimMultipleVariables}};
	
StaticVariables : 
	""static"" <whitespace> 
	VariableList 'variables' 
	{{StaticMultipleVariables}};
	
VariableList : Variable 'variable' ( <whitespace>? "",""  <whitespace>?  Variable 'variable' )+ {{VariableList}};
ConstantList : Constant 'constant' ( <whitespace>? "",""  <whitespace>?  Constant 'constant' )+ {{ConstantList}};

VariableDefinition :
  ModuleProperties 
| ModuleProperty 
| ModuleConstant 
| ModuleConstants 
| ConstantList 
| DefineVariable 
| ReDefineVariable 
| ReDefineExpression 
| DefineVariables 
| ReDefineVariables 
| StaticVariable 
| StaticVariables ;

###################################################### 
########## Value Statements
###################################################### 


Expression :   
  ValueClause  
| StateAccess 
| ExpressionCalls 
| Identifier 
| literal 
| ParentheseesExpression  
| Interval 
| Operation ; 

ParentheseesExpression : 
	""(""  <whitespace>? 
	Expression 'expression'  
	<whitespace>? "")"" 
	{{ParentheseesExpression}};
	
Interval : 
	Expression 'from' <whitespace> 
	""to""  <whitespace> 
	Expression 'to'  
	{{Interval}} ; 


##########
### Ops
##########

Operation : 
  UnaryOperation 
| BinaryOperation ;

####################
### Unary Ops 
####################

UnaryOperation:   
  NegatedOperation
| PositiveOperation 
| NotOperation 
; 

NegatedOperation : 
	""-""
	(StateAccessBase 'value' | IntegerLiteral 'value' | FloatLiteral 'value')
	{{NegatedOperation}}
;
	
PositiveOperation : 
	""+"" <whitespace> 
	(StateAccessBase 'value' | IntegerLiteral 'value' | FloatLiteral 'value')
	{{PositiveOperation}} 
;

NotOperation : 
	""not"" <whitespace>
	(StateAccessBase 'value' | BooleanLiteral 'value')
	{{NotOperation}}
;


####################
### Binary Ops 
####################


BinaryOperation : 
  ComparisonOperation  
| ArithmeticOperation 
| BooleanBinaryOperation 
| Equals  
| ConcatenationOperation ;

ComparisonOperator : "">"" | ""<""  |  ""<>"" | ""<="" | "">="" | ""is"" | ""like"" ;

ComparisonOperation : 
		Expression 'left' <whitespace>
		ComparisonOperator <whitespace> 
		Expression 'right' 
		{{ComparisonOperation}};
		
ArithmeticOperator : ""*"" | ""+"" | ""-"" | ""/"" | ""^"" | ""\"" | ""Mod"";

ArithmeticOperation : 
		Expression 'left' <whitespace>
		ArithmeticOperator <whitespace>
		Expression 'right' {{ArithmeticOperation}};


BooleanOperator : ""and"" | ""or"" | ""xor"" | ""eqv"";
BooleanBinaryOperation : 
		Expression 'left' <whitespace>
		BooleanOperator   <whitespace>
		Expression 'right' 
		{{ArithmeticOperation}};

Concatenable : 
  Identifier 
| StateAccess 
| ProcedureCallOrArrayAccess 
| StringLiteral 
| ConcatenationOperation;

ConcatenationOperation : 
		Concatenable 'left' <whitespace>
		""&"" <whitespace>
		Concatenable 'right' 
		{{ConcatenationOperation}}; 

Equals : 
	(Identifier 'left' | MemberAccess 'left' | Expression 'left') <whitespace>
	""="" 'operator' <whitespace>
	Expression 'right' 
	{{Equals}}; 


####################
### Value Clause 
####################

ValueClause: 
  AddressOfClause 
| NewClause ;

AddressOfClause : 
		""AddressOf"" <whitespace>
		Identifier 'name'  
		{{AddressOfClause}}; 
		
NewClause : 
		""New"" <whitespace>
		Type 'typeName' 
		{{NewClause}};

OpenMode :  
  ""Append"" 
| ""Binary"" 
| ""Input"" 
| ""Output"" 
| ""Random"" ;


OpenAccess : 
  ""Read"" 
| ""Write"" 
| ""Read"" <whitespace> ""Write"" ;

Lock :  
  ""Shared"" 
| ""Lock Read"" 
| ""Lock Write"" 
| ""Lock Read Write"";


FileClauses : 
  OpenFileClause 
| PrintFileClause 
| LineInputClause ;

OpenFileClause : 
		""Open"" <whitespace>
		Expression 'filepath' <whitespace>
		""For"" <whitespace>
		OpenMode 'mode' <whitespace>
		(OpenAccess 'access' <whitespace>)? 
		(Lock 'lock' <whitespace>)? 
		""As"" <whitespace>
		Expression 'fileDescriptor' 
		(<whitespace> ""len"" <whitespace> ""="" <whitespace> Expression'length')? 
		{{OpenClause}};
		
		
PrintFileClause : 
		""Print"" <whitespace>
		Identifier 'fileNumber' <whitespace>?
		"","" <whitespace>? 
		(Expression 'value' <whitespace>?)? 
		("";"" <whitespace>? Expression 'value')*  
		{{PrintIntoFileClause}};
		
LineInputClause : 
		""Line"" <whitespace>
		""Input"" <whitespace>
		(Identifier 'fileNumber' | FileDescriptorLiteral  'fileNumber') <whitespace>?  
		"",""  <whitespace>?
		(Expression 'value') 
		{{LineInputClause}};


###################################################### 
########## Control flow statements
###################################################### 

ControlFlowStatement : 
  Exits
| Loops 
| If  
| On 
| Resume 
| To 
| With 
| RaiseError 
| Select ; 

####################
#### Loops
####################


Loops : 
  DoLoop 
| WhileWend 
| ForLoop ;

####################
########## Do
####################

DoLoop : 
  InfinityLoop 
| WhileTrue 
| UntilTrue 
| DoWhileTrue 
| DoUntilTrue; 


InfinityLoop : 
	""do""  
		(Block 'body')? 
	(IntegerLiteral 'endLineNumber' <whitespace>)? 
	""loop""  
	{{InfinityLoop}} ;

WhileTrue :  
	""do"" <whitespace>
	""while"" <whitespace>
	Expression 'condition' 
	( Block 'body')? 
	(IntegerLiteral 'endLineNumber' <whitespace>)? 
	""loop""  
	{{WhileTrue}}; 
	
	
UntilTrue : 
	""do"" <whitespace>
	""until"" <whitespace>
	Expression 'condition'
		Block 'body'
	(IntegerLiteral 'endLineNumber' <whitespace>)?
	""loop"" 
   {{UntilTrue}}; 

DoWhileTrue :  
	""do"" 
	( Block 'body')?
	(IntegerLiteral 'endLineNumber' <whitespace>)?  
	""loop"" <whitespace> 
	""while"" <whitespace> 
	Expression 'condition' 
    {{DoWhileTrue}}; 

DoUntilTrue : 
	""do"" 
	 Block 'body' 
	(IntegerLiteral 'endLineNumber' <whitespace>)? 
	""loop"" <whitespace> 
	""until"" <whitespace>
	Expression 'condition'
    {{DoUntilTrue}}; 


####################
########## WhileWend
####################

WhileWend: 
	""while"" <whitespace> 
	Expression 'condition'
	( Block 'body')?   
	(IntegerLiteral 'endLineNumber' <whitespace>)? 
	""wend"" 
	{{WhileWend}}; 

####################
########## For 
####################

ForLoop : 
  ForEach 
| ForNext 
| ForNextOneLine 
| ForStepNext;

ForEach :  
	""for"" <whitespace> 
	""each"" <whitespace> 
	Identifier 'element' <whitespace> 
	""in"" <whitespace> 
	Expression 'group' <whitespace>?
	( Block 'body')?
	(IntegerLiteral 'endLineNumber' <whitespace>)? 
	""next"" 
	(<whitespace> Identifier 'element' )? 
    {{ForEach}} ;

ForNext :   
	""for"" <whitespace> 
	Identifier 'counter' <whitespace>
	""="" <whitespace> 
	Expression  'initialValue' <whitespace> 
	""to"" <whitespace> 
	Expression  'limit'   
	( Block 'body')? 
	 (IntegerLiteral 'endLineNumber' <whitespace>) ? 
	 ""next"" 
	 (<whitespace> Identifier 'element')? 
    {{ForNext}} ;

ForNextOneLine :   
	""for"" <whitespace> 
	Identifier 'counter' <whitespace> 
	""="" <whitespace> 
	Expression  'initialValue' <whitespace> 
	""to"" <whitespace> 
	Expression  'limit'
		( OneLineBlock 'body')? 
	""next""
   {{ForNext}} ;

ForStepNext:   
	""for"" <whitespace> 
	Identifier 'counter' <whitespace>
	""="" <whitespace>
	Expression  'initialValue' <whitespace> 
	""to"" <whitespace> 
	Expression  'limit' <whitespace> 
	""step"" <whitespace> 
	Expression 'step'   
		( Block 'body')?  
	(IntegerLiteral 'endLineNumber' <whitespace>)? 
	""next"" 
	(<whitespace> Identifier 'element' )? 
    {{ForStepNext}} ;

####################
########## If
####################

If : 
  IfThenElseOneLine 
| IfThenElse ; 


IfThenElseOneLine : 
	""if"" <whitespace> 
	Expression 'condition' <whitespace> 
	(""then""|""then:"") 
	OneLineBlock 'ifTrue' 
	(<whitespace> (""else""|""else:"") OneLineBlock 'ifFalse' )?
{{IfThenElse}};

IfThenElse : 
	""if"" <whitespace> 
	Expression  'condition' 
	<whitespace> 
	""then""
	(Block 'ifTrue')  
	(ElseIf 'elseif')* 
	(Else 'else')?
    (IntegerLiteral 'endLineNumber'<whitespace>)? 
	""end"" <whitespace> ""if""
	{{IfThenElse}};
	
Else: 
	(IntegerLiteral 'endLineNumber' <whitespace>)? 
	""else"" 
	(Block 'ifMatch')?  
	{{ElseIfBlock}};
	
ElseIf: 
    (IntegerLiteral 'endLineNumber' <whitespace>)? 
	""elseif"" <whitespace> 
	Expression  'condition' <whitespace>
	""then"" 
	(Block 'ifMatch')?  
	{{ElseIfBlock}}; 



####################
###### Error 
####################

RaiseError : 
  ""Error"" <whitespace> Expression 'errorCode'  
  {{RaiseError}} ;
	
##########################
###### Label / LabelSub
##########################

	To : Label ;
	Label : LabelTag 'label' {{Label}}; 	
	
	
####################
###### Select Case 
####################
CaseCondition : 
  ExpressionCalls 
| Identifier 
| MemberAccess 
| literal;

Case : 
	(IntegerLiteral 'lineNumber' <whitespace>)? 
	""case"" <whitespace>
	(CaseCondition 'expression' | ""else"") 
	("","" <whitespace> (CaseCondition 'expression'))* 
	"":""?
	(Block 'body' | OneLineBlock 'body')? 
	{{Case}};
Select : 
	""select"" <whitespace> 
	""case"" <whitespace>
	Expression 'expression' 
	<eol>+ (Case 'case')+ 
	(IntegerLiteral 'endLineNumber' <whitespace>)? 
	""end"" <whitespace> ""select"" 
	{{Select}};

####################
###### Resume
####################

Resume: 
  ResumeLabel 
| ResumeNext 
| ResumeEmpty ;
	
ResumeLabel : 
	""resume"" <whitespace> 
	DestinationList 'destination' 
	{{ResumeLabel}} ; 
	
ResumeNext : 
	""resume"" <whitespace> 
	""next"" 
	{{ResumeNext}} ; 
	
ResumeEmpty : ""resume"" {{ResumeEmpty}}; 

####################
###### GoTo / GoSub 
####################

Go : 
  GoToStatement 
| GoSub ;


Destination : 
  Identifier 
| IntegerLiteral 
| NegatedOperation ;

 
DestinationList :  
	Destination 'label' 
	(<whitespace>?"","" <whitespace>?Destination 'label')*
	{{DestinationList}};

GoToStatement : 
	""goto"" <whitespace> 
	DestinationList 'destination'   
	{{GoToStatement}};
	
GoSub :  
	""gosub"" <whitespace> 
	DestinationList 'destination'  
	{{GoSub}} ;

####################
########## On 
####################

On : 
  OnErrorGoTo 
| OnErrorResumeNext 
| OnExpressionGo; 

OnErrorGoTo : 
	""on"" <whitespace>
	""error"" <whitespace>
	GoToStatement 'to' 
	{{OnErrorGoTo}};
	
OnErrorResumeNext : 
	""on""  <whitespace>
	""error"" <whitespace>
	""resume""  <whitespace>
	""next""
	{{OnErrorResumeNext}} ;
	
OnExpressionGo : 
	""on"" <whitespace>
	Expression 'integerExpression' <whitespace>
	Go 'to' 
	{{OnExpressionGo}} ;

####################
########## Error
####################

Error: 
	""error"" <whitespace>
	Expression 'errorCode' 
	{{Error}} ;

####################
########## With
####################

With : 
	""with"" <whitespace>
	Expression 'with' 
	Block 'block' 
	(IntegerLiteral 'endLineNumber' <whitespace>)?
	""end"" <whitespace> ""with"" 
	{{With}} ;

####################
########## Exits
####################

Exits : 
  ExitFunction 
| ExitSub 
| ExitProperty 
| ExitDo 
| ExitFor 
| Return; 

ExitFunction : 
	""exit"" <whitespace>
	""function"" 
	{{Exits}} ;
	
ExitSub : 
	""exit"" <whitespace>
	""sub"" 
	{{Exits}} ; 
ExitDo : 
	""exit"" <whitespace>
	""do"" 
	{{Exits}} ; 
	
ExitFor : 
	""exit"" <whitespace>
	""for"" 
	{{Exits}} ;
	
ExitProperty : 
	""exit"" <whitespace> 
	""property"" 
	{{Exits}} ;
	
Return : 
	""return"" 
	{{Return}} ;

########################################
### Calls and accesses 
########################################

StateAccessBase :
  StateAccess
| ValueClause
| Identifier
| ProcedureCallOrArrayAccess; 

############################################################
### Normal accesses.  object.value dic!key
############################################################

DictionaryAccess : 
	(StateAccessBase 'receiver')?
	""!"" 
	KeywordIdentifier 'member' 
	{{DictionaryAccess}} ;

MemberAccess : 
	(StateAccessBase 'receiver')?
	"".""  
	KeywordIdentifier 'member' 
	{{MemberAccess}};


StateAccess : 
	DictionaryAccess 
  | MemberAccess;
  
  
############################################################
### ImplicitParenthesesLessCall.   selector arg1, arg2, , , arg
############################################################
ImplicitCallExpression : 
  MemberAccess
| UnqualifiedMemberAccess
| Identifier
;


ImplicitParenthesesLessCall :  
		ImplicitCallExpression 'selector'  <whitespace> 
		ArgumentList 'arguments' 
		{{ImplicitParenthesesLessCall}} 
		
|       ImplicitCallExpression 'selector'
		{{ImplicitParenthesesLessCall}} 
 
;

############################################################
### ImplicitCalls.   selector(arg1, arg2, , , arg). 
############################################################
ProcedureCallOrArrayExpression : 
  StateAccess
| ValueClause
| Identifier
| ProcedureCallOrArrayAccess
;

ProcedureCallOrArrayAccess :  
		ProcedureCallOrArrayExpression 'selector'
		""(""
		  ArgumentList 'arguments'
		 <whitespace>?"")""
		{{ProcedureCallOrArrayAccess}} 

;

############################################################
### Argument and argument list. 
### Expression, expression, assignment 
############################################################

Argument : 
        (ParameterPassingStrategy 'strategy' <whitespace>)?  
		(""paramarray"" <whitespace>)?  
		(Expression 'value' | Assignment 'value') 
		{{Argument}};
ArgumentList : 
		(Argument 'argument' ? ("","" | "";"" )  <whitespace>?)* 
		Argument 'argument'? 
		(("","" | "";"" ) <whitespace>? Argument 'argument' ? )*
		{{ArgumentList}};


ExplicitCallSelectorTypes :
  Identifier 
| MemberAccess  
| UnqualifiedMemberAccess
| ProcedureCallOrArrayAccess;


############################################################
### ExplicitCall.  Call selector(arg1, arg2, , , arg). 
############################################################

ExplicitCall : 
		""Call"" <whitespace>
		 ExplicitCallSelectorTypes 'selector'  
		{{ExplicitCall}} ;
		
RaiseEvent : 
		""RaiseEvent"" <whitespace>
		(Identifier 'selector' | ProcedureCallOrArrayAccess 'selector' )
		{{RaiseEvent}};

TypeOf : 
		""TypeOf"" <whitespace>
		Argument 'argument' <whitespace>
		(""Is"" | ""IsNot"") <whitespace>
		Argument 'type'  
		{{TypeOf}};

StatementCalls :  
  ImplicitParenthesesLessCall 
| ExplicitCall ;

ExpressionCalls : 
  ProcedureCallOrArrayAccess 
| TypeOf ;"
]

{ #category : #generated }
VBParser class >> reduceTable [
^#(
	#(177 0 #reduceActionFor_eol__1: 2054145 false ) 
	#(179 0 #reduceActionFor__eol___ModuleStatement__element____1: 2118657 false ) 
	#(194 1 #liftFirstValue: 3463176 false ) 
	#(241 1 #reduceActionForDoEvents1: 8444929 false ) 
	#(194 1 #liftFirstValue: 3463183 false ) 
	#(194 1 #liftFirstValue: 3463177 false ) 
	#(194 1 #liftFirstValue: 3463184 false ) 
	#(240 1 #liftFirstValue: 8428545 false ) 
	#(194 1 #liftFirstValue: 3463175 false ) 
	#(194 1 #liftFirstValue: 3463174 false ) 
	#(194 1 #liftFirstValue: 3463173 false ) 
	#(194 1 #liftFirstValue: 3463182 false ) 
	#(215 0 #reduceActionFor_______eol____whitespace______whitespace__________IntegerLiteral__lineNumber___whitespace_________Statement__statement_________1: 6173697 false ) 
	#(223 1 #liftFirstValue: 6797315 false ) 
	#(194 1 #liftFirstValue: 3463179 false ) 
	#(223 1 #liftFirstValue: 6797316 false ) 
	#(194 1 #liftFirstValue: 3463178 false ) 
	#(194 1 #liftFirstValue: 3463181 false ) 
	#(235 1 #liftFirstValue: 7656449 false ) 
	#(194 1 #liftFirstValue: 3463171 false ) 
	#(223 1 #liftFirstValue: 6797313 false ) 
	#(223 1 #liftFirstValue: 6797314 false ) 
	#(357 1 #reduceActionForResumeEmpty1: 23631873 false ) 
	#(377 1 #reduceActionForReturn1: 25414657 false ) 
	#(194 1 #liftFirstValue: 3463180 false ) 
	#(235 1 #liftFirstValue: 7656450 false ) 
	#(194 1 #liftFirstValue: 3463170 false ) 
	#(194 1 #liftFirstValue: 3463172 false ) 
	#(194 1 #liftFirstValue: 3463169 false ) 
	#(196 1 #reduceActionForSquareBracketIdentifier1: 3732481 false ) 
	#(195 1 #reduceActionForHashIdentifier1: 3664897 false ) 
	#(382 1 #liftFirstValue: 26294274 false ) 
	#(378 1 #liftFirstValue: 25561091 false ) 
	#(384 1 #liftFirstValue: 26796035 false ) 
	#(382 1 #liftFirstValue: 26294275 false ) 
	#(228 0 #reduceActionForTypedThing1: 6996993 false ) 
	#(197 1 #reduceActionForSimpleIdentifier1: 3813377 false ) 
	#(191 1 #liftFirstValue: 3185666 false ) 
	#(191 1 #liftFirstValue: 3185667 false ) 
	#(191 1 #liftFirstValue: 3185665 false ) 
	#(346 1 #reduceActionForLabel1: 22733825 false ) 
	#(212 1 #liftFirstValue: 5745668 false ) 
	#(212 1 #liftFirstValue: 5745667 false ) 
	#(212 1 #liftFirstValue: 5745665 false ) 
	#(234 1 #liftFirstValue: 7597057 false ) 
	#(234 1 #liftFirstValue: 7597058 false ) 
	#(212 1 #liftFirstValue: 5745677 false ) 
	#(238 1 #liftFirstValue: 8247297 false ) 
	#(238 1 #liftFirstValue: 8247298 false ) 
	#(238 1 #liftFirstValue: 8247299 false ) 
	#(212 1 #liftFirstValue: 5745671 false ) 
	#(242 1 #liftFirstValue: 8616962 false ) 
	#(242 1 #liftFirstValue: 8616963 false ) 
	#(242 1 #liftFirstValue: 8616961 false ) 
	#(292 1 #liftFirstValue: 14701570 false ) 
	#(292 1 #liftFirstValue: 14701571 false ) 
	#(292 1 #liftFirstValue: 14701574 false ) 
	#(292 1 #liftFirstValue: 14701575 false ) 
	#(292 1 #liftFirstValue: 14701576 false ) 
	#(292 1 #liftFirstValue: 14701579 false ) 
	#(292 1 #liftFirstValue: 14701569 false ) 
	#(292 1 #liftFirstValue: 14701572 false ) 
	#(292 1 #liftFirstValue: 14701577 false ) 
	#(292 1 #liftFirstValue: 14701578 false ) 
	#(292 1 #liftFirstValue: 14701580 false ) 
	#(292 1 #liftFirstValue: 14701573 false ) 
	#(212 1 #liftFirstValue: 5745666 false ) 
	#(378 1 #liftFirstValue: 25561090 false ) 
	#(384 1 #liftFirstValue: 26796034 false ) 
	#(311 1 #liftFirstValue: 17398785 false ) 
	#(311 1 #liftFirstValue: 17398786 false ) 
	#(212 1 #liftFirstValue: 5745675 false ) 
	#(317 1 #liftFirstValue: 17841153 false ) 
	#(317 1 #liftFirstValue: 17841154 false ) 
	#(317 1 #liftFirstValue: 17841155 false ) 
	#(212 1 #liftFirstValue: 5745670 false ) 
	#(323 1 #liftFirstValue: 18866178 false ) 
	#(324 1 #liftFirstValue: 19030017 false ) 
	#(325 1 #liftFirstValue: 19134465 false ) 
	#(325 1 #liftFirstValue: 19134466 false ) 
	#(325 1 #liftFirstValue: 19134467 false ) 
	#(325 1 #liftFirstValue: 19134468 false ) 
	#(325 1 #liftFirstValue: 19134469 false ) 
	#(324 1 #liftFirstValue: 19030018 false ) 
	#(324 1 #liftFirstValue: 19030019 false ) 
	#(332 1 #liftFirstValue: 20362241 false ) 
	#(332 1 #liftFirstValue: 20362242 false ) 
	#(332 1 #liftFirstValue: 20362243 false ) 
	#(332 1 #liftFirstValue: 20362244 false ) 
	#(323 1 #liftFirstValue: 18866179 false ) 
	#(337 1 #liftFirstValue: 21715969 false ) 
	#(337 1 #liftFirstValue: 21715970 false ) 
	#(323 1 #liftFirstValue: 18866184 false ) 
	#(323 1 #liftFirstValue: 18866182 false ) 
	#(212 1 #liftFirstValue: 5745672 false ) 
	#(345 1 #liftFirstValue: 22719489 false ) 
	#(323 1 #liftFirstValue: 18866185 false ) 
	#(323 1 #liftFirstValue: 18866181 false ) 
	#(354 1 #liftFirstValue: 23409665 false ) 
	#(354 1 #liftFirstValue: 23409666 false ) 
	#(354 1 #liftFirstValue: 23409667 false ) 
	#(212 1 #liftFirstValue: 5745674 false ) 
	#(358 1 #liftFirstValue: 23740417 false ) 
	#(358 1 #liftFirstValue: 23740418 false ) 
	#(323 1 #liftFirstValue: 18866180 false ) 
	#(365 1 #liftFirstValue: 24209409 false ) 
	#(365 1 #liftFirstValue: 24209410 false ) 
	#(365 1 #liftFirstValue: 24209411 false ) 
	#(323 1 #liftFirstValue: 18866183 false ) 
	#(212 1 #liftFirstValue: 5745673 false ) 
	#(323 1 #liftFirstValue: 18866177 false ) 
	#(371 1 #liftFirstValue: 25026561 false ) 
	#(371 1 #liftFirstValue: 25026562 false ) 
	#(371 1 #liftFirstValue: 25026564 false ) 
	#(371 1 #liftFirstValue: 25026565 false ) 
	#(371 1 #liftFirstValue: 25026563 false ) 
	#(371 1 #liftFirstValue: 25026566 false ) 
	#(381 1 #liftFirstValue: 26044417 false ) 
	#(381 1 #liftFirstValue: 26044418 false ) 
	#(382 1 #liftFirstValue: 26294273 false ) 
	#(378 1 #liftFirstValue: 25561089 false ) 
	#(384 1 #liftFirstValue: 26796033 false ) 
	#(383 1 #reduceActionForImplicitParenthesesLessCall2: 26380290 false ) 
	#(396 1 #liftFirstValue: 28307457 false ) 
	#(378 1 #liftFirstValue: 25561092 false ) 
	#(384 1 #liftFirstValue: 26796036 false ) 
	#(396 1 #liftFirstValue: 28307458 false ) 
	#(212 1 #liftFirstValue: 5745676 false ) 
	#(212 1 #liftFirstValue: 5745669 false ) 
	#(209 1 #liftFirstValue: 5163009 false ) 
	#(209 1 #liftFirstValue: 5163010 false ) 
	#(209 1 #liftFirstValue: 5163011 false ) 
	#(209 1 #liftFirstValue: 5163012 false ) 
	#(209 1 #liftFirstValue: 5163014 false ) 
	#(209 1 #liftFirstValue: 5163013 false ) 
	#(209 1 #liftFirstValue: 5163015 false ) 
	#(209 1 #liftFirstValue: 5163016 false ) 
	#(209 1 #liftFirstValue: 5163018 false ) 
	#(209 1 #liftFirstValue: 5163017 false ) 
	#(209 1 #liftFirstValue: 5163019 false ) 
	#(209 1 #liftFirstValue: 5163020 false ) 
	#(209 1 #liftFirstValue: 5163021 false ) 
	#(209 1 #liftFirstValue: 5163022 false ) 
	#(264 1 #liftFirstValue: 11175937 false ) 
	#(211 1 #liftFirstValue: 5436417 false ) 
	#(200 1 #liftFirstValue: 4173831 false ) 
	#(211 1 #liftFirstValue: 5436419 false ) 
	#(211 1 #liftFirstValue: 5436418 false ) 
	#(211 1 #liftFirstValue: 5436424 false ) 
	#(211 1 #liftFirstValue: 5436425 false ) 
	#(211 1 #liftFirstValue: 5436423 false ) 
	#(263 1 #liftFirstValue: 10972161 false ) 
	#(263 1 #liftFirstValue: 10972162 false ) 
	#(211 1 #liftFirstValue: 5436420 false ) 
	#(272 1 #liftFirstValue: 12674049 false ) 
	#(272 1 #liftFirstValue: 12674050 false ) 
	#(272 1 #liftFirstValue: 12674051 false ) 
	#(272 1 #liftFirstValue: 12674052 false ) 
	#(272 1 #liftFirstValue: 12674053 false ) 
	#(211 1 #liftFirstValue: 5436422 false ) 
	#(211 1 #liftFirstValue: 5436421 false ) 
	#(177 2 #reduceActionFor_eol__2: 2054146 false ) 
	#(193 1 #liftFirstValue: 3363842 false ) 
	#(193 1 #liftFirstValue: 3363845 false ) 
	#(193 1 #liftFirstValue: 3363846 false ) 
	#(193 1 #liftFirstValue: 3363844 false ) 
	#(193 1 #liftFirstValue: 3363843 false ) 
	#(379 2 #reduceActionForDictionaryAccess1: 25824257 false ) 
	#(192 1 #reduceActionForSimpleIdentifier1: 3267585 false ) 
	#(193 1 #liftFirstValue: 3363841 false ) 
	#(192 1 #liftFirstValue: 3267586 false ) 
	#(380 2 #reduceActionForMemberAccess1: 25937921 false ) 
	#(226 0 #reduceActionFor__eol___ModuleStatement__element____1: 6903809 false ) 
	#(326 2 #reduceActionForInfinityLoop1: 19221505 false ) 
	#(182 1 #reduceActionForIntegerLiteral1: 2560001 false ) 
	#(198 2 #reduceActionForLabelTag1: 3886081 false ) 
	#(233 1 #liftFirstValue: 7394305 false ) 
	#(233 1 #liftFirstValue: 7394306 false ) 
	#(291 1 #reduceActionFor___whitespace_________whitespace____Constant__constant____1: 14621697 false ) 
	#(289 2 #reduceActionForConstantList1: 14585857 false ) 
	#(389 0 #reduceActionFor_Argument__argument___________________whitespace____1: 27468801 false ) 
	#(176 3 #reduceActionFormodule1: 2045953 false ) 
	#(179 2 #reduceActionFor__eol___ModuleStatement__element____2: 2118658 false ) 
	#(312 3 #reduceActionForAddressOfClause1: 17447937 false ) 
	#(392 1 #liftFirstValue: 27627523 false ) 
	#(392 1 #liftFirstValue: 27627521 false ) 
	#(392 1 #liftFirstValue: 27627522 false ) 
	#(392 1 #liftFirstValue: 27627524 false ) 
	#(393 3 #reduceActionForExplicitCall1: 27930625 false ) 
	#(184 1 #reduceActionForDateLiteral1: 2695169 false ) 
	#(183 1 #reduceActionForColorLiteral1: 2629633 false ) 
	#(185 1 #reduceActionForFloatLiteral1: 2756609 false ) 
	#(186 1 #reduceActionForBooleanLiteral1: 2827265 false ) 
	#(187 1 #reduceActionForStringLiteral1: 2895873 false ) 
	#(188 1 #reduceActionForNull1: 2962433 false ) 
	#(181 1 #reduceActionForFileDescriptorLiteral1: 2481153 false ) 
	#(293 1 #liftFirstValue: 15104005 false ) 
	#(180 1 #liftFirstValue: 2313217 false ) 
	#(180 1 #liftFirstValue: 2313218 false ) 
	#(180 1 #liftFirstValue: 2313219 false ) 
	#(180 1 #liftFirstValue: 2313220 false ) 
	#(180 1 #liftFirstValue: 2313221 false ) 
	#(180 1 #liftFirstValue: 2313222 false ) 
	#(180 1 #liftFirstValue: 2313223 false ) 
	#(308 1 #liftFirstValue: 16919556 false ) 
	#(180 1 #liftFirstValue: 2313224 false ) 
	#(180 1 #liftFirstValue: 2313225 false ) 
	#(293 1 #liftFirstValue: 15104004 false ) 
	#(308 1 #liftFirstValue: 16919553 false ) 
	#(344 3 #reduceActionForRaiseError1: 22552577 false ) 
	#(293 1 #liftFirstValue: 15104006 false ) 
	#(293 1 #liftFirstValue: 15104007 false ) 
	#(293 1 #liftFirstValue: 15104008 false ) 
	#(296 1 #liftFirstValue: 15519745 false ) 
	#(297 1 #liftFirstValue: 15632385 false ) 
	#(297 1 #liftFirstValue: 15632386 false ) 
	#(297 1 #liftFirstValue: 15632387 false ) 
	#(296 1 #liftFirstValue: 15519746 false ) 
	#(301 1 #liftFirstValue: 16161793 false ) 
	#(301 1 #liftFirstValue: 16161794 false ) 
	#(301 1 #liftFirstValue: 16161795 false ) 
	#(301 1 #liftFirstValue: 16161797 false ) 
	#(308 1 #liftFirstValue: 16919557 false ) 
	#(301 1 #liftFirstValue: 16161796 false ) 
	#(293 1 #liftFirstValue: 15104001 false ) 
	#(293 1 #liftFirstValue: 15104002 false ) 
	#(308 1 #liftFirstValue: 16919554 false ) 
	#(397 1 #liftFirstValue: 28377089 false ) 
	#(308 1 #liftFirstValue: 16919555 false ) 
	#(397 1 #liftFirstValue: 28377090 false ) 
	#(293 1 #liftFirstValue: 15104003 false ) 
	#(222 1 #liftFirstValue: 6579212 false ) 
	#(222 1 #liftFirstValue: 6579201 false ) 
	#(222 1 #liftFirstValue: 6579202 false ) 
	#(222 1 #liftFirstValue: 6579204 false ) 
	#(222 1 #liftFirstValue: 6579203 false ) 
	#(222 1 #liftFirstValue: 6579205 false ) 
	#(222 1 #liftFirstValue: 6579206 false ) 
	#(222 1 #liftFirstValue: 6579207 false ) 
	#(222 1 #liftFirstValue: 6579208 false ) 
	#(222 1 #liftFirstValue: 6579209 false ) 
	#(222 1 #liftFirstValue: 6579210 false ) 
	#(222 1 #liftFirstValue: 6579211 false ) 
	#(222 1 #liftFirstValue: 6579213 false ) 
	#(222 1 #liftFirstValue: 6579214 false ) 
	#(222 1 #reduceActionForBaseType15: 6579215 false ) 
	#(227 1 #liftFirstValue: 6957057 false ) 
	#(227 1 #liftFirstValue: 6957058 false ) 
	#(224 1 #reduceActionForComplexType1: 6863873 false ) 
	#(313 3 #reduceActionForNewClause1: 17545217 false ) 
	#(394 3 #reduceActionForRaiseEvent1: 28037121 false ) 
	#(394 3 #reduceActionForRaiseEvent1: 28037122 false ) 
	#(203 3 #reduceActionForAttribute1: 4857857 false ) 
	#(274 3 #reduceActionForModuleConstant1: 13061121 false ) 
	#(282 3 #reduceActionForModuleConstants1: 13981697 false ) 
	#(279 1 #reduceActionForVariable1: 13603841 false ) 
	#(275 3 #reduceActionForDefineVariable1: 13190145 false ) 
	#(283 3 #reduceActionForDefineVariables1: 14131201 false ) 
	#(326 3 #reduceActionForInfinityLoop3: 19221507 false ) 
	#(216 1 #reduceActionFor__eol____whitespace______whitespace___2: 6178818 false ) 
	#(216 1 #reduceActionFor__eol____whitespace______whitespace___1: 6178817 false ) 
	#(207 1 #reduceActionFor_eol__1: 5011457 false ) 
	#(213 2 #reduceActionForBlock1: 6076417 false ) 
	#(215 2 #reduceActionFor_______eol____whitespace______whitespace__________IntegerLiteral__lineNumber___whitespace_________Statement__statement_________2: 6173698 false ) 
	#(217 1 #reduceActionFor___whitespace_________whitespace____Constant__constant____1: 6178817 false ) 
	#(250 0 #reduceActionFor__eol___ModuleStatement__element____1: 9298945 false ) 
	#(375 3 #reduceActionForExitFor1: 25290753 false ) 
	#(374 3 #reduceActionForExitDo1: 25235457 false ) 
	#(372 3 #reduceActionForExitFunction1: 25113601 false ) 
	#(376 3 #reduceActionForExitProperty1: 25347073 false ) 
	#(373 3 #reduceActionForExitSub1: 25180161 false ) 
	#(359 1 #liftFirstValue: 23776258 false ) 
	#(359 1 #liftFirstValue: 23776257 false ) 
	#(359 1 #liftFirstValue: 23776259 false ) 
	#(362 0 #reduceActionFor__whitespace_______whitespace__Destination__label___1: 23892993 false ) 
	#(364 3 #reduceActionForGoSub1: 24068097 false ) 
	#(363 3 #reduceActionForGoToStatement1: 23970817 false ) 
	#(276 3 #reduceActionForReDefineVariable1: 13273089 false ) 
	#(284 3 #reduceActionForReDefineVariables1: 14229505 false ) 
	#(277 3 #reduceActionForReDefineVariable1: 13391873 false ) 
	#(356 3 #reduceActionForResumeNext1: 23562241 false ) 
	#(355 3 #reduceActionForResumeLabel1: 23467009 false ) 
	#(278 3 #reduceActionForStaticVariable1: 13513729 false ) 
	#(285 3 #reduceActionForStaticVariables1: 14366721 false ) 
	#(245 0 #reduceActionFor__eol___ModuleStatement__element____1: 8778753 false ) 
	#(228 2 #reduceActionForTypedThing2: 6996994 false ) 
	#(273 3 #reduceActionForModuleProperty1: 12957697 false ) 
	#(281 3 #reduceActionForModuleProperties1: 13857793 false ) 
	#(290 2 #reduceActionFor___whitespace_________whitespace____Constant__constant___1: 14621697 false ) 
	#(291 2 #reduceActionFor___whitespace_________whitespace____Constant__constant____2: 14621698 false ) 
	#(379 3 #reduceActionForDictionaryAccess2: 25824258 false ) 
	#(380 3 #reduceActionForMemberAccess2: 25937922 false ) 
	#(383 3 #reduceActionForImplicitParenthesesLessCall1: 26380289 false ) 
	#(391 0 #reduceActionFor_Argument__argument___________________whitespace____1: 27550721 false ) 
	#(206 0 #reduceActionFor__eol___ModuleStatement__element____1: 5009409 false ) 
	#(208 3 #reduceActionForImplements1: 5081089 false ) 
	#(200 3 #reduceActionForOption5: 4173829 false ) 
	#(200 3 #reduceActionForOption1: 4173825 false ) 
	#(221 0 #nil 6546433 false ) 
	#(210 3 #reduceActionForDefType1: 5353473 false ) 
	#(199 3 #reduceActionForheader1: 4098049 false ) 
	#(178 2 #reduceActionFor__eol___ModuleStatement__element___1: 2118657 false ) 
	#(176 4 #reduceActionFormodule2: 2045954 false ) 
	#(298 2 #reduceActionForNegatedOperation2: 15713282 false ) 
	#(298 2 #reduceActionForNegatedOperation2: 15713283 false ) 
	#(298 2 #reduceActionForNegatedOperation2: 15713281 false ) 
	#(190 1 #reduceActionFor_HEX_INTEGER___1: 3037185 false ) 
	#(224 2 #reduceActionForComplexType2: 6863874 false ) 
	#(226 2 #reduceActionFor_____UsableKeywords__member___2: 6903810 false ) 
	#(321 0 #reduceActionFor__whitespace_______whitespace__Destination__label___1: 18419713 false ) 
	#(232 0 #reduceActionFor__whitespace_______whitespace__Destination__label___1: 7325697 false ) 
	#(279 2 #reduceActionForVariable3: 13603843 false ) 
	#(279 2 #reduceActionForVariable2: 13603842 false ) 
	#(288 1 #reduceActionFor___whitespace_________whitespace____Constant__constant____1: 14507009 false ) 
	#(286 2 #reduceActionForVariableList1: 14471169 false ) 
	#(326 4 #reduceActionForInfinityLoop2: 19221506 false ) 
	#(213 3 #reduceActionForBlock2: 6076418 false ) 
	#(216 2 #reduceActionFor__eol____whitespace______whitespace___3: 6178819 false ) 
	#(216 2 #reduceActionFor__eol____whitespace______whitespace___4: 6178820 false ) 
	#(207 2 #reduceActionFor_eol__2: 5011458 false ) 
	#(214 2 #reduceActionFor_______eol____whitespace______whitespace__________IntegerLiteral__lineNumber___whitespace_________Statement__statement________1: 6173697 false ) 
	#(217 2 #reduceActionFor___whitespace_________whitespace____Constant__constant____2: 6178818 false ) 
	#(247 4 #reduceActionForEvent1: 9014273 false ) 
	#(360 2 #reduceActionForDestinationList1: 23848961 false ) 
	#(331 4 #reduceActionForWhileWend1: 20142081 false ) 
	#(228 3 #reduceActionForTypedThing3: 6996995 false ) 
	#(228 3 #reduceActionForTypedThing4: 6996996 false ) 
	#(290 3 #reduceActionFor___whitespace_________whitespace____Constant__constant___2: 14621698 false ) 
	#(290 3 #reduceActionFor___whitespace_________whitespace____Constant__constant___3: 14621699 false ) 
	#(388 1 #reduceActionFor_Argument__argument___________________whitespace___1: 27468801 false ) 
	#(388 1 #reduceActionFor_Argument__argument___________________whitespace___3: 27468803 false ) 
	#(252 1 #reduceActionForParameterPassingStrategy2: 9652226 false ) 
	#(252 1 #liftFirstValue: 9652225 false ) 
	#(386 1 #reduceActionForArgument2: 27278338 false ) 
	#(386 1 #reduceActionForArgument2: 27278337 false ) 
	#(389 2 #reduceActionFor_Argument__argument___________________whitespace____2: 27468802 false ) 
	#(387 2 #reduceActionForArgumentList1: 27450369 false ) 
	#(385 4 #reduceActionForProcedureCallOrArrayAccess1: 26905601 false ) 
	#(267 0 #reduceActionFor_AsType__type__TypeSize__size______1: 11405313 false ) 
	#(221 1 #liftFirstValue: 6546434 false ) 
	#(199 4 #reduceActionForheader2: 4098050 false ) 
	#(176 5 #reduceActionFormodule3: 2045955 false ) 
	#(294 3 #reduceActionForParentheseesExpression1: 15253505 false ) 
	#(299 3 #reduceActionForPositiveOperation2: 15842306 false ) 
	#(299 3 #reduceActionForPositiveOperation2: 15842307 false ) 
	#(299 3 #reduceActionForPositiveOperation2: 15842305 false ) 
	#(300 3 #reduceActionForNotOperation2: 15987714 false ) 
	#(300 3 #reduceActionForNotOperation2: 15987713 false ) 
	#(190 2 #reduceActionFor_eol__2: 3037186 false ) 
	#(304 1 #reduceActionForArithmeticOperator1: 16517121 false ) 
	#(304 1 #reduceActionForArithmeticOperator2: 16517122 false ) 
	#(304 1 #reduceActionForArithmeticOperator3: 16517123 false ) 
	#(304 1 #reduceActionForArithmeticOperator4: 16517124 false ) 
	#(302 1 #reduceActionForArithmeticOperator2: 16295938 false ) 
	#(302 1 #reduceActionForArithmeticOperator4: 16295940 false ) 
	#(302 1 #reduceActionForArithmeticOperator3: 16295939 false ) 
	#(302 1 #reduceActionForArithmeticOperator1: 16295937 false ) 
	#(302 1 #reduceActionForComparisonOperator5: 16295941 false ) 
	#(302 1 #reduceActionForComparisonOperator6: 16295942 false ) 
	#(302 1 #reduceActionForComparisonOperator7: 16295943 false ) 
	#(304 1 #reduceActionForComparisonOperator7: 16517127 false ) 
	#(304 1 #reduceActionForComparisonOperator6: 16517126 false ) 
	#(304 1 #reduceActionForComparisonOperator5: 16517125 false ) 
	#(306 1 #reduceActionFor_Argument__argument___________________whitespace___1: 16724993 false ) 
	#(306 1 #reduceActionForBooleanOperator4: 16724996 false ) 
	#(306 1 #reduceActionForBooleanOperator2: 16724994 false ) 
	#(306 1 #reduceActionFor_Argument__argument___________________whitespace___3: 16724995 false ) 
	#(225 2 #reduceActionFor_____UsableKeywords__member__1: 6903809 false ) 
	#(319 5 #reduceActionForPrintFileClause1: 18272257 false ) 
	#(279 3 #reduceActionForVariable5: 13603845 false ) 
	#(279 3 #reduceActionForVariable4: 13603844 false ) 
	#(287 2 #reduceActionFor___whitespace_________whitespace____Constant__constant___1: 14507009 false ) 
	#(288 2 #reduceActionFor___whitespace_________whitespace____Constant__constant____2: 14507010 false ) 
	#(213 4 #reduceActionForBlock3: 6076419 false ) 
	#(326 5 #reduceActionForInfinityLoop4: 19221508 false ) 
	#(216 3 #reduceActionFor__eol____whitespace______whitespace___5: 6178821 false ) 
	#(250 2 #reduceActionFor__eol___ModuleStatement__element____2: 9298946 false ) 
	#(253 2 #reduceActionForParameterList1: 9730049 false ) 
	#(258 0 #nil 10028033 false ) 
	#(255 0 #reduceActionFor__whitespace_______whitespace__Destination__label___1: 9771009 false ) 
	#(247 5 #reduceActionForEvent2: 9014274 false ) 
	#(362 2 #reduceActionFor___whitespace_________whitespace____Constant__constant____2: 23892994 false ) 
	#(220 0 #reduceActionFor__whitespace_______whitespace__Destination__label___1: 6465537 false ) 
	#(366 5 #reduceActionForOnErrorGoTo1: 24272897 false ) 
	#(368 5 #reduceActionForOnExpressionGo1: 24497153 false ) 
	#(201 5 #reduceActionForOptionBase1: 4611073 false ) 
	#(276 5 #reduceActionForReDefineVariable2: 13273090 false ) 
	#(284 5 #reduceActionForReDefineVariables2: 14229506 false ) 
	#(277 5 #reduceActionForReDefineVariable2: 13391874 false ) 
	#(245 2 #reduceActionFor__eol___ModuleStatement__element____2: 8778754 false ) 
	#(331 5 #reduceActionForWhileWend3: 20142083 false ) 
	#(228 4 #reduceActionForTypedThing5: 6996997 false ) 
	#(236 5 #reduceActionForAssignment2: 7690242 false ) 
	#(280 5 #reduceActionForConstant1: 13727745 false ) 
	#(236 5 #reduceActionForAssignment2: 7690241 false ) 
	#(228 4 #reduceActionForTypedThing6: 6996998 false ) 
	#(274 5 #reduceActionForModuleConstant2: 13061122 false ) 
	#(282 5 #reduceActionForModuleConstants2: 13981698 false ) 
	#(290 4 #reduceActionFor___whitespace_________whitespace____Constant__constant___4: 14621700 false ) 
	#(236 5 #reduceActionForAssignment2: 7690244 false ) 
	#(236 5 #reduceActionForAssignment2: 7690243 false ) 
	#(388 2 #reduceActionFor_Argument__argument___________________whitespace___2: 27468802 false ) 
	#(388 2 #reduceActionFor_Argument__argument___________________whitespace___4: 27468804 false ) 
	#(388 2 #reduceActionFor_Argument__argument___________________whitespace___5: 27468805 false ) 
	#(388 2 #reduceActionFor_Argument__argument___________________whitespace___7: 27468807 false ) 
	#(387 3 #reduceActionForArgumentList2: 27450370 false ) 
	#(390 1 #reduceActionFor_Argument__argument___________________whitespace___1: 27550721 false ) 
	#(390 1 #reduceActionForBooleanOperator4: 27550725 false ) 
	#(391 2 #reduceActionFor_Argument__argument___________________whitespace____2: 27550722 false ) 
	#(385 5 #reduceActionForProcedureCallOrArrayAccess2: 26905602 false ) 
	#(206 2 #reduceActionFor___eol___SetUpAssignation__setting___2: 5009410 false ) 
	#(266 1 #reduceActionFor_AsType__type__TypeSize__size_____1: 11405313 false ) 
	#(267 1 #reduceActionFor_AsType__type__TypeSize__size______2: 11405314 false ) 
	#(200 5 #reduceActionForOption3: 4173827 false ) 
	#(200 5 #reduceActionForOption2: 4173826 false ) 
	#(200 5 #reduceActionForOption4: 4173828 false ) 
	#(200 5 #reduceActionForOption6: 4173830 false ) 
	#(176 6 #reduceActionFormodule4: 2045956 false ) 
	#(294 4 #reduceActionForParentheseesExpression3: 15253507 false ) 
	#(294 4 #reduceActionForParentheseesExpression2: 15253506 false ) 
	#(319 6 #reduceActionForPrintFileClause4: 18272260 false ) 
	#(319 6 #reduceActionForPrintFileClause2: 18272258 false ) 
	#(321 2 #reduceActionFor______whitespace___Expression__value___2: 18419714 false ) 
	#(319 6 #reduceActionForPrintFileClause7: 18272263 false ) 
	#(279 4 #reduceActionForVariable7: 13603847 false ) 
	#(279 4 #reduceActionForVariable6: 13603846 false ) 
	#(230 3 #reduceActionForTypeSize1: 7282689 false ) 
	#(232 2 #reduceActionFor______whitespace___Expression__value___2: 7325698 false ) 
	#(287 3 #reduceActionFor___whitespace_________whitespace____Constant__constant___2: 14507010 false ) 
	#(287 3 #reduceActionFor___whitespace_________whitespace____Constant__constant___3: 14507011 false ) 
	#(329 6 #reduceActionForDoWhileTrue1: 19704833 false ) 
	#(327 6 #reduceActionForWhileTrue1: 19347457 false ) 
	#(213 5 #reduceActionForBlock4: 6076420 false ) 
	#(214 4 #reduceActionFor_______eol____whitespace______whitespace__________IntegerLiteral__lineNumber___whitespace_________Statement__statement________2: 6173698 false ) 
	#(251 1 #reduceActionForEnumEntry1: 9396225 false ) 
	#(249 2 #reduceActionFor__eol___ModuleStatement__element___1: 9298945 false ) 
	#(253 3 #reduceActionForParameterList2: 9730050 false ) 
	#(257 1 #liftFirstValue: 10028033 false ) 
	#(258 1 #liftFirstValue: 10028034 false ) 
	#(260 0 #reduceActionFor__whitespace_______whitespace__Expression__default___1: 10047489 false ) 
	#(361 2 #reduceActionFor___whitespace_________whitespace____Constant__constant___1: 23892993 false ) 
	#(341 0 #reduceActionFor_eol__1: 22070273 false ) 
	#(338 6 #reduceActionForIfThenElseOneLine1: 21762049 false ) 
	#(218 1 #reduceActionForOneLineBlock1: 6403073 false ) 
	#(338 6 #reduceActionForIfThenElseOneLine4: 21762052 false ) 
	#(244 2 #reduceActionFor__eol___ModuleStatement__element___1: 8778753 false ) 
	#(331 6 #reduceActionForWhileWend2: 20142082 false ) 
	#(280 6 #reduceActionForConstant2: 13727746 false ) 
	#(247 6 #reduceActionForEvent3: 9014275 false ) 
	#(386 3 #reduceActionForArgument4: 27278340 false ) 
	#(386 3 #reduceActionForArgument4: 27278339 false ) 
	#(386 3 #reduceActionForArgument6: 27278342 false ) 
	#(386 3 #reduceActionForArgument6: 27278341 false ) 
	#(388 3 #reduceActionFor_Argument__argument___________________whitespace___6: 27468806 false ) 
	#(388 3 #reduceActionFor_Argument__argument___________________whitespace___8: 27468808 false ) 
	#(390 2 #reduceActionFor_______________whitespace___Argument__argument_____3: 27550723 false ) 
	#(390 2 #reduceActionFor_Argument__argument___________________whitespace___2: 27550722 false ) 
	#(390 2 #reduceActionFor_Argument__argument___________________whitespace___7: 27550727 false ) 
	#(390 2 #reduceActionFor_______________whitespace___Argument__argument_____6: 27550726 false ) 
	#(204 6 #reduceActionForConfiguration1: 4947969 false ) 
	#(205 2 #reduceActionFor__eol___ModuleStatement__element___1: 5009409 false ) 
	#(266 2 #reduceActionFor_____UsableKeywords__member__1: 11405314 false ) 
	#(294 5 #reduceActionForParentheseesExpression4: 15253508 false ) 
	#(310 5 #reduceActionForEquals1: 17180673 false ) 
	#(310 5 #reduceActionForEquals1: 17180675 false ) 
	#(295 5 #reduceActionForInterval1: 15381505 false ) 
	#(303 5 #reduceActionForComparisonOperation1: 16370689 false ) 
	#(305 5 #reduceActionForArithmeticOperation1: 16583681 false ) 
	#(307 5 #reduceActionForBooleanBinaryOperation1: 16774145 false ) 
	#(309 5 #reduceActionForConcatenationOperation1: 17041409 false ) 
	#(310 5 #reduceActionForEquals1: 17180674 false ) 
	#(322 7 #reduceActionForLineInputClause5: 18493445 false ) 
	#(322 7 #reduceActionForLineInputClause5: 18493441 false ) 
	#(314 1 #liftFirstValue: 17617921 false ) 
	#(314 1 #liftFirstValue: 17617922 false ) 
	#(314 1 #liftFirstValue: 17617923 false ) 
	#(314 1 #liftFirstValue: 17617924 false ) 
	#(314 1 #liftFirstValue: 17617925 false ) 
	#(319 7 #reduceActionForPrintFileClause5: 18272261 false ) 
	#(319 7 #reduceActionForPrintFileClause3: 18272259 false ) 
	#(320 2 #reduceActionFor______whitespace___Expression__value__1: 18419713 false ) 
	#(319 7 #reduceActionForPrintFileClause10: 18272266 false ) 
	#(319 7 #reduceActionForPrintFileClause8: 18272264 false ) 
	#(202 5 #reduceActionForSetUpAssignation1: 4704257 false ) 
	#(202 5 #reduceActionForSetUpAssignation1: 4704258 false ) 
	#(279 5 #reduceActionForVariable8: 13603848 false ) 
	#(231 2 #reduceActionFor______whitespace___Expression__value__1: 7325697 false ) 
	#(230 4 #reduceActionForTypeSize2: 7282690 false ) 
	#(287 4 #reduceActionFor___whitespace_________whitespace____Constant__constant___4: 14507012 false ) 
	#(328 7 #reduceActionForUntilTrue1: 19530753 false ) 
	#(327 7 #reduceActionForWhileTrue3: 19347459 false ) 
	#(330 7 #reduceActionForDoUntilTrue1: 19893249 false ) 
	#(329 7 #reduceActionForDoWhileTrue3: 19704835 false ) 
	#(260 1 #reduceActionFor_AsType__type__TypeSize__size______2: 10047490 false ) 
	#(256 3 #reduceActionForParameter1: 9857025 false ) 
	#(253 4 #reduceActionForParameterList3: 9730051 false ) 
	#(255 2 #reduceActionFor______whitespace___Expression__value___2: 9771010 false ) 
	#(361 3 #reduceActionFor___whitespace_________whitespace____Constant__constant___2: 23892994 false ) 
	#(361 3 #reduceActionFor___whitespace_________whitespace____Constant__constant___3: 23892995 false ) 
	#(218 2 #reduceActionForOneLineBlock7: 6403079 false ) 
	#(218 2 #reduceActionForOneLineBlock4: 6403076 false ) 
	#(220 2 #reduceActionFor___whitespace_________whitespace____Constant__constant____2: 6465538 false ) 
	#(239 7 #reduceActionForRename1: 8298497 false ) 
	#(367 7 #reduceActionForOnErrorResumeNext1: 24372225 false ) 
	#(352 1 #liftFirstValue: 23239681 false ) 
	#(353 1 #reduceActionFor_HEX_INTEGER___1: 23239681 false ) 
	#(246 2 #reduceActionForTypeEntry1: 8878081 false ) 
	#(331 7 #reduceActionForWhileWend4: 20142084 false ) 
	#(370 7 #reduceActionForWith1: 24807425 false ) 
	#(229 6 #reduceActionForTypedAndInstantiatedThing1: 7154689 false ) 
	#(228 6 #reduceActionForTypedThing7: 6996999 false ) 
	#(247 7 #reduceActionForEvent4: 9014276 false ) 
	#(237 7 #reduceActionForExplicitAssignement2: 7872514 false ) 
	#(237 7 #reduceActionForExplicitAssignement2: 7872513 false ) 
	#(237 7 #reduceActionForExplicitAssignement2: 7872516 false ) 
	#(237 7 #reduceActionForExplicitAssignement2: 7872515 false ) 
	#(390 3 #reduceActionFor_______________whitespace___Argument__argument_____4: 27550724 false ) 
	#(390 3 #reduceActionFor_Argument__argument___________________whitespace___8: 27550728 false ) 
	#(322 8 #reduceActionForLineInputClause6: 18493446 false ) 
	#(322 8 #reduceActionForLineInputClause7: 18493447 false ) 
	#(322 8 #reduceActionForLineInputClause6: 18493442 false ) 
	#(322 8 #reduceActionForLineInputClause7: 18493443 false ) 
	#(319 8 #reduceActionForPrintFileClause6: 18272262 false ) 
	#(320 3 #reduceActionFor______whitespace___Expression__value__2: 18419714 false ) 
	#(319 8 #reduceActionForPrintFileClause11: 18272267 false ) 
	#(319 8 #reduceActionForPrintFileClause9: 18272265 false ) 
	#(231 3 #reduceActionFor______whitespace___Expression__value__2: 7325698 false ) 
	#(327 8 #reduceActionForWhileTrue2: 19347458 false ) 
	#(329 8 #reduceActionForDoWhileTrue2: 19704834 false ) 
	#(248 8 #reduceActionForDefineEnum1: 9186305 false ) 
	#(256 4 #reduceActionForParameter2: 9857026 false ) 
	#(253 5 #reduceActionForParameterList4: 9730052 false ) 
	#(361 4 #reduceActionFor___whitespace_________whitespace____Constant__constant___4: 23892996 false ) 
	#(218 3 #reduceActionForOneLineBlock10: 6403082 false ) 
	#(342 1 #reduceActionForElse1: 22204417 false ) 
	#(341 2 #reduceActionFor_eol__2: 22070274 false ) 
	#(340 1 #liftFirstValue: 22070273 false ) 
	#(219 2 #reduceActionFor___whitespace_________whitespace____Constant__constant___1: 6465537 false ) 
	#(218 3 #reduceActionForOneLineBlock2: 6403074 false ) 
	#(353 2 #reduceActionFor_eol__2: 23239682 false ) 
	#(243 8 #reduceActionForDefineType1: 8666113 false ) 
	#(228 7 #reduceActionForTypedThing8: 6997000 false ) 
	#(228 7 #reduceActionForTypedThing9: 6997001 false ) 
	#(386 5 #reduceActionForArgument8: 27278344 false ) 
	#(386 5 #reduceActionForArgument8: 27278343 false ) 
	#(268 8 #reduceActionForDefineSub1: 11521025 false ) 
	#(395 7 #reduceActionForTypeOf1: 28168193 false ) 
	#(395 7 #reduceActionForTypeOf2: 28168194 false ) 
	#(322 9 #reduceActionForLineInputClause8: 18493448 false ) 
	#(322 9 #reduceActionForLineInputClause8: 18493444 false ) 
	#(316 1 #liftFirstValue: 17764356 false ) 
	#(316 1 #liftFirstValue: 17764354 false ) 
	#(316 1 #liftFirstValue: 17764355 false ) 
	#(315 1 #liftFirstValue: 17694721 false ) 
	#(316 1 #liftFirstValue: 17764353 false ) 
	#(315 1 #liftFirstValue: 17694722 false ) 
	#(319 9 #reduceActionForPrintFileClause12: 18272268 false ) 
	#(328 9 #reduceActionForUntilTrue2: 19530754 false ) 
	#(327 9 #reduceActionForWhileTrue4: 19347460 false ) 
	#(330 9 #reduceActionForDoUntilTrue2: 19893250 false ) 
	#(329 9 #reduceActionForDoWhileTrue4: 19704836 false ) 
	#(256 5 #reduceActionForParameter9: 9857033 false ) 
	#(256 5 #reduceActionForParameter3: 9857027 false ) 
	#(256 5 #reduceActionForParameter5: 9857029 false ) 
	#(254 3 #reduceActionFor______whitespace__Parameter__parameter__1: 9771009 false ) 
	#(218 4 #reduceActionForOneLineBlock8: 6403080 false ) 
	#(218 4 #reduceActionForOneLineBlock5: 6403077 false ) 
	#(342 2 #reduceActionForElse2: 22204418 false ) 
	#(338 9 #reduceActionForIfThenElseOneLine2: 21762050 false ) 
	#(338 9 #reduceActionForIfThenElseOneLine3: 21762051 false ) 
	#(219 3 #reduceActionFor___whitespace_________whitespace____Constant__constant___2: 6465538 false ) 
	#(219 3 #reduceActionFor___whitespace_________whitespace____Constant__constant___3: 6465539 false ) 
	#(218 4 #reduceActionForOneLineBlock3: 6403075 false ) 
	#(338 9 #reduceActionForIfThenElseOneLine5: 21762053 false ) 
	#(338 9 #reduceActionForIfThenElseOneLine6: 21762054 false ) 
	#(350 0 #reduceActionFor__whitespace_______whitespace__Destination__label___1: 23038977 false ) 
	#(347 1 #liftFirstValue: 22840324 false ) 
	#(347 1 #liftFirstValue: 22840322 false ) 
	#(347 1 #liftFirstValue: 22840323 false ) 
	#(347 1 #liftFirstValue: 22840321 false ) 
	#(246 4 #reduceActionForTypeEntry2: 8878082 false ) 
	#(370 9 #reduceActionForWith2: 24807426 false ) 
	#(228 8 #reduceActionForTypedThing10: 6997002 false ) 
	#(265 9 #reduceActionForDefineFunction1: 11198465 false ) 
	#(268 9 #reduceActionForDefineSub3: 11521027 false ) 
	#(268 9 #reduceActionForDefineSub2: 11521026 false ) 
	#(333 10 #reduceActionForForEach1: 20430849 false ) 
	#(251 5 #reduceActionForEnumEntry2: 9396226 false ) 
	#(256 6 #reduceActionForParameter10: 9857034 false ) 
	#(256 6 #reduceActionForParameter4: 9857028 false ) 
	#(259 4 #reduceActionFor__whitespace_______whitespace__Expression__default__1: 10047489 false ) 
	#(256 6 #reduceActionForParameter6: 9857030 false ) 
	#(218 5 #reduceActionForOneLineBlock11: 6403083 false ) 
	#(218 5 #reduceActionForOneLineBlock9: 6403081 false ) 
	#(218 5 #reduceActionForOneLineBlock6: 6403078 false ) 
	#(339 10 #reduceActionForIfThenElse1: 21963777 false ) 
	#(342 3 #reduceActionForElse3: 22204419 false ) 
	#(219 4 #reduceActionFor___whitespace_________whitespace____Constant__constant___4: 6465540 false ) 
	#(348 4 #reduceActionForCase7: 22920199 false ) 
	#(348 4 #reduceActionForCase1: 22920193 false ) 
	#(351 10 #reduceActionForSelect1: 23148545 false ) 
	#(246 5 #reduceActionForTypeEntry3: 8878083 false ) 
	#(246 5 #reduceActionForTypeEntry4: 8878084 false ) 
	#(248 10 #reduceActionForDefineEnum2: 9186306 false ) 
	#(243 10 #reduceActionForDefineType2: 8666114 false ) 
	#(261 10 #reduceActionForDeclareSub1: 10269697 false ) 
	#(265 10 #reduceActionForDefineFunction3: 11198467 false ) 
	#(265 10 #reduceActionForDefineFunction2: 11198466 false ) 
	#(269 10 #reduceActionForModulePropertyGet1: 11791361 false ) 
	#(271 10 #reduceActionForModulePropertyLet1: 12393473 false ) 
	#(270 10 #reduceActionForModulePropertySet1: 12111873 false ) 
	#(268 10 #reduceActionForDefineSub4: 11521028 false ) 
	#(268 10 #reduceActionForDefineSub9: 11521033 false ) 
	#(268 10 #reduceActionForDefineSub5: 11521029 false ) 
	#(333 11 #reduceActionForForEach9: 20430857 false ) 
	#(333 11 #reduceActionForForEach5: 20430853 false ) 
	#(318 11 #reduceActionForOpenFileClause1: 17915905 false ) 
	#(315 3 #liftFirstValue: 17694723 false ) 
	#(256 7 #reduceActionForParameter11: 9857035 false ) 
	#(256 7 #reduceActionForParameter13: 9857037 false ) 
	#(256 7 #reduceActionForParameter7: 9857031 false ) 
	#(218 6 #reduceActionForOneLineBlock12: 6403084 false ) 
	#(342 4 #reduceActionForElse4: 22204420 false ) 
	#(339 11 #reduceActionForIfThenElse3: 21963779 false ) 
	#(348 5 #reduceActionForCase10: 22920202 false ) 
	#(348 5 #reduceActionForCase8: 22920200 false ) 
	#(348 5 #reduceActionForCase8: 22920201 false ) 
	#(350 2 #reduceActionFor______whitespace___Expression__value___2: 23038978 false ) 
	#(348 5 #reduceActionForCase4: 22920196 false ) 
	#(348 5 #reduceActionForCase2: 22920194 false ) 
	#(348 5 #reduceActionForCase2: 22920195 false ) 
	#(246 6 #reduceActionForTypeEntry5: 8878085 false ) 
	#(262 11 #reduceActionForDeclareFunction1: 10607617 false ) 
	#(261 11 #reduceActionForDeclareSub4: 10269700 false ) 
	#(265 11 #reduceActionForDefineFunction4: 11198468 false ) 
	#(269 11 #reduceActionForModulePropertyGet2: 11791362 false ) 
	#(265 11 #reduceActionForDefineFunction9: 11198473 false ) 
	#(268 11 #reduceActionForDefineSub11: 11521035 false ) 
	#(268 11 #reduceActionForDefineSub10: 11521034 false ) 
	#(265 11 #reduceActionForDefineFunction5: 11198469 false ) 
	#(268 11 #reduceActionForDefineSub7: 11521031 false ) 
	#(268 11 #reduceActionForDefineSub6: 11521030 false ) 
	#(333 12 #reduceActionForForEach2: 20430850 false ) 
	#(333 12 #reduceActionForForEach13: 20430861 false ) 
	#(333 12 #reduceActionForForEach3: 20430851 false ) 
	#(334 12 #reduceActionForForNext1: 20717569 false ) 
	#(335 12 #reduceActionForForNext1: 21038081 false ) 
	#(256 8 #reduceActionForParameter12: 9857036 false ) 
	#(256 8 #reduceActionForParameter14: 9857038 false ) 
	#(256 8 #reduceActionForParameter8: 9857032 false ) 
	#(343 5 #reduceActionForElseIf1: 22313985 false ) 
	#(339 12 #reduceActionForIfThenElse2: 21963778 false ) 
	#(348 6 #reduceActionForCase11: 22920203 false ) 
	#(348 6 #reduceActionForCase11: 22920204 false ) 
	#(348 6 #reduceActionForCase5: 22920197 false ) 
	#(348 6 #reduceActionForCase5: 22920198 false ) 
	#(348 6 #reduceActionForCase19: 22920211 false ) 
	#(348 6 #reduceActionForCase13: 22920205 false ) 
	#(351 12 #reduceActionForSelect2: 23148546 false ) 
	#(262 12 #reduceActionForDeclareFunction4: 10607620 false ) 
	#(269 12 #reduceActionForModulePropertyGet3: 11791363 false ) 
	#(261 12 #reduceActionForDeclareSub7: 10269703 false ) 
	#(265 12 #reduceActionForDefineFunction11: 11198475 false ) 
	#(265 12 #reduceActionForDefineFunction10: 11198474 false ) 
	#(269 12 #reduceActionForModulePropertyGet7: 11791367 false ) 
	#(271 12 #reduceActionForModulePropertyLet3: 12393475 false ) 
	#(270 12 #reduceActionForModulePropertySet3: 12111875 false ) 
	#(268 12 #reduceActionForDefineSub12: 11521036 false ) 
	#(268 12 #reduceActionForDefineSub13: 11521037 false ) 
	#(265 12 #reduceActionForDefineFunction7: 11198471 false ) 
	#(265 12 #reduceActionForDefineFunction6: 11198470 false ) 
	#(269 12 #reduceActionForModulePropertyGet4: 11791364 false ) 
	#(271 12 #reduceActionForModulePropertyLet2: 12393474 false ) 
	#(270 12 #reduceActionForModulePropertySet2: 12111874 false ) 
	#(268 12 #reduceActionForDefineSub8: 11521032 false ) 
	#(189 11 #reduceActionForGuidLiteral1: 3014657 false ) 
	#(333 13 #reduceActionForForEach10: 20430858 false ) 
	#(333 13 #reduceActionForForEach11: 20430859 false ) 
	#(333 13 #reduceActionForForEach6: 20430854 false ) 
	#(333 13 #reduceActionForForEach7: 20430855 false ) 
	#(334 13 #reduceActionForForNext5: 20717573 false ) 
	#(335 13 #reduceActionForForNext5: 21038082 false ) 
	#(318 13 #reduceActionForOpenFileClause5: 17915909 false ) 
	#(318 13 #reduceActionForOpenFileClause3: 17915907 false ) 
	#(256 9 #reduceActionForParameter15: 9857039 false ) 
	#(343 6 #reduceActionForElseIf2: 22313986 false ) 
	#(339 13 #reduceActionForIfThenElse4: 21963780 false ) 
	#(349 3 #reduceActionFor______whitespace__Parameter__parameter__1: 23038977 false ) 
	#(348 7 #reduceActionForCase22: 22920214 false ) 
	#(348 7 #reduceActionForCase20: 22920212 false ) 
	#(348 7 #reduceActionForCase20: 22920213 false ) 
	#(348 7 #reduceActionForCase16: 22920208 false ) 
	#(348 7 #reduceActionForCase14: 22920206 false ) 
	#(348 7 #reduceActionForCase14: 22920207 false ) 
	#(261 13 #reduceActionForDeclareSub2: 10269698 false ) 
	#(262 13 #reduceActionForDeclareFunction7: 10607623 false ) 
	#(261 13 #reduceActionForDeclareSub10: 10269706 false ) 
	#(265 13 #reduceActionForDefineFunction12: 11198476 false ) 
	#(269 13 #reduceActionForModulePropertyGet8: 11791368 false ) 
	#(265 13 #reduceActionForDefineFunction13: 11198477 false ) 
	#(268 13 #reduceActionForDefineSub15: 11521039 false ) 
	#(268 13 #reduceActionForDefineSub14: 11521038 false ) 
	#(265 13 #reduceActionForDefineFunction8: 11198472 false ) 
	#(269 13 #reduceActionForModulePropertyGet5: 11791365 false ) 
	#(333 14 #reduceActionForForEach14: 20430862 false ) 
	#(333 14 #reduceActionForForEach15: 20430863 false ) 
	#(333 14 #reduceActionForForEach4: 20430852 false ) 
	#(334 14 #reduceActionForForNext2: 20717570 false ) 
	#(334 14 #reduceActionForForNext3: 20717571 false ) 
	#(256 10 #reduceActionForParameter16: 9857040 false ) 
	#(343 7 #reduceActionForElseIf3: 22313987 false ) 
	#(348 8 #reduceActionForCase23: 22920215 false ) 
	#(348 8 #reduceActionForCase23: 22920216 false ) 
	#(348 8 #reduceActionForCase17: 22920209 false ) 
	#(348 8 #reduceActionForCase17: 22920210 false ) 
	#(262 14 #reduceActionForDeclareFunction2: 10607618 false ) 
	#(261 14 #reduceActionForDeclareSub3: 10269699 false ) 
	#(261 14 #reduceActionForDeclareSub5: 10269701 false ) 
	#(262 14 #reduceActionForDeclareFunction10: 10607626 false ) 
	#(269 14 #reduceActionForModulePropertyGet9: 11791369 false ) 
	#(265 14 #reduceActionForDefineFunction15: 11198479 false ) 
	#(265 14 #reduceActionForDefineFunction14: 11198478 false ) 
	#(269 14 #reduceActionForModulePropertyGet10: 11791370 false ) 
	#(271 14 #reduceActionForModulePropertyLet4: 12393476 false ) 
	#(270 14 #reduceActionForModulePropertySet4: 12111876 false ) 
	#(268 14 #reduceActionForDefineSub16: 11521040 false ) 
	#(269 14 #reduceActionForModulePropertyGet6: 11791366 false ) 
	#(333 15 #reduceActionForForEach12: 20430860 false ) 
	#(333 15 #reduceActionForForEach8: 20430856 false ) 
	#(334 15 #reduceActionForForNext6: 20717574 false ) 
	#(334 15 #reduceActionForForNext7: 20717575 false ) 
	#(318 15 #reduceActionForOpenFileClause7: 17915911 false ) 
	#(343 8 #reduceActionForElseIf4: 22313988 false ) 
	#(262 15 #reduceActionForDeclareFunction3: 10607619 false ) 
	#(262 15 #reduceActionForDeclareFunction5: 10607621 false ) 
	#(261 15 #reduceActionForDeclareSub6: 10269702 false ) 
	#(261 15 #reduceActionForDeclareSub8: 10269704 false ) 
	#(265 15 #reduceActionForDefineFunction16: 11198480 false ) 
	#(269 15 #reduceActionForModulePropertyGet11: 11791371 false ) 
	#(333 16 #reduceActionForForEach16: 20430864 false ) 
	#(336 16 #reduceActionForForStepNext1: 21275649 false ) 
	#(334 16 #reduceActionForForNext4: 20717572 false ) 
	#(262 16 #reduceActionForDeclareFunction6: 10607622 false ) 
	#(262 16 #reduceActionForDeclareFunction8: 10607624 false ) 
	#(261 16 #reduceActionForDeclareSub9: 10269705 false ) 
	#(261 16 #reduceActionForDeclareSub11: 10269707 false ) 
	#(269 16 #reduceActionForModulePropertyGet12: 11791372 false ) 
	#(336 17 #reduceActionForForStepNext5: 21275653 false ) 
	#(334 17 #reduceActionForForNext8: 20717576 false ) 
	#(318 17 #reduceActionForOpenFileClause2: 17915906 false ) 
	#(262 17 #reduceActionForDeclareFunction9: 10607625 false ) 
	#(262 17 #reduceActionForDeclareFunction11: 10607627 false ) 
	#(261 17 #reduceActionForDeclareSub12: 10269708 false ) 
	#(336 18 #reduceActionForForStepNext2: 21275650 false ) 
	#(336 18 #reduceActionForForStepNext3: 21275651 false ) 
	#(262 18 #reduceActionForDeclareFunction12: 10607628 false ) 
	#(336 19 #reduceActionForForStepNext6: 21275654 false ) 
	#(336 19 #reduceActionForForStepNext7: 21275655 false ) 
	#(318 19 #reduceActionForOpenFileClause6: 17915910 false ) 
	#(318 19 #reduceActionForOpenFileClause4: 17915908 false ) 
	#(336 20 #reduceActionForForStepNext4: 21275652 false ) 
	#(336 21 #reduceActionForForStepNext8: 21275656 false ) 
	#(318 21 #reduceActionForOpenFileClause8: 17915912 false )
	).
]

{ #category : #'generated-accessing' }
VBParser class >> scannerClass [
	^VBScanner
]

{ #category : #generated }
VBParser class >> startingStateForBehaviourDefinition [
	^ 4
]

{ #category : #generated }
VBParser class >> startingStateForModuleStatement [
	^ 3
]

{ #category : #generated }
VBParser class >> startingStateForStatement [
	^ 2
]

{ #category : #generated }
VBParser class >> startingStateFormodule [
	^ 1
]

{ #category : #generated }
VBParser class >> symbolNames [
	^ #('"!"' '"&"' '"("' '")"' '"*"' '"+"' '","' '"-"' '"."' '"/"' '":"' '":="' '";"' '"<"' '"<<"' '"<="' '"<>"' '"="' '">"' '">="' '">>"' '"APPEND"' '"AS"' '"AddressOf"' '"BINARY"' '"Call"' '"DefBool"' '"DefByte"' '"DefCur"' '"DefDate"' '"DefDbl"' '"DefDec"' '"DefInt"' '"DefLng"' '"DefLngPtr"' '"DefLnglng"' '"DefObj"' '"DefSng"' '"DefStr"' '"DefVar"' '"DoEvents"' '"ERROR"' '"FOR"' '"INPUT"' '"IS"' '"IsNot"' '"LIKE"' '"Line"' '"Lock Read Write"' '"Lock Read"' '"Lock Write"' '"Mod"' '"NEW"' '"OBJECT"' '"OPEN"' '"Output"' '"PRINT"' '"RaiseEvent"' '"Random"' '"Read"' '"Shared"' '"TypeOf"' '"WithEvents"' '"Write"' '"["' '"\"' '"^"' '"alias"' '"and"' '"attribute"' '"base"' '"beep"' '"begin"' '"bold"' '"boolean"' '"byref"' '"byte"' '"byval"' '"case"' '"class"' '"collection"' '"compare"' '"const"' '"currency"' '"database"' '"date"' '"decimal"' '"declare"' '"dim"' '"do"' '"double"' '"each"' '"else"' '"else:"' '"elseif"' '"end"' '"enum"' '"eqv"' '"event"' '"exit"' '"explicit"' '"friend"' '"function"' '"get"' '"global"' '"gosub"' '"goto"' '"if"' '"implements"' '"in"' '"integer"' '"len"' '"let"' '"lib"' '"long"' '"longlong"' '"longptr"' '"loop"' '"module"' '"name"' '"next"' '"not"' '"on"' '"option"' '"optional"' '"or"' '"paramarray"' '"preserve"' '"private"' '"property"' '"public"' '"redim"' '"resume"' '"return"' '"select"' '"set"' '"single"' '"static"' '"step"' '"string"' '"sub"' '"text"' '"then"' '"then:"' '"to"' '"type"' '"until"' '"variant"' '"version"' '"wend"' '"while"' '"with"' '"xor"' '"{"' '"}"' '"~"' '<lineContinuation>' '<HEX_INTEGER>' '<DATE_LITERAL>' '<COLOR_LITERAL>' '<INTEGER_LITERAL>' '<FLOATING_POINT_LITERAL>' '<BOOLEAN_LITERAL>' '<STRING_LITERAL>' '<NULL_LITERAL>' '<IDENTIFIER>' '<SBIDENTIFIER>' '<DEFTYPE>' '<HASH_NUMBER>' '<HASH_IDENTIFIER>' '<whitespace>' '<eol>' '<comment>' 'B e g i n' 'UnqualifiedMemberAccess' 'module' '<eol>*' '(<eol>* ModuleStatement ''element'' )' '(<eol>* ModuleStatement ''element'' )*' 'literal' 'FileDescriptorLiteral' 'IntegerLiteral' 'ColorLiteral' 'DateLiteral' 'FloatLiteral' 'BooleanLiteral' 'StringLiteral' 'Null' 'GuidLiteral' '<HEX_INTEGER> +' 'Identifier' 'KeywordIdentifier' 'UsableKeywords' 'IdentifierWords' 'HashIdentifier' 'SquareBracketIdentifier' 'SimpleIdentifier' 'LabelTag' 'header' 'Option' 'OptionBase' 'SetUpAssignation' 'Attribute' 'Configuration' '( <eol>+ SetUpAssignation ''setting'')' '( <eol>+ SetUpAssignation ''setting'')*' '<eol>+' 'Implements' 'DefTypeLabel' 'DefType' 'ModuleStatement' 'Statement' 'Block' '(
		 (<eol>| <whitespace>?":"<whitespace>?)+ 
		 (IntegerLiteral ''lineNumber'' <whitespace>)? 
		  Statement ''statement'' 
	   )' '(
		 (<eol>| <whitespace>?":"<whitespace>?)+ 
		 (IntegerLiteral ''lineNumber'' <whitespace>)? 
		  Statement ''statement'' 
	   )*' '(<eol>| <whitespace>?":"<whitespace>?)' '(<eol>| <whitespace>?":"<whitespace>?)+' 'OneLineBlock' '(<whitespace>? ":" <whitespace>? Statement ''statement'')' '(<whitespace>? ":" <whitespace>? Statement ''statement'')*' '<whitespace>?' 'BaseType' 'Visibility' 'ComplexType' '("." UsableKeywords ''member'')' '("." UsableKeywords ''member'')*' 'Type' 'TypedThing' 'TypedAndInstantiatedThing' 'TypeSize' '(","<whitespace>? Expression ''size'')' '(","<whitespace>? Expression ''size'')*' 'AsType' 'StatementAssignment' 'ExplicitLetSet' 'Assignment' 'ExplicitAssignement' 'OtherStatements' 'Rename' 'Beep' 'DoEvents' 'Types' 'DefineType' '( <eol>* TypeEntry ''field'' )' '( <eol>* TypeEntry ''field'' )*' 'TypeEntry' 'Event' 'DefineEnum' '( <eol>* EnumEntry ''field'')' '( <eol>* EnumEntry ''field'')*' 'EnumEntry' 'ParameterPassingStrategy' 'ParameterList' '("," <whitespace> Parameter ''parameter'')' '("," <whitespace> Parameter ''parameter'')*' 'Parameter' '(AsType ''type'')' '(AsType ''type'')?' '(<whitespace> "=" <whitespace> Expression ''default'')' '(<whitespace> "=" <whitespace> Expression ''default'')?' 'DeclareSub' 'DeclareFunction' 'DeclareExternal' 'Modifier' 'DefineFunction' '(AsType ''type'' TypeSize ''size''?  )' '(AsType ''type'' TypeSize ''size''?  )?' 'DefineSub' 'ModulePropertyGet' 'ModulePropertySet' 'ModulePropertyLet' 'BehaviourDefinition' 'ModuleProperty' 'ModuleConstant' 'DefineVariable' 'ReDefineVariable' 'ReDefineExpression' 'StaticVariable' 'Variable' 'Constant' 'ModuleProperties' 'ModuleConstants' 'DefineVariables' 'ReDefineVariables' 'StaticVariables' 'VariableList' '( <whitespace>? ","  <whitespace>?  Variable ''variable'' )' '( <whitespace>? ","  <whitespace>?  Variable ''variable'' )+' 'ConstantList' '( <whitespace>? ","  <whitespace>?  Constant ''constant'' )' '( <whitespace>? ","  <whitespace>?  Constant ''constant'' )+' 'VariableDefinition' 'Expression' 'ParentheseesExpression' 'Interval' 'Operation' 'UnaryOperation' 'NegatedOperation' 'PositiveOperation' 'NotOperation' 'BinaryOperation' 'ComparisonOperator' 'ComparisonOperation' 'ArithmeticOperator' 'ArithmeticOperation' 'BooleanOperator' 'BooleanBinaryOperation' 'Concatenable' 'ConcatenationOperation' 'Equals' 'ValueClause' 'AddressOfClause' 'NewClause' 'OpenMode' 'OpenAccess' 'Lock' 'FileClauses' 'OpenFileClause' 'PrintFileClause' '(";" <whitespace>? Expression ''value'')' '(";" <whitespace>? Expression ''value'')*' 'LineInputClause' 'ControlFlowStatement' 'Loops' 'DoLoop' 'InfinityLoop' 'WhileTrue' 'UntilTrue' 'DoWhileTrue' 'DoUntilTrue' 'WhileWend' 'ForLoop' 'ForEach' 'ForNext' 'ForNextOneLine' 'ForStepNext' 'If' 'IfThenElseOneLine' 'IfThenElse' '(ElseIf ''elseif'')' '(ElseIf ''elseif'')*' 'Else' 'ElseIf' 'RaiseError' 'To' 'Label' 'CaseCondition' 'Case' '("," <whitespace> (CaseCondition ''expression''))' '("," <whitespace> (CaseCondition ''expression''))*' 'Select' '(Case ''case'')' '(Case ''case'')+' 'Resume' 'ResumeLabel' 'ResumeNext' 'ResumeEmpty' 'Go' 'Destination' 'DestinationList' '(<whitespace>?"," <whitespace>?Destination ''label'')' '(<whitespace>?"," <whitespace>?Destination ''label'')*' 'GoToStatement' 'GoSub' 'On' 'OnErrorGoTo' 'OnErrorResumeNext' 'OnExpressionGo' 'Error' 'With' 'Exits' 'ExitFunction' 'ExitSub' 'ExitDo' 'ExitFor' 'ExitProperty' 'Return' 'StateAccessBase' 'DictionaryAccess' 'MemberAccess' 'StateAccess' 'ImplicitCallExpression' 'ImplicitParenthesesLessCall' 'ProcedureCallOrArrayExpression' 'ProcedureCallOrArrayAccess' 'Argument' 'ArgumentList' '(Argument ''argument'' ? ("," | ";" )  <whitespace>?)' '(Argument ''argument'' ? ("," | ";" )  <whitespace>?)*' '(("," | ";" ) <whitespace>? Argument ''argument'' ? )' '(("," | ";" ) <whitespace>? Argument ''argument'' ? )*' 'ExplicitCallSelectorTypes' 'ExplicitCall' 'RaiseEvent' 'TypeOf' 'StatementCalls' 'ExpressionCalls' 'E O F' 'error')
]

{ #category : #generated }
VBParser class >> symbolTypes [
	^ #(#SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #VBModuleNode #Object #VBModuleNode #OrderedCollection #OrderedCollection #OrderedCollection #VBProgramNode #VBFileDescriptorLiteralNode #VBIntegerLiteralNode #VBColorLiteralNode #VBDateLiteralNode #VBFloatLiteralNode #VBBooleanLiteralNode #VBStringLiteralNode #VBNullNode #VBGuidLiteralNode #OrderedCollection #VBProgramNode #VBProgramNode #SmaCCToken #SmaCCToken #VBHashIdentifierNode #VBSquareBracketIdentifierNode #VBSimpleIdentifierNode #VBLabelTagNode #VBHeaderNode #VBProgramNode #VBOptionBaseNode #VBSetUpAssignationNode #VBModuleAttributeNode #VBConfigurationNode #OrderedCollection #OrderedCollection #OrderedCollection #VBImplementsNode #SmaCCToken #VBDefTypeNode #VBProgramNode #Object #VBBlockNode #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #VBBlockNode #OrderedCollection #OrderedCollection #SmaCCToken #Object #SmaCCToken #VBComplexTypeNode #OrderedCollection #OrderedCollection #Object #VBTypedThingNode #VBAsTypeAndNewNode #VBTypeSizeNode #OrderedCollection #OrderedCollection #VBProgramNode #VBExplicitAssignementNode #SmaCCToken #VBExplicitAssignementNode #VBExplicitAssignementNode #Object #VBRenameNode #SmaCCToken #VBDoEventsNode #VBProgramNode #VBDefineTypeNode #OrderedCollection #OrderedCollection #VBTypeEntryNode #VBEventNode #VBDefineEnumNode #OrderedCollection #OrderedCollection #VBEnumEntryNode #Object #VBParameterListNode #OrderedCollection #OrderedCollection #VBParameterNode #VBProgramNode #VBProgramNode #OrderedCollection #OrderedCollection #VBExternalSubNode #VBExternalFunctionNode #VBProgramNode #SmaCCToken #VBFunctionDefinitionNode #OrderedCollection #OrderedCollection #VBSubDefinitionNode #VBModulePropertyGetNode #VBModulePropertyGetNode #VBModulePropertyGetNode #VBProgramNode #VBModulePropertyNode #VBModuleConstantNode #VBDimVariableNode #VBReDimVariableNode #VBReDimVariableNode #VBStaticVariableNode #VBVariableNode #VBConstantNode #VBModuleMultiplePropertiesNode #VBModuleMultipleConstantsNode #VBDimMultipleVariablesNode #VBReDimMultipleVariablesNode #VBStaticMultipleVariablesNode #VBVariableListNode #OrderedCollection #OrderedCollection #VBConstantListNode #OrderedCollection #OrderedCollection #VBProgramNode #VBProgramNode #VBParentheseesExpressionNode #VBIntervalNode #VBProgramNode #VBProgramNode #VBNegatedOperationNode #VBPositiveOperationNode #VBNotOperationNode #VBProgramNode #OrderedCollection #VBComparisonOperationNode #OrderedCollection #VBArithmeticOperationNode #OrderedCollection #VBArithmeticOperationNode #VBProgramNode #VBConcatenationOperationNode #VBEqualsNode #VBProgramNode #VBAddressOfClauseNode #VBNewClauseNode #SmaCCToken #SmaCCToken #SmaCCToken #VBProgramNode #VBOpenClauseNode #VBPrintIntoFileClauseNode #OrderedCollection #OrderedCollection #VBLineInputClauseNode #VBProgramNode #VBProgramNode #VBProgramNode #VBInfinityLoopNode #VBWhileTrueNode #VBUntilTrueNode #VBDoWhileTrueNode #VBDoUntilTrueNode #VBWhileWendNode #VBProgramNode #VBForEachNode #VBForNextNode #VBForNextNode #VBForStepNextNode #VBIfThenElseNode #VBIfThenElseNode #VBIfThenElseNode #VBElseIfBlockNode #OrderedCollection #VBElseIfBlockNode #VBElseIfBlockNode #VBRaiseErrorNode #VBLabelNode #VBLabelNode #VBProgramNode #VBCaseNode #OrderedCollection #OrderedCollection #VBSelectNode #VBCaseNode #OrderedCollection #VBProgramNode #VBResumeLabelNode #VBResumeNextNode #VBResumeEmptyNode #VBProgramNode #VBProgramNode #VBDestinationListNode #OrderedCollection #OrderedCollection #VBGoToStatementNode #VBGoSubNode #VBProgramNode #VBOnErrorGoToNode #VBOnErrorResumeNextNode #VBOnExpressionGoNode #VBErrorNode #VBWithNode #VBProgramNode #VBExitsNode #VBExitsNode #VBExitsNode #VBExitsNode #VBExitsNode #VBReturnNode #VBProgramNode #VBDictionaryAccessNode #VBMemberAccessNode #VBProgramNode #VBProgramNode #VBImplicitParenthesesLessCallNode #VBProgramNode #VBProcedureCallOrArrayAccessNode #VBArgumentNode #VBArgumentListNode #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #VBProgramNode #VBExplicitCallNode #VBRaiseEventNode #VBTypeOfNode #VBProgramNode #VBProgramNode #SmaCCToken #SmaCCErrorNode)
]

{ #category : #generated }
VBParser class >> transitionTable [
^#(
#[1 0 6 0 22 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 30 0 6 0 31 0 6 0 32 0 6 0 33 0 6 0 34 0 6 0 35 0 6 0 36 0 6 0 37 0 6 0 38 0 6 0 39 0 6 0 40 0 6 0 44 0 6 0 54 0 6 0 57 0 6 0 70 0 6 0 73 0 6 0 74 0 6 0 81 0 6 0 83 0 6 0 85 0 6 0 86 0 6 0 88 0 6 0 89 0 6 0 97 0 6 0 99 0 6 0 102 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 109 0 6 0 112 0 6 0 113 0 6 0 120 0 6 0 124 0 6 0 129 0 6 0 130 0 6 0 131 0 6 0 132 0 6 0 136 0 6 0 138 0 6 0 141 0 6 0 142 0 6 0 146 0 6 0 149 0 6 0 166 0 6 0 167 0 6 0 170 0 6 0 172 0 21 0 176 0 25 0 177 0 6 1 142] 
#[1 0 29 0 1 0 33 0 9 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 1 25 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 0 233 0 166 0 237 0 167 0 241 0 170 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 1 25 0 201 1 25 0 203 1 25 0 212 1 29 0 223 1 25 0 234 1 37 0 235 1 25 0 236 1 25 0 237 1 25 0 238 1 25 0 239 1 25 0 240 1 25 0 241 1 25 0 242 1 25 0 243 1 25 0 247 1 25 0 248 1 25 1 17 1 25 1 18 1 25 1 19 1 25 1 20 1 25 1 21 1 25 1 22 1 105 1 24 1 25 1 25 1 25 1 26 1 25 1 27 1 25 1 28 1 25 1 29 1 25 1 33 1 25 1 36 1 137 1 55 1 137 1 56 1 137 1 57 1 25 1 61 1 25 1 62 1 25 1 63 1 25 1 66 1 25 1 67 1 25 1 68 1 25 1 69 1 25 1 70 1 25 1 71 1 25 1 72 1 25 1 73 1 25 1 74 1 25 1 75 1 25 1 76 1 25 1 77 1 25 1 78 1 25 1 79 1 25 1 80 1 25 1 81 1 25 1 82 1 25 1 83 1 25 1 88 1 25 1 89 1 241 1 90 1 25 1 95 1 25 1 98 1 25 1 99 1 25 1 100 1 25 1 101 1 25 1 102 1 25 1 107 1 25 1 108 1 25 1 109 1 25 1 110 1 25 1 111 1 25 1 112 1 25 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 1 25 1 127 2 93 1 128 2 97 1 129 1 25 1 137 1 25 1 138 1 25 1 140] 
#[1 0 253 0 22 2 245 0 27 2 245 0 28 2 245 0 29 2 245 0 30 2 245 0 31 2 245 0 32 2 245 0 33 2 245 0 34 2 245 0 35 2 245 0 36 2 245 0 37 2 245 0 38 2 245 0 39 2 245 0 40 0 253 0 44 0 253 0 54 0 253 0 57 0 89 0 70 2 173 0 73 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 2 177 0 88 0 117 0 89 0 125 0 97 0 129 0 99 3 1 0 102 2 181 0 103 0 253 0 104 3 1 0 105 2 185 0 109 0 253 0 112 0 253 0 113 0 253 0 120 2 197 0 124 3 1 0 129 2 201 0 130 3 1 0 131 0 189 0 132 0 253 0 136 2 209 0 138 2 213 0 141 0 253 0 142 0 217 0 146 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 2 221 0 191 0 253 0 194 2 221 0 195 2 221 0 196 2 221 0 197 2 253 0 200 2 253 0 201 2 253 0 203 2 253 0 204 2 253 0 208 2 245 0 209 2 253 0 210 2 253 0 211 3 1 0 223 2 253 0 242 2 253 0 243 2 253 0 247 2 253 0 248 2 253 1 5 2 253 1 6 2 253 1 7 3 21 1 8 2 253 1 9 2 253 1 12 2 253 1 13 2 253 1 14 2 253 1 15 2 253 1 16 2 253 1 17 2 253 1 18 2 253 1 19 2 253 1 20 2 253 1 21 2 253 1 22 1 105 1 24 2 253 1 25 2 253 1 26 2 253 1 27 2 253 1 28 2 253 1 29 2 253 1 33 2 253 1 36] 
#[1 3 57 0 102 2 181 0 103 3 57 0 105 3 57 0 129 2 201 0 130 3 57 0 131 3 21 0 138 2 213 0 141 3 57 0 223 3 21 1 8 3 61 1 9 3 61 1 12 3 61 1 13 3 61 1 14 3 61 1 15 3 61 1 16] 
#[0 0 0 1 142] 
#[1 0 7 0 22 0 11 0 27 0 15 0 28 0 19 0 29 0 23 0 30 0 27 0 31 0 31 0 32 0 35 0 33 0 39 0 34 0 43 0 35 0 47 0 36 0 51 0 37 0 55 0 38 0 59 0 39 0 63 0 40 0 67 0 44 0 71 0 54 0 75 0 57 0 79 0 70 0 83 0 73 0 87 0 74 0 91 0 81 0 95 0 83 0 99 0 85 0 103 0 86 0 107 0 88 0 111 0 89 0 115 0 97 0 119 0 99 0 123 0 102 0 127 0 103 0 131 0 104 0 135 0 105 0 139 0 109 0 143 0 112 0 147 0 113 0 151 0 120 0 155 0 124 0 159 0 129 0 163 0 130 0 167 0 131 0 171 0 132 0 175 0 136 0 179 0 138 0 183 0 141 0 187 0 142 0 191 0 146 0 195 0 149 0 199 0 166 0 203 0 167 0 207 0 170 0 211 0 172 3 73 0 179 2 221 0 191 0 253 0 194 2 221 0 195 2 221 0 196 2 221 0 197 3 77 0 199 3 81 0 200 3 81 0 201 3 81 0 203 3 81 0 204 3 81 0 208 2 245 0 209 3 81 0 210 3 81 0 211 3 1 0 223 3 81 0 242 3 81 0 243 3 81 0 247 3 81 0 248 3 81 1 5 3 81 1 6 3 81 1 7 3 21 1 8 3 81 1 9 3 81 1 12 3 81 1 13 3 81 1 14 3 81 1 15 3 81 1 16 3 81 1 17 3 81 1 18 3 81 1 19 3 81 1 20 3 81 1 21 3 81 1 22 1 105 1 24 3 81 1 25 3 81 1 26 3 81 1 27 3 81 1 28 3 81 1 29 3 81 1 33 3 81 1 36 0 10 1 142] 
#[1 3 109 0 22 3 109 0 44 3 109 0 54 3 109 0 55 3 109 0 57 3 109 0 74 3 109 0 79 3 109 0 81 3 109 0 85 3 109 0 86 3 109 0 93 3 109 0 104 3 109 0 112 3 109 0 113 3 109 0 120 3 109 0 135 3 109 0 136 3 109 0 142 3 109 0 146 3 109 0 149 3 109 0 166 0 237 0 167 3 105 0 192 3 109 0 193 3 109 0 194 3 105 0 196] 
#[1 3 109 0 22 3 109 0 44 3 109 0 54 3 109 0 55 3 109 0 57 3 109 0 74 3 109 0 79 3 109 0 81 3 109 0 85 3 109 0 86 3 109 0 93 3 109 0 104 3 109 0 112 3 109 0 113 3 109 0 120 3 109 0 135 3 109 0 136 3 109 0 142 3 109 0 146 3 109 0 149 3 109 0 166 0 237 0 167 3 121 0 192 3 109 0 193 3 109 0 194 3 121 0 196] 
#[0 0 14 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 125 0 171] 
#[0 3 129 0 171] 
#[0 0 18 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 3 133 0 171] 
#[0 3 137 0 171] 
#[0 0 22 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 141 0 171] 
#[0 3 145 0 171] 
#[0 0 26 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 149 0 171] 
#[1 0 30 0 1 0 30 0 3 0 30 0 5 0 30 0 9 0 30 0 11 0 30 0 79 0 30 0 96 0 30 0 121 0 30 0 161 0 215 0 171 0 30 0 172 0 30 1 142] 
#[0 3 157 0 171] 
#[0 3 161 0 171] 
#[0 0 34 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 0 38 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 0 42 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 165 0 171] 
#[0 0 46 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 0 50 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 169 0 171] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 3 173 0 118 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 219 0 171 0 54 0 172 2 85 0 175 3 185 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 3 193 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 3 201 0 171] 
#[0 3 205 0 171] 
#[0 3 209 0 171] 
#[0 0 58 0 171] 
#[0 0 62 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 0 66 0 171] 
#[0 3 213 0 171] 
#[0 3 217 0 171] 
#[0 3 221 0 171] 
#[0 0 70 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 0 74 0 1 0 74 0 3 0 74 0 5 0 74 0 9 0 74 0 11 0 74 0 79 0 74 0 96 0 74 0 121 0 74 0 161 0 223 0 171 0 74 0 172 0 74 1 142] 
#[1 0 82 0 1 0 82 0 3 0 82 0 5 0 82 0 9 0 82 0 11 0 82 0 79 0 82 0 96 0 82 0 121 0 82 0 161 0 227 0 171 0 82 0 172 0 82 1 142] 
#[0 3 229 0 171] 
#[0 3 233 0 171] 
#[0 0 86 0 171] 
#[0 0 90 0 171] 
#[0 3 237 0 171] 
#[1 0 94 0 11 0 94 0 79 0 94 0 96 0 94 0 121 0 94 0 161 0 231 0 171 0 94 0 172 0 94 1 142] 
#[0 0 98 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 3 245 0 171] 
#[1 0 102 0 1 0 102 0 3 0 102 0 5 0 102 0 9 0 102 0 11 0 102 0 79 0 102 0 96 0 102 0 121 0 102 0 161 0 235 0 171 0 102 0 172 0 102 1 142] 
#[0 3 249 0 171] 
#[0 0 110 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 253 0 171] 
#[0 0 114 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 4 1 0 171] 
#[0 4 5 0 171] 
#[1 0 118 0 1 0 118 0 3 0 118 0 5 0 118 0 9 4 9 0 11 0 118 0 79 0 118 0 96 0 118 0 121 0 118 0 161 0 118 0 171 0 118 0 172 0 118 1 142] 
#[0 0 122 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 0 126 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 0 130 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 0 134 0 1 0 138 0 3 4 13 0 5 0 134 0 9 0 142 0 11 0 142 0 79 0 142 0 96 0 142 0 121 0 142 0 161 0 239 0 171 0 142 0 172 4 29 0 228 4 29 0 229 4 29 0 233 0 142 1 142] 
#[0 0 150 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 0 154 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 0 158 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 0 162 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 0 166 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 0 170 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 0 174 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 0 0 1 142] 
#[0 4 33 0 171] 
#[0 0 178 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 4 37 0 171] 
#[0 0 182 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 0 186 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 0 190 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 0 194 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 0 198 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 0 202 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 0 206 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 0 210 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 0 214 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 0 218 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 0 222 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 0 226 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 0 230 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 0 234 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 0 238 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 0 242 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 4 41 0 7 4 45 0 171 4 49 1 34 4 53 1 35] 
#[0 0 246 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 0 250 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 0 254 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 1 2 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 1 6 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 1 10 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 1 14 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 1 18 0 1 0 243 0 3 1 18 0 4 1 18 0 5 1 18 0 7 1 18 0 9 1 18 0 11 1 18 0 13 1 18 0 22 1 18 0 24 1 18 0 26 1 18 0 27 1 18 0 28 1 18 0 29 1 18 0 30 1 18 0 31 1 18 0 32 1 18 0 33 1 18 0 34 1 18 0 35 1 18 0 36 1 18 0 37 1 18 0 38 1 18 0 39 1 18 0 40 1 18 0 41 1 18 0 42 1 18 0 43 1 18 0 44 1 18 0 48 1 18 0 53 1 18 0 54 1 18 0 55 1 18 0 57 1 18 0 58 1 18 0 70 1 18 0 72 1 18 0 73 1 18 0 74 1 18 0 79 1 18 0 81 1 18 0 83 1 18 0 85 1 18 0 86 1 18 0 88 1 18 0 89 1 18 0 90 1 18 0 96 1 18 0 97 1 18 0 99 1 18 0 100 1 18 0 102 1 18 0 103 1 18 0 104 1 18 0 105 1 18 0 106 1 18 0 107 1 18 0 108 1 18 0 109 1 18 0 112 1 18 0 113 1 18 0 118 1 18 0 120 1 18 0 121 1 18 0 123 1 18 0 124 1 18 0 129 1 18 0 130 1 18 0 131 1 18 0 132 1 18 0 133 1 18 0 134 1 18 0 135 1 18 0 136 1 18 0 138 1 18 0 141 1 18 0 142 1 18 0 146 1 18 0 149 1 18 0 150 1 18 0 151 1 18 0 152 1 18 0 161 1 18 0 166 1 18 0 167 1 18 0 170 1 18 0 171 1 18 0 172 1 18 1 142] 
#[0 1 26 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 1 30 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 1 34 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 38 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 42 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 46 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 50 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 54 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 58 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 62 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 66 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 70 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 74 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 78 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 82 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 86 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 90 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 94 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 98 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 102 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 106 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 110 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 114 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 118 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 122 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 0 247 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 134 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 138 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 142 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 146 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 150 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 154 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 158 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 162 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 166 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 170 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 174 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 178 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 182 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 0 251 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 194 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 198 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 202 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 206 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 210 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 1 214 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 4 57 0 1 4 61 0 9 4 65 0 171] 
#[0 1 218 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 1 222 0 1 1 222 0 3 1 222 0 9 1 226 0 11 1 226 0 79 1 226 0 96 1 226 0 121 1 226 0 161 0 255 0 171 1 226 0 172 1 226 1 142] 
#[1 1 230 0 1 1 3 0 3 1 230 0 4 1 230 0 5 1 230 0 7 1 230 0 9 1 230 0 11 1 230 0 13 1 230 0 22 1 230 0 24 1 230 0 26 1 230 0 27 1 230 0 28 1 230 0 29 1 230 0 30 1 230 0 31 1 230 0 32 1 230 0 33 1 230 0 34 1 230 0 35 1 230 0 36 1 230 0 37 1 230 0 38 1 230 0 39 1 230 0 40 1 230 0 41 1 230 0 42 1 230 0 43 1 230 0 44 1 230 0 48 1 230 0 53 1 230 0 54 1 230 0 55 1 230 0 57 1 230 0 58 1 230 0 70 1 230 0 72 1 230 0 73 1 230 0 74 1 230 0 79 1 230 0 81 1 230 0 83 1 230 0 85 1 230 0 86 1 230 0 88 1 230 0 89 1 230 0 90 1 230 0 96 1 230 0 97 1 230 0 99 1 230 0 100 1 230 0 102 1 230 0 103 1 230 0 104 1 230 0 105 1 230 0 106 1 230 0 107 1 230 0 108 1 230 0 109 1 230 0 112 1 230 0 113 1 230 0 118 1 230 0 120 1 230 0 121 1 230 0 123 1 230 0 124 1 230 0 129 1 230 0 130 1 230 0 131 1 230 0 132 1 230 0 133 1 230 0 134 1 230 0 135 1 230 0 136 1 230 0 138 1 230 0 141 1 230 0 142 1 230 0 146 1 230 0 149 1 230 0 150 1 230 0 151 1 230 0 152 1 230 0 161 1 230 0 166 1 230 0 167 1 230 0 170 1 230 0 171 1 230 0 172 1 230 1 142] 
#[1 1 238 0 11 1 238 0 79 1 238 0 96 1 238 0 121 1 238 0 161 1 7 0 171 1 238 0 172 1 238 1 142] 
#[0 1 242 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 4 73 0 3] 
#[1 1 246 0 1 1 11 0 3 1 246 0 4 1 246 0 5 1 246 0 7 1 246 0 9 1 246 0 11 1 246 0 13 1 246 0 22 1 246 0 24 1 246 0 26 1 246 0 27 1 246 0 28 1 246 0 29 1 246 0 30 1 246 0 31 1 246 0 32 1 246 0 33 1 246 0 34 1 246 0 35 1 246 0 36 1 246 0 37 1 246 0 38 1 246 0 39 1 246 0 40 1 246 0 41 1 246 0 42 1 246 0 43 1 246 0 44 1 246 0 48 1 246 0 53 1 246 0 54 1 246 0 55 1 246 0 57 1 246 0 58 1 246 0 70 1 246 0 72 1 246 0 73 1 246 0 74 1 246 0 79 1 246 0 81 1 246 0 83 1 246 0 85 1 246 0 86 1 246 0 88 1 246 0 89 1 246 0 90 1 246 0 96 1 246 0 97 1 246 0 99 1 246 0 100 1 246 0 102 1 246 0 103 1 246 0 104 1 246 0 105 1 246 0 106 1 246 0 107 1 246 0 108 1 246 0 109 1 246 0 112 1 246 0 113 1 246 0 118 1 246 0 120 1 246 0 121 1 246 0 123 1 246 0 124 1 246 0 129 1 246 0 130 1 246 0 131 1 246 0 132 1 246 0 133 1 246 0 134 1 246 0 135 1 246 0 136 1 246 0 138 1 246 0 141 1 246 0 142 1 246 0 146 1 246 0 149 1 246 0 150 1 246 0 151 1 246 0 152 1 246 0 161 1 246 0 166 1 246 0 167 1 246 0 170 1 246 0 171 1 246 0 172 1 246 1 142] 
#[0 1 254 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 2 2 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 2 6 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 2 10 0 171] 
#[0 2 14 0 171] 
#[0 2 18 0 171] 
#[0 2 22 0 171] 
#[0 2 26 0 171] 
#[0 2 30 0 171] 
#[0 2 34 0 171] 
#[0 2 38 0 171] 
#[0 2 42 0 171] 
#[0 2 46 0 171] 
#[0 2 50 0 171] 
#[0 2 54 0 171] 
#[0 2 58 0 171] 
#[0 2 62 0 171] 
#[0 0 30 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 0 6 0 1 0 6 0 9 0 6 0 22 0 6 0 24 0 6 0 44 0 6 0 53 0 6 0 54 0 6 0 57 0 6 0 74 0 6 0 81 0 6 0 85 0 6 0 86 0 6 0 104 0 6 0 112 0 6 0 113 0 6 0 120 0 6 0 136 0 6 0 142 0 6 0 149 0 6 0 166 0 6 0 167 0 6 0 170 0 6 0 172 4 77 0 177] 
#[0 4 81 0 171] 
#[0 4 85 0 171] 
#[0 4 89 0 171] 
#[0 0 74 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 0 82 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 4 93 0 171] 
#[0 4 97 0 171] 
#[0 0 102 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 1 15 0 171] 
#[0 4 101 0 171] 
#[0 0 118 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 4 13 0 5 1 19 0 171 4 29 0 228 4 29 0 229 4 29 0 233] 
#[0 2 70 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 2 74 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 2 78 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 2 82 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 2 86 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 4 109 0 171] 
#[0 2 90 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 0 0 1 142] 
#[0 4 113 0 171] 
#[0 2 94 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 2 98 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 2 102 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 2 106 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 4 117 0 171] 
#[0 2 110 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 2 114 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 2 118 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 2 122 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 2 126 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 2 130 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 2 134 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 2 66 0 171] 
#[0 4 121 0 171] 
#[0 0 0 1 142] 
#[1 0 114 0 5 1 23 0 171] 
#[0 2 138 0 1 0 9 0 22 0 24 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 53 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[1 0 6 0 22 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 30 0 6 0 31 0 6 0 32 0 6 0 33 0 6 0 34 0 6 0 35 0 6 0 36 0 6 0 37 0 6 0 38 0 6 0 39 0 6 0 40 0 6 0 44 0 6 0 54 0 6 0 57 0 6 0 70 0 6 0 73 0 6 0 74 0 6 0 81 0 6 0 83 0 6 0 85 0 6 0 86 0 6 0 88 0 6 0 89 0 6 0 97 0 6 0 99 0 6 0 102 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 109 0 6 0 112 0 6 0 113 0 6 0 120 0 6 0 124 0 6 0 129 0 6 0 130 0 6 0 131 0 6 0 132 0 6 0 136 0 6 0 138 0 6 0 141 0 6 0 142 0 6 0 146 0 6 0 149 0 6 0 166 0 6 0 167 0 6 0 170 0 6 0 172 4 129 0 177 4 133 0 178 0 6 1 142] 
#[1 0 6 0 22 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 30 0 6 0 31 0 6 0 32 0 6 0 33 0 6 0 34 0 6 0 35 0 6 0 36 0 6 0 37 0 6 0 38 0 6 0 39 0 6 0 40 0 6 0 44 0 6 0 54 0 6 0 57 0 6 0 70 0 6 0 73 0 6 0 74 0 6 0 81 0 6 0 83 0 6 0 85 0 6 0 86 0 6 0 88 0 6 0 89 0 6 0 97 0 6 0 99 0 6 0 102 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 109 0 6 0 112 0 6 0 113 0 6 0 120 0 6 0 124 0 6 0 129 0 6 0 130 0 6 0 131 0 6 0 132 0 6 0 136 0 6 0 138 0 6 0 141 0 6 0 142 0 6 0 146 0 6 0 149 0 6 0 166 0 6 0 167 0 6 0 170 0 6 0 172 4 137 0 177 0 6 1 142] 
#[1 0 10 0 22 0 10 0 27 0 10 0 28 0 10 0 29 0 10 0 30 0 10 0 31 0 10 0 32 0 10 0 33 0 10 0 34 0 10 0 35 0 10 0 36 0 10 0 37 0 10 0 38 0 10 0 39 0 10 0 40 0 10 0 44 0 10 0 54 0 10 0 57 0 10 0 70 0 10 0 73 0 10 0 74 0 10 0 81 0 10 0 83 0 10 0 85 0 10 0 86 0 10 0 88 0 10 0 89 0 10 0 97 0 10 0 99 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 109 0 10 0 112 0 10 0 113 0 10 0 120 0 10 0 124 0 10 0 129 0 10 0 130 0 10 0 131 0 10 0 132 0 10 0 136 0 10 0 138 0 10 0 141 0 10 0 142 0 10 0 146 0 10 0 149 0 10 0 166 0 10 0 167 0 10 0 170 0 10 0 172 4 141 0 179 0 10 1 142] 
#[0 2 142 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 2 146 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 2 150 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 2 154 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 2 158 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 2 162 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 2 166 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 2 170 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 2 174 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 2 178 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 4 145 0 191 0 253 0 194 4 145 0 195 4 145 0 196 4 145 0 197] 
#[1 0 29 0 1 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 4 169 0 175 4 153 0 191 0 253 0 194 4 153 0 195 4 153 0 196 4 153 0 197 1 137 1 55 1 137 1 56 1 137 1 57 4 157 1 122 2 81 1 123 4 161 1 124 2 81 1 125 2 93 1 128 4 165 1 129 4 169 1 136] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 5 13 0 180 5 13 0 181 5 13 0 182 5 13 0 183 5 13 0 184 5 13 0 185 5 13 0 186 4 253 0 187 5 13 0 188 5 13 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 5 13 1 37 5 13 1 38 5 13 1 39 5 13 1 40 5 13 1 41 5 13 1 42 5 13 1 43 5 13 1 44 5 13 1 45 5 13 1 47 5 13 1 49 5 13 1 51 5 61 1 52 5 65 1 53 5 13 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 5 13 1 139 5 13 1 141] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 5 97 0 92 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 5 101 0 191 0 253 0 194 5 101 0 195 5 101 0 196 5 101 0 197] 
#[0 5 105 0 44] 
#[1 2 182 0 1 2 182 0 3 2 182 0 4 2 182 0 5 2 182 0 7 2 182 0 9 2 182 0 11 2 182 0 13 1 27 0 22 2 182 0 24 2 182 0 26 2 182 0 27 2 182 0 28 2 182 0 29 2 182 0 30 2 182 0 31 2 182 0 32 2 182 0 33 2 182 0 34 2 182 0 35 2 182 0 36 2 182 0 37 2 182 0 38 2 182 0 39 2 182 0 40 2 182 0 41 2 182 0 42 2 182 0 43 1 31 0 44 2 182 0 48 2 182 0 53 1 35 0 54 2 182 0 55 1 39 0 57 2 182 0 58 2 182 0 70 2 182 0 72 2 182 0 73 1 43 0 74 5 185 0 75 5 185 0 77 2 182 0 79 1 47 0 81 2 182 0 83 5 185 0 84 1 51 0 85 1 55 0 86 5 185 0 87 2 182 0 88 2 182 0 89 2 182 0 90 5 185 0 91 2 182 0 96 2 182 0 97 2 182 0 99 2 182 0 100 2 182 0 102 2 182 0 103 1 59 0 104 2 182 0 105 2 182 0 106 2 182 0 107 2 182 0 108 2 182 0 109 5 185 0 111 1 63 0 112 1 67 0 113 5 185 0 115 5 185 0 116 5 185 0 117 2 182 0 118 1 71 0 120 2 182 0 121 2 182 0 123 2 182 0 124 2 182 0 129 2 182 0 130 2 182 0 131 2 182 0 132 2 182 0 133 2 182 0 134 2 182 0 135 1 75 0 136 5 185 0 137 2 182 0 138 5 185 0 140 2 182 0 141 1 79 0 142 2 182 0 146 5 165 0 148 1 83 0 149 2 182 0 150 2 182 0 151 2 182 0 152 2 182 0 161 1 87 0 166 1 91 0 167 1 95 0 170 2 182 0 171 2 182 0 172 5 169 0 191 0 253 0 194 5 169 0 195 5 169 0 196 5 169 0 197 5 185 0 222 5 185 0 224 5 181 0 226 5 185 0 227 2 182 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 5 189 0 180 5 189 0 181 5 189 0 182 5 189 0 183 5 189 0 184 5 189 0 185 5 189 0 186 4 253 0 187 5 189 0 188 5 189 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 5 189 1 37 5 189 1 38 5 189 1 39 5 189 1 40 5 189 1 41 5 189 1 42 5 189 1 43 5 189 1 44 5 189 1 45 5 189 1 47 5 189 1 49 5 189 1 51 5 61 1 52 5 65 1 53 5 189 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 5 189 1 139 5 189 1 141] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 5 193 0 191 0 253 0 194 5 193 0 195 5 193 0 196 5 193 0 197] 
#[1 0 29 0 1 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 5 197 0 191 0 253 0 194 5 197 0 195 5 197 0 196 5 197 0 197 1 137 1 55 1 137 1 56 1 137 1 57 4 157 1 122 2 81 1 123 2 81 1 124 2 81 1 125 2 93 1 128 5 205 1 129] 
#[1 0 29 0 1 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 5 209 0 191 0 253 0 194 5 209 0 195 5 209 0 196 5 209 0 197 5 213 0 202 1 137 1 55 1 137 1 56 1 137 1 57 4 157 1 122 2 81 1 123 5 217 1 124 2 81 1 125 2 93 1 128 2 97 1 129] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 2 221 0 191 0 253 0 194 2 221 0 195 2 221 0 196 2 221 0 197 5 221 1 24 5 225 1 33] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 5 229 0 63 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 5 233 0 191 0 253 0 194 5 233 0 195 5 233 0 196 5 233 0 197 5 237 1 23 5 241 1 30] 
#[1 2 186 0 11 2 186 0 79 2 186 0 96 2 186 0 121 2 186 0 161 1 99 0 171 2 186 0 172 2 186 1 142] 
#[0 2 190 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 5 249 0 147 5 253 0 151] 
#[0 6 1 0 171] 
#[1 0 54 0 11 0 54 0 171 0 54 0 172 6 5 0 215] 
#[1 6 9 0 118 3 177 0 161 6 13 0 182] 
#[1 6 17 0 11 6 21 0 171 6 25 0 172 6 29 0 207 6 33 0 214 6 37 0 216 6 41 0 217] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 6 45 0 191 0 253 0 194 6 45 0 195 6 45 0 196 6 45 0 197] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 6 49 0 191 0 253 0 194 6 49 0 195 6 49 0 196 6 49 0 197] 
#[1 6 53 0 43 6 57 0 90 6 61 0 103 6 65 0 130 6 69 0 141] 
#[1 4 181 0 8 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 3 177 0 161 0 253 0 166 0 237 0 167 0 241 0 170 6 85 0 182 6 85 0 191 0 253 0 194 6 85 0 195 6 85 0 196 6 85 0 197 6 85 1 42 6 85 1 103 6 89 1 104] 
#[1 4 181 0 8 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 3 177 0 161 0 253 0 166 0 237 0 167 0 241 0 170 6 85 0 182 6 85 0 191 0 253 0 194 6 85 0 195 6 85 0 196 6 85 0 197 6 85 1 42 6 85 1 103 6 93 1 104] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 6 97 0 180 6 97 0 181 6 97 0 182 6 97 0 183 6 97 0 184 6 97 0 185 6 97 0 186 4 253 0 187 6 97 0 188 6 97 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 6 97 1 37 6 97 1 38 6 97 1 39 6 97 1 40 6 97 1 41 6 97 1 42 6 97 1 43 6 97 1 44 6 97 1 45 6 97 1 47 6 97 1 49 6 97 1 51 5 61 1 52 5 65 1 53 6 97 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 6 97 1 139 6 97 1 141] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 6 101 0 180 6 101 0 181 6 101 0 182 6 101 0 183 6 101 0 184 6 101 0 185 6 101 0 186 4 253 0 187 6 101 0 188 6 101 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 6 101 1 37 6 101 1 38 6 101 1 39 6 101 1 40 6 101 1 41 6 101 1 42 6 101 1 43 6 101 1 44 6 101 1 45 6 101 1 47 6 101 1 49 6 101 1 51 5 61 1 52 5 65 1 53 6 101 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 6 101 1 139 6 101 1 141] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 6 105 0 42 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 6 109 0 180 6 109 0 181 6 109 0 182 6 109 0 183 6 109 0 184 6 109 0 185 6 109 0 186 4 253 0 187 6 109 0 188 6 109 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 6 109 1 37 6 109 1 38 6 109 1 39 6 109 1 40 6 109 1 41 6 109 1 42 6 109 1 43 6 109 1 44 6 109 1 45 6 109 1 47 6 109 1 49 6 109 1 51 5 61 1 52 5 65 1 53 6 109 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 6 109 1 139 6 109 1 141] 
#[0 6 113 0 71] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 5 229 0 63 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 6 117 0 128 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 6 133 0 180 6 133 0 181 6 133 0 182 6 133 0 183 6 133 0 184 6 133 0 185 6 133 0 186 4 253 0 187 6 133 0 188 6 133 0 189 6 121 0 191 0 253 0 194 6 121 0 195 6 121 0 196 6 121 0 197 6 125 1 23 6 129 1 30 6 133 1 37 6 133 1 38 6 133 1 39 6 133 1 40 6 133 1 41 6 133 1 42 6 133 1 43 6 133 1 44 6 133 1 45 6 133 1 47 6 133 1 49 6 133 1 51 5 61 1 52 5 65 1 53 6 133 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 6 133 1 139 6 133 1 141] 
#[1 4 181 0 8 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 6 137 0 121 0 253 0 136 0 253 0 142 0 253 0 149 3 177 0 161 0 253 0 166 0 237 0 167 0 241 0 170 6 85 0 182 6 85 0 191 0 253 0 194 6 85 0 195 6 85 0 196 6 85 0 197 6 85 1 42 6 85 1 103 6 141 1 104] 
#[0 6 145 0 79] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 5 229 0 63 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 5 233 0 191 0 253 0 194 5 233 0 195 5 233 0 196 5 233 0 197 6 149 1 23 6 153 1 30] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 6 157 0 191 0 253 0 194 6 157 0 195 6 157 0 196 6 157 0 197] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 6 161 0 180 6 161 0 181 6 161 0 182 6 161 0 183 6 161 0 184 6 161 0 185 6 161 0 186 4 253 0 187 6 161 0 188 6 161 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 6 161 1 37 6 161 1 38 6 161 1 39 6 161 1 40 6 161 1 41 6 161 1 42 6 161 1 43 6 161 1 44 6 161 1 45 6 161 1 47 6 161 1 49 6 161 1 51 5 61 1 52 5 65 1 53 6 161 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 6 161 1 139 6 161 1 141] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 6 165 0 180 6 165 0 181 6 165 0 182 6 165 0 183 6 165 0 184 6 165 0 185 6 165 0 186 4 253 0 187 6 165 0 188 6 165 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 6 165 1 37 6 165 1 38 6 165 1 39 6 165 1 40 6 165 1 41 6 165 1 42 6 165 1 43 6 165 1 44 6 165 1 45 6 165 1 47 6 165 1 49 6 165 1 51 5 61 1 52 5 65 1 53 6 165 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 6 165 1 139 6 165 1 141] 
#[0 2 194 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 6 169 0 171 6 173 0 180 6 173 0 181 6 173 0 182 6 173 0 183 6 173 0 184 6 173 0 185 6 173 0 186 4 253 0 187 6 173 0 188 6 173 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 6 173 1 37 6 173 1 38 6 173 1 39 6 173 1 40 6 173 1 41 6 173 1 42 6 173 1 43 6 173 1 44 6 173 1 45 6 173 1 47 6 173 1 49 6 173 1 51 5 61 1 52 5 65 1 53 6 173 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 6 173 1 139 6 173 1 141] 
#[1 6 177 0 5 6 181 0 12 6 185 0 18 6 189 0 23] 
#[0 2 198 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 2 202 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 6 193 0 171] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 5 229 0 63 0 253 0 74 0 253 0 81 6 197 0 83 0 253 0 85 0 253 0 86 6 201 0 97 6 205 0 99 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 6 209 0 146 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 5 233 0 191 0 253 0 194 5 233 0 195 5 233 0 196 5 233 0 197 6 213 1 23 6 217 1 30] 
#[1 0 29 0 1 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 6 221 0 191 0 253 0 194 6 221 0 195 6 221 0 196 6 221 0 197 1 137 1 55 1 137 1 56 1 137 1 57 6 225 1 122 2 81 1 123 2 81 1 124 2 81 1 125 2 93 1 128 2 97 1 129] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 6 229 0 171 2 221 0 191 0 253 0 194 2 221 0 195 2 221 0 196 2 221 0 197 6 233 1 24] 
#[0 6 237 0 7] 
#[0 2 206 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 4 41 0 7 2 210 0 11 2 210 0 22 2 210 0 27 2 210 0 28 2 210 0 29 2 210 0 30 2 210 0 31 2 210 0 32 2 210 0 33 2 210 0 34 2 210 0 35 2 210 0 36 2 210 0 37 2 210 0 38 2 210 0 39 2 210 0 40 2 210 0 44 2 210 0 54 2 210 0 57 2 210 0 70 2 210 0 73 2 210 0 74 2 210 0 79 2 210 0 81 2 210 0 83 2 210 0 85 2 210 0 86 2 210 0 88 2 210 0 89 2 210 0 96 2 210 0 97 2 210 0 99 2 210 0 102 2 210 0 103 2 210 0 104 2 210 0 105 2 210 0 109 2 210 0 112 2 210 0 113 2 210 0 120 2 210 0 121 2 210 0 124 2 210 0 129 2 210 0 130 2 210 0 131 2 210 0 132 2 210 0 136 2 210 0 138 2 210 0 141 2 210 0 142 2 210 0 146 2 210 0 149 2 210 0 161 2 210 0 166 2 210 0 167 2 210 0 170 1 103 0 171 2 210 0 172 6 241 1 34 2 210 1 142] 
#[1 3 109 0 22 3 109 0 44 3 109 0 54 3 109 0 55 3 109 0 57 3 109 0 74 3 109 0 79 3 109 0 81 3 109 0 85 3 109 0 86 3 109 0 93 3 109 0 104 3 109 0 112 3 109 0 113 3 109 0 120 3 109 0 135 3 109 0 136 3 109 0 142 3 109 0 146 3 109 0 149 3 109 0 166 0 237 0 167 6 245 0 192 3 109 0 193 3 109 0 194 6 245 0 196] 
#[1 3 109 0 22 3 109 0 44 3 109 0 54 3 109 0 55 3 109 0 57 3 109 0 74 3 109 0 79 3 109 0 81 3 109 0 85 3 109 0 86 3 109 0 93 3 109 0 104 3 109 0 112 3 109 0 113 3 109 0 120 3 109 0 135 3 109 0 136 3 109 0 142 3 109 0 146 3 109 0 149 3 109 0 166 0 237 0 167 6 249 0 192 3 109 0 193 3 109 0 194 6 249 0 196] 
#[1 6 253 0 12 7 1 0 18] 
#[1 2 214 0 1 2 214 0 3 2 214 0 6 2 214 0 7 2 214 0 8 2 214 0 9 2 214 0 11 2 214 0 13 2 214 0 22 2 214 0 24 2 214 0 44 2 214 0 53 2 214 0 54 2 214 0 57 2 214 0 62 2 214 0 74 2 214 0 76 2 214 0 78 2 214 0 79 2 214 0 81 2 214 0 85 2 214 0 86 2 214 0 96 2 214 0 104 2 214 0 112 2 214 0 113 2 214 0 120 2 214 0 121 2 214 0 122 2 214 0 127 2 214 0 136 2 214 0 142 2 214 0 149 2 214 0 154 2 214 0 159 2 214 0 160 2 214 0 161 2 214 0 162 2 214 0 163 2 214 0 164 2 214 0 165 2 214 0 166 2 214 0 167 2 214 0 169 2 214 0 170 2 214 0 171 2 214 0 172 7 5 1 131 7 9 1 133 2 214 1 142] 
#[1 2 214 0 1 2 214 0 3 2 214 0 4 2 214 0 6 2 214 0 7 2 214 0 8 2 214 0 9 2 214 0 13 2 214 0 22 2 214 0 24 2 214 0 44 2 214 0 53 2 214 0 54 2 214 0 57 2 214 0 62 2 214 0 74 2 214 0 76 2 214 0 78 2 214 0 81 2 214 0 85 2 214 0 86 2 214 0 104 2 214 0 112 2 214 0 113 2 214 0 120 2 214 0 122 2 214 0 127 2 214 0 136 2 214 0 142 2 214 0 149 2 214 0 154 2 214 0 159 2 214 0 160 2 214 0 161 2 214 0 162 2 214 0 163 2 214 0 164 2 214 0 165 2 214 0 166 2 214 0 167 2 214 0 169 2 214 0 170 2 214 0 171 7 13 1 131 7 9 1 133] 
#[1 0 29 0 1 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 3 69 0 172 5 209 0 191 0 253 0 194 5 209 0 195 5 209 0 196 5 209 0 197 7 17 0 202 1 137 1 55 1 137 1 56 1 137 1 57 4 157 1 122 2 81 1 123 5 217 1 124 2 81 1 125 2 93 1 128 2 97 1 129] 
#[1 7 21 0 103 7 25 0 141] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 7 29 0 191 0 253 0 194 7 29 0 195 7 29 0 196 7 29 0 197] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 7 33 0 191 0 253 0 194 7 33 0 195 7 33 0 196 7 33 0 197] 
#[1 6 113 0 71 7 37 0 82 7 41 0 101 7 45 0 129 3 177 0 161 7 49 0 182] 
#[1 7 53 0 104 7 57 0 113 7 61 0 136] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 7 65 0 191 0 253 0 194 7 65 0 195 7 65 0 196 7 65 0 197] 
#[1 6 177 0 5 7 69 0 18 6 189 0 23] 
#[0 7 73 0 168] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 5 229 0 63 0 253 0 74 0 253 0 81 6 197 0 83 0 253 0 85 0 253 0 86 7 77 0 88 6 201 0 97 6 205 0 99 7 81 0 103 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 7 85 0 130 0 253 0 136 7 93 0 138 7 89 0 141 0 253 0 142 6 209 0 146 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 5 233 0 191 0 253 0 194 5 233 0 195 5 233 0 196 5 233 0 197 7 93 1 8 6 213 1 23 6 217 1 30] 
#[1 7 97 0 103 7 101 0 130 7 105 0 141] 
#[1 7 81 0 103 7 85 0 130 7 93 0 138 7 89 0 141 7 93 1 8] 
#[1 4 205 0 162 7 109 0 185] 
#[1 0 253 0 22 2 245 0 27 2 245 0 28 2 245 0 29 2 245 0 30 2 245 0 31 2 245 0 32 2 245 0 33 2 245 0 34 2 245 0 35 2 245 0 36 2 245 0 37 2 245 0 38 2 245 0 39 2 245 0 40 0 253 0 44 0 253 0 54 0 253 0 57 0 89 0 70 2 173 0 73 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 2 177 0 88 0 117 0 89 0 125 0 97 0 129 0 99 3 1 0 102 2 181 0 103 0 253 0 104 3 1 0 105 2 185 0 109 0 253 0 112 0 253 0 113 0 253 0 120 2 197 0 124 3 1 0 129 2 201 0 130 3 1 0 131 0 189 0 132 0 253 0 136 2 209 0 138 2 213 0 141 0 253 0 142 0 217 0 146 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 3 69 0 172 2 221 0 191 0 253 0 194 2 221 0 195 2 221 0 196 2 221 0 197 7 113 0 200 7 113 0 201 7 113 0 203 7 113 0 204 7 113 0 208 2 245 0 209 7 113 0 210 7 113 0 211 3 1 0 223 7 113 0 242 7 113 0 243 7 113 0 247 7 113 0 248 7 113 1 5 7 113 1 6 7 113 1 7 3 21 1 8 7 113 1 9 7 113 1 12 7 113 1 13 7 113 1 14 7 113 1 15 7 113 1 16 7 113 1 17 7 113 1 18 7 113 1 19 7 113 1 20 7 113 1 21 7 113 1 22 1 105 1 24 7 113 1 25 7 113 1 26 7 113 1 27 7 113 1 28 7 113 1 29 7 113 1 33 7 113 1 36 2 218 1 142] 
#[0 2 222 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[1 0 7 0 22 0 11 0 27 0 15 0 28 0 19 0 29 0 23 0 30 0 27 0 31 0 31 0 32 0 35 0 33 0 39 0 34 0 43 0 35 0 47 0 36 0 51 0 37 0 55 0 38 0 59 0 39 0 63 0 40 0 67 0 44 0 71 0 54 0 75 0 57 0 79 0 70 0 83 0 73 0 87 0 74 0 91 0 81 0 95 0 83 0 99 0 85 0 103 0 86 0 107 0 88 0 111 0 89 0 115 0 97 0 119 0 99 0 123 0 102 0 127 0 103 0 131 0 104 0 135 0 105 0 139 0 109 0 143 0 112 0 147 0 113 0 151 0 120 0 155 0 124 0 159 0 129 0 163 0 130 0 167 0 131 0 171 0 132 0 175 0 136 0 179 0 138 0 183 0 141 0 187 0 142 0 191 0 146 1 107 0 149 0 199 0 166 0 203 0 167 0 207 0 170 0 211 0 172 7 117 0 179 2 221 0 191 0 253 0 194 2 221 0 195 2 221 0 196 2 221 0 197 7 121 0 200 7 121 0 201 7 121 0 203 7 121 0 204 7 121 0 208 2 245 0 209 7 121 0 210 7 121 0 211 3 1 0 223 7 121 0 242 7 121 0 243 7 121 0 247 7 121 0 248 7 121 1 5 7 121 1 6 7 121 1 7 3 21 1 8 7 121 1 9 7 121 1 12 7 121 1 13 7 121 1 14 7 121 1 15 7 121 1 16 7 121 1 17 7 121 1 18 7 121 1 19 7 121 1 20 7 121 1 21 7 121 1 22 1 105 1 24 7 121 1 25 7 121 1 26 7 121 1 27 7 121 1 28 7 121 1 29 7 121 1 33 7 121 1 36 0 10 1 142] 
#[1 0 6 0 22 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 30 0 6 0 31 0 6 0 32 0 6 0 33 0 6 0 34 0 6 0 35 0 6 0 36 0 6 0 37 0 6 0 38 0 6 0 39 0 6 0 40 0 6 0 44 0 6 0 54 0 6 0 57 0 6 0 70 0 6 0 73 0 6 0 74 0 6 0 81 0 6 0 83 0 6 0 85 0 6 0 86 0 6 0 88 0 6 0 89 0 6 0 97 0 6 0 99 0 6 0 102 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 109 0 6 0 112 0 6 0 113 0 6 0 120 0 6 0 124 0 6 0 129 0 6 0 130 0 6 0 131 0 6 0 132 0 6 0 136 0 6 0 138 0 6 0 141 0 6 0 142 0 6 0 146 0 6 0 149 0 6 0 166 0 6 0 167 0 6 0 170 0 6 0 172 7 125 0 177 4 133 0 178 0 6 1 142] 
#[0 2 226 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 2 230 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 0 134 0 1 0 138 0 3 0 134 0 9 2 234 0 11 2 234 0 79 2 234 0 96 2 234 0 121 2 234 0 161 2 234 0 171 2 234 0 172 2 234 1 142] 
#[1 4 57 0 1 4 61 0 9] 
#[1 1 222 0 1 1 222 0 3 1 222 0 9 2 238 0 11 2 238 0 79 2 238 0 96 2 238 0 121 2 238 0 161 2 238 0 171 2 238 0 172 2 238 1 142] 
#[1 1 246 0 1 1 250 0 3 1 246 0 9 2 242 0 11 2 242 0 79 2 242 0 96 2 242 0 121 2 242 0 161 2 242 0 171 2 242 0 172 2 242 1 142] 
#[0 2 246 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 7 129 0 171 7 133 0 180 7 133 0 181 7 133 0 182 7 133 0 183 7 133 0 184 7 133 0 185 7 133 0 186 4 253 0 187 7 133 0 188 7 133 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 7 133 1 37 7 133 1 38 7 133 1 39 7 133 1 40 7 133 1 41 7 133 1 42 7 133 1 43 7 133 1 44 7 133 1 45 7 133 1 47 7 133 1 49 7 133 1 51 5 61 1 52 5 65 1 53 7 133 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 7 133 1 139 7 133 1 141] 
#[0 7 137 0 171] 
#[1 0 29 0 1 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 3 177 0 161 4 205 0 162 0 253 0 166 0 237 0 167 0 241 0 170 7 141 0 182 7 145 0 185 7 149 0 191 0 253 0 194 7 149 0 195 7 149 0 196 7 149 0 197 1 137 1 55 1 137 1 56 1 137 1 57 7 153 1 122 2 81 1 123 2 81 1 124 2 81 1 125 2 93 1 128 2 97 1 129] 
#[0 7 157 0 171] 
#[0 7 161 0 171] 
#[1 7 165 0 158 7 169 0 190] 
#[0 2 250 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 2 254 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 2 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 80 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 6 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 10 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 68 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 14 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 18 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 22 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 26 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 30 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 34 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 38 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 42 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 46 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 3 50 0 1 3 50 0 3 3 50 0 4 3 50 0 5 3 50 0 7 3 50 0 9 3 50 0 11 3 50 0 13 3 50 0 22 3 50 0 24 3 50 0 26 3 50 0 27 3 50 0 28 3 50 0 29 3 50 0 30 3 50 0 31 3 50 0 32 3 50 0 33 3 50 0 34 3 50 0 35 3 50 0 36 3 50 0 37 3 50 0 38 3 50 0 39 3 50 0 40 3 50 0 41 3 50 0 42 3 50 0 43 3 50 0 44 3 50 0 48 3 50 0 53 3 50 0 54 3 50 0 55 3 50 0 57 3 50 0 58 3 50 0 70 3 50 0 72 3 50 0 73 3 50 0 74 3 50 0 79 3 50 0 81 3 50 0 83 3 50 0 85 3 50 0 86 3 50 0 88 3 50 0 89 3 50 0 90 3 50 0 96 3 50 0 97 3 50 0 99 3 50 0 100 3 50 0 102 3 50 0 103 3 50 0 104 3 50 0 105 3 50 0 106 3 50 0 107 3 50 0 108 3 50 0 109 3 50 0 112 3 50 0 113 3 50 0 118 3 50 0 120 3 50 0 121 3 50 0 123 3 50 0 124 3 50 0 129 3 50 0 130 3 50 0 131 3 50 0 132 3 50 0 133 3 50 0 134 3 50 0 135 3 50 0 136 3 50 0 138 3 50 0 141 3 50 0 142 3 50 0 146 3 50 0 149 3 50 0 150 3 50 0 151 3 50 0 152 3 50 0 161 3 50 0 166 3 50 0 167 3 50 0 170 1 111 0 171 3 50 0 172 3 50 1 142] 
#[0 3 58 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 62 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 1 115 0 1 1 119 0 3 3 66 0 4 3 66 0 5 3 66 0 7 1 115 0 9 3 66 0 11 3 66 0 13 3 66 0 22 3 66 0 24 3 66 0 26 3 66 0 27 3 66 0 28 3 66 0 29 3 66 0 30 3 66 0 31 3 66 0 32 3 66 0 33 3 66 0 34 3 66 0 35 3 66 0 36 3 66 0 37 3 66 0 38 3 66 0 39 3 66 0 40 3 66 0 41 3 66 0 42 3 66 0 43 3 66 0 44 3 66 0 48 3 66 0 53 3 66 0 54 3 66 0 55 3 66 0 57 3 66 0 58 3 66 0 70 3 66 0 72 3 66 0 73 3 66 0 74 3 66 0 79 3 66 0 81 3 66 0 83 3 66 0 85 3 66 0 86 3 66 0 88 3 66 0 89 3 66 0 90 3 66 0 96 3 66 0 97 3 66 0 99 3 66 0 100 3 66 0 102 3 66 0 103 3 66 0 104 3 66 0 105 3 66 0 106 3 66 0 107 3 66 0 108 3 66 0 109 3 66 0 112 3 66 0 113 3 66 0 118 3 66 0 120 3 66 0 121 3 66 0 123 3 66 0 124 3 66 0 129 3 66 0 130 3 66 0 131 3 66 0 132 3 66 0 133 3 66 0 134 3 66 0 135 3 66 0 136 3 66 0 138 3 66 0 141 3 66 0 142 3 66 0 146 3 66 0 149 3 66 0 150 3 66 0 151 3 66 0 152 3 66 0 161 3 66 0 166 3 66 0 167 3 66 0 170 1 123 0 171 3 66 0 172 3 66 1 142] 
#[1 3 74 0 11 3 74 0 79 3 74 0 96 3 74 0 121 3 74 0 161 1 127 0 171 3 74 0 172 3 74 1 142] 
#[0 3 78 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 82 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 86 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 90 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 94 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 98 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 102 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 106 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 110 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 114 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 118 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 7 181 0 171] 
#[1 3 122 0 1 3 122 0 3 3 122 0 4 3 122 0 5 3 122 0 7 3 122 0 9 3 122 0 11 3 122 0 13 3 122 0 22 3 122 0 24 3 122 0 26 3 122 0 27 3 122 0 28 3 122 0 29 3 122 0 30 3 122 0 31 3 122 0 32 3 122 0 33 3 122 0 34 3 122 0 35 3 122 0 36 3 122 0 37 3 122 0 38 3 122 0 39 3 122 0 40 3 122 0 41 3 122 0 42 3 122 0 43 3 122 0 44 3 122 0 48 3 122 0 53 3 122 0 54 3 122 0 55 3 122 0 57 3 122 0 58 3 122 0 70 3 122 0 72 3 122 0 73 3 122 0 74 3 122 0 79 3 122 0 81 3 122 0 83 3 122 0 85 3 122 0 86 3 122 0 88 3 122 0 89 3 122 0 90 3 122 0 96 3 122 0 97 3 122 0 99 3 122 0 100 3 122 0 102 3 122 0 103 3 122 0 104 3 122 0 105 3 122 0 106 3 122 0 107 3 122 0 108 3 122 0 109 3 122 0 112 3 122 0 113 3 122 0 118 3 122 0 120 3 122 0 121 3 122 0 123 3 122 0 124 3 122 0 129 3 122 0 130 3 122 0 131 3 122 0 132 3 122 0 133 3 122 0 134 3 122 0 135 3 122 0 136 3 122 0 138 3 122 0 141 3 122 0 142 3 122 0 146 3 122 0 149 3 122 0 150 3 122 0 151 3 122 0 152 3 122 0 161 3 122 0 166 3 122 0 167 3 122 0 170 1 131 0 171 3 122 0 172 3 122 1 142] 
#[0 3 130 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 1 135 0 1 1 139 0 3 3 134 0 4 3 134 0 5 3 134 0 7 1 135 0 9 3 134 0 11 3 134 0 13 3 134 0 22 3 134 0 24 3 134 0 26 3 134 0 27 3 134 0 28 3 134 0 29 3 134 0 30 3 134 0 31 3 134 0 32 3 134 0 33 3 134 0 34 3 134 0 35 3 134 0 36 3 134 0 37 3 134 0 38 3 134 0 39 3 134 0 40 3 134 0 41 3 134 0 42 3 134 0 43 3 134 0 44 3 134 0 48 3 134 0 53 3 134 0 54 3 134 0 55 3 134 0 57 3 134 0 58 3 134 0 70 3 134 0 72 3 134 0 73 3 134 0 74 3 134 0 79 3 134 0 81 3 134 0 83 3 134 0 85 3 134 0 86 3 134 0 88 3 134 0 89 3 134 0 90 3 134 0 96 3 134 0 97 3 134 0 99 3 134 0 100 3 134 0 102 3 134 0 103 3 134 0 104 3 134 0 105 3 134 0 106 3 134 0 107 3 134 0 108 3 134 0 109 3 134 0 112 3 134 0 113 3 134 0 118 3 134 0 120 3 134 0 121 3 134 0 123 3 134 0 124 3 134 0 129 3 134 0 130 3 134 0 131 3 134 0 132 3 134 0 133 3 134 0 134 3 134 0 135 3 134 0 136 3 134 0 138 3 134 0 141 3 134 0 142 3 134 0 146 3 134 0 149 3 134 0 150 3 134 0 151 3 134 0 152 3 134 0 161 3 134 0 166 3 134 0 167 3 134 0 170 1 135 0 171 3 134 0 172 3 134 1 142] 
#[1 1 222 0 1 1 222 0 3 1 222 0 4 1 222 0 5 1 222 0 7 1 222 0 9 1 222 0 11 1 222 0 13 1 222 0 22 1 222 0 24 1 222 0 26 1 222 0 27 1 222 0 28 1 222 0 29 1 222 0 30 1 222 0 31 1 222 0 32 1 222 0 33 1 222 0 34 1 222 0 35 1 222 0 36 1 222 0 37 1 222 0 38 1 222 0 39 1 222 0 40 1 222 0 41 1 222 0 42 1 222 0 43 1 222 0 44 1 222 0 48 1 222 0 53 1 222 0 54 1 222 0 55 1 222 0 57 1 222 0 58 1 222 0 70 1 222 0 72 1 222 0 73 1 222 0 74 1 222 0 79 1 222 0 81 1 222 0 83 1 222 0 85 1 222 0 86 1 222 0 88 1 222 0 89 1 222 0 90 1 222 0 96 1 222 0 97 1 222 0 99 1 222 0 100 1 222 0 102 1 222 0 103 1 222 0 104 1 222 0 105 1 222 0 106 1 222 0 107 1 222 0 108 1 222 0 109 1 222 0 112 1 222 0 113 1 222 0 118 1 222 0 120 1 222 0 121 1 222 0 123 1 222 0 124 1 222 0 129 1 222 0 130 1 222 0 131 1 222 0 132 1 222 0 133 1 222 0 134 1 222 0 135 1 222 0 136 1 222 0 138 1 222 0 141 1 222 0 142 1 222 0 146 1 222 0 149 1 222 0 150 1 222 0 151 1 222 0 152 1 222 0 161 1 222 0 166 1 222 0 167 1 222 0 170 1 143 0 171 1 222 0 172 1 222 1 142] 
#[1 1 147 0 1 1 151 0 3 3 138 0 4 3 138 0 5 3 138 0 7 1 147 0 9 3 138 0 11 3 138 0 13 3 138 0 22 3 138 0 24 3 138 0 26 3 138 0 27 3 138 0 28 3 138 0 29 3 138 0 30 3 138 0 31 3 138 0 32 3 138 0 33 3 138 0 34 3 138 0 35 3 138 0 36 3 138 0 37 3 138 0 38 3 138 0 39 3 138 0 40 3 138 0 41 3 138 0 42 3 138 0 43 3 138 0 44 3 138 0 48 3 138 0 53 3 138 0 54 3 138 0 55 3 138 0 57 3 138 0 58 3 138 0 70 3 138 0 72 3 138 0 73 3 138 0 74 3 138 0 79 3 138 0 81 3 138 0 83 3 138 0 85 3 138 0 86 3 138 0 88 3 138 0 89 3 138 0 90 3 138 0 96 3 138 0 97 3 138 0 99 3 138 0 100 3 138 0 102 3 138 0 103 3 138 0 104 3 138 0 105 3 138 0 106 3 138 0 107 3 138 0 108 3 138 0 109 3 138 0 112 3 138 0 113 3 138 0 118 3 138 0 120 3 138 0 121 3 138 0 123 3 138 0 124 3 138 0 129 3 138 0 130 3 138 0 131 3 138 0 132 3 138 0 133 3 138 0 134 3 138 0 135 3 138 0 136 3 138 0 138 3 138 0 141 3 138 0 142 3 138 0 146 3 138 0 149 3 138 0 150 3 138 0 151 3 138 0 152 3 138 0 161 3 138 0 166 3 138 0 167 3 138 0 170 1 155 0 171 3 138 0 172 3 138 1 142] 
#[1 1 159 0 1 1 163 0 3 3 146 0 4 3 146 0 5 3 146 0 7 1 159 0 9 3 146 0 11 3 146 0 13 3 146 0 22 3 146 0 24 3 146 0 26 3 146 0 27 3 146 0 28 3 146 0 29 3 146 0 30 3 146 0 31 3 146 0 32 3 146 0 33 3 146 0 34 3 146 0 35 3 146 0 36 3 146 0 37 3 146 0 38 3 146 0 39 3 146 0 40 3 146 0 41 3 146 0 42 3 146 0 43 3 146 0 44 3 146 0 48 3 146 0 53 3 146 0 54 3 146 0 55 3 146 0 57 3 146 0 58 3 146 0 70 3 146 0 72 3 146 0 73 3 146 0 74 3 146 0 79 3 146 0 81 3 146 0 83 3 146 0 85 3 146 0 86 3 146 0 88 3 146 0 89 3 146 0 90 3 146 0 96 3 146 0 97 3 146 0 99 3 146 0 100 3 146 0 102 3 146 0 103 3 146 0 104 3 146 0 105 3 146 0 106 3 146 0 107 3 146 0 108 3 146 0 109 3 146 0 112 3 146 0 113 3 146 0 118 3 146 0 120 3 146 0 121 3 146 0 123 3 146 0 124 3 146 0 129 3 146 0 130 3 146 0 131 3 146 0 132 3 146 0 133 3 146 0 134 3 146 0 135 3 146 0 136 3 146 0 138 3 146 0 141 3 146 0 142 3 146 0 146 3 146 0 149 3 146 0 150 3 146 0 151 3 146 0 152 3 146 0 161 3 146 0 166 3 146 0 167 3 146 0 170 1 167 0 171 3 146 0 172 3 146 1 142] 
#[0 3 154 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 158 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 7 189 0 171] 
#[0 7 193 0 171] 
#[0 7 197 0 171] 
#[0 1 171 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 166 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 170 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 1 175 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 178 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 1 179 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 186 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 190 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 194 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 198 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 202 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 206 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 210 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 214 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 218 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 2 182 0 1 2 182 0 3 2 182 0 4 2 182 0 5 2 182 0 7 2 182 0 9 2 182 0 11 2 182 0 13 2 182 0 22 2 182 0 24 2 182 0 26 2 182 0 27 2 182 0 28 2 182 0 29 2 182 0 30 2 182 0 31 2 182 0 32 2 182 0 33 2 182 0 34 2 182 0 35 2 182 0 36 2 182 0 37 2 182 0 38 2 182 0 39 2 182 0 40 2 182 0 41 2 182 0 42 2 182 0 43 2 182 0 44 2 182 0 48 2 182 0 53 2 182 0 54 2 182 0 55 2 182 0 57 2 182 0 58 2 182 0 70 2 182 0 72 2 182 0 73 2 182 0 74 2 182 0 79 2 182 0 81 2 182 0 83 2 182 0 85 2 182 0 86 2 182 0 88 2 182 0 89 2 182 0 90 2 182 0 96 2 182 0 97 2 182 0 99 2 182 0 100 2 182 0 102 2 182 0 103 2 182 0 104 2 182 0 105 2 182 0 106 2 182 0 107 2 182 0 108 2 182 0 109 2 182 0 112 2 182 0 113 2 182 0 118 2 182 0 120 2 182 0 121 2 182 0 123 2 182 0 124 2 182 0 129 2 182 0 130 2 182 0 131 2 182 0 132 2 182 0 133 2 182 0 134 2 182 0 135 2 182 0 136 2 182 0 138 2 182 0 141 2 182 0 142 2 182 0 146 2 182 0 149 2 182 0 150 2 182 0 151 2 182 0 152 2 182 0 161 2 182 0 166 2 182 0 167 2 182 0 170 2 182 0 171 2 182 0 172 7 201 0 226 2 182 1 142] 
#[0 3 222 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 3 226 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 3 230 0 1 3 230 0 3 3 230 0 4 3 230 0 5 3 230 0 7 1 183 0 9 3 230 0 11 3 230 0 13 3 230 0 22 3 230 0 24 3 230 0 26 3 230 0 27 3 230 0 28 3 230 0 29 3 230 0 30 3 230 0 31 3 230 0 32 3 230 0 33 3 230 0 34 3 230 0 35 3 230 0 36 3 230 0 37 3 230 0 38 3 230 0 39 3 230 0 40 3 230 0 41 3 230 0 42 3 230 0 43 3 230 0 44 3 230 0 48 3 230 0 53 3 230 0 54 3 230 0 55 3 230 0 57 3 230 0 58 3 230 0 70 3 230 0 72 3 230 0 73 3 230 0 74 3 230 0 79 3 230 0 81 3 230 0 83 3 230 0 85 3 230 0 86 3 230 0 88 3 230 0 89 3 230 0 90 3 230 0 96 3 230 0 97 3 230 0 99 3 230 0 100 3 230 0 102 3 230 0 103 3 230 0 104 3 230 0 105 3 230 0 106 3 230 0 107 3 230 0 108 3 230 0 109 3 230 0 112 3 230 0 113 3 230 0 118 3 230 0 120 3 230 0 121 3 230 0 123 3 230 0 124 3 230 0 129 3 230 0 130 3 230 0 131 3 230 0 132 3 230 0 133 3 230 0 134 3 230 0 135 3 230 0 136 3 230 0 138 3 230 0 141 3 230 0 142 3 230 0 146 3 230 0 149 3 230 0 150 3 230 0 151 3 230 0 152 3 230 0 161 3 230 0 166 3 230 0 167 3 230 0 170 3 230 0 171 3 230 0 172 7 209 0 225 3 230 1 142] 
#[0 3 234 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 7 213 0 171] 
#[1 7 217 0 7 7 221 0 171] 
#[1 0 134 0 1 0 138 0 3 0 134 0 9 3 238 0 11 3 238 0 79 3 238 0 96 3 238 0 121 3 238 0 161 3 238 0 171 3 238 0 172 3 238 1 142] 
#[0 1 222 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 1 246 0 1 1 250 0 3 1 246 0 9 3 242 0 11 3 242 0 79 3 242 0 96 3 242 0 121 3 242 0 161 3 242 0 171 3 242 0 172 3 242 1 142] 
#[1 0 134 0 1 0 138 0 3 0 134 0 9 7 225 0 171] 
#[0 3 246 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 1 222 0 1 1 222 0 3 1 222 0 9 7 229 0 171] 
#[1 4 41 0 7 3 250 0 11 3 250 0 22 3 250 0 27 3 250 0 28 3 250 0 29 3 250 0 30 3 250 0 31 3 250 0 32 3 250 0 33 3 250 0 34 3 250 0 35 3 250 0 36 3 250 0 37 3 250 0 38 3 250 0 39 3 250 0 40 3 250 0 44 3 250 0 54 3 250 0 57 3 250 0 70 3 250 0 73 3 250 0 74 3 250 0 79 3 250 0 81 3 250 0 83 3 250 0 85 3 250 0 86 3 250 0 88 3 250 0 89 3 250 0 96 3 250 0 97 3 250 0 99 3 250 0 102 3 250 0 103 3 250 0 104 3 250 0 105 3 250 0 109 3 250 0 112 3 250 0 113 3 250 0 120 3 250 0 121 3 250 0 124 3 250 0 129 3 250 0 130 3 250 0 131 3 250 0 132 3 250 0 136 3 250 0 138 3 250 0 141 3 250 0 142 3 250 0 146 3 250 0 149 3 250 0 161 3 250 0 166 3 250 0 167 3 250 0 170 1 187 0 171 3 250 0 172 4 49 1 34 4 53 1 35 3 250 1 142] 
#[0 3 254 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 7 233 0 171] 
#[1 7 237 0 3 4 13 0 5 1 191 0 7 1 191 0 11 1 191 0 22 1 191 0 27 1 191 0 28 1 191 0 29 1 191 0 30 1 191 0 31 1 191 0 32 1 191 0 33 1 191 0 34 1 191 0 35 1 191 0 36 1 191 0 37 1 191 0 38 1 191 0 39 1 191 0 40 1 191 0 44 1 191 0 54 1 191 0 57 1 191 0 70 1 191 0 73 1 191 0 74 1 191 0 79 1 191 0 81 1 191 0 83 1 191 0 85 1 191 0 86 1 191 0 88 1 191 0 89 1 191 0 96 1 191 0 97 1 191 0 99 1 191 0 102 1 191 0 103 1 191 0 104 1 191 0 105 1 191 0 109 1 191 0 112 1 191 0 113 1 191 0 120 1 191 0 121 1 191 0 124 1 191 0 129 1 191 0 130 1 191 0 131 1 191 0 132 1 191 0 136 1 191 0 138 1 191 0 141 1 191 0 142 1 191 0 146 1 191 0 149 1 191 0 161 1 191 0 166 1 191 0 167 1 191 0 170 1 195 0 171 1 191 0 172 7 249 0 228 7 249 0 229 7 245 0 230 7 249 0 233 1 191 1 142] 
#[1 7 253 0 7 4 6 0 11 4 6 0 22 4 6 0 27 4 6 0 28 4 6 0 29 4 6 0 30 4 6 0 31 4 6 0 32 4 6 0 33 4 6 0 34 4 6 0 35 4 6 0 36 4 6 0 37 4 6 0 38 4 6 0 39 4 6 0 40 4 6 0 44 4 6 0 54 4 6 0 57 4 6 0 70 4 6 0 73 4 6 0 74 4 6 0 79 4 6 0 81 4 6 0 83 4 6 0 85 4 6 0 86 4 6 0 88 4 6 0 89 4 6 0 96 4 6 0 97 4 6 0 99 4 6 0 102 4 6 0 103 4 6 0 104 4 6 0 105 4 6 0 109 4 6 0 112 4 6 0 113 4 6 0 120 4 6 0 121 4 6 0 124 4 6 0 129 4 6 0 130 4 6 0 131 4 6 0 132 4 6 0 136 4 6 0 138 4 6 0 141 4 6 0 142 4 6 0 146 4 6 0 149 4 6 0 161 4 6 0 166 4 6 0 167 4 6 0 170 1 199 0 171 4 6 0 172 8 5 1 31 8 9 1 32 4 6 1 142] 
#[0 4 10 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 8 13 0 151] 
#[0 8 17 0 171] 
#[0 8 21 0 171] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 8 29 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 8 25 0 118 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 8 29 0 201 8 29 0 203 8 29 0 212 8 33 0 215 1 29 0 223 8 29 0 234 1 37 0 235 8 29 0 236 8 29 0 237 8 29 0 238 8 29 0 239 8 29 0 240 8 29 0 241 8 29 0 242 8 29 0 243 8 29 0 247 8 29 0 248 8 29 1 17 8 29 1 18 8 29 1 19 8 29 1 20 8 29 1 21 8 29 1 22 1 105 1 24 8 29 1 25 8 29 1 26 8 29 1 27 8 29 1 28 8 29 1 29 8 29 1 33 8 29 1 36 1 137 1 55 1 137 1 56 1 137 1 57 8 29 1 61 8 29 1 62 8 29 1 63 8 29 1 66 8 29 1 67 8 29 1 68 8 29 1 69 8 29 1 70 8 29 1 71 8 29 1 72 8 29 1 73 8 29 1 74 8 29 1 75 8 29 1 76 8 29 1 77 8 29 1 78 8 29 1 79 8 29 1 80 8 29 1 81 8 29 1 82 8 29 1 83 8 29 1 88 8 29 1 89 1 241 1 90 8 29 1 95 8 29 1 98 8 29 1 99 8 29 1 100 8 29 1 101 8 29 1 102 8 29 1 107 8 29 1 108 8 29 1 109 8 29 1 110 8 29 1 111 8 29 1 112 8 29 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 8 29 1 127 2 93 1 128 2 97 1 129 8 29 1 137 8 29 1 138 8 29 1 140] 
#[1 6 17 0 11 6 21 0 171 6 25 0 172 8 37 0 207 6 33 0 214 6 37 0 216 6 41 0 217] 
#[1 4 14 0 11 4 14 0 79 4 14 0 96 4 14 0 121 4 14 0 161 1 203 0 171 4 14 0 172 4 14 1 142] 
#[0 8 45 0 171] 
#[1 4 18 0 1 4 18 0 9 4 18 0 11 4 18 0 22 4 18 0 24 4 18 0 26 4 18 0 41 4 18 0 42 4 18 0 43 4 18 0 44 4 18 0 48 4 18 0 53 4 18 0 54 4 18 0 55 4 18 0 57 4 18 0 58 4 18 0 70 4 18 0 72 4 18 0 74 4 18 0 81 4 18 0 83 4 18 0 85 4 18 0 86 4 18 0 89 4 18 0 90 4 18 0 97 4 18 0 99 4 18 0 100 4 18 0 102 4 18 0 104 4 18 0 105 4 18 0 106 4 18 0 107 4 18 0 108 4 18 0 112 4 18 0 113 4 18 0 120 4 18 0 123 4 18 0 124 4 18 0 129 4 18 0 131 4 18 0 132 4 18 0 133 4 18 0 134 4 18 0 135 4 18 0 136 4 18 0 138 4 18 0 142 4 18 0 146 4 18 0 149 4 18 0 151 4 18 0 152 4 18 0 161 4 18 0 166 4 18 0 167 4 18 0 170 1 207 0 171 4 18 0 172] 
#[0 8 53 0 11] 
#[1 4 22 0 1 4 22 0 9 4 22 0 11 4 22 0 22 4 22 0 24 4 22 0 26 4 22 0 41 4 22 0 42 4 22 0 43 4 22 0 44 4 22 0 48 4 22 0 53 4 22 0 54 4 22 0 55 4 22 0 57 4 22 0 58 4 22 0 70 4 22 0 72 4 22 0 74 4 26 0 79 4 22 0 81 4 22 0 83 4 22 0 85 4 22 0 86 4 22 0 89 4 22 0 90 4 26 0 93 4 26 0 95 4 26 0 96 4 22 0 97 4 22 0 99 4 22 0 100 4 22 0 102 4 22 0 104 4 22 0 105 4 22 0 106 4 22 0 107 4 22 0 108 4 22 0 112 4 22 0 113 4 26 0 118 4 22 0 120 4 26 0 121 4 22 0 123 4 22 0 124 4 22 0 129 4 22 0 131 4 22 0 132 4 22 0 133 4 22 0 134 4 22 0 135 4 22 0 136 4 22 0 138 4 22 0 142 4 22 0 146 4 22 0 149 4 26 0 150 4 22 0 151 4 22 0 152 1 211 0 161 4 22 0 166 4 22 0 167 4 22 0 170 4 22 0 171 1 211 0 172] 
#[1 4 30 0 79 4 30 0 93 4 30 0 95 4 30 0 96 4 30 0 118 4 30 0 121 4 30 0 150 4 30 0 161 8 57 0 172] 
#[0 4 34 0 11 0 171 0 172] 
#[0 4 38 0 1 0 9 0 11 0 22 0 24 0 26 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 74 0 81 0 83 0 85 0 86 0 89 0 90 0 97 0 99 0 100 0 102 0 104 0 105 0 106 0 107 0 108 0 112 0 113 0 120 0 123 0 124 0 129 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 142 0 146 0 149 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172] 
#[1 0 29 0 1 0 33 0 9 6 17 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 8 69 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 6 21 0 171 8 61 0 172 2 85 0 175 8 65 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 8 69 0 201 8 69 0 203 8 69 0 212 8 73 0 216 1 29 0 223 8 69 0 234 1 37 0 235 8 69 0 236 8 69 0 237 8 69 0 238 8 69 0 239 8 69 0 240 8 69 0 241 8 69 0 242 8 69 0 243 8 69 0 247 8 69 0 248 8 69 1 17 8 69 1 18 8 69 1 19 8 69 1 20 8 69 1 21 8 69 1 22 1 105 1 24 8 69 1 25 8 69 1 26 8 69 1 27 8 69 1 28 8 69 1 29 8 69 1 33 8 69 1 36 1 137 1 55 1 137 1 56 1 137 1 57 8 69 1 61 8 69 1 62 8 69 1 63 8 69 1 66 8 69 1 67 8 69 1 68 8 69 1 69 8 69 1 70 8 69 1 71 8 69 1 72 8 69 1 73 8 69 1 74 8 69 1 75 8 69 1 76 8 69 1 77 8 69 1 78 8 69 1 79 8 69 1 80 8 69 1 81 8 69 1 82 8 69 1 83 8 69 1 88 8 69 1 89 1 241 1 90 8 69 1 95 8 69 1 98 8 69 1 99 8 69 1 100 8 69 1 101 8 69 1 102 8 69 1 107 8 69 1 108 8 69 1 109 8 69 1 110 8 69 1 111 8 69 1 112 8 69 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 8 69 1 127 2 93 1 128 2 97 1 129 8 69 1 137 8 69 1 138 8 69 1 140] 
#[1 4 42 0 22 4 42 0 44 4 42 0 54 4 42 0 57 4 42 0 74 4 42 0 81 4 42 0 85 4 42 0 86 4 42 0 96 4 42 0 104 4 42 0 112 4 42 0 113 4 42 0 120 4 42 0 136 4 42 0 142 4 42 0 149 4 42 0 166 4 42 0 167 4 42 0 170 4 42 0 172 8 77 0 250] 
#[1 8 81 0 3 8 85 0 171 8 89 0 253] 
#[0 4 46 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 4 50 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 4 54 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 4 58 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 4 62 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 4 66 0 7 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 4 70 0 7 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 4 74 0 7 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 4 78 0 7 4 78 0 11 4 78 0 79 4 78 0 96 4 78 0 121 4 78 0 161 4 78 0 171 4 78 0 172 8 93 1 106 4 78 1 142] 
#[0 4 82 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 4 86 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 8 97 0 171] 
#[0 8 101 0 171] 
#[0 8 105 0 171] 
#[0 8 109 0 171] 
#[0 8 113 0 171] 
#[0 8 117 0 171] 
#[1 0 134 0 1 7 237 0 3 4 13 0 5 1 191 0 7 0 134 0 9 1 215 0 11 1 215 0 22 1 215 0 27 1 215 0 28 1 215 0 29 1 215 0 30 1 215 0 31 1 215 0 32 1 215 0 33 1 215 0 34 1 215 0 35 1 215 0 36 1 215 0 37 1 215 0 38 1 215 0 39 1 215 0 40 1 215 0 44 1 215 0 54 1 215 0 57 1 215 0 70 1 215 0 73 1 215 0 74 1 215 0 79 1 215 0 81 1 215 0 83 1 215 0 85 1 215 0 86 1 215 0 88 1 215 0 89 1 215 0 96 1 215 0 97 1 215 0 99 1 215 0 102 1 215 0 103 1 215 0 104 1 215 0 105 1 215 0 109 1 215 0 112 1 215 0 113 1 215 0 120 1 215 0 121 1 215 0 124 1 215 0 129 1 215 0 130 1 215 0 131 1 215 0 132 1 215 0 136 1 215 0 138 1 215 0 141 1 215 0 142 1 215 0 146 1 215 0 149 1 215 0 161 1 215 0 166 1 215 0 167 1 215 0 170 1 219 0 171 1 215 0 172 7 249 0 228 7 249 0 229 7 245 0 230 7 249 0 233 1 215 1 142] 
#[1 7 253 0 7 4 90 0 11 4 90 0 22 4 90 0 27 4 90 0 28 4 90 0 29 4 90 0 30 4 90 0 31 4 90 0 32 4 90 0 33 4 90 0 34 4 90 0 35 4 90 0 36 4 90 0 37 4 90 0 38 4 90 0 39 4 90 0 40 4 90 0 44 4 90 0 54 4 90 0 57 4 90 0 70 4 90 0 73 4 90 0 74 4 90 0 79 4 90 0 81 4 90 0 83 4 90 0 85 4 90 0 86 4 90 0 88 4 90 0 89 4 90 0 96 4 90 0 97 4 90 0 99 4 90 0 102 4 90 0 103 4 90 0 104 4 90 0 105 4 90 0 109 4 90 0 112 4 90 0 113 4 90 0 120 4 90 0 121 4 90 0 124 4 90 0 129 4 90 0 130 4 90 0 131 4 90 0 132 4 90 0 136 4 90 0 138 4 90 0 141 4 90 0 142 4 90 0 146 4 90 0 149 4 90 0 161 4 90 0 166 4 90 0 167 4 90 0 170 1 223 0 171 4 90 0 172 8 5 1 31 8 9 1 32 4 90 1 142] 
#[0 4 94 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 4 98 0 11 4 98 0 22 4 98 0 27 4 98 0 28 4 98 0 29 4 98 0 30 4 98 0 31 4 98 0 32 4 98 0 33 4 98 0 34 4 98 0 35 4 98 0 36 4 98 0 37 4 98 0 38 4 98 0 39 4 98 0 40 4 98 0 44 4 98 0 54 4 98 0 57 4 98 0 70 4 98 0 73 4 98 0 74 4 98 0 79 4 98 0 81 4 98 0 83 4 98 0 85 4 98 0 86 4 98 0 88 4 98 0 89 4 98 0 96 4 98 0 97 4 98 0 99 4 98 0 102 4 98 0 103 4 98 0 104 4 98 0 105 4 98 0 109 4 98 0 112 4 98 0 113 4 98 0 120 4 98 0 121 4 98 0 124 4 98 0 129 4 98 0 130 4 98 0 131 4 98 0 132 4 98 0 136 4 98 0 138 4 98 0 141 4 98 0 142 4 98 0 146 4 98 0 149 4 98 0 161 4 98 0 166 4 98 0 167 4 98 0 170 1 227 0 171 4 98 0 172 4 98 1 142] 
#[0 4 102 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 4 106 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 8 125 0 171] 
#[1 7 253 0 7 4 110 0 11 4 110 0 22 4 110 0 27 4 110 0 28 4 110 0 29 4 110 0 30 4 110 0 31 4 110 0 32 4 110 0 33 4 110 0 34 4 110 0 35 4 110 0 36 4 110 0 37 4 110 0 38 4 110 0 39 4 110 0 40 4 110 0 44 4 110 0 54 4 110 0 57 4 110 0 70 4 110 0 73 4 110 0 74 4 110 0 79 4 110 0 81 4 110 0 83 4 110 0 85 4 110 0 86 4 110 0 88 4 110 0 89 4 110 0 96 4 110 0 97 4 110 0 99 4 110 0 102 4 110 0 103 4 110 0 104 4 110 0 105 4 110 0 109 4 110 0 112 4 110 0 113 4 110 0 120 4 110 0 121 4 110 0 124 4 110 0 129 4 110 0 130 4 110 0 131 4 110 0 132 4 110 0 136 4 110 0 138 4 110 0 141 4 110 0 142 4 110 0 146 4 110 0 149 4 110 0 161 4 110 0 166 4 110 0 167 4 110 0 170 1 231 0 171 4 110 0 172 8 5 1 31 8 9 1 32 4 110 1 142] 
#[0 4 114 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 4 118 0 22 4 118 0 44 4 118 0 54 4 118 0 57 4 118 0 74 4 118 0 81 4 118 0 85 4 118 0 86 4 118 0 96 4 118 0 104 4 118 0 112 4 118 0 113 4 118 0 120 4 118 0 136 4 118 0 142 4 118 0 149 4 118 0 166 4 118 0 167 4 118 0 170 4 118 0 172 8 129 0 245] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 8 133 0 150 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 1 235 0 171 0 54 0 172 2 85 0 175 8 137 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 8 141 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 1 235 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 8 149 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 8 153 0 180 8 153 0 181 8 153 0 182 8 153 0 183 8 153 0 184 8 153 0 185 8 153 0 186 4 253 0 187 8 153 0 188 8 153 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 8 153 1 37 8 153 1 38 8 153 1 39 8 153 1 40 8 153 1 41 8 153 1 42 8 153 1 43 8 153 1 44 8 153 1 45 8 153 1 47 8 153 1 49 8 153 1 51 5 61 1 52 5 65 1 53 8 153 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 8 153 1 139 8 153 1 141] 
#[1 4 122 0 1 4 122 0 3 4 122 0 4 4 122 0 5 4 122 0 7 4 122 0 9 4 122 0 11 4 122 0 22 4 122 0 24 4 122 0 26 4 122 0 27 4 122 0 28 4 122 0 29 4 122 0 30 4 122 0 31 4 122 0 32 4 122 0 33 4 122 0 34 4 122 0 35 4 122 0 36 4 122 0 37 4 122 0 38 4 122 0 39 4 122 0 40 4 122 0 41 4 122 0 42 4 122 0 43 4 122 0 44 4 122 0 48 4 122 0 53 4 122 0 54 4 122 0 55 4 122 0 57 4 122 0 58 4 122 0 70 4 122 0 72 4 122 0 73 4 122 0 74 4 122 0 79 4 122 0 81 4 122 0 83 4 122 0 85 4 122 0 86 4 122 0 88 4 122 0 89 4 122 0 90 4 122 0 96 4 122 0 97 4 122 0 99 4 122 0 100 4 122 0 102 4 122 0 103 4 122 0 104 4 122 0 105 4 122 0 106 4 122 0 107 4 122 0 108 4 122 0 109 4 122 0 112 4 122 0 113 4 122 0 120 4 122 0 121 4 122 0 123 4 122 0 124 4 122 0 129 4 122 0 130 4 122 0 131 4 122 0 132 4 122 0 133 4 122 0 134 4 122 0 135 4 122 0 136 4 122 0 138 4 122 0 141 4 122 0 142 4 122 0 146 4 122 0 149 4 122 0 151 4 122 0 152 4 122 0 161 4 122 0 166 4 122 0 167 4 122 0 170 1 239 0 171 4 122 0 172 4 122 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 8 157 0 171 8 161 0 180 8 161 0 181 8 161 0 182 8 161 0 183 8 161 0 184 8 161 0 185 8 161 0 186 4 253 0 187 8 161 0 188 8 161 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 8 161 1 37 8 161 1 38 8 161 1 39 8 161 1 40 8 161 1 41 8 161 1 42 8 161 1 43 8 161 1 44 8 161 1 45 8 161 1 47 8 161 1 49 8 161 1 51 5 61 1 52 5 65 1 53 8 161 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 8 161 1 139 8 161 1 141] 
#[0 8 165 0 171] 
#[0 8 169 0 171] 
#[0 8 173 0 171] 
#[0 8 177 0 18] 
#[0 8 181 0 171] 
#[0 8 185 0 171] 
#[0 8 189 0 171] 
#[0 8 193 0 171] 
#[1 7 253 0 7 4 126 0 11 4 126 0 22 4 126 0 27 4 126 0 28 4 126 0 29 4 126 0 30 4 126 0 31 4 126 0 32 4 126 0 33 4 126 0 34 4 126 0 35 4 126 0 36 4 126 0 37 4 126 0 38 4 126 0 39 4 126 0 40 4 126 0 44 4 126 0 54 4 126 0 57 4 126 0 70 4 126 0 73 4 126 0 74 4 126 0 79 4 126 0 81 4 126 0 83 4 126 0 85 4 126 0 86 4 126 0 88 4 126 0 89 4 126 0 96 4 126 0 97 4 126 0 99 4 126 0 102 4 126 0 103 4 126 0 104 4 126 0 105 4 126 0 109 4 126 0 112 4 126 0 113 4 126 0 120 4 126 0 121 4 126 0 124 4 126 0 129 4 126 0 130 4 126 0 131 4 126 0 132 4 126 0 136 4 126 0 138 4 126 0 141 4 126 0 142 4 126 0 146 4 126 0 149 4 126 0 161 4 126 0 166 4 126 0 167 4 126 0 170 1 243 0 171 4 126 0 172 8 5 1 31 8 9 1 32 4 126 1 142] 
#[0 4 130 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 0 134 0 1 0 138 0 3 0 134 0 9 1 247 0 171] 
#[1 4 57 0 1 4 61 0 9 8 201 0 171] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 2 221 0 191 0 253 0 194 2 221 0 195 2 221 0 196 2 221 0 197 8 205 1 24] 
#[0 4 134 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 8 209 0 171 2 221 0 191 0 253 0 194 2 221 0 195 2 221 0 196 2 221 0 197 8 213 1 24] 
#[0 4 138 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 4 142 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 4 146 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 8 217 0 171] 
#[0 8 221 0 171] 
#[0 4 150 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 0 29 0 1 4 173 0 3 4 154 0 4 4 177 0 6 8 225 0 7 4 181 0 8 0 33 0 9 4 154 0 11 1 251 0 13 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 8 233 0 76 8 253 0 78 4 154 0 79 0 253 0 81 0 253 0 85 0 253 0 86 4 154 0 96 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 154 0 121 4 189 0 122 8 241 0 127 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 1 255 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 4 154 0 171 4 154 0 172 9 1 0 180 9 1 0 181 9 1 0 182 9 1 0 183 9 1 0 184 9 1 0 185 9 1 0 186 4 253 0 187 9 1 0 188 9 1 0 189 8 245 0 191 0 253 0 194 8 245 0 195 8 245 0 196 8 245 0 197 8 249 0 236 8 253 0 252 9 1 1 37 9 1 1 38 9 1 1 39 9 1 1 40 9 1 1 41 9 1 1 42 9 1 1 43 9 1 1 44 9 1 1 45 9 1 1 47 9 1 1 49 9 1 1 51 5 61 1 52 5 65 1 53 9 1 1 54 5 73 1 55 5 73 1 56 5 73 1 57 2 69 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 9 5 1 130 9 9 1 132 9 13 1 135 9 1 1 139 9 1 1 141 4 154 1 142] 
#[1 9 17 0 4 9 21 0 171] 
#[1 4 158 0 96 4 158 0 172 9 25 0 206] 
#[0 9 29 0 171] 
#[0 9 33 0 171] 
#[1 8 81 0 3 9 37 0 171 9 41 0 253] 
#[0 4 162 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 9 45 0 171] 
#[0 4 166 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 9 49 0 171] 
#[0 4 170 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 9 53 0 171] 
#[0 9 57 0 171] 
#[0 9 61 0 171] 
#[1 4 174 0 1 8 81 0 3 4 174 0 9 4 174 0 11 4 174 0 22 4 174 0 24 4 174 0 26 4 174 0 41 4 174 0 42 4 174 0 43 4 174 0 44 4 174 0 48 4 174 0 53 4 174 0 54 4 174 0 55 4 174 0 57 4 174 0 58 4 174 0 70 4 174 0 72 4 174 0 74 4 174 0 81 4 174 0 83 4 174 0 85 4 174 0 86 4 174 0 89 4 174 0 90 4 174 0 97 4 174 0 99 4 174 0 100 4 174 0 102 4 174 0 104 4 174 0 105 4 174 0 106 4 174 0 107 4 174 0 108 4 174 0 112 4 174 0 113 4 174 0 120 4 174 0 123 4 174 0 124 4 174 0 129 4 174 0 131 4 174 0 132 4 174 0 133 4 174 0 134 4 174 0 135 4 174 0 136 4 174 0 138 4 174 0 142 4 174 0 146 4 174 0 149 4 174 0 151 4 174 0 152 4 174 0 161 4 174 0 166 4 174 0 167 4 174 0 170 2 3 0 171 4 174 0 172 9 69 0 221 9 73 0 253] 
#[0 9 77 0 171] 
#[0 4 178 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 9 81 0 171] 
#[0 9 85 0 171] 
#[0 9 89 0 171] 
#[0 9 93 0 171] 
#[0 9 97 0 171] 
#[0 9 101 0 171] 
#[0 9 105 0 171] 
#[0 9 109 0 171] 
#[1 4 182 0 22 4 182 0 27 4 182 0 28 4 182 0 29 4 182 0 30 4 182 0 31 4 182 0 32 4 182 0 33 4 182 0 34 4 182 0 35 4 182 0 36 4 182 0 37 4 182 0 38 4 182 0 39 4 182 0 40 4 182 0 44 4 182 0 54 4 182 0 57 4 182 0 70 4 182 0 73 4 182 0 74 9 113 0 80 4 182 0 81 4 182 0 83 4 182 0 85 4 182 0 86 4 182 0 88 4 182 0 89 4 182 0 97 4 182 0 99 4 182 0 102 4 182 0 103 4 182 0 104 4 182 0 105 4 182 0 109 4 182 0 112 4 182 0 113 4 182 0 120 4 182 0 124 4 182 0 129 4 182 0 130 4 182 0 131 4 182 0 132 4 182 0 136 4 182 0 138 4 182 0 141 4 182 0 142 4 182 0 146 4 182 0 149 4 182 0 166 4 182 0 167 4 182 0 170 4 182 0 172 4 182 1 142] 
#[0 4 186 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[1 0 6 0 22 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 30 0 6 0 31 0 6 0 32 0 6 0 33 0 6 0 34 0 6 0 35 0 6 0 36 0 6 0 37 0 6 0 38 0 6 0 39 0 6 0 40 0 6 0 44 0 6 0 54 0 6 0 57 0 6 0 70 0 6 0 73 0 6 0 74 0 6 0 81 0 6 0 83 0 6 0 85 0 6 0 86 0 6 0 88 0 6 0 89 0 6 0 97 0 6 0 99 0 6 0 102 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 109 0 6 0 112 0 6 0 113 0 6 0 120 0 6 0 124 0 6 0 129 0 6 0 130 0 6 0 131 0 6 0 132 0 6 0 136 0 6 0 138 0 6 0 141 0 6 0 142 0 6 0 146 0 6 0 149 0 6 0 166 0 6 0 167 0 6 0 170 0 6 0 172 9 117 0 177 4 133 0 178 0 6 1 142] 
#[1 0 10 0 22 0 10 0 27 0 10 0 28 0 10 0 29 0 10 0 30 0 10 0 31 0 10 0 32 0 10 0 33 0 10 0 34 0 10 0 35 0 10 0 36 0 10 0 37 0 10 0 38 0 10 0 39 0 10 0 40 0 10 0 44 0 10 0 54 0 10 0 57 0 10 0 70 0 10 0 73 0 10 0 74 0 10 0 81 0 10 0 83 0 10 0 85 0 10 0 86 0 10 0 88 0 10 0 89 0 10 0 97 0 10 0 99 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 109 0 10 0 112 0 10 0 113 0 10 0 120 0 10 0 124 0 10 0 129 0 10 0 130 0 10 0 131 0 10 0 132 0 10 0 136 0 10 0 138 0 10 0 141 0 10 0 142 0 10 0 146 0 10 0 149 0 10 0 166 0 10 0 167 0 10 0 170 0 10 0 172 9 121 0 179 0 10 1 142] 
#[1 0 253 0 22 2 245 0 27 2 245 0 28 2 245 0 29 2 245 0 30 2 245 0 31 2 245 0 32 2 245 0 33 2 245 0 34 2 245 0 35 2 245 0 36 2 245 0 37 2 245 0 38 2 245 0 39 2 245 0 40 0 253 0 44 0 253 0 54 0 253 0 57 0 89 0 70 2 173 0 73 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 2 177 0 88 0 117 0 89 0 125 0 97 0 129 0 99 3 1 0 102 2 181 0 103 0 253 0 104 3 1 0 105 2 185 0 109 0 253 0 112 0 253 0 113 0 253 0 120 2 197 0 124 3 1 0 129 2 201 0 130 3 1 0 131 0 189 0 132 0 253 0 136 2 209 0 138 2 213 0 141 0 253 0 142 0 217 0 146 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 3 69 0 172 2 221 0 191 0 253 0 194 2 221 0 195 2 221 0 196 2 221 0 197 7 113 0 200 7 113 0 201 7 113 0 203 7 113 0 204 7 113 0 208 2 245 0 209 7 113 0 210 7 113 0 211 3 1 0 223 7 113 0 242 7 113 0 243 7 113 0 247 7 113 0 248 7 113 1 5 7 113 1 6 7 113 1 7 3 21 1 8 7 113 1 9 7 113 1 12 7 113 1 13 7 113 1 14 7 113 1 15 7 113 1 16 7 113 1 17 7 113 1 18 7 113 1 19 7 113 1 20 7 113 1 21 7 113 1 22 1 105 1 24 7 113 1 25 7 113 1 26 7 113 1 27 7 113 1 28 7 113 1 29 7 113 1 33 7 113 1 36 4 190 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 9 125 0 180 9 125 0 181 9 125 0 182 9 125 0 183 9 125 0 184 9 125 0 185 9 125 0 186 4 253 0 187 9 125 0 188 9 125 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 9 125 1 37 9 125 1 38 9 125 1 39 9 125 1 40 9 125 1 41 9 125 1 42 9 125 1 43 9 125 1 44 9 125 1 45 9 125 1 47 9 125 1 49 9 125 1 51 5 61 1 52 5 65 1 53 9 125 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 9 125 1 139 9 125 1 141] 
#[1 9 129 0 4 9 133 0 171] 
#[1 0 29 0 1 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 3 177 0 161 4 205 0 162 0 253 0 166 0 237 0 167 0 241 0 170 9 137 0 182 9 141 0 185 7 149 0 191 0 253 0 194 7 149 0 195 7 149 0 196 7 149 0 197 1 137 1 55 1 137 1 56 1 137 1 57 9 145 1 122 2 81 1 123 2 81 1 124 2 81 1 125 2 93 1 128 2 97 1 129] 
#[0 4 194 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 4 198 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 0 134 0 1 2 7 0 3 0 134 0 4 0 134 0 5 0 134 0 7 0 134 0 9 0 134 0 11 0 134 0 13 0 134 0 22 0 134 0 24 0 134 0 26 0 134 0 27 0 134 0 28 0 134 0 29 0 134 0 30 0 134 0 31 0 134 0 32 0 134 0 33 0 134 0 34 0 134 0 35 0 134 0 36 0 134 0 37 0 134 0 38 0 134 0 39 0 134 0 40 0 134 0 41 0 134 0 42 0 134 0 43 0 134 0 44 0 134 0 48 0 134 0 53 0 134 0 54 0 134 0 55 0 134 0 57 0 134 0 58 0 134 0 70 0 134 0 72 0 134 0 73 0 134 0 74 0 134 0 79 0 134 0 81 0 134 0 83 0 134 0 85 0 134 0 86 0 134 0 88 0 134 0 89 0 134 0 90 0 134 0 96 0 134 0 97 0 134 0 99 0 134 0 100 0 134 0 102 0 134 0 103 0 134 0 104 0 134 0 105 0 134 0 106 0 134 0 107 0 134 0 108 0 134 0 109 0 134 0 112 0 134 0 113 0 134 0 118 0 134 0 120 0 134 0 121 0 134 0 123 0 134 0 124 0 134 0 129 0 134 0 130 0 134 0 131 0 134 0 132 0 134 0 133 0 134 0 134 0 134 0 135 0 134 0 136 0 134 0 138 0 134 0 141 0 134 0 142 0 134 0 146 0 134 0 149 0 134 0 150 0 134 0 151 0 134 0 152 0 134 0 161 0 134 0 166 0 134 0 167 0 134 0 170 0 134 0 171 0 134 0 172 0 134 1 142] 
#[1 4 57 0 1 4 202 0 3 4 202 0 4 4 202 0 5 4 202 0 7 2 11 0 9 4 202 0 11 4 202 0 13 4 202 0 22 4 202 0 24 4 202 0 26 4 202 0 27 4 202 0 28 4 202 0 29 4 202 0 30 4 202 0 31 4 202 0 32 4 202 0 33 4 202 0 34 4 202 0 35 4 202 0 36 4 202 0 37 4 202 0 38 4 202 0 39 4 202 0 40 4 202 0 41 4 202 0 42 4 202 0 43 4 202 0 44 4 202 0 48 4 202 0 53 4 202 0 54 4 202 0 55 4 202 0 57 4 202 0 58 4 202 0 70 4 202 0 72 4 202 0 73 4 202 0 74 4 202 0 79 4 202 0 81 4 202 0 83 4 202 0 85 4 202 0 86 4 202 0 88 4 202 0 89 4 202 0 90 4 202 0 96 4 202 0 97 4 202 0 99 4 202 0 100 4 202 0 102 4 202 0 103 4 202 0 104 4 202 0 105 4 202 0 106 4 202 0 107 4 202 0 108 4 202 0 109 4 202 0 112 4 202 0 113 4 202 0 118 4 202 0 120 4 202 0 121 4 202 0 123 4 202 0 124 4 202 0 129 4 202 0 130 4 202 0 131 4 202 0 132 4 202 0 133 4 202 0 134 4 202 0 135 4 202 0 136 4 202 0 138 4 202 0 141 4 202 0 142 4 202 0 146 4 202 0 149 4 202 0 150 4 202 0 151 4 202 0 152 4 202 0 161 4 202 0 166 4 202 0 167 4 202 0 170 4 202 0 171 4 202 0 172 4 202 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 8 233 0 76 8 253 0 78 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 8 241 0 127 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 9 1 0 180 9 1 0 181 9 1 0 182 9 1 0 183 9 1 0 184 9 1 0 185 9 1 0 186 4 253 0 187 9 1 0 188 9 1 0 189 8 245 0 191 0 253 0 194 8 245 0 195 8 245 0 196 8 245 0 197 8 249 0 236 8 253 0 252 9 1 1 37 9 1 1 38 9 1 1 39 9 1 1 40 9 1 1 41 9 1 1 42 9 1 1 43 9 1 1 44 9 1 1 45 9 1 1 47 9 1 1 49 9 1 1 51 5 61 1 52 5 65 1 53 9 1 1 54 5 73 1 55 5 73 1 56 5 73 1 57 2 69 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 9 149 1 130 9 1 1 139 9 1 1 141] 
#[1 0 29 0 1 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 4 209 0 163 0 253 0 166 0 237 0 167 0 241 0 170 9 153 0 186 7 149 0 191 0 253 0 194 7 149 0 195 7 149 0 196 7 149 0 197 1 137 1 55 1 137 1 56 1 137 1 57 9 157 1 122 2 81 1 123 2 81 1 124 2 81 1 125 2 93 1 128 2 97 1 129] 
#[0 4 206 0 8 0 155 0 158] 
#[1 9 161 0 8 9 165 0 158] 
#[0 9 169 0 18] 
#[1 9 173 0 5 9 177 0 6 9 181 0 8 9 185 0 10 9 189 0 14 9 193 0 16 9 197 0 17 9 201 0 18 9 205 0 19 9 209 0 20 9 213 0 45 9 217 0 47 9 221 0 52 9 225 0 66 9 229 0 67 9 233 0 69 9 237 0 98 9 241 0 126 9 245 0 145 9 249 0 153 9 253 1 46 10 1 1 48 10 5 1 50] 
#[0 10 9 0 2] 
#[0 10 13 0 18] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 10 17 0 191 0 253 0 194 10 17 0 195 10 17 0 196 10 17 0 197] 
#[0 10 21 0 18] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 10 25 0 181 10 29 0 191 0 253 0 194 10 29 0 195 10 29 0 196 10 29 0 197] 
#[1 4 210 0 1 4 210 0 3 4 210 0 4 4 210 0 5 4 210 0 7 2 15 0 9 4 210 0 11 4 210 0 13 4 210 0 22 4 210 0 24 4 210 0 26 4 210 0 27 4 210 0 28 4 210 0 29 4 210 0 30 4 210 0 31 4 210 0 32 4 210 0 33 4 210 0 34 4 210 0 35 4 210 0 36 4 210 0 37 4 210 0 38 4 210 0 39 4 210 0 40 4 210 0 41 4 210 0 42 4 210 0 43 4 210 0 44 4 210 0 48 4 210 0 53 4 210 0 54 4 210 0 55 4 210 0 57 4 210 0 58 4 210 0 70 4 210 0 72 4 210 0 73 4 210 0 74 4 210 0 79 4 210 0 81 4 210 0 83 4 210 0 85 4 210 0 86 4 210 0 88 4 210 0 89 4 210 0 90 4 210 0 96 4 210 0 97 4 210 0 99 4 210 0 100 4 210 0 102 4 210 0 103 4 210 0 104 4 210 0 105 4 210 0 106 4 210 0 107 4 210 0 108 4 210 0 109 4 210 0 112 4 210 0 113 4 210 0 118 4 210 0 120 4 210 0 121 4 210 0 123 4 210 0 124 4 210 0 129 4 210 0 130 4 210 0 131 4 210 0 132 4 210 0 133 4 210 0 134 4 210 0 135 4 210 0 136 4 210 0 138 4 210 0 141 4 210 0 142 4 210 0 146 4 210 0 149 4 210 0 150 4 210 0 151 4 210 0 152 4 210 0 161 4 210 0 166 4 210 0 167 4 210 0 170 4 210 0 171 4 210 0 172 7 209 0 225 4 210 1 142] 
#[0 10 33 0 22 0 44 0 54 0 55 0 57 0 74 0 79 0 81 0 85 0 86 0 93 0 104 0 112 0 113 0 120 0 135 0 136 0 142 0 146 0 149 0 166 0 193 0 194] 
#[0 4 214 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 9 173 0 5 9 177 0 6 9 181 0 8 9 185 0 10 9 189 0 14 9 193 0 16 9 197 0 17 9 201 0 18 9 205 0 19 9 209 0 20 10 37 0 43 9 213 0 45 9 217 0 47 9 221 0 52 9 225 0 66 9 229 0 67 9 233 0 69 9 237 0 98 9 241 0 126 9 245 0 145 9 249 0 153 9 253 1 46 10 1 1 48 10 5 1 50] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 4 218 0 11 4 218 0 13 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 4 218 0 79 0 253 0 81 0 253 0 85 0 253 0 86 4 218 0 96 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 218 0 121 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 2 19 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 2 23 0 171 4 218 0 172 10 45 0 180 10 45 0 181 10 45 0 182 10 45 0 183 10 45 0 184 10 45 0 185 10 45 0 186 4 253 0 187 10 45 0 188 10 45 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 10 45 1 37 10 45 1 38 10 45 1 39 10 45 1 40 10 45 1 41 10 45 1 42 10 45 1 43 10 45 1 44 10 45 1 45 10 45 1 47 10 45 1 49 10 45 1 51 5 61 1 52 5 65 1 53 10 45 1 54 5 73 1 55 5 73 1 56 5 73 1 57 10 49 1 65 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 10 45 1 139 10 45 1 141 4 218 1 142] 
#[0 10 53 0 7] 
#[0 10 57 0 18] 
#[0 10 61 0 18] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 10 65 0 191 0 253 0 194 10 65 0 195 10 65 0 196 10 65 0 197] 
#[1 0 29 0 1 4 173 0 3 4 222 0 4 4 177 0 6 4 222 0 7 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 10 73 0 180 10 73 0 181 10 73 0 182 10 73 0 183 10 73 0 184 10 73 0 185 10 73 0 186 4 253 0 187 10 73 0 188 10 73 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 10 69 0 232 10 73 1 37 10 73 1 38 10 73 1 39 10 73 1 40 10 73 1 41 10 73 1 42 10 73 1 43 10 73 1 44 10 73 1 45 10 73 1 47 10 73 1 49 10 73 1 51 5 61 1 52 5 65 1 53 10 73 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 10 73 1 139 10 73 1 141] 
#[1 6 177 0 5 6 189 0 23] 
#[1 4 13 0 5 2 27 0 7 2 27 0 11 2 27 0 22 2 27 0 27 2 27 0 28 2 27 0 29 2 27 0 30 2 27 0 31 2 27 0 32 2 27 0 33 2 27 0 34 2 27 0 35 2 27 0 36 2 27 0 37 2 27 0 38 2 27 0 39 2 27 0 40 2 27 0 44 2 27 0 54 2 27 0 57 2 27 0 70 2 27 0 73 2 27 0 74 2 27 0 79 2 27 0 81 2 27 0 83 2 27 0 85 2 27 0 86 2 27 0 88 2 27 0 89 2 27 0 96 2 27 0 97 2 27 0 99 2 27 0 102 2 27 0 103 2 27 0 104 2 27 0 105 2 27 0 109 2 27 0 112 2 27 0 113 2 27 0 120 2 27 0 121 2 27 0 124 2 27 0 129 2 27 0 130 2 27 0 131 2 27 0 132 2 27 0 136 2 27 0 138 2 27 0 141 2 27 0 142 2 27 0 146 2 27 0 149 2 27 0 161 2 27 0 166 2 27 0 167 2 27 0 170 2 31 0 171 2 27 0 172 10 77 0 228 10 77 0 229 10 77 0 233 2 27 1 142] 
#[0 4 230 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 5 229 0 63 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 10 81 0 171 5 233 0 191 0 253 0 194 5 233 0 195 5 233 0 196 5 233 0 197 10 85 1 23] 
#[0 10 89 0 7] 
#[0 4 234 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 7 253 0 7 4 238 0 11 4 238 0 22 4 238 0 27 4 238 0 28 4 238 0 29 4 238 0 30 4 238 0 31 4 238 0 32 4 238 0 33 4 238 0 34 4 238 0 35 4 238 0 36 4 238 0 37 4 238 0 38 4 238 0 39 4 238 0 40 4 238 0 44 4 238 0 54 4 238 0 57 4 238 0 70 4 238 0 73 4 238 0 74 4 238 0 79 4 238 0 81 4 238 0 83 4 238 0 85 4 238 0 86 4 238 0 88 4 238 0 89 4 238 0 96 4 238 0 97 4 238 0 99 4 238 0 102 4 238 0 103 4 238 0 104 4 238 0 105 4 238 0 109 4 238 0 112 4 238 0 113 4 238 0 120 4 238 0 121 4 238 0 124 4 238 0 129 4 238 0 130 4 238 0 131 4 238 0 132 4 238 0 136 4 238 0 138 4 238 0 141 4 238 0 142 4 238 0 146 4 238 0 149 4 238 0 161 4 238 0 166 4 238 0 167 4 238 0 170 2 35 0 171 4 238 0 172 10 93 1 31 4 238 1 142] 
#[0 10 97 0 171] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 10 101 0 180 10 101 0 181 10 101 0 182 10 101 0 183 10 101 0 184 10 101 0 185 10 101 0 186 4 253 0 187 10 101 0 188 10 101 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 10 101 1 37 10 101 1 38 10 101 1 39 10 101 1 40 10 101 1 41 10 101 1 42 10 101 1 43 10 101 1 44 10 101 1 45 10 101 1 47 10 101 1 49 10 101 1 51 5 61 1 52 5 65 1 53 10 101 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 10 101 1 139 10 101 1 141] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 10 105 0 180 10 105 0 181 10 105 0 182 10 105 0 183 10 105 0 184 10 105 0 185 10 105 0 186 4 253 0 187 10 105 0 188 10 105 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 10 105 1 37 10 105 1 38 10 105 1 39 10 105 1 40 10 105 1 41 10 105 1 42 10 105 1 43 10 105 1 44 10 105 1 45 10 105 1 47 10 105 1 49 10 105 1 51 5 61 1 52 5 65 1 53 10 105 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 10 105 1 139 10 105 1 141] 
#[1 4 242 0 11 4 242 0 79 4 242 0 96 4 242 0 121 4 242 0 161 2 39 0 171 4 242 0 172 4 242 1 142] 
#[1 0 54 0 11 0 54 0 171 0 54 0 172 10 113 0 215] 
#[1 6 17 0 11 6 21 0 171 6 25 0 172 10 117 0 207 6 33 0 214 6 37 0 216 6 41 0 217] 
#[1 4 246 0 79 4 246 0 93 4 246 0 95 4 246 0 96 4 246 0 118 4 246 0 121 4 246 0 150 4 246 0 161 8 57 0 172] 
#[1 10 121 0 147 10 125 0 151] 
#[0 10 129 0 118] 
#[0 4 250 0 1 0 9 0 11 0 22 0 24 0 26 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 74 0 81 0 83 0 85 0 86 0 89 0 90 0 97 0 99 0 100 0 102 0 104 0 105 0 106 0 107 0 108 0 112 0 113 0 120 0 123 0 124 0 129 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 142 0 146 0 149 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172] 
#[1 4 254 0 1 4 254 0 9 4 254 0 11 4 254 0 22 4 254 0 24 4 254 0 26 4 254 0 41 4 254 0 42 4 254 0 43 4 254 0 44 4 254 0 48 4 254 0 53 4 254 0 54 4 254 0 55 4 254 0 57 4 254 0 58 4 254 0 70 4 254 0 72 4 254 0 74 4 254 0 81 4 254 0 83 4 254 0 85 4 254 0 86 4 254 0 89 4 254 0 90 4 254 0 97 4 254 0 99 4 254 0 100 4 254 0 102 4 254 0 104 4 254 0 105 4 254 0 106 4 254 0 107 4 254 0 108 4 254 0 112 4 254 0 113 4 254 0 120 4 254 0 123 4 254 0 124 4 254 0 129 4 254 0 131 4 254 0 132 4 254 0 133 4 254 0 134 4 254 0 135 4 254 0 136 4 254 0 138 4 254 0 142 4 254 0 146 4 254 0 149 4 254 0 151 4 254 0 152 4 254 0 161 4 254 0 166 4 254 0 167 4 254 0 170 2 43 0 171 4 254 0 172] 
#[0 5 2 0 1 0 9 0 22 0 24 0 44 0 53 0 54 0 57 0 74 0 79 0 81 0 85 0 86 0 93 0 95 0 96 0 104 0 112 0 113 0 118 0 120 0 121 0 136 0 142 0 149 0 150 0 161 0 166 0 167 0 170 0 172] 
#[0 4 22 0 1 0 9 0 11 0 22 0 24 0 26 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 74 0 81 0 83 0 85 0 86 0 89 0 90 0 97 0 99 0 100 0 102 0 104 0 105 0 106 0 107 0 108 0 112 0 113 0 120 0 123 0 124 0 129 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 142 0 146 0 149 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172] 
#[0 10 137 0 171] 
#[0 5 6 0 11 0 171 0 172] 
#[0 5 10 0 1 0 9 0 11 0 22 0 24 0 26 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 74 0 81 0 83 0 85 0 86 0 89 0 90 0 97 0 99 0 100 0 102 0 104 0 105 0 106 0 107 0 108 0 112 0 113 0 120 0 123 0 124 0 129 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 142 0 146 0 149 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172] 
#[1 0 6 0 22 0 6 0 44 0 6 0 54 0 6 0 57 0 6 0 74 0 6 0 81 0 6 0 85 0 6 0 86 0 6 0 96 0 6 0 104 0 6 0 112 0 6 0 113 0 6 0 120 0 6 0 136 0 6 0 142 0 6 0 149 0 6 0 166 0 6 0 167 0 6 0 170 0 6 0 172 10 141 0 177 10 145 0 249] 
#[1 10 149 0 4 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 8 233 0 76 10 169 0 78 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 10 153 0 125 10 157 0 127 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 10 161 0 171 10 165 0 191 0 253 0 194 10 165 0 195 10 165 0 196 10 165 0 197 10 169 0 252 10 173 1 0] 
#[1 8 81 0 3 10 177 0 253] 
#[0 5 14 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 10 181 0 7 5 18 0 11 5 18 0 79 5 18 0 96 5 18 0 121 5 18 0 161 2 47 0 171 5 18 0 172 10 189 1 105 5 18 1 142] 
#[1 9 173 0 5 9 177 0 6 9 181 0 8 9 185 0 10 9 189 0 14 9 193 0 16 9 197 0 17 9 201 0 18 9 205 0 19 9 209 0 20 9 213 0 45 9 217 0 47 9 221 0 52 9 225 0 66 9 229 0 67 9 233 0 69 9 237 0 98 9 241 0 126 10 193 0 143 10 197 0 144 9 245 0 145 9 249 0 153 9 253 1 46 10 1 1 48 10 5 1 50] 
#[1 9 173 0 5 9 177 0 6 9 181 0 8 9 185 0 10 9 189 0 14 9 193 0 16 9 197 0 17 9 201 0 18 9 205 0 19 9 209 0 20 10 201 0 23 9 213 0 45 9 217 0 47 9 221 0 52 9 225 0 66 9 229 0 67 9 233 0 69 9 237 0 98 9 241 0 126 9 245 0 145 9 249 0 153 9 253 1 46 10 1 1 48 10 5 1 50] 
#[1 0 153 0 107 10 205 0 133 10 209 1 107] 
#[1 9 173 0 5 9 177 0 6 9 181 0 8 9 185 0 10 9 189 0 14 9 193 0 16 9 197 0 17 9 201 0 18 9 205 0 19 9 209 0 20 9 213 0 45 9 217 0 47 9 221 0 52 9 225 0 66 9 229 0 67 9 233 0 69 9 237 0 98 0 149 0 106 0 153 0 107 9 241 0 126 9 245 0 145 9 249 0 153 9 253 1 46 10 1 1 48 10 5 1 50 10 213 1 102 10 213 1 107 10 213 1 108] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 10 217 0 180 10 217 0 181 10 217 0 182 10 217 0 183 10 217 0 184 10 217 0 185 10 217 0 186 4 253 0 187 10 217 0 188 10 217 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 10 217 1 37 10 217 1 38 10 217 1 39 10 217 1 40 10 217 1 41 10 217 1 42 10 217 1 43 10 217 1 44 10 217 1 45 10 217 1 47 10 217 1 49 10 217 1 51 5 61 1 52 5 65 1 53 10 217 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 10 217 1 139 10 217 1 141] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 5 229 0 63 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 10 229 0 180 10 229 0 181 10 229 0 182 10 229 0 183 10 229 0 184 10 229 0 185 10 229 0 186 4 253 0 187 10 229 0 188 10 229 0 189 6 121 0 191 0 253 0 194 6 121 0 195 6 121 0 196 6 121 0 197 10 221 1 23 10 225 1 30 10 229 1 37 10 229 1 38 10 229 1 39 10 229 1 40 10 229 1 41 10 229 1 42 10 229 1 43 10 229 1 44 10 229 1 45 10 229 1 47 10 229 1 49 10 229 1 51 5 61 1 52 5 65 1 53 10 229 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 10 229 1 139 10 229 1 141] 
#[1 6 177 0 5 9 169 0 18 6 189 0 23] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 10 233 0 180 10 233 0 181 10 233 0 182 10 233 0 183 10 233 0 184 10 233 0 185 10 233 0 186 4 253 0 187 10 233 0 188 10 233 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 10 233 1 37 10 233 1 38 10 233 1 39 10 233 1 40 10 233 1 41 10 233 1 42 10 233 1 43 10 233 1 44 10 233 1 45 10 233 1 47 10 233 1 49 10 233 1 51 5 61 1 52 5 65 1 53 10 233 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 10 233 1 139 10 233 1 141] 
#[1 0 6 0 22 0 6 0 44 0 6 0 54 0 6 0 57 0 6 0 74 0 6 0 81 0 6 0 85 0 6 0 86 0 6 0 96 0 6 0 104 0 6 0 112 0 6 0 113 0 6 0 120 0 6 0 136 0 6 0 142 0 6 0 149 0 6 0 166 0 6 0 167 0 6 0 170 0 6 0 172 10 237 0 177 10 241 0 244] 
#[0 5 22 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 10 245 0 171] 
#[1 10 249 0 150 3 177 0 161 10 253 0 182] 
#[0 11 1 0 171] 
#[1 11 5 0 96 3 177 0 161 11 9 0 182] 
#[1 5 26 0 1 5 26 0 3 5 26 0 4 5 26 0 5 5 26 0 7 5 26 0 9 5 26 0 11 5 26 0 22 5 26 0 24 5 26 0 26 5 26 0 27 5 26 0 28 5 26 0 29 5 26 0 30 5 26 0 31 5 26 0 32 5 26 0 33 5 26 0 34 5 26 0 35 5 26 0 36 5 26 0 37 5 26 0 38 5 26 0 39 5 26 0 40 5 26 0 41 5 26 0 42 5 26 0 43 5 26 0 44 5 26 0 48 5 26 0 53 5 26 0 54 5 26 0 55 5 26 0 57 5 26 0 58 5 26 0 70 5 26 0 72 5 26 0 73 5 26 0 74 5 26 0 79 5 26 0 81 5 26 0 83 5 26 0 85 5 26 0 86 5 26 0 88 5 26 0 89 5 26 0 90 5 26 0 96 5 26 0 97 5 26 0 99 5 26 0 100 5 26 0 102 5 26 0 103 5 26 0 104 5 26 0 105 5 26 0 106 5 26 0 107 5 26 0 108 5 26 0 109 5 26 0 112 5 26 0 113 5 26 0 120 5 26 0 121 5 26 0 123 5 26 0 124 5 26 0 129 5 26 0 130 5 26 0 131 5 26 0 132 5 26 0 133 5 26 0 134 5 26 0 135 5 26 0 136 5 26 0 138 5 26 0 141 5 26 0 142 5 26 0 146 5 26 0 149 5 26 0 151 5 26 0 152 5 26 0 161 5 26 0 166 5 26 0 167 5 26 0 170 2 51 0 171 5 26 0 172 5 26 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 11 13 0 180 11 13 0 181 11 13 0 182 11 13 0 183 11 13 0 184 11 13 0 185 11 13 0 186 4 253 0 187 11 13 0 188 11 13 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 11 13 1 37 11 13 1 38 11 13 1 39 11 13 1 40 11 13 1 41 11 13 1 42 11 13 1 43 11 13 1 44 11 13 1 45 11 13 1 47 11 13 1 49 11 13 1 51 5 61 1 52 5 65 1 53 11 13 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 11 13 1 139 11 13 1 141] 
#[1 5 30 0 1 5 30 0 3 5 30 0 4 5 30 0 5 5 30 0 7 5 30 0 9 5 30 0 11 5 30 0 22 5 30 0 24 5 30 0 26 5 30 0 27 5 30 0 28 5 30 0 29 5 30 0 30 5 30 0 31 5 30 0 32 5 30 0 33 5 30 0 34 5 30 0 35 5 30 0 36 5 30 0 37 5 30 0 38 5 30 0 39 5 30 0 40 5 30 0 41 5 30 0 42 5 30 0 43 5 30 0 44 5 30 0 48 5 30 0 53 5 30 0 54 5 30 0 55 5 30 0 57 5 30 0 58 5 30 0 70 5 30 0 72 5 30 0 73 5 30 0 74 5 30 0 79 5 30 0 81 5 30 0 83 5 30 0 85 5 30 0 86 5 30 0 88 5 30 0 89 5 30 0 90 5 30 0 96 5 30 0 97 5 30 0 99 5 30 0 100 5 30 0 102 5 30 0 103 5 30 0 104 5 30 0 105 5 30 0 106 5 30 0 107 5 30 0 108 5 30 0 109 5 30 0 112 5 30 0 113 5 30 0 120 5 30 0 121 5 30 0 123 5 30 0 124 5 30 0 129 5 30 0 130 5 30 0 131 5 30 0 132 5 30 0 133 5 30 0 134 5 30 0 135 5 30 0 136 5 30 0 138 5 30 0 141 5 30 0 142 5 30 0 146 5 30 0 149 5 30 0 151 5 30 0 152 5 30 0 161 5 30 0 166 5 30 0 167 5 30 0 170 2 55 0 171 5 30 0 172 5 30 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 11 17 0 180 11 17 0 181 11 17 0 182 11 17 0 183 11 17 0 184 11 17 0 185 11 17 0 186 4 253 0 187 11 17 0 188 11 17 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 11 17 1 37 11 17 1 38 11 17 1 39 11 17 1 40 11 17 1 41 11 17 1 42 11 17 1 43 11 17 1 44 11 17 1 45 11 17 1 47 11 17 1 49 11 17 1 51 5 61 1 52 5 65 1 53 11 17 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 11 17 1 139 11 17 1 141] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 11 21 0 180 11 21 0 181 11 21 0 182 11 21 0 183 11 21 0 184 11 21 0 185 11 21 0 186 4 253 0 187 11 21 0 188 11 21 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 11 21 1 37 11 21 1 38 11 21 1 39 11 21 1 40 11 21 1 41 11 21 1 42 11 21 1 43 11 21 1 44 11 21 1 45 11 21 1 47 11 21 1 49 11 21 1 51 5 61 1 52 5 65 1 53 11 21 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 11 21 1 139 11 21 1 141] 
#[1 2 182 0 1 2 182 0 3 2 182 0 4 2 182 0 5 2 182 0 7 2 182 0 9 2 182 0 11 1 27 0 22 2 182 0 24 2 182 0 26 2 182 0 27 2 182 0 28 2 182 0 29 2 182 0 30 2 182 0 31 2 182 0 32 2 182 0 33 2 182 0 34 2 182 0 35 2 182 0 36 2 182 0 37 2 182 0 38 2 182 0 39 2 182 0 40 2 182 0 41 2 182 0 42 2 182 0 43 1 31 0 44 2 182 0 48 2 59 0 53 1 35 0 54 2 182 0 55 1 39 0 57 2 182 0 58 2 182 0 70 2 182 0 72 2 182 0 73 1 43 0 74 11 29 0 75 11 29 0 77 2 182 0 79 1 47 0 81 2 182 0 83 11 29 0 84 1 51 0 85 1 55 0 86 11 29 0 87 2 182 0 88 2 182 0 89 2 182 0 90 11 29 0 91 2 182 0 96 2 182 0 97 2 182 0 99 2 182 0 100 2 182 0 102 2 182 0 103 1 59 0 104 2 182 0 105 2 182 0 106 2 182 0 107 2 182 0 108 2 182 0 109 11 29 0 111 1 63 0 112 1 67 0 113 11 29 0 115 11 29 0 116 11 29 0 117 1 71 0 120 2 182 0 121 2 182 0 123 2 182 0 124 2 182 0 129 2 182 0 130 2 182 0 131 2 182 0 132 2 182 0 133 2 182 0 134 2 182 0 135 1 75 0 136 11 29 0 137 2 182 0 138 11 29 0 140 2 182 0 141 1 79 0 142 2 182 0 146 5 165 0 148 1 83 0 149 2 182 0 151 2 182 0 152 2 182 0 161 1 87 0 166 1 91 0 167 1 95 0 170 2 182 0 171 2 182 0 172 5 169 0 191 0 253 0 194 5 169 0 195 5 169 0 196 5 169 0 197 11 29 0 222 11 29 0 224 5 181 0 226 11 29 0 227 2 182 1 142] 
#[0 11 33 0 171] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 2 221 0 191 0 253 0 194 2 221 0 195 2 221 0 196 2 221 0 197 11 37 1 24 11 41 1 33] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 11 45 0 191 0 253 0 194 11 45 0 195 11 45 0 196 11 45 0 197] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 11 49 0 191 0 253 0 194 11 49 0 195 11 49 0 196 11 49 0 197] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 11 53 0 191 0 253 0 194 11 53 0 195 11 53 0 196 11 53 0 197] 
#[1 11 57 0 12 11 61 0 18] 
#[1 11 65 0 12 11 69 0 18] 
#[0 5 34 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 2 221 0 191 0 253 0 194 2 221 0 195 2 221 0 196 2 221 0 197 11 73 1 24] 
#[0 5 38 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 11 77 0 180 11 77 0 181 11 77 0 182 11 77 0 183 11 77 0 184 11 77 0 185 11 77 0 186 4 253 0 187 11 77 0 188 11 77 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 11 77 1 37 11 77 1 38 11 77 1 39 11 77 1 40 11 77 1 41 11 77 1 42 11 77 1 43 11 77 1 44 11 77 1 45 11 77 1 47 11 77 1 49 11 77 1 51 5 61 1 52 5 65 1 53 11 77 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 11 77 1 139 11 77 1 141] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 11 81 0 180 11 81 0 181 11 81 0 182 11 81 0 183 11 81 0 184 11 81 0 185 11 81 0 186 4 253 0 187 11 81 0 188 11 81 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 11 81 1 37 11 81 1 38 11 81 1 39 11 81 1 40 11 81 1 41 11 81 1 42 11 81 1 43 11 81 1 44 11 81 1 45 11 81 1 47 11 81 1 49 11 81 1 51 5 61 1 52 5 65 1 53 11 81 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 11 81 1 139 11 81 1 141] 
#[1 5 42 0 1 5 42 0 3 5 42 0 4 5 42 0 6 5 42 0 7 5 42 0 8 5 42 0 9 5 42 0 11 5 42 0 13 5 42 0 22 5 42 0 24 5 42 0 44 5 42 0 53 5 42 0 54 5 42 0 57 5 42 0 62 5 42 0 74 5 42 0 76 5 42 0 78 5 42 0 79 5 42 0 81 5 42 0 85 5 42 0 86 5 42 0 96 5 42 0 104 5 42 0 112 5 42 0 113 5 42 0 120 5 42 0 121 5 42 0 122 5 42 0 127 5 42 0 136 5 42 0 142 5 42 0 149 5 42 0 154 5 42 0 159 5 42 0 160 5 42 0 161 5 42 0 162 5 42 0 163 5 42 0 164 5 42 0 165 5 42 0 166 5 42 0 167 5 42 0 169 5 42 0 170 2 63 0 171 5 42 0 172 5 42 1 142] 
#[1 5 46 0 1 5 46 0 3 5 46 0 4 5 46 0 6 5 46 0 7 5 46 0 8 5 46 0 9 5 46 0 11 5 46 0 13 5 46 0 22 5 46 0 24 5 46 0 44 5 46 0 53 5 46 0 54 5 46 0 57 5 46 0 62 5 46 0 74 5 46 0 76 5 46 0 78 5 46 0 79 5 46 0 81 5 46 0 85 5 46 0 86 5 46 0 96 5 46 0 104 5 46 0 112 5 46 0 113 5 46 0 120 5 46 0 121 5 46 0 122 5 46 0 127 5 46 0 136 5 46 0 142 5 46 0 149 5 46 0 154 5 46 0 159 5 46 0 160 5 46 0 161 5 46 0 162 5 46 0 163 5 46 0 164 5 46 0 165 5 46 0 166 5 46 0 167 5 46 0 169 5 46 0 170 2 67 0 171 5 46 0 172 5 46 1 142] 
#[0 5 50 0 171] 
#[0 5 54 0 171] 
#[0 11 93 0 171] 
#[1 1 115 0 1 1 119 0 3 3 66 0 4 3 66 0 5 3 66 0 7 1 115 0 9 3 66 0 11 3 66 0 13 3 66 0 22 3 66 0 24 3 66 0 26 3 66 0 27 3 66 0 28 3 66 0 29 3 66 0 30 3 66 0 31 3 66 0 32 3 66 0 33 3 66 0 34 3 66 0 35 3 66 0 36 3 66 0 37 3 66 0 38 3 66 0 39 3 66 0 40 3 66 0 41 3 66 0 42 3 66 0 43 3 66 0 44 3 66 0 48 3 66 0 53 3 66 0 54 3 66 0 55 3 66 0 57 3 66 0 58 3 66 0 70 3 66 0 72 3 66 0 73 3 66 0 74 3 66 0 79 3 66 0 81 3 66 0 83 3 66 0 85 3 66 0 86 3 66 0 88 3 66 0 89 3 66 0 90 3 66 0 96 3 66 0 97 3 66 0 99 3 66 0 100 3 66 0 102 3 66 0 103 3 66 0 104 3 66 0 105 3 66 0 106 3 66 0 107 3 66 0 108 3 66 0 109 3 66 0 112 3 66 0 113 3 66 0 118 3 66 0 120 3 66 0 121 3 66 0 123 3 66 0 124 3 66 0 129 3 66 0 130 3 66 0 131 3 66 0 132 3 66 0 133 3 66 0 134 3 66 0 135 3 66 0 136 3 66 0 138 3 66 0 141 3 66 0 142 3 66 0 146 3 66 0 149 3 66 0 150 3 66 0 151 3 66 0 152 3 66 0 161 3 66 0 166 3 66 0 167 3 66 0 170 2 71 0 171 3 66 0 172 3 66 1 142] 
#[0 5 58 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 11 101 0 171] 
#[1 5 62 0 1 5 62 0 3 5 62 0 4 5 62 0 5 5 62 0 7 5 62 0 9 5 62 0 11 5 62 0 13 5 62 0 22 5 62 0 24 5 62 0 26 5 62 0 27 5 62 0 28 5 62 0 29 5 62 0 30 5 62 0 31 5 62 0 32 5 62 0 33 5 62 0 34 5 62 0 35 5 62 0 36 5 62 0 37 5 62 0 38 5 62 0 39 5 62 0 40 5 62 0 41 5 62 0 42 5 62 0 43 5 62 0 44 5 62 0 48 5 62 0 53 5 62 0 54 5 62 0 55 5 62 0 57 5 62 0 58 5 62 0 70 5 62 0 72 5 62 0 73 5 62 0 74 5 62 0 79 5 62 0 81 5 62 0 83 5 62 0 85 5 62 0 86 5 62 0 88 5 62 0 89 5 62 0 90 5 62 0 96 5 62 0 97 5 62 0 99 5 62 0 100 5 62 0 102 5 62 0 103 5 62 0 104 5 62 0 105 5 62 0 106 5 62 0 107 5 62 0 108 5 62 0 109 5 62 0 112 5 62 0 113 5 62 0 118 5 62 0 120 5 62 0 121 5 62 0 123 5 62 0 124 5 62 0 129 5 62 0 130 5 62 0 131 5 62 0 132 5 62 0 133 5 62 0 134 5 62 0 135 5 62 0 136 5 62 0 138 5 62 0 141 5 62 0 142 5 62 0 146 5 62 0 149 5 62 0 150 5 62 0 151 5 62 0 152 5 62 0 161 5 62 0 166 5 62 0 167 5 62 0 170 2 75 0 171 5 62 0 172 5 62 1 142] 
#[1 4 154 0 4 11 105 0 7 4 154 0 11 2 79 0 13 4 154 0 79 4 154 0 96 4 154 0 121 4 154 0 161 4 154 0 171 4 154 0 172 11 113 1 135 4 154 1 142] 
#[0 5 66 0 1 0 3 0 4 0 6 0 7 0 8 0 9 0 11 0 13 0 22 0 24 0 44 0 53 0 54 0 57 0 62 0 74 0 76 0 78 0 79 0 81 0 85 0 86 0 96 0 104 0 112 0 113 0 120 0 121 0 122 0 127 0 136 0 142 0 149 0 154 0 159 0 160 0 161 0 162 0 163 0 164 0 165 0 166 0 167 0 169 0 170 0 171 0 172 1 142] 
#[1 5 70 0 4 11 117 0 7 5 70 0 11 11 121 0 13 5 70 0 79 5 70 0 96 5 70 0 121 5 70 0 161 5 70 0 171 5 70 0 172 11 125 1 134 5 70 1 142] 
#[0 5 74 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 11 129 0 4] 
#[1 0 6 0 96 2 83 0 172 11 137 0 177 11 141 0 205 11 145 0 207] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 11 149 0 191 0 253 0 194 11 149 0 195 11 149 0 196 11 149 0 197] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 11 153 0 191 0 253 0 194 11 153 0 195 11 153 0 196 11 153 0 197] 
#[1 8 81 0 3 11 157 0 253] 
#[1 2 87 0 1 0 146 0 3 4 13 0 5 2 87 0 9 2 87 0 11 2 87 0 22 2 87 0 24 2 87 0 26 2 87 0 41 2 87 0 42 2 87 0 43 2 87 0 44 2 87 0 48 2 87 0 53 2 87 0 54 2 87 0 55 2 87 0 57 2 87 0 58 2 87 0 70 2 87 0 72 2 87 0 74 2 87 0 81 2 87 0 83 2 87 0 85 2 87 0 86 2 87 0 89 2 87 0 90 2 87 0 97 2 87 0 99 2 87 0 100 2 87 0 102 2 87 0 104 2 87 0 105 2 87 0 106 2 87 0 107 2 87 0 108 2 87 0 112 2 87 0 113 2 87 0 120 2 87 0 123 2 87 0 124 2 87 0 129 2 87 0 131 2 87 0 132 2 87 0 133 2 87 0 134 2 87 0 135 2 87 0 136 2 87 0 138 2 87 0 142 2 87 0 146 2 87 0 149 2 87 0 151 2 87 0 152 2 87 0 161 2 87 0 166 2 87 0 167 2 87 0 170 2 91 0 171 2 87 0 172 11 165 0 228 11 165 0 229 11 165 0 233 11 169 1 10 11 173 1 11] 
#[1 11 177 0 25 11 181 0 85 11 185 0 142] 
#[0 11 189 0 119] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 11 193 0 191 0 253 0 194 11 193 0 195 11 193 0 196 11 193 0 197] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 11 197 0 191 0 253 0 194 11 197 0 195 11 197 0 196 11 197 0 197] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 11 201 0 191 0 253 0 194 11 201 0 195 11 201 0 196 11 201 0 197] 
#[1 2 95 0 1 8 81 0 3 2 95 0 9 2 95 0 11 2 95 0 22 2 95 0 24 2 95 0 26 2 95 0 41 2 95 0 42 2 95 0 43 2 95 0 44 2 95 0 48 2 95 0 53 2 95 0 54 2 95 0 55 2 95 0 57 2 95 0 58 2 95 0 70 2 95 0 72 2 95 0 74 2 95 0 81 2 95 0 83 2 95 0 85 2 95 0 86 2 95 0 89 2 95 0 90 2 95 0 97 2 95 0 99 2 95 0 100 2 95 0 102 2 95 0 104 2 95 0 105 2 95 0 106 2 95 0 107 2 95 0 108 2 95 0 112 2 95 0 113 2 95 0 120 2 95 0 123 2 95 0 124 2 95 0 129 2 95 0 131 2 95 0 132 2 95 0 133 2 95 0 134 2 95 0 135 2 95 0 136 2 95 0 138 2 95 0 142 2 95 0 146 2 95 0 149 2 95 0 151 2 95 0 152 2 95 0 161 2 95 0 166 2 95 0 167 2 95 0 170 2 99 0 171 2 95 0 172 11 209 0 221 11 213 0 253] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 11 217 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 4 174 0 1 4 174 0 9 4 174 0 11 4 174 0 22 4 174 0 24 4 174 0 26 4 174 0 41 4 174 0 42 4 174 0 43 4 174 0 44 4 174 0 48 4 174 0 53 4 174 0 54 4 174 0 55 4 174 0 57 4 174 0 58 4 174 0 70 4 174 0 72 4 174 0 74 4 174 0 81 4 174 0 83 4 174 0 85 4 174 0 86 4 174 0 89 4 174 0 90 4 174 0 97 4 174 0 99 4 174 0 100 4 174 0 102 4 174 0 104 4 174 0 105 4 174 0 106 4 174 0 107 4 174 0 108 4 174 0 112 4 174 0 113 4 174 0 120 4 174 0 123 4 174 0 124 4 174 0 129 4 174 0 131 4 174 0 132 4 174 0 133 4 174 0 134 4 174 0 135 4 174 0 136 4 174 0 138 4 174 0 142 4 174 0 146 4 174 0 149 4 174 0 151 4 174 0 152 4 174 0 161 4 174 0 166 4 174 0 167 4 174 0 170 2 103 0 171 4 174 0 172 11 221 0 221] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 11 225 0 180 11 225 0 181 11 225 0 182 11 225 0 183 11 225 0 184 11 225 0 185 11 225 0 186 4 253 0 187 11 225 0 188 11 225 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 11 225 1 37 11 225 1 38 11 225 1 39 11 225 1 40 11 225 1 41 11 225 1 42 11 225 1 43 11 225 1 44 11 225 1 45 11 225 1 47 11 225 1 49 11 225 1 51 5 61 1 52 5 65 1 53 11 225 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 11 225 1 139 11 225 1 141] 
#[1 11 229 0 103 11 233 0 141] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 11 237 0 191 0 253 0 194 11 237 0 195 11 237 0 196 11 237 0 197] 
#[1 11 241 0 104 11 245 0 113 11 249 0 136] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 11 253 0 191 0 253 0 194 11 253 0 195 11 253 0 196 11 253 0 197] 
#[1 12 1 0 103 12 5 0 130 12 9 0 141] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 12 13 0 191 0 253 0 194 12 13 0 195 12 13 0 196 12 13 0 197] 
#[1 12 17 0 104 12 21 0 113 12 25 0 136] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 12 29 0 191 0 253 0 194 12 29 0 195 12 29 0 196 12 29 0 197] 
#[0 5 86 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[1 0 253 0 22 2 245 0 27 2 245 0 28 2 245 0 29 2 245 0 30 2 245 0 31 2 245 0 32 2 245 0 33 2 245 0 34 2 245 0 35 2 245 0 36 2 245 0 37 2 245 0 38 2 245 0 39 2 245 0 40 0 253 0 44 0 253 0 54 0 253 0 57 0 89 0 70 2 173 0 73 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 2 177 0 88 0 117 0 89 0 125 0 97 0 129 0 99 3 1 0 102 2 181 0 103 0 253 0 104 3 1 0 105 2 185 0 109 0 253 0 112 0 253 0 113 0 253 0 120 2 197 0 124 3 1 0 129 2 201 0 130 3 1 0 131 0 189 0 132 0 253 0 136 2 209 0 138 2 213 0 141 0 253 0 142 0 217 0 146 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 3 69 0 172 2 221 0 191 0 253 0 194 2 221 0 195 2 221 0 196 2 221 0 197 7 113 0 200 7 113 0 201 7 113 0 203 7 113 0 204 7 113 0 208 2 245 0 209 7 113 0 210 7 113 0 211 3 1 0 223 7 113 0 242 7 113 0 243 7 113 0 247 7 113 0 248 7 113 1 5 7 113 1 6 7 113 1 7 3 21 1 8 7 113 1 9 7 113 1 12 7 113 1 13 7 113 1 14 7 113 1 15 7 113 1 16 7 113 1 17 7 113 1 18 7 113 1 19 7 113 1 20 7 113 1 21 7 113 1 22 1 105 1 24 7 113 1 25 7 113 1 26 7 113 1 27 7 113 1 28 7 113 1 29 7 113 1 33 7 113 1 36 5 90 1 142] 
#[1 0 6 0 22 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 30 0 6 0 31 0 6 0 32 0 6 0 33 0 6 0 34 0 6 0 35 0 6 0 36 0 6 0 37 0 6 0 38 0 6 0 39 0 6 0 40 0 6 0 44 0 6 0 54 0 6 0 57 0 6 0 70 0 6 0 73 0 6 0 74 0 6 0 81 0 6 0 83 0 6 0 85 0 6 0 86 0 6 0 88 0 6 0 89 0 6 0 97 0 6 0 99 0 6 0 102 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 109 0 6 0 112 0 6 0 113 0 6 0 120 0 6 0 124 0 6 0 129 0 6 0 130 0 6 0 131 0 6 0 132 0 6 0 136 0 6 0 138 0 6 0 141 0 6 0 142 0 6 0 146 0 6 0 149 0 6 0 166 0 6 0 167 0 6 0 170 0 6 0 172 12 33 0 177 4 133 0 178 0 6 1 142] 
#[1 12 37 0 4 12 41 0 171] 
#[0 5 94 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 12 45 0 4 9 173 0 5 9 177 0 6 9 181 0 8 9 185 0 10 9 189 0 14 9 193 0 16 9 197 0 17 9 201 0 18 9 205 0 19 9 209 0 20 9 213 0 45 9 217 0 47 9 221 0 52 9 225 0 66 9 229 0 67 9 233 0 69 9 237 0 98 9 241 0 126 9 245 0 145 9 249 0 153 9 253 1 46 10 1 1 48 10 5 1 50] 
#[0 5 98 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 5 102 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 4 57 0 1 5 106 0 3 5 106 0 4 5 106 0 5 5 106 0 7 2 107 0 9 5 106 0 11 5 106 0 13 5 106 0 22 5 106 0 24 5 106 0 26 5 106 0 27 5 106 0 28 5 106 0 29 5 106 0 30 5 106 0 31 5 106 0 32 5 106 0 33 5 106 0 34 5 106 0 35 5 106 0 36 5 106 0 37 5 106 0 38 5 106 0 39 5 106 0 40 5 106 0 41 5 106 0 42 5 106 0 43 5 106 0 44 5 106 0 48 5 106 0 53 5 106 0 54 5 106 0 55 5 106 0 57 5 106 0 58 5 106 0 70 5 106 0 72 5 106 0 73 5 106 0 74 5 106 0 79 5 106 0 81 5 106 0 83 5 106 0 85 5 106 0 86 5 106 0 88 5 106 0 89 5 106 0 90 5 106 0 96 5 106 0 97 5 106 0 99 5 106 0 100 5 106 0 102 5 106 0 103 5 106 0 104 5 106 0 105 5 106 0 106 5 106 0 107 5 106 0 108 5 106 0 109 5 106 0 112 5 106 0 113 5 106 0 118 5 106 0 120 5 106 0 121 5 106 0 123 5 106 0 124 5 106 0 129 5 106 0 130 5 106 0 131 5 106 0 132 5 106 0 133 5 106 0 134 5 106 0 135 5 106 0 136 5 106 0 138 5 106 0 141 5 106 0 142 5 106 0 146 5 106 0 149 5 106 0 150 5 106 0 151 5 106 0 152 5 106 0 161 5 106 0 166 5 106 0 167 5 106 0 170 5 106 0 171 5 106 0 172 5 106 1 142] 
#[0 12 49 0 171] 
#[0 5 110 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 4 57 0 1 5 114 0 3 5 114 0 4 5 114 0 5 5 114 0 7 2 111 0 9 5 114 0 11 5 114 0 13 5 114 0 22 5 114 0 24 5 114 0 26 5 114 0 27 5 114 0 28 5 114 0 29 5 114 0 30 5 114 0 31 5 114 0 32 5 114 0 33 5 114 0 34 5 114 0 35 5 114 0 36 5 114 0 37 5 114 0 38 5 114 0 39 5 114 0 40 5 114 0 41 5 114 0 42 5 114 0 43 5 114 0 44 5 114 0 48 5 114 0 53 5 114 0 54 5 114 0 55 5 114 0 57 5 114 0 58 5 114 0 70 5 114 0 72 5 114 0 73 5 114 0 74 5 114 0 79 5 114 0 81 5 114 0 83 5 114 0 85 5 114 0 86 5 114 0 88 5 114 0 89 5 114 0 90 5 114 0 96 5 114 0 97 5 114 0 99 5 114 0 100 5 114 0 102 5 114 0 103 5 114 0 104 5 114 0 105 5 114 0 106 5 114 0 107 5 114 0 108 5 114 0 109 5 114 0 112 5 114 0 113 5 114 0 118 5 114 0 120 5 114 0 121 5 114 0 123 5 114 0 124 5 114 0 129 5 114 0 130 5 114 0 131 5 114 0 132 5 114 0 133 5 114 0 134 5 114 0 135 5 114 0 136 5 114 0 138 5 114 0 141 5 114 0 142 5 114 0 146 5 114 0 149 5 114 0 150 5 114 0 151 5 114 0 152 5 114 0 161 5 114 0 166 5 114 0 167 5 114 0 170 5 114 0 171 5 114 0 172 5 114 1 142] 
#[1 7 165 0 158 12 53 0 190] 
#[0 5 118 0 8 0 155 0 158] 
#[0 12 57 0 171] 
#[0 5 122 0 171] 
#[0 5 126 0 171] 
#[0 5 130 0 171] 
#[0 5 134 0 171] 
#[0 5 138 0 171] 
#[0 5 142 0 171] 
#[0 5 146 0 171] 
#[0 12 61 0 171] 
#[0 5 150 0 171] 
#[0 5 154 0 171] 
#[0 5 158 0 171] 
#[0 5 162 0 171] 
#[0 5 166 0 171] 
#[0 5 170 0 171] 
#[0 5 174 0 171] 
#[0 5 178 0 171] 
#[0 5 182 0 171] 
#[0 5 186 0 171] 
#[0 12 65 0 171] 
#[0 5 190 0 171] 
#[0 12 69 0 171] 
#[0 12 73 0 171] 
#[0 12 77 0 171] 
#[0 12 81 0 171] 
#[0 12 85 0 171] 
#[0 12 89 0 171] 
#[0 12 93 0 171] 
#[1 12 97 0 7 12 101 0 171] 
#[1 12 105 0 7 12 109 0 171] 
#[0 5 194 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 12 113 0 171] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 4 218 0 11 4 218 0 13 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 4 218 0 79 0 253 0 81 0 253 0 85 0 253 0 86 4 218 0 96 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 218 0 121 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 2 19 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 4 218 0 171 4 218 0 172 12 117 0 180 12 117 0 181 12 117 0 182 12 117 0 183 12 117 0 184 12 117 0 185 12 117 0 186 4 253 0 187 12 117 0 188 12 117 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 12 117 1 37 12 117 1 38 12 117 1 39 12 117 1 40 12 117 1 41 12 117 1 42 12 117 1 43 12 117 1 44 12 117 1 45 12 117 1 47 12 117 1 49 12 117 1 51 5 61 1 52 5 65 1 53 12 117 1 54 5 73 1 55 5 73 1 56 5 73 1 57 12 121 1 65 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 12 117 1 139 12 117 1 141 4 218 1 142] 
#[1 4 218 0 11 4 218 0 13 4 218 0 79 4 218 0 96 4 218 0 121 4 218 0 161 2 115 0 171 4 218 0 172 12 129 1 65 4 218 1 142] 
#[1 5 198 0 11 12 133 0 13 5 198 0 79 5 198 0 96 5 198 0 121 5 198 0 161 5 198 0 171 5 198 0 172 12 137 1 64 5 198 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 4 218 0 11 4 218 0 13 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 4 218 0 79 0 253 0 81 0 253 0 85 0 253 0 86 4 218 0 96 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 218 0 121 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 2 19 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 2 119 0 171 4 218 0 172 12 145 0 180 12 145 0 181 12 145 0 182 12 145 0 183 12 145 0 184 12 145 0 185 12 145 0 186 4 253 0 187 12 145 0 188 12 145 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 12 145 1 37 12 145 1 38 12 145 1 39 12 145 1 40 12 145 1 41 12 145 1 42 12 145 1 43 12 145 1 44 12 145 1 45 12 145 1 47 12 145 1 49 12 145 1 51 5 61 1 52 5 65 1 53 12 145 1 54 5 73 1 55 5 73 1 56 5 73 1 57 12 149 1 65 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 12 145 1 139 12 145 1 141 4 218 1 142] 
#[0 12 153 0 171] 
#[0 12 157 0 171] 
#[1 7 237 0 3 4 13 0 5 2 123 0 7 2 123 0 11 2 123 0 22 2 123 0 27 2 123 0 28 2 123 0 29 2 123 0 30 2 123 0 31 2 123 0 32 2 123 0 33 2 123 0 34 2 123 0 35 2 123 0 36 2 123 0 37 2 123 0 38 2 123 0 39 2 123 0 40 2 123 0 44 2 123 0 54 2 123 0 57 2 123 0 70 2 123 0 73 2 123 0 74 2 123 0 79 2 123 0 81 2 123 0 83 2 123 0 85 2 123 0 86 2 123 0 88 2 123 0 89 2 123 0 96 2 123 0 97 2 123 0 99 2 123 0 102 2 123 0 103 2 123 0 104 2 123 0 105 2 123 0 109 2 123 0 112 2 123 0 113 2 123 0 120 2 123 0 121 2 123 0 124 2 123 0 129 2 123 0 130 2 123 0 131 2 123 0 132 2 123 0 136 2 123 0 138 2 123 0 141 2 123 0 142 2 123 0 146 2 123 0 149 2 123 0 161 2 123 0 166 2 123 0 167 2 123 0 170 2 127 0 171 2 123 0 172 12 165 0 228 12 165 0 229 12 161 0 230 12 165 0 233 2 123 1 142] 
#[1 12 169 0 4 12 173 0 7 12 177 0 231] 
#[1 4 222 0 4 4 222 0 7 7 177 0 171 12 181 0 232] 
#[0 5 206 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 5 229 0 63 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 5 233 0 191 0 253 0 194 5 233 0 195 5 233 0 196 5 233 0 197 12 185 1 23] 
#[0 5 210 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 5 229 0 63 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 12 189 0 171 5 233 0 191 0 253 0 194 5 233 0 195 5 233 0 196 5 233 0 197 12 193 1 23] 
#[0 5 214 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 12 197 0 180 12 197 0 181 12 197 0 182 12 197 0 183 12 197 0 184 12 197 0 185 12 197 0 186 4 253 0 187 12 197 0 188 12 197 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 12 197 1 37 12 197 1 38 12 197 1 39 12 197 1 40 12 197 1 41 12 197 1 42 12 197 1 43 12 197 1 44 12 197 1 45 12 197 1 47 12 197 1 49 12 197 1 51 5 61 1 52 5 65 1 53 12 197 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 12 197 1 139 12 197 1 141] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 1 235 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 12 201 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 12 205 0 118 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 1 235 0 171 0 54 0 172 2 85 0 175 12 209 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 12 213 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 12 217 0 151] 
#[1 6 17 0 11 6 21 0 171 6 25 0 172 12 221 0 207 6 33 0 214 6 37 0 216 6 41 0 217] 
#[1 5 218 0 79 5 218 0 93 5 218 0 95 5 218 0 96 5 218 0 118 5 218 0 121 5 218 0 150 5 218 0 161 8 57 0 172] 
#[0 12 225 0 171] 
#[0 12 229 0 171] 
#[1 5 222 0 11 5 222 0 79 5 222 0 96 5 222 0 121 5 222 0 161 2 131 0 171 5 222 0 172 5 222 1 142] 
#[0 5 226 0 1 0 9 0 11 0 22 0 24 0 26 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 74 0 81 0 83 0 85 0 86 0 89 0 90 0 97 0 99 0 100 0 102 0 104 0 105 0 106 0 107 0 108 0 112 0 113 0 120 0 123 0 124 0 129 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 142 0 146 0 149 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172] 
#[1 0 29 0 1 0 33 0 9 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 12 237 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 0 233 0 166 0 237 0 167 0 241 0 170 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 12 237 0 201 12 237 0 203 12 237 0 212 1 29 0 223 12 237 0 234 1 37 0 235 12 237 0 236 12 237 0 237 12 237 0 238 12 237 0 239 12 237 0 240 12 237 0 241 12 237 0 242 12 237 0 243 12 237 0 247 12 237 0 248 12 237 1 17 12 237 1 18 12 237 1 19 12 237 1 20 12 237 1 21 12 237 1 22 1 105 1 24 12 237 1 25 12 237 1 26 12 237 1 27 12 237 1 28 12 237 1 29 12 237 1 33 12 237 1 36 1 137 1 55 1 137 1 56 1 137 1 57 12 237 1 61 12 237 1 62 12 237 1 63 12 237 1 66 12 237 1 67 12 237 1 68 12 237 1 69 12 237 1 70 12 237 1 71 12 237 1 72 12 237 1 73 12 237 1 74 12 237 1 75 12 237 1 76 12 237 1 77 12 237 1 78 12 237 1 79 12 237 1 80 12 237 1 81 12 237 1 82 12 237 1 83 12 237 1 88 12 237 1 89 1 241 1 90 12 237 1 95 12 237 1 98 12 237 1 99 12 237 1 100 12 237 1 101 12 237 1 102 12 237 1 107 12 237 1 108 12 237 1 109 12 237 1 110 12 237 1 111 12 237 1 112 12 237 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 12 237 1 127 2 93 1 128 2 97 1 129 12 237 1 137 12 237 1 138 12 237 1 140] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 12 241 0 96 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 3 69 0 172 12 245 0 191 0 253 0 194 12 245 0 195 12 245 0 196 12 245 0 197 12 249 0 251] 
#[0 5 230 0 22 0 44 0 54 0 57 0 74 0 81 0 85 0 86 0 96 0 104 0 112 0 113 0 120 0 136 0 142 0 149 0 166 0 167 0 170 0 172] 
#[0 5 234 0 1 0 3 0 5 0 9 0 11 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 12 253 0 171] 
#[0 13 1 0 171] 
#[0 13 5 0 4] 
#[1 7 237 0 3 2 135 0 4 4 13 0 5 2 135 0 7 2 139 0 171 13 21 0 228 13 21 0 229 13 9 0 230 13 21 0 233 13 21 1 1 13 21 1 2] 
#[0 13 25 0 171] 
#[1 5 242 0 4 5 242 0 7 5 242 0 171 13 29 0 255] 
#[0 5 246 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 4 181 0 8 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 3 177 0 161 0 253 0 166 0 237 0 167 0 241 0 170 13 33 0 171 13 37 0 182 13 37 0 191 0 253 0 194 13 37 0 195 13 37 0 196 13 37 0 197 13 37 1 42 13 37 1 103] 
#[0 13 41 0 7] 
#[0 5 250 0 7 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 0 29 0 1 0 33 0 9 2 143 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 13 49 0 72 0 253 0 74 5 254 0 79 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 5 254 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 5 254 0 121 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 2 147 0 161 0 233 0 166 0 237 0 167 0 241 0 170 2 151 0 171 2 143 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 13 49 0 201 13 49 0 203 13 49 0 212 13 53 0 213 3 197 0 215 13 57 0 218 13 61 0 220 1 29 0 223 13 49 0 234 1 37 0 235 13 49 0 236 13 49 0 237 13 49 0 238 13 49 0 239 13 49 0 240 13 49 0 241 13 49 0 242 13 49 0 243 13 49 0 247 13 49 0 248 13 49 1 17 13 49 1 18 13 49 1 19 13 49 1 20 13 49 1 21 13 49 1 22 1 105 1 24 13 49 1 25 13 49 1 26 13 49 1 27 13 49 1 28 13 49 1 29 13 49 1 33 13 49 1 36 1 137 1 55 1 137 1 56 1 137 1 57 13 49 1 61 13 49 1 62 13 49 1 63 13 49 1 66 13 49 1 67 13 49 1 68 13 49 1 69 13 49 1 70 13 49 1 71 13 49 1 72 13 49 1 73 13 49 1 74 13 49 1 75 13 49 1 76 13 49 1 77 13 49 1 78 13 49 1 79 13 49 1 80 13 49 1 81 13 49 1 82 13 49 1 83 13 49 1 88 13 49 1 89 1 241 1 90 13 49 1 95 13 49 1 98 13 49 1 99 13 49 1 100 13 49 1 101 13 49 1 102 13 49 1 107 13 49 1 108 13 49 1 109 13 49 1 110 13 49 1 111 13 49 1 112 13 49 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 13 49 1 127 2 93 1 128 2 97 1 129 13 49 1 137 13 49 1 138 13 49 1 140 5 254 1 142] 
#[1 0 29 0 1 0 33 0 9 5 254 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 13 65 0 72 0 253 0 74 5 254 0 79 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 5 254 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 5 254 0 121 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 5 254 0 161 0 233 0 166 0 237 0 167 0 241 0 170 2 155 0 171 5 254 0 172 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 13 65 0 201 13 65 0 203 13 65 0 212 13 69 0 218 13 61 0 220 1 29 0 223 13 65 0 234 1 37 0 235 13 65 0 236 13 65 0 237 13 65 0 238 13 65 0 239 13 65 0 240 13 65 0 241 13 65 0 242 13 65 0 243 13 65 0 247 13 65 0 248 13 65 1 17 13 65 1 18 13 65 1 19 13 65 1 20 13 65 1 21 13 65 1 22 1 105 1 24 13 65 1 25 13 65 1 26 13 65 1 27 13 65 1 28 13 65 1 29 13 65 1 33 13 65 1 36 1 137 1 55 1 137 1 56 1 137 1 57 13 65 1 61 13 65 1 62 13 65 1 63 13 65 1 66 13 65 1 67 13 65 1 68 13 65 1 69 13 65 1 70 13 65 1 71 13 65 1 72 13 65 1 73 13 65 1 74 13 65 1 75 13 65 1 76 13 65 1 77 13 65 1 78 13 65 1 79 13 65 1 80 13 65 1 81 13 65 1 82 13 65 1 83 13 65 1 88 13 65 1 89 1 241 1 90 13 65 1 95 13 65 1 98 13 65 1 99 13 65 1 100 13 65 1 101 13 65 1 102 13 65 1 107 13 65 1 108 13 65 1 109 13 65 1 110 13 65 1 111 13 65 1 112 13 65 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 13 65 1 127 2 93 1 128 2 97 1 129 13 65 1 137 13 65 1 138 13 65 1 140 5 254 1 142] 
#[0 13 73 0 171] 
#[0 13 77 0 171] 
#[0 6 2 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 6 6 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 6 10 0 11 6 10 0 22 6 10 0 27 6 10 0 28 6 10 0 29 6 10 0 30 6 10 0 31 6 10 0 32 6 10 0 33 6 10 0 34 6 10 0 35 6 10 0 36 6 10 0 37 6 10 0 38 6 10 0 39 6 10 0 40 6 10 0 44 6 10 0 54 6 10 0 57 6 10 0 70 6 10 0 73 6 10 0 74 6 10 0 79 6 10 0 81 6 10 0 83 6 10 0 85 6 10 0 86 6 10 0 88 6 10 0 89 6 10 0 96 6 10 0 97 6 10 0 99 6 10 0 102 6 10 0 103 6 10 0 104 6 10 0 105 6 10 0 109 6 10 0 112 6 10 0 113 6 10 0 120 6 10 0 121 6 10 0 124 6 10 0 129 6 10 0 130 6 10 0 131 6 10 0 132 6 10 0 136 6 10 0 138 6 10 0 141 6 10 0 142 6 10 0 146 6 10 0 149 6 10 0 161 6 10 0 166 6 10 0 167 6 10 0 170 2 159 0 171 6 10 0 172 6 10 1 142] 
#[1 7 253 0 7 6 14 0 11 6 14 0 22 6 14 0 27 6 14 0 28 6 14 0 29 6 14 0 30 6 14 0 31 6 14 0 32 6 14 0 33 6 14 0 34 6 14 0 35 6 14 0 36 6 14 0 37 6 14 0 38 6 14 0 39 6 14 0 40 6 14 0 44 6 14 0 54 6 14 0 57 6 14 0 70 6 14 0 73 6 14 0 74 6 14 0 79 6 14 0 81 6 14 0 83 6 14 0 85 6 14 0 86 6 14 0 88 6 14 0 89 6 14 0 96 6 14 0 97 6 14 0 99 6 14 0 102 6 14 0 103 6 14 0 104 6 14 0 105 6 14 0 109 6 14 0 112 6 14 0 113 6 14 0 120 6 14 0 121 6 14 0 124 6 14 0 129 6 14 0 130 6 14 0 131 6 14 0 132 6 14 0 136 6 14 0 138 6 14 0 141 6 14 0 142 6 14 0 146 6 14 0 149 6 14 0 161 6 14 0 166 6 14 0 167 6 14 0 170 2 163 0 171 6 14 0 172 8 5 1 31 8 9 1 32 6 14 1 142] 
#[0 6 18 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 6 22 0 11 6 22 0 22 6 22 0 27 6 22 0 28 6 22 0 29 6 22 0 30 6 22 0 31 6 22 0 32 6 22 0 33 6 22 0 34 6 22 0 35 6 22 0 36 6 22 0 37 6 22 0 38 6 22 0 39 6 22 0 40 6 22 0 44 6 22 0 54 6 22 0 57 6 22 0 70 6 22 0 73 6 22 0 74 6 22 0 79 6 22 0 81 6 22 0 83 6 22 0 85 6 22 0 86 6 22 0 88 6 22 0 89 6 22 0 96 6 22 0 97 6 22 0 99 6 22 0 102 6 22 0 103 6 22 0 104 6 22 0 105 6 22 0 109 6 22 0 112 6 22 0 113 6 22 0 120 6 22 0 121 6 22 0 124 6 22 0 129 6 22 0 130 6 22 0 131 6 22 0 132 6 22 0 136 6 22 0 138 6 22 0 141 6 22 0 142 6 22 0 146 6 22 0 149 6 22 0 161 6 22 0 166 6 22 0 167 6 22 0 170 2 167 0 171 6 22 0 172 6 22 1 142] 
#[1 7 177 0 171 11 133 0 172 13 81 0 207] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 13 85 0 96 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 3 69 0 172 13 89 0 191 0 253 0 194 13 89 0 195 13 89 0 196 13 89 0 197 13 93 0 246] 
#[0 6 26 0 22 0 44 0 54 0 57 0 74 0 81 0 85 0 86 0 96 0 104 0 112 0 113 0 120 0 136 0 142 0 149 0 166 0 167 0 170 0 172] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 8 29 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 13 97 0 150 0 225 0 151 0 229 0 152 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 8 29 0 201 8 29 0 203 8 29 0 212 8 33 0 215 1 29 0 223 8 29 0 234 1 37 0 235 8 29 0 236 8 29 0 237 8 29 0 238 8 29 0 239 8 29 0 240 8 29 0 241 8 29 0 242 8 29 0 243 8 29 0 247 8 29 0 248 8 29 1 17 8 29 1 18 8 29 1 19 8 29 1 20 8 29 1 21 8 29 1 22 1 105 1 24 8 29 1 25 8 29 1 26 8 29 1 27 8 29 1 28 8 29 1 29 8 29 1 33 8 29 1 36 1 137 1 55 1 137 1 56 1 137 1 57 8 29 1 61 8 29 1 62 8 29 1 63 8 29 1 66 8 29 1 67 8 29 1 68 8 29 1 69 8 29 1 70 8 29 1 71 8 29 1 72 8 29 1 73 8 29 1 74 8 29 1 75 8 29 1 76 8 29 1 77 8 29 1 78 8 29 1 79 8 29 1 80 8 29 1 81 8 29 1 82 8 29 1 83 8 29 1 88 8 29 1 89 1 241 1 90 8 29 1 95 8 29 1 98 8 29 1 99 8 29 1 100 8 29 1 101 8 29 1 102 8 29 1 107 8 29 1 108 8 29 1 109 8 29 1 110 8 29 1 111 8 29 1 112 8 29 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 8 29 1 127 2 93 1 128 2 97 1 129 8 29 1 137 8 29 1 138 8 29 1 140] 
#[0 6 30 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 13 101 0 171] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 8 29 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 8 29 0 201 8 29 0 203 8 29 0 212 8 33 0 215 1 29 0 223 8 29 0 234 1 37 0 235 8 29 0 236 8 29 0 237 8 29 0 238 8 29 0 239 8 29 0 240 8 29 0 241 8 29 0 242 8 29 0 243 8 29 0 247 8 29 0 248 8 29 1 17 8 29 1 18 8 29 1 19 8 29 1 20 8 29 1 21 8 29 1 22 1 105 1 24 8 29 1 25 8 29 1 26 8 29 1 27 8 29 1 28 8 29 1 29 8 29 1 33 8 29 1 36 1 137 1 55 1 137 1 56 1 137 1 57 8 29 1 61 8 29 1 62 8 29 1 63 8 29 1 66 8 29 1 67 8 29 1 68 8 29 1 69 8 29 1 70 8 29 1 71 8 29 1 72 8 29 1 73 8 29 1 74 8 29 1 75 8 29 1 76 8 29 1 77 8 29 1 78 8 29 1 79 8 29 1 80 8 29 1 81 8 29 1 82 8 29 1 83 8 29 1 88 8 29 1 89 1 241 1 90 8 29 1 95 8 29 1 98 8 29 1 99 8 29 1 100 8 29 1 101 8 29 1 102 8 29 1 107 8 29 1 108 8 29 1 109 8 29 1 110 8 29 1 111 8 29 1 112 8 29 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 8 29 1 127 2 93 1 128 2 97 1 129 8 29 1 137 8 29 1 138 8 29 1 140] 
#[0 13 105 0 171] 
#[0 13 109 0 171] 
#[1 6 34 0 1 6 34 0 3 6 34 0 4 6 34 0 5 6 34 0 7 6 34 0 9 6 34 0 11 6 34 0 22 6 34 0 24 6 34 0 26 6 34 0 27 6 34 0 28 6 34 0 29 6 34 0 30 6 34 0 31 6 34 0 32 6 34 0 33 6 34 0 34 6 34 0 35 6 34 0 36 6 34 0 37 6 34 0 38 6 34 0 39 6 34 0 40 6 34 0 41 6 34 0 42 6 34 0 43 6 34 0 44 6 34 0 48 6 34 0 53 6 34 0 54 6 34 0 55 6 34 0 57 6 34 0 58 6 34 0 70 6 34 0 72 6 34 0 73 6 34 0 74 6 34 0 79 6 34 0 81 6 34 0 83 6 34 0 85 6 34 0 86 6 34 0 88 6 34 0 89 6 34 0 90 6 34 0 96 6 34 0 97 6 34 0 99 6 34 0 100 6 34 0 102 6 34 0 103 6 34 0 104 6 34 0 105 6 34 0 106 6 34 0 107 6 34 0 108 6 34 0 109 6 34 0 112 6 34 0 113 6 34 0 120 6 34 0 121 6 34 0 123 6 34 0 124 6 34 0 129 6 34 0 130 6 34 0 131 6 34 0 132 6 34 0 133 6 34 0 134 6 34 0 135 6 34 0 136 6 34 0 138 6 34 0 141 6 34 0 142 6 34 0 146 6 34 0 149 6 34 0 151 6 34 0 152 6 34 0 161 6 34 0 166 6 34 0 167 6 34 0 170 2 171 0 171 6 34 0 172 6 34 1 142] 
#[1 6 38 0 1 6 38 0 3 6 38 0 4 6 38 0 5 6 38 0 7 6 38 0 9 6 38 0 11 6 38 0 13 6 38 0 22 6 38 0 24 6 38 0 26 6 38 0 27 6 38 0 28 6 38 0 29 6 38 0 30 6 38 0 31 6 38 0 32 6 38 0 33 6 38 0 34 6 38 0 35 6 38 0 36 6 38 0 37 6 38 0 38 6 38 0 39 6 38 0 40 6 38 0 41 6 38 0 42 6 38 0 43 6 38 0 44 6 38 0 48 6 38 0 53 6 38 0 54 6 38 0 55 6 38 0 57 6 38 0 58 6 38 0 70 6 38 0 72 6 38 0 73 6 38 0 74 6 38 0 79 6 38 0 81 6 38 0 83 6 38 0 85 6 38 0 86 6 38 0 88 6 38 0 89 6 38 0 90 6 38 0 96 6 38 0 97 6 38 0 99 6 38 0 100 6 38 0 102 6 38 0 103 6 38 0 104 6 38 0 105 6 38 0 106 6 38 0 107 6 38 0 108 6 38 0 109 6 38 0 112 6 38 0 113 6 38 0 118 6 38 0 120 6 38 0 121 6 38 0 123 6 38 0 124 6 38 0 129 6 38 0 130 6 38 0 131 6 38 0 132 6 38 0 133 6 38 0 134 6 38 0 135 6 38 0 136 6 38 0 138 6 38 0 141 6 38 0 142 6 38 0 146 6 38 0 149 6 38 0 150 6 38 0 151 6 38 0 152 6 38 0 161 6 38 0 166 6 38 0 167 6 38 0 170 2 175 0 171 6 38 0 172 6 38 1 142] 
#[1 6 42 0 7 6 46 0 11 6 46 0 79 6 46 0 96 6 46 0 121 6 46 0 161 2 179 0 171 6 46 0 172 6 46 1 142] 
#[0 13 113 0 171] 
#[1 6 50 0 1 6 50 0 3 6 50 0 4 13 117 0 5 6 50 0 7 6 50 0 9 6 50 0 11 6 50 0 22 6 50 0 24 6 50 0 26 6 50 0 27 6 50 0 28 6 50 0 29 6 50 0 30 6 50 0 31 6 50 0 32 6 50 0 33 6 50 0 34 6 50 0 35 6 50 0 36 6 50 0 37 6 50 0 38 6 50 0 39 6 50 0 40 6 50 0 41 6 50 0 42 6 50 0 43 6 50 0 44 6 50 0 48 6 50 0 53 6 50 0 54 6 50 0 55 6 50 0 57 6 50 0 58 6 50 0 70 6 50 0 72 6 50 0 73 6 50 0 74 6 50 0 79 6 50 0 81 6 50 0 83 6 50 0 85 6 50 0 86 6 50 0 88 6 50 0 89 6 50 0 90 6 50 0 96 6 50 0 97 6 50 0 99 6 50 0 100 6 50 0 102 6 50 0 103 6 50 0 104 6 50 0 105 6 50 0 106 6 50 0 107 6 50 0 108 6 50 0 109 6 50 0 112 6 50 0 113 6 50 0 120 6 50 0 121 6 50 0 123 6 50 0 124 6 50 0 129 6 50 0 130 6 50 0 131 6 50 0 132 6 50 0 133 6 50 0 134 6 50 0 135 6 50 0 136 6 50 0 138 6 50 0 141 6 50 0 142 6 50 0 146 6 50 0 149 6 50 0 151 6 50 0 152 6 50 0 161 6 50 0 166 6 50 0 167 6 50 0 170 2 183 0 171 6 50 0 172 6 50 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 13 125 0 180 13 125 0 181 13 125 0 182 13 125 0 183 13 125 0 184 13 125 0 185 13 125 0 186 4 253 0 187 13 125 0 188 13 125 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 13 125 1 37 13 125 1 38 13 125 1 39 13 125 1 40 13 125 1 41 13 125 1 42 13 125 1 43 13 125 1 44 13 125 1 45 13 125 1 47 13 125 1 49 13 125 1 51 5 61 1 52 5 65 1 53 13 125 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 13 125 1 139 13 125 1 141] 
#[1 4 41 0 7 6 54 0 11 6 54 0 22 6 54 0 27 6 54 0 28 6 54 0 29 6 54 0 30 6 54 0 31 6 54 0 32 6 54 0 33 6 54 0 34 6 54 0 35 6 54 0 36 6 54 0 37 6 54 0 38 6 54 0 39 6 54 0 40 6 54 0 44 6 54 0 54 6 54 0 57 6 54 0 70 6 54 0 73 6 54 0 74 6 54 0 79 6 54 0 81 6 54 0 83 6 54 0 85 6 54 0 86 6 54 0 88 6 54 0 89 6 54 0 96 6 54 0 97 6 54 0 99 6 54 0 102 6 54 0 103 6 54 0 104 6 54 0 105 6 54 0 109 6 54 0 112 6 54 0 113 6 54 0 120 6 54 0 121 6 54 0 124 6 54 0 129 6 54 0 130 6 54 0 131 6 54 0 132 6 54 0 136 6 54 0 138 6 54 0 141 6 54 0 142 6 54 0 146 6 54 0 149 6 54 0 161 6 54 0 166 6 54 0 167 6 54 0 170 2 187 0 171 6 54 0 172 4 49 1 34 4 53 1 35 6 54 1 142] 
#[0 6 58 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 4 42 0 22 4 42 0 44 4 42 0 54 4 42 0 57 4 42 0 74 4 42 0 81 4 42 0 85 4 42 0 86 4 42 0 96 4 42 0 104 4 42 0 112 4 42 0 113 4 42 0 120 4 42 0 136 4 42 0 142 4 42 0 149 4 42 0 166 4 42 0 167 4 42 0 170 4 42 0 172 13 129 0 250] 
#[1 8 81 0 3 13 133 0 171 13 137 0 253] 
#[1 4 118 0 22 4 118 0 44 4 118 0 54 4 118 0 57 4 118 0 74 4 118 0 81 4 118 0 85 4 118 0 86 4 118 0 96 4 118 0 104 4 118 0 112 4 118 0 113 4 118 0 120 4 118 0 136 4 118 0 142 4 118 0 149 4 118 0 166 4 118 0 167 4 118 0 170 4 118 0 172 13 141 0 245] 
#[0 13 145 0 171] 
#[0 13 149 0 171] 
#[0 13 153 0 171] 
#[0 13 157 0 171] 
#[0 6 62 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 6 66 0 1 6 66 0 3 6 66 0 4 6 66 0 5 6 66 0 7 6 66 0 9 6 66 0 11 6 66 0 13 6 66 0 22 6 66 0 24 6 66 0 26 6 66 0 27 6 66 0 28 6 66 0 29 6 66 0 30 6 66 0 31 6 66 0 32 6 66 0 33 6 66 0 34 6 66 0 35 6 66 0 36 6 66 0 37 6 66 0 38 6 66 0 39 6 66 0 40 6 66 0 41 6 66 0 42 6 66 0 43 6 66 0 44 6 66 0 48 6 66 0 53 6 66 0 54 6 66 0 55 6 66 0 57 6 66 0 58 6 66 0 70 6 66 0 72 6 66 0 73 6 66 0 74 6 66 0 79 6 66 0 81 6 66 0 83 6 66 0 85 6 66 0 86 6 66 0 88 6 66 0 89 6 66 0 90 6 66 0 96 6 66 0 97 6 66 0 99 6 66 0 100 6 66 0 102 6 66 0 103 6 66 0 104 6 66 0 105 6 66 0 106 6 66 0 107 6 66 0 108 6 66 0 109 6 66 0 112 6 66 0 113 6 66 0 118 6 66 0 120 6 66 0 121 6 66 0 123 6 66 0 124 6 66 0 129 6 66 0 130 6 66 0 131 6 66 0 132 6 66 0 133 6 66 0 134 6 66 0 135 6 66 0 136 6 66 0 138 6 66 0 141 6 66 0 142 6 66 0 146 6 66 0 149 6 66 0 150 6 66 0 151 6 66 0 152 6 66 0 161 6 66 0 166 6 66 0 167 6 66 0 170 2 191 0 171 6 66 0 172 6 66 1 142] 
#[1 6 70 0 1 6 70 0 3 6 70 0 4 6 70 0 5 6 70 0 7 6 70 0 9 6 70 0 11 6 70 0 13 6 70 0 22 6 70 0 24 6 70 0 26 6 70 0 27 6 70 0 28 6 70 0 29 6 70 0 30 6 70 0 31 6 70 0 32 6 70 0 33 6 70 0 34 6 70 0 35 6 70 0 36 6 70 0 37 6 70 0 38 6 70 0 39 6 70 0 40 6 70 0 41 6 70 0 42 6 70 0 43 6 70 0 44 6 70 0 48 6 70 0 53 6 70 0 54 6 70 0 55 6 70 0 57 6 70 0 58 6 70 0 70 6 70 0 72 6 70 0 73 6 70 0 74 6 70 0 79 6 70 0 81 6 70 0 83 6 70 0 85 6 70 0 86 6 70 0 88 6 70 0 89 6 70 0 90 6 70 0 96 6 70 0 97 6 70 0 99 6 70 0 100 6 70 0 102 6 70 0 103 6 70 0 104 6 70 0 105 6 70 0 106 6 70 0 107 6 70 0 108 6 70 0 109 6 70 0 112 6 70 0 113 6 70 0 118 6 70 0 120 6 70 0 121 6 70 0 123 6 70 0 124 6 70 0 129 6 70 0 130 6 70 0 131 6 70 0 132 6 70 0 133 6 70 0 134 6 70 0 135 6 70 0 136 6 70 0 138 6 70 0 141 6 70 0 142 6 70 0 146 6 70 0 149 6 70 0 150 6 70 0 151 6 70 0 152 6 70 0 161 6 70 0 166 6 70 0 167 6 70 0 170 2 195 0 171 6 70 0 172 6 70 1 142] 
#[0 6 74 0 1 0 3 0 4 0 6 0 7 0 8 0 9 0 11 0 13 0 22 0 24 0 44 0 53 0 54 0 57 0 62 0 74 0 76 0 78 0 79 0 81 0 85 0 86 0 96 0 104 0 112 0 113 0 120 0 121 0 122 0 127 0 136 0 142 0 149 0 154 0 159 0 160 0 161 0 162 0 163 0 164 0 165 0 166 0 167 0 169 0 170 0 171 0 172 1 142] 
#[0 6 78 0 1 0 3 0 4 0 6 0 7 0 8 0 9 0 11 0 13 0 22 0 24 0 44 0 53 0 54 0 57 0 62 0 74 0 76 0 78 0 79 0 81 0 85 0 86 0 96 0 104 0 112 0 113 0 120 0 121 0 122 0 127 0 136 0 142 0 149 0 154 0 159 0 160 0 161 0 162 0 163 0 164 0 165 0 166 0 167 0 169 0 170 0 171 0 172 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 13 165 0 180 13 165 0 181 13 165 0 182 13 165 0 183 13 165 0 184 13 165 0 185 13 165 0 186 4 253 0 187 13 165 0 188 13 165 0 189 8 245 0 191 0 253 0 194 8 245 0 195 8 245 0 196 8 245 0 197 13 161 0 236 13 165 1 37 13 165 1 38 13 165 1 39 13 165 1 40 13 165 1 41 13 165 1 42 13 165 1 43 13 165 1 44 13 165 1 45 13 165 1 47 13 165 1 49 13 165 1 51 5 61 1 52 5 65 1 53 13 165 1 54 5 73 1 55 5 73 1 56 5 73 1 57 2 69 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 13 165 1 139 13 165 1 141] 
#[1 6 181 0 12 13 169 0 18] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 13 173 0 127 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 13 181 0 180 13 181 0 181 13 181 0 182 13 181 0 183 13 181 0 184 13 181 0 185 13 181 0 186 4 253 0 187 13 181 0 188 13 181 0 189 8 245 0 191 0 253 0 194 8 245 0 195 8 245 0 196 8 245 0 197 13 177 0 236 13 181 1 37 13 181 1 38 13 181 1 39 13 181 1 40 13 181 1 41 13 181 1 42 13 181 1 43 13 181 1 44 13 181 1 45 13 181 1 47 13 181 1 49 13 181 1 51 5 61 1 52 5 65 1 53 13 181 1 54 5 73 1 55 5 73 1 56 5 73 1 57 2 69 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 13 181 1 139 13 181 1 141] 
#[1 6 82 0 1 6 82 0 3 6 82 0 4 6 82 0 6 6 82 0 7 6 82 0 8 6 82 0 9 6 82 0 11 6 82 0 13 6 82 0 22 6 82 0 24 6 82 0 44 6 82 0 53 6 82 0 54 6 82 0 57 6 82 0 62 6 82 0 74 6 82 0 76 6 82 0 78 6 82 0 79 6 82 0 81 6 82 0 85 6 82 0 86 6 82 0 96 6 82 0 104 6 82 0 112 6 82 0 113 6 82 0 120 6 82 0 121 6 82 0 122 6 82 0 127 6 82 0 136 6 82 0 142 6 82 0 149 6 82 0 154 6 82 0 159 6 82 0 160 6 82 0 161 6 82 0 162 6 82 0 163 6 82 0 164 6 82 0 165 6 82 0 166 6 82 0 167 6 82 0 169 6 82 0 170 2 199 0 171 6 82 0 172 6 82 1 142] 
#[1 6 86 0 1 6 86 0 3 6 86 0 4 6 86 0 6 6 86 0 7 6 86 0 8 6 86 0 9 6 86 0 11 6 86 0 13 6 86 0 22 6 86 0 24 6 86 0 44 6 86 0 53 6 86 0 54 6 86 0 57 6 86 0 62 6 86 0 74 6 86 0 76 6 86 0 78 6 86 0 79 6 86 0 81 6 86 0 85 6 86 0 86 6 86 0 96 6 86 0 104 6 86 0 112 6 86 0 113 6 86 0 120 6 86 0 121 6 86 0 122 6 86 0 127 6 86 0 136 6 86 0 142 6 86 0 149 6 86 0 154 6 86 0 159 6 86 0 160 6 86 0 161 6 86 0 162 6 86 0 163 6 86 0 164 6 86 0 165 6 86 0 166 6 86 0 167 6 86 0 169 6 86 0 170 2 203 0 171 6 86 0 172 6 86 1 142] 
#[1 6 90 0 4 11 117 0 7 6 90 0 11 11 121 0 13 6 90 0 79 6 90 0 96 6 90 0 121 6 90 0 161 6 90 0 171 6 90 0 172 11 125 1 134 6 90 1 142] 
#[1 0 29 0 1 4 173 0 3 6 94 0 4 4 177 0 6 6 94 0 7 4 181 0 8 0 33 0 9 6 94 0 11 6 94 0 13 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 8 233 0 76 8 253 0 78 6 94 0 79 0 253 0 81 0 253 0 85 0 253 0 86 6 94 0 96 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 6 94 0 121 4 189 0 122 8 241 0 127 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 2 207 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 2 211 0 171 6 94 0 172 9 1 0 180 9 1 0 181 9 1 0 182 9 1 0 183 9 1 0 184 9 1 0 185 9 1 0 186 4 253 0 187 9 1 0 188 9 1 0 189 8 245 0 191 0 253 0 194 8 245 0 195 8 245 0 196 8 245 0 197 8 249 0 236 8 253 0 252 9 1 1 37 9 1 1 38 9 1 1 39 9 1 1 40 9 1 1 41 9 1 1 42 9 1 1 43 9 1 1 44 9 1 1 45 9 1 1 47 9 1 1 49 9 1 1 51 5 61 1 52 5 65 1 53 9 1 1 54 5 73 1 55 5 73 1 56 5 73 1 57 2 69 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 13 197 1 130 9 1 1 139 9 1 1 141 6 94 1 142] 
#[1 0 29 0 1 4 173 0 3 6 98 0 4 4 177 0 6 6 98 0 7 4 181 0 8 0 33 0 9 6 98 0 11 6 98 0 13 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 8 233 0 76 8 253 0 78 6 98 0 79 0 253 0 81 0 253 0 85 0 253 0 86 6 98 0 96 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 6 98 0 121 4 189 0 122 8 241 0 127 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 2 215 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 2 219 0 171 6 98 0 172 9 1 0 180 9 1 0 181 9 1 0 182 9 1 0 183 9 1 0 184 9 1 0 185 9 1 0 186 4 253 0 187 9 1 0 188 9 1 0 189 8 245 0 191 0 253 0 194 8 245 0 195 8 245 0 196 8 245 0 197 8 249 0 236 8 253 0 252 9 1 1 37 9 1 1 38 9 1 1 39 9 1 1 40 9 1 1 41 9 1 1 42 9 1 1 43 9 1 1 44 9 1 1 45 9 1 1 47 9 1 1 49 9 1 1 51 5 61 1 52 5 65 1 53 9 1 1 54 5 73 1 55 5 73 1 56 5 73 1 57 2 69 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 13 205 1 130 9 1 1 139 9 1 1 141 6 98 1 142] 
#[0 6 102 0 4 0 7 0 11 0 13 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 6 106 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 4 26 0 1 0 9 0 22 0 24 0 44 0 53 0 54 0 57 0 74 0 79 0 81 0 85 0 86 0 104 0 112 0 113 0 120 0 136 0 142 0 149 0 161 0 166 0 167 0 170 0 172] 
#[1 13 209 0 96 3 69 0 172] 
#[0 6 110 0 96 0 172] 
#[1 0 29 0 1 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 8 57 0 172 5 209 0 191 0 253 0 194 5 209 0 195 5 209 0 196 5 209 0 197 13 213 0 202 1 137 1 55 1 137 1 56 1 137 1 57 4 157 1 122 2 81 1 123 5 217 1 124 2 81 1 125 2 93 1 128 2 97 1 129] 
#[0 13 217 0 171] 
#[0 13 221 0 171] 
#[1 2 87 0 1 0 146 0 3 4 13 0 5 2 87 0 9 2 87 0 11 2 87 0 22 2 87 0 24 2 87 0 26 2 87 0 41 2 87 0 42 2 87 0 43 2 87 0 44 2 87 0 48 2 87 0 53 2 87 0 54 2 87 0 55 2 87 0 57 2 87 0 58 2 87 0 70 2 87 0 72 2 87 0 74 2 87 0 81 2 87 0 83 2 87 0 85 2 87 0 86 2 87 0 89 2 87 0 90 2 87 0 97 2 87 0 99 2 87 0 100 2 87 0 102 2 87 0 104 2 87 0 105 2 87 0 106 2 87 0 107 2 87 0 108 2 87 0 112 2 87 0 113 2 87 0 120 2 87 0 123 2 87 0 124 2 87 0 129 2 87 0 131 2 87 0 132 2 87 0 133 2 87 0 134 2 87 0 135 2 87 0 136 2 87 0 138 2 87 0 142 2 87 0 146 2 87 0 149 2 87 0 151 2 87 0 152 2 87 0 161 2 87 0 166 2 87 0 167 2 87 0 170 2 223 0 171 2 87 0 172 11 165 0 228 11 165 0 229 11 165 0 233 11 169 1 10 13 229 1 11] 
#[1 2 87 0 1 0 146 0 3 13 233 0 5 2 87 0 9 2 87 0 11 2 87 0 22 6 189 0 23 2 87 0 24 2 87 0 26 2 87 0 41 2 87 0 42 2 87 0 43 2 87 0 44 2 87 0 48 2 87 0 53 2 87 0 54 2 87 0 55 2 87 0 57 2 87 0 58 2 87 0 70 2 87 0 72 2 87 0 74 2 87 0 81 2 87 0 83 2 87 0 85 2 87 0 86 2 87 0 89 2 87 0 90 2 87 0 97 2 87 0 99 2 87 0 100 2 87 0 102 2 87 0 104 2 87 0 105 2 87 0 106 2 87 0 107 2 87 0 108 2 87 0 112 2 87 0 113 2 87 0 120 2 87 0 123 2 87 0 124 2 87 0 129 2 87 0 131 2 87 0 132 2 87 0 133 2 87 0 134 2 87 0 135 2 87 0 136 2 87 0 138 2 87 0 142 2 87 0 146 2 87 0 149 2 87 0 151 2 87 0 152 2 87 0 161 2 87 0 166 2 87 0 167 2 87 0 170 2 227 0 171 2 87 0 172 11 165 0 228 11 165 0 229 11 165 0 233 11 169 1 10 13 237 1 11] 
#[1 6 114 0 1 7 237 0 3 6 114 0 9 6 114 0 11 6 114 0 22 6 114 0 24 6 114 0 26 6 114 0 41 6 114 0 42 6 114 0 43 6 114 0 44 6 114 0 48 6 114 0 53 6 114 0 54 6 114 0 55 6 114 0 57 6 114 0 58 6 114 0 70 6 114 0 72 6 114 0 74 6 114 0 81 6 114 0 83 6 114 0 85 6 114 0 86 6 114 0 89 6 114 0 90 6 114 0 97 6 114 0 99 6 114 0 100 6 114 0 102 6 114 0 104 6 114 0 105 6 114 0 106 6 114 0 107 6 114 0 108 6 114 0 112 6 114 0 113 6 114 0 120 6 114 0 123 6 114 0 124 6 114 0 129 6 114 0 131 6 114 0 132 6 114 0 133 6 114 0 134 6 114 0 135 6 114 0 136 6 114 0 138 6 114 0 142 6 114 0 146 6 114 0 149 6 114 0 151 6 114 0 152 6 114 0 161 6 114 0 166 6 114 0 167 6 114 0 170 6 114 0 171 6 114 0 172 13 241 0 230] 
#[0 6 118 0 1 0 9 0 11 0 22 0 24 0 26 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 74 0 81 0 83 0 85 0 86 0 89 0 90 0 97 0 99 0 100 0 102 0 104 0 105 0 106 0 107 0 108 0 112 0 113 0 120 0 123 0 124 0 129 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 142 0 146 0 149 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 13 245 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 6 122 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 6 126 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 6 130 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 6 134 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[1 8 81 0 3 13 249 0 253] 
#[1 8 81 0 3 13 253 0 253] 
#[1 8 81 0 3 14 1 0 253] 
#[0 5 82 0 1 0 9 0 11 0 22 0 24 0 26 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 74 0 81 0 83 0 85 0 86 0 89 0 90 0 97 0 99 0 100 0 102 0 104 0 105 0 106 0 107 0 108 0 112 0 113 0 120 0 123 0 124 0 129 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 142 0 146 0 149 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 14 5 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 4 174 0 1 4 174 0 9 4 174 0 11 4 174 0 22 4 174 0 24 4 174 0 26 4 174 0 41 4 174 0 42 4 174 0 43 4 174 0 44 4 174 0 48 4 174 0 53 4 174 0 54 4 174 0 55 4 174 0 57 4 174 0 58 4 174 0 70 4 174 0 72 4 174 0 74 4 174 0 81 4 174 0 83 4 174 0 85 4 174 0 86 4 174 0 89 4 174 0 90 4 174 0 97 4 174 0 99 4 174 0 100 4 174 0 102 4 174 0 104 4 174 0 105 4 174 0 106 4 174 0 107 4 174 0 108 4 174 0 112 4 174 0 113 4 174 0 120 4 174 0 123 4 174 0 124 4 174 0 129 4 174 0 131 4 174 0 132 4 174 0 133 4 174 0 134 4 174 0 135 4 174 0 136 4 174 0 138 4 174 0 142 4 174 0 146 4 174 0 149 4 174 0 151 4 174 0 152 4 174 0 161 4 174 0 166 4 174 0 167 4 174 0 170 2 103 0 171 4 174 0 172 14 9 0 221] 
#[0 14 13 0 96] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 14 17 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 6 42 0 7 6 42 0 11 6 42 0 22 6 42 0 27 6 42 0 28 6 42 0 29 6 42 0 30 6 42 0 31 6 42 0 32 6 42 0 33 6 42 0 34 6 42 0 35 6 42 0 36 6 42 0 37 6 42 0 38 6 42 0 39 6 42 0 40 6 42 0 44 6 42 0 54 6 42 0 57 6 42 0 70 6 42 0 73 6 42 0 74 6 42 0 79 6 42 0 81 6 42 0 83 6 42 0 85 6 42 0 86 6 42 0 88 6 42 0 89 6 42 0 96 6 42 0 97 6 42 0 99 6 42 0 102 6 42 0 103 6 42 0 104 6 42 0 105 6 42 0 109 6 42 0 112 6 42 0 113 6 42 0 120 6 42 0 121 6 42 0 124 6 42 0 129 6 42 0 130 6 42 0 131 6 42 0 132 6 42 0 136 6 42 0 138 6 42 0 141 6 42 0 142 6 42 0 146 6 42 0 149 6 42 0 161 6 42 0 166 6 42 0 167 6 42 0 170 2 231 0 171 6 42 0 172 6 42 1 142] 
#[0 14 21 0 171] 
#[0 14 25 0 171] 
#[1 8 81 0 3 14 29 0 171 14 33 0 253] 
#[0 14 37 0 171] 
#[0 14 41 0 171] 
#[0 14 45 0 171] 
#[1 4 174 0 1 8 81 0 3 4 174 0 9 4 174 0 11 4 174 0 22 4 174 0 24 4 174 0 26 4 174 0 41 4 174 0 42 4 174 0 43 4 174 0 44 4 174 0 48 4 174 0 53 4 174 0 54 4 174 0 55 4 174 0 57 4 174 0 58 4 174 0 70 4 174 0 72 4 174 0 74 4 174 0 81 4 174 0 83 4 174 0 85 4 174 0 86 4 174 0 89 4 174 0 90 4 174 0 97 4 174 0 99 4 174 0 100 4 174 0 102 4 174 0 104 4 174 0 105 4 174 0 106 4 174 0 107 4 174 0 108 4 174 0 112 4 174 0 113 4 174 0 120 4 174 0 123 4 174 0 124 4 174 0 129 4 174 0 131 4 174 0 132 4 174 0 133 4 174 0 134 4 174 0 135 4 174 0 136 4 174 0 138 4 174 0 142 4 174 0 146 4 174 0 149 4 174 0 151 4 174 0 152 4 174 0 161 4 174 0 166 4 174 0 167 4 174 0 170 2 235 0 171 4 174 0 172 14 53 0 221 14 57 0 253] 
#[0 14 61 0 171] 
#[0 14 65 0 171] 
#[0 14 69 0 171] 
#[1 8 81 0 3 14 73 0 171 14 77 0 253] 
#[0 14 81 0 171] 
#[0 14 85 0 171] 
#[0 14 89 0 171] 
#[1 4 174 0 1 8 81 0 3 4 174 0 9 4 174 0 11 4 174 0 22 4 174 0 24 4 174 0 26 4 174 0 41 4 174 0 42 4 174 0 43 4 174 0 44 4 174 0 48 4 174 0 53 4 174 0 54 4 174 0 55 4 174 0 57 4 174 0 58 4 174 0 70 4 174 0 72 4 174 0 74 4 174 0 81 4 174 0 83 4 174 0 85 4 174 0 86 4 174 0 89 4 174 0 90 4 174 0 97 4 174 0 99 4 174 0 100 4 174 0 102 4 174 0 104 4 174 0 105 4 174 0 106 4 174 0 107 4 174 0 108 4 174 0 112 4 174 0 113 4 174 0 120 4 174 0 123 4 174 0 124 4 174 0 129 4 174 0 131 4 174 0 132 4 174 0 133 4 174 0 134 4 174 0 135 4 174 0 136 4 174 0 138 4 174 0 142 4 174 0 146 4 174 0 149 4 174 0 151 4 174 0 152 4 174 0 161 4 174 0 166 4 174 0 167 4 174 0 170 2 239 0 171 4 174 0 172 14 97 0 221 14 101 0 253] 
#[1 0 253 0 22 2 245 0 27 2 245 0 28 2 245 0 29 2 245 0 30 2 245 0 31 2 245 0 32 2 245 0 33 2 245 0 34 2 245 0 35 2 245 0 36 2 245 0 37 2 245 0 38 2 245 0 39 2 245 0 40 0 253 0 44 0 253 0 54 0 253 0 57 0 89 0 70 2 173 0 73 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 2 177 0 88 0 117 0 89 0 125 0 97 0 129 0 99 3 1 0 102 2 181 0 103 0 253 0 104 3 1 0 105 2 185 0 109 0 253 0 112 0 253 0 113 0 253 0 120 2 197 0 124 3 1 0 129 2 201 0 130 3 1 0 131 0 189 0 132 0 253 0 136 2 209 0 138 2 213 0 141 0 253 0 142 0 217 0 146 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 3 69 0 172 2 221 0 191 0 253 0 194 2 221 0 195 2 221 0 196 2 221 0 197 7 113 0 200 7 113 0 201 7 113 0 203 7 113 0 204 7 113 0 208 2 245 0 209 7 113 0 210 7 113 0 211 3 1 0 223 7 113 0 242 7 113 0 243 7 113 0 247 7 113 0 248 7 113 1 5 7 113 1 6 7 113 1 7 3 21 1 8 7 113 1 9 7 113 1 12 7 113 1 13 7 113 1 14 7 113 1 15 7 113 1 16 7 113 1 17 7 113 1 18 7 113 1 19 7 113 1 20 7 113 1 21 7 113 1 22 1 105 1 24 7 113 1 25 7 113 1 26 7 113 1 27 7 113 1 28 7 113 1 29 7 113 1 33 7 113 1 36 6 138 1 142] 
#[0 6 142 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 14 105 0 4 9 173 0 5 9 177 0 6 9 181 0 8 9 185 0 10 9 189 0 14 9 193 0 16 9 197 0 17 9 201 0 18 9 205 0 19 9 209 0 20 9 213 0 45 9 217 0 47 9 221 0 52 9 225 0 66 9 229 0 67 9 233 0 69 9 237 0 98 9 241 0 126 9 245 0 145 9 249 0 153 9 253 1 46 10 1 1 48 10 5 1 50] 
#[0 6 146 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 14 109 0 45 14 113 0 46] 
#[1 14 117 0 8 9 165 0 158] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 14 121 0 180 14 121 0 181 14 121 0 182 14 121 0 183 14 121 0 184 14 121 0 185 14 121 0 186 4 253 0 187 14 121 0 188 14 121 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 14 121 1 37 14 121 1 38 14 121 1 39 14 121 1 40 14 121 1 41 14 121 1 42 14 121 1 43 14 121 1 44 14 121 1 45 14 121 1 47 14 121 1 49 14 121 1 51 5 61 1 52 5 65 1 53 14 121 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 14 121 1 139 14 121 1 141] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 14 125 0 180 14 125 0 181 14 125 0 182 14 125 0 183 14 125 0 184 14 125 0 185 14 125 0 186 4 253 0 187 14 125 0 188 14 125 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 14 125 1 37 14 125 1 38 14 125 1 39 14 125 1 40 14 125 1 41 14 125 1 42 14 125 1 43 14 125 1 44 14 125 1 45 14 125 1 47 14 125 1 49 14 125 1 51 5 61 1 52 5 65 1 53 14 125 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 14 125 1 139 14 125 1 141] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 14 129 0 180 14 129 0 181 14 129 0 182 14 129 0 183 14 129 0 184 14 129 0 185 14 129 0 186 4 253 0 187 14 129 0 188 14 129 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 14 129 1 37 14 129 1 38 14 129 1 39 14 129 1 40 14 129 1 41 14 129 1 42 14 129 1 43 14 129 1 44 14 129 1 45 14 129 1 47 14 129 1 49 14 129 1 51 5 61 1 52 5 65 1 53 14 129 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 14 129 1 139 14 129 1 141] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 14 133 0 180 14 133 0 181 14 133 0 182 14 133 0 183 14 133 0 184 14 133 0 185 14 133 0 186 4 253 0 187 14 133 0 188 14 133 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 14 133 1 37 14 133 1 38 14 133 1 39 14 133 1 40 14 133 1 41 14 133 1 42 14 133 1 43 14 133 1 44 14 133 1 45 14 133 1 47 14 133 1 49 14 133 1 51 5 61 1 52 5 65 1 53 14 133 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 14 133 1 139 14 133 1 141] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 14 137 0 180 14 137 0 181 14 137 0 182 14 137 0 183 14 137 0 184 14 137 0 185 14 137 0 186 4 253 0 187 14 137 0 188 14 137 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 14 137 1 37 14 137 1 38 14 137 1 39 14 137 1 40 14 137 1 41 14 137 1 42 14 137 1 43 14 137 1 44 14 137 1 45 14 137 1 47 14 137 1 49 14 137 1 51 5 61 1 52 5 65 1 53 14 137 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 14 137 1 139 14 137 1 141] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 14 141 0 180 14 141 0 181 14 141 0 182 14 141 0 183 14 141 0 184 14 141 0 185 14 141 0 186 4 253 0 187 14 141 0 188 14 141 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 14 141 1 37 14 141 1 38 14 141 1 39 14 141 1 40 14 141 1 41 14 141 1 42 14 141 1 43 14 141 1 44 14 141 1 45 14 141 1 47 14 141 1 49 14 141 1 51 5 61 1 52 5 65 1 53 14 141 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 14 141 1 139 14 141 1 141] 
#[1 0 29 0 1 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 4 213 0 164 0 253 0 166 0 237 0 167 0 241 0 170 14 153 0 187 14 149 0 191 0 253 0 194 14 149 0 195 14 149 0 196 14 149 0 197 14 153 1 52 14 153 1 53 1 137 1 55 1 137 1 56 1 137 1 57 4 157 1 122 14 161 1 123 14 161 1 124 14 161 1 125 2 93 1 128 14 165 1 129] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 14 169 0 180 14 169 0 181 14 169 0 182 14 169 0 183 14 169 0 184 14 169 0 185 14 169 0 186 4 253 0 187 14 169 0 188 14 169 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 14 169 1 37 14 169 1 38 14 169 1 39 14 169 1 40 14 169 1 41 14 169 1 42 14 169 1 43 14 169 1 44 14 169 1 45 14 169 1 47 14 169 1 49 14 169 1 51 5 61 1 52 5 65 1 53 14 169 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 14 169 1 139 14 169 1 141] 
#[0 14 173 0 110] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 14 177 0 180 14 177 0 181 14 177 0 182 14 177 0 183 14 177 0 184 14 177 0 185 14 177 0 186 4 253 0 187 14 177 0 188 14 177 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 14 177 1 37 14 177 1 38 14 177 1 39 14 177 1 40 14 177 1 41 14 177 1 42 14 177 1 43 14 177 1 44 14 177 1 45 14 177 1 47 14 177 1 49 14 177 1 51 5 61 1 52 5 65 1 53 14 177 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 14 177 1 139 14 177 1 141] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 14 181 0 171 14 185 0 180 14 185 0 181 14 185 0 182 14 185 0 183 14 185 0 184 14 185 0 185 14 185 0 186 4 253 0 187 14 185 0 188 14 185 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 14 185 1 37 14 185 1 38 14 185 1 39 14 185 1 40 14 185 1 41 14 185 1 42 14 185 1 43 14 185 1 44 14 185 1 45 14 185 1 47 14 185 1 49 14 185 1 51 5 61 1 52 5 65 1 53 14 185 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 14 185 1 139 14 185 1 141] 
#[0 14 189 0 7] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 14 193 0 171 14 197 0 180 14 197 0 181 14 197 0 182 14 197 0 183 14 197 0 184 14 197 0 185 14 197 0 186 4 253 0 187 14 197 0 188 14 197 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 14 197 1 37 14 197 1 38 14 197 1 39 14 197 1 40 14 197 1 41 14 197 1 42 14 197 1 43 14 197 1 44 14 197 1 45 14 197 1 47 14 197 1 49 14 197 1 51 5 61 1 52 5 65 1 53 14 197 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 14 197 1 139 14 197 1 141] 
#[0 14 201 0 7] 
#[0 14 225 0 22 0 25 0 44 0 56 0 59 1 58] 
#[1 4 218 0 11 4 218 0 13 4 218 0 79 4 218 0 96 4 218 0 121 4 218 0 161 2 243 0 171 4 218 0 172 14 233 1 65 4 218 1 142] 
#[1 6 150 0 11 12 133 0 13 6 150 0 79 6 150 0 96 6 150 0 121 6 150 0 161 6 150 0 171 6 150 0 172 12 137 1 64 6 150 1 142] 
#[1 9 173 0 5 9 177 0 6 9 181 0 8 9 185 0 10 4 218 0 11 4 218 0 13 9 189 0 14 9 193 0 16 9 197 0 17 9 201 0 18 9 205 0 19 9 209 0 20 9 213 0 45 9 217 0 47 9 221 0 52 9 225 0 66 9 229 0 67 9 233 0 69 4 218 0 79 4 218 0 96 9 237 0 98 4 218 0 121 9 241 0 126 9 245 0 145 9 249 0 153 4 218 0 161 4 218 0 171 4 218 0 172 9 253 1 46 10 1 1 48 10 5 1 50 14 237 1 65 4 218 1 142] 
#[1 6 154 0 11 12 133 0 13 6 154 0 79 6 154 0 96 6 154 0 121 6 154 0 161 6 154 0 171 6 154 0 172 12 137 1 64 6 154 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 14 241 0 171 14 245 0 180 14 245 0 181 14 245 0 182 14 245 0 183 14 245 0 184 14 245 0 185 14 245 0 186 4 253 0 187 14 245 0 188 14 245 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 14 245 1 37 14 245 1 38 14 245 1 39 14 245 1 40 14 245 1 41 14 245 1 42 14 245 1 43 14 245 1 44 14 245 1 45 14 245 1 47 14 245 1 49 14 245 1 51 5 61 1 52 5 65 1 53 14 245 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 14 245 1 139 14 245 1 141] 
#[0 6 158 0 11 0 13 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 4 218 0 11 4 218 0 13 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 4 218 0 79 0 253 0 81 0 253 0 85 0 253 0 86 4 218 0 96 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 218 0 121 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 2 19 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 4 218 0 171 4 218 0 172 14 249 0 180 14 249 0 181 14 249 0 182 14 249 0 183 14 249 0 184 14 249 0 185 14 249 0 186 4 253 0 187 14 249 0 188 14 249 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 14 249 1 37 14 249 1 38 14 249 1 39 14 249 1 40 14 249 1 41 14 249 1 42 14 249 1 43 14 249 1 44 14 249 1 45 14 249 1 47 14 249 1 49 14 249 1 51 5 61 1 52 5 65 1 53 14 249 1 54 5 73 1 55 5 73 1 56 5 73 1 57 14 253 1 65 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 14 249 1 139 14 249 1 141 4 218 1 142] 
#[1 4 218 0 11 4 218 0 13 4 218 0 79 4 218 0 96 4 218 0 121 4 218 0 161 2 247 0 171 4 218 0 172 15 5 1 65 4 218 1 142] 
#[1 6 162 0 11 12 133 0 13 6 162 0 79 6 162 0 96 6 162 0 121 6 162 0 161 6 162 0 171 6 162 0 172 12 137 1 64 6 162 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 15 9 0 180 15 9 0 181 15 9 0 182 15 9 0 183 15 9 0 184 15 9 0 185 15 9 0 186 4 253 0 187 15 9 0 188 15 9 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 15 9 1 37 15 9 1 38 15 9 1 39 15 9 1 40 15 9 1 41 15 9 1 42 15 9 1 43 15 9 1 44 15 9 1 45 15 9 1 47 15 9 1 49 15 9 1 51 5 61 1 52 5 65 1 53 15 9 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 15 9 1 139 15 9 1 141] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 15 13 0 180 15 13 0 181 15 13 0 182 15 13 0 183 15 13 0 184 15 13 0 185 15 13 0 186 4 253 0 187 15 13 0 188 15 13 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 15 13 1 37 15 13 1 38 15 13 1 39 15 13 1 40 15 13 1 41 15 13 1 42 15 13 1 43 15 13 1 44 15 13 1 45 15 13 1 47 15 13 1 49 15 13 1 51 5 61 1 52 5 65 1 53 15 13 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 15 13 1 139 15 13 1 141] 
#[1 4 13 0 5 2 251 0 7 2 251 0 11 2 251 0 22 2 251 0 27 2 251 0 28 2 251 0 29 2 251 0 30 2 251 0 31 2 251 0 32 2 251 0 33 2 251 0 34 2 251 0 35 2 251 0 36 2 251 0 37 2 251 0 38 2 251 0 39 2 251 0 40 2 251 0 44 2 251 0 54 2 251 0 57 2 251 0 70 2 251 0 73 2 251 0 74 2 251 0 79 2 251 0 81 2 251 0 83 2 251 0 85 2 251 0 86 2 251 0 88 2 251 0 89 2 251 0 96 2 251 0 97 2 251 0 99 2 251 0 102 2 251 0 103 2 251 0 104 2 251 0 105 2 251 0 109 2 251 0 112 2 251 0 113 2 251 0 120 2 251 0 121 2 251 0 124 2 251 0 129 2 251 0 130 2 251 0 131 2 251 0 132 2 251 0 136 2 251 0 138 2 251 0 141 2 251 0 142 2 251 0 146 2 251 0 149 2 251 0 161 2 251 0 166 2 251 0 167 2 251 0 170 2 255 0 171 2 251 0 172 15 17 0 228 15 17 0 229 15 17 0 233 2 251 1 142] 
#[0 6 170 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 6 174 0 1 0 4 0 5 0 7 0 9 0 11 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 15 21 0 171 15 25 0 180 15 25 0 181 15 25 0 182 15 25 0 183 15 25 0 184 15 25 0 185 15 25 0 186 4 253 0 187 15 25 0 188 15 25 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 15 25 1 37 15 25 1 38 15 25 1 39 15 25 1 40 15 25 1 41 15 25 1 42 15 25 1 43 15 25 1 44 15 25 1 45 15 25 1 47 15 25 1 49 15 25 1 51 5 61 1 52 5 65 1 53 15 25 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 15 25 1 139 15 25 1 141] 
#[0 6 178 0 4 0 7] 
#[1 15 29 0 4 12 173 0 7 12 177 0 231] 
#[0 6 182 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 5 229 0 63 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 5 233 0 191 0 253 0 194 5 233 0 195 5 233 0 196 5 233 0 197 15 33 1 23] 
#[0 6 186 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 6 190 0 11 6 190 0 79 6 190 0 96 6 190 0 121 6 190 0 161 3 3 0 171 6 190 0 172 6 190 1 142] 
#[1 15 37 0 118 3 177 0 161 15 41 0 182] 
#[0 6 194 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 15 45 0 171] 
#[1 15 49 0 118 3 177 0 161 15 53 0 182] 
#[0 15 57 0 171] 
#[1 6 198 0 79 6 198 0 93 6 198 0 95 6 198 0 96 6 198 0 118 6 198 0 121 6 198 0 150 6 198 0 161 8 57 0 172] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 15 61 0 180 15 61 0 181 15 61 0 182 15 61 0 183 15 61 0 184 15 61 0 185 15 61 0 186 4 253 0 187 15 61 0 188 15 61 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 15 61 1 37 15 61 1 38 15 61 1 39 15 61 1 40 15 61 1 41 15 61 1 42 15 61 1 43 15 61 1 44 15 61 1 45 15 61 1 47 15 61 1 49 15 61 1 51 5 61 1 52 5 65 1 53 15 61 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 15 61 1 139 15 61 1 141] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 15 65 0 180 15 65 0 181 15 65 0 182 15 65 0 183 15 65 0 184 15 65 0 185 15 65 0 186 4 253 0 187 15 65 0 188 15 65 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 15 65 1 37 15 65 1 38 15 65 1 39 15 65 1 40 15 65 1 41 15 65 1 42 15 65 1 43 15 65 1 44 15 65 1 45 15 65 1 47 15 65 1 49 15 65 1 51 5 61 1 52 5 65 1 53 15 65 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 15 65 1 139 15 65 1 141] 
#[1 15 69 0 147 15 73 0 151] 
#[0 6 202 0 11 0 171 0 172] 
#[0 15 77 0 171] 
#[1 6 206 0 22 6 206 0 44 6 206 0 54 6 206 0 57 6 206 0 74 6 206 0 81 6 206 0 85 6 206 0 86 6 206 0 96 6 206 0 104 6 206 0 112 6 206 0 113 6 206 0 120 6 206 0 136 6 206 0 142 6 206 0 149 6 206 0 166 6 206 0 167 6 206 0 170 15 81 0 171 6 206 0 172] 
#[0 6 210 0 22 0 44 0 54 0 57 0 74 0 81 0 85 0 86 0 96 0 104 0 112 0 113 0 120 0 136 0 142 0 149 0 166 0 167 0 170 0 172] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 8 233 0 76 15 93 0 78 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 15 85 0 127 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 15 89 0 191 0 253 0 194 15 89 0 195 15 89 0 196 15 89 0 197 15 93 0 252] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 15 97 0 191 0 253 0 194 15 97 0 195 15 97 0 196 15 97 0 197] 
#[0 6 214 0 1 0 3 0 5 0 9 0 11 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 2 135 0 4 4 13 0 5 2 135 0 7 2 139 0 171 15 101 0 228 15 101 0 229 15 101 0 233 15 101 1 1 15 101 1 2] 
#[0 6 218 0 4 0 7 0 171] 
#[0 6 222 0 4 0 7 0 171] 
#[1 6 226 0 4 6 226 0 7 3 7 0 171 15 109 1 3 15 113 1 4] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 15 117 0 127 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 15 121 0 191 0 253 0 194 15 121 0 195 15 121 0 196 15 121 0 197] 
#[1 15 125 0 4 15 129 0 7 15 133 0 171 15 137 0 254] 
#[1 4 181 0 8 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 3 177 0 161 0 253 0 166 0 237 0 167 0 241 0 170 15 141 0 182 15 141 0 191 0 253 0 194 15 141 0 195 15 141 0 196 15 141 0 197 15 141 1 42 15 141 1 103] 
#[0 6 230 0 7 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 4 181 0 8 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 3 177 0 161 0 253 0 166 0 237 0 167 0 241 0 170 15 145 0 171 15 149 0 182 15 149 0 191 0 253 0 194 15 149 0 195 15 149 0 196 15 149 0 197 15 149 1 42 15 149 1 103] 
#[1 0 29 0 1 0 33 0 9 5 254 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 15 153 0 72 0 253 0 74 5 254 0 79 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 5 254 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 5 254 0 121 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 5 254 0 161 0 233 0 166 0 237 0 167 0 241 0 170 5 254 0 171 5 254 0 172 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 15 153 0 201 15 153 0 203 15 153 0 212 15 157 0 220 1 29 0 223 15 153 0 234 1 37 0 235 15 153 0 236 15 153 0 237 15 153 0 238 15 153 0 239 15 153 0 240 15 153 0 241 15 153 0 242 15 153 0 243 15 153 0 247 15 153 0 248 15 153 1 17 15 153 1 18 15 153 1 19 15 153 1 20 15 153 1 21 15 153 1 22 1 105 1 24 15 153 1 25 15 153 1 26 15 153 1 27 15 153 1 28 15 153 1 29 15 153 1 33 15 153 1 36 1 137 1 55 1 137 1 56 1 137 1 57 15 153 1 61 15 153 1 62 15 153 1 63 15 153 1 66 15 153 1 67 15 153 1 68 15 153 1 69 15 153 1 70 15 153 1 71 15 153 1 72 15 153 1 73 15 153 1 74 15 153 1 75 15 153 1 76 15 153 1 77 15 153 1 78 15 153 1 79 15 153 1 80 15 153 1 81 15 153 1 82 15 153 1 83 15 153 1 88 15 153 1 89 1 241 1 90 15 153 1 95 15 153 1 98 15 153 1 99 15 153 1 100 15 153 1 101 15 153 1 102 15 153 1 107 15 153 1 108 15 153 1 109 15 153 1 110 15 153 1 111 15 153 1 112 15 153 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 15 153 1 127 2 93 1 128 2 97 1 129 15 153 1 137 15 153 1 138 15 153 1 140 5 254 1 142] 
#[1 2 143 0 11 5 254 0 79 5 254 0 96 5 254 0 121 5 254 0 161 2 143 0 171 2 143 0 172 6 5 0 215 15 161 0 220 5 254 1 142] 
#[1 6 234 0 93 6 234 0 95 6 234 0 96 6 234 0 161 15 165 1 85] 
#[1 6 238 0 11 6 238 0 79 6 238 0 96 6 238 0 121 6 238 0 161 3 11 0 171 6 238 0 172 6 238 1 142] 
#[1 15 173 0 11 6 242 0 79 6 242 0 96 6 242 0 121 6 242 0 161 3 15 0 171 6 242 0 172 15 181 0 219 6 242 1 142] 
#[1 5 254 0 11 5 254 0 79 5 254 0 96 5 254 0 121 5 254 0 161 5 254 0 171 5 254 0 172 15 161 0 220 5 254 1 142] 
#[1 6 246 0 11 6 246 0 79 6 246 0 96 6 246 0 121 6 246 0 161 3 19 0 171 6 246 0 172 6 246 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 15 189 0 180 15 189 0 181 15 189 0 182 15 189 0 183 15 189 0 184 15 189 0 185 15 189 0 186 4 253 0 187 15 189 0 188 15 189 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 15 189 1 37 15 189 1 38 15 189 1 39 15 189 1 40 15 189 1 41 15 189 1 42 15 189 1 43 15 189 1 44 15 189 1 45 15 189 1 47 15 189 1 49 15 189 1 51 5 61 1 52 5 65 1 53 15 189 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 15 189 1 139 15 189 1 141] 
#[0 15 193 0 121] 
#[1 15 197 0 79 3 177 0 161 8 57 0 172 15 201 0 182 15 209 1 92 15 209 1 96 15 213 1 97] 
#[0 15 217 0 171] 
#[1 4 13 0 5 0 146 0 22 0 146 0 44 0 146 0 54 0 146 0 57 0 146 0 74 0 146 0 81 0 146 0 85 0 146 0 86 0 146 0 96 0 146 0 104 0 146 0 112 0 146 0 113 0 146 0 120 0 146 0 136 0 146 0 142 0 146 0 149 0 146 0 166 0 146 0 167 0 146 0 170 3 23 0 171 0 146 0 172 15 221 0 228 15 221 0 229 15 221 0 233] 
#[0 6 250 0 22 0 44 0 54 0 57 0 74 0 81 0 85 0 86 0 96 0 104 0 112 0 113 0 120 0 136 0 142 0 149 0 166 0 167 0 170 0 172] 
#[0 6 254 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 15 225 0 150] 
#[0 15 229 0 152] 
#[0 15 233 0 96] 
#[1 2 182 0 1 2 182 0 3 2 182 0 4 2 182 0 5 2 182 0 7 2 182 0 9 2 182 0 11 1 27 0 22 2 182 0 24 2 182 0 26 2 182 0 27 2 182 0 28 2 182 0 29 2 182 0 30 2 182 0 31 2 182 0 32 2 182 0 33 2 182 0 34 2 182 0 35 2 182 0 36 2 182 0 37 2 182 0 38 2 182 0 39 2 182 0 40 2 182 0 41 2 182 0 42 2 182 0 43 1 31 0 44 2 182 0 48 2 182 0 53 1 35 0 54 2 182 0 55 1 39 0 57 2 182 0 58 2 182 0 70 2 182 0 72 2 182 0 73 1 43 0 74 15 237 0 75 15 237 0 77 2 182 0 79 1 47 0 81 2 182 0 83 15 237 0 84 1 51 0 85 1 55 0 86 15 237 0 87 2 182 0 88 2 182 0 89 2 182 0 90 15 237 0 91 2 182 0 96 2 182 0 97 2 182 0 99 2 182 0 100 2 182 0 102 2 182 0 103 1 59 0 104 2 182 0 105 2 182 0 106 2 182 0 107 2 182 0 108 2 182 0 109 15 237 0 111 1 63 0 112 1 67 0 113 15 237 0 115 15 237 0 116 15 237 0 117 1 71 0 120 2 182 0 121 2 182 0 123 2 182 0 124 2 182 0 129 2 182 0 130 2 182 0 131 2 182 0 132 2 182 0 133 2 182 0 134 2 182 0 135 1 75 0 136 15 237 0 137 2 182 0 138 15 237 0 140 2 182 0 141 1 79 0 142 2 182 0 146 5 165 0 148 1 83 0 149 2 182 0 151 2 182 0 152 2 182 0 161 1 87 0 166 1 91 0 167 1 95 0 170 2 182 0 171 2 182 0 172 5 169 0 191 0 253 0 194 5 169 0 195 5 169 0 196 5 169 0 197 15 237 0 222 15 237 0 224 5 181 0 226 15 237 0 227 2 182 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 15 241 0 171 15 245 0 180 15 245 0 181 15 245 0 182 15 245 0 183 15 245 0 184 15 245 0 185 15 245 0 186 4 253 0 187 15 245 0 188 15 245 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 15 245 1 37 15 245 1 38 15 245 1 39 15 245 1 40 15 245 1 41 15 245 1 42 15 245 1 43 15 245 1 44 15 245 1 45 15 245 1 47 15 245 1 49 15 245 1 51 5 61 1 52 5 65 1 53 15 245 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 15 245 1 139 15 245 1 141] 
#[0 15 249 0 5] 
#[1 7 2 0 7 7 2 0 11 7 2 0 22 7 2 0 27 7 2 0 28 7 2 0 29 7 2 0 30 7 2 0 31 7 2 0 32 7 2 0 33 7 2 0 34 7 2 0 35 7 2 0 36 7 2 0 37 7 2 0 38 7 2 0 39 7 2 0 40 7 2 0 44 7 2 0 54 7 2 0 57 7 2 0 70 7 2 0 73 7 2 0 74 7 2 0 79 7 2 0 81 7 2 0 83 7 2 0 85 7 2 0 86 7 2 0 88 7 2 0 89 7 2 0 96 7 2 0 97 7 2 0 99 7 2 0 102 7 2 0 103 7 2 0 104 7 2 0 105 7 2 0 109 7 2 0 112 7 2 0 113 7 2 0 120 7 2 0 121 7 2 0 124 7 2 0 129 7 2 0 130 7 2 0 131 7 2 0 132 7 2 0 136 7 2 0 138 7 2 0 141 7 2 0 142 7 2 0 146 7 2 0 149 7 2 0 161 7 2 0 166 7 2 0 167 7 2 0 170 3 27 0 171 7 2 0 172 7 2 1 142] 
#[1 0 6 0 22 0 6 0 44 0 6 0 54 0 6 0 57 0 6 0 74 0 6 0 81 0 6 0 85 0 6 0 86 0 6 0 96 0 6 0 104 0 6 0 112 0 6 0 113 0 6 0 120 0 6 0 136 0 6 0 142 0 6 0 149 0 6 0 166 0 6 0 167 0 6 0 170 0 6 0 172 15 253 0 177 10 145 0 249] 
#[1 8 81 0 3 16 1 0 253] 
#[0 7 6 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 0 6 0 22 0 6 0 44 0 6 0 54 0 6 0 57 0 6 0 74 0 6 0 81 0 6 0 85 0 6 0 86 0 6 0 96 0 6 0 104 0 6 0 112 0 6 0 113 0 6 0 120 0 6 0 136 0 6 0 142 0 6 0 149 0 6 0 166 0 6 0 167 0 6 0 170 0 6 0 172 16 5 0 177 10 241 0 244] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 16 9 0 180 16 9 0 181 16 9 0 182 16 9 0 183 16 9 0 184 16 9 0 185 16 9 0 186 4 253 0 187 16 9 0 188 16 9 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 16 9 1 37 16 9 1 38 16 9 1 39 16 9 1 40 16 9 1 41 16 9 1 42 16 9 1 43 16 9 1 44 16 9 1 45 16 9 1 47 16 9 1 49 16 9 1 51 5 61 1 52 5 65 1 53 16 9 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 16 9 1 139 16 9 1 141] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 16 13 0 180 16 13 0 181 16 13 0 182 16 13 0 183 16 13 0 184 16 13 0 185 16 13 0 186 4 253 0 187 16 13 0 188 16 13 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 16 13 1 37 16 13 1 38 16 13 1 39 16 13 1 40 16 13 1 41 16 13 1 42 16 13 1 43 16 13 1 44 16 13 1 45 16 13 1 47 16 13 1 49 16 13 1 51 5 61 1 52 5 65 1 53 16 13 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 16 13 1 139 16 13 1 141] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 16 17 0 180 16 17 0 181 16 17 0 182 16 17 0 183 16 17 0 184 16 17 0 185 16 17 0 186 4 253 0 187 16 17 0 188 16 17 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 16 17 1 37 16 17 1 38 16 17 1 39 16 17 1 40 16 17 1 41 16 17 1 42 16 17 1 43 16 17 1 44 16 17 1 45 16 17 1 47 16 17 1 49 16 17 1 51 5 61 1 52 5 65 1 53 16 17 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 16 17 1 139 16 17 1 141] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 16 21 0 180 16 21 0 181 16 21 0 182 16 21 0 183 16 21 0 184 16 21 0 185 16 21 0 186 4 253 0 187 16 21 0 188 16 21 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 16 21 1 37 16 21 1 38 16 21 1 39 16 21 1 40 16 21 1 41 16 21 1 42 16 21 1 43 16 21 1 44 16 21 1 45 16 21 1 47 16 21 1 49 16 21 1 51 5 61 1 52 5 65 1 53 16 21 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 16 21 1 139 16 21 1 141] 
#[0 7 10 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 7 14 0 1 7 14 0 3 7 14 0 4 7 14 0 5 7 14 0 7 7 14 0 9 7 14 0 11 7 14 0 13 7 14 0 22 7 14 0 24 7 14 0 26 7 14 0 27 7 14 0 28 7 14 0 29 7 14 0 30 7 14 0 31 7 14 0 32 7 14 0 33 7 14 0 34 7 14 0 35 7 14 0 36 7 14 0 37 7 14 0 38 7 14 0 39 7 14 0 40 7 14 0 41 7 14 0 42 7 14 0 43 7 14 0 44 7 14 0 48 7 14 0 53 7 14 0 54 7 14 0 55 7 14 0 57 7 14 0 58 7 14 0 70 7 14 0 72 7 14 0 73 7 14 0 74 7 14 0 79 7 14 0 81 7 14 0 83 7 14 0 85 7 14 0 86 7 14 0 88 7 14 0 89 7 14 0 90 7 14 0 96 7 14 0 97 7 14 0 99 7 14 0 100 7 14 0 102 7 14 0 103 7 14 0 104 7 14 0 105 7 14 0 106 7 14 0 107 7 14 0 108 7 14 0 109 7 14 0 112 7 14 0 113 7 14 0 118 7 14 0 120 7 14 0 121 7 14 0 123 7 14 0 124 7 14 0 129 7 14 0 130 7 14 0 131 7 14 0 132 7 14 0 133 7 14 0 134 7 14 0 135 7 14 0 136 7 14 0 138 7 14 0 141 7 14 0 142 7 14 0 146 7 14 0 149 7 14 0 150 7 14 0 151 7 14 0 152 7 14 0 161 7 14 0 166 7 14 0 167 7 14 0 170 3 31 0 171 7 14 0 172 7 14 1 142] 
#[0 16 25 0 171] 
#[0 16 29 0 171] 
#[0 7 18 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 7 22 0 1 7 22 0 3 7 22 0 4 7 22 0 5 7 22 0 7 7 22 0 9 7 22 0 11 7 22 0 13 7 22 0 22 7 22 0 24 7 22 0 26 7 22 0 27 7 22 0 28 7 22 0 29 7 22 0 30 7 22 0 31 7 22 0 32 7 22 0 33 7 22 0 34 7 22 0 35 7 22 0 36 7 22 0 37 7 22 0 38 7 22 0 39 7 22 0 40 7 22 0 41 7 22 0 42 7 22 0 43 7 22 0 44 7 22 0 48 7 22 0 53 7 22 0 54 7 22 0 55 7 22 0 57 7 22 0 58 7 22 0 70 7 22 0 72 7 22 0 73 7 22 0 74 7 22 0 79 7 22 0 81 7 22 0 83 7 22 0 85 7 22 0 86 7 22 0 88 7 22 0 89 7 22 0 90 7 22 0 96 7 22 0 97 7 22 0 99 7 22 0 100 7 22 0 102 7 22 0 103 7 22 0 104 7 22 0 105 7 22 0 106 7 22 0 107 7 22 0 108 7 22 0 109 7 22 0 112 7 22 0 113 7 22 0 118 7 22 0 120 7 22 0 121 7 22 0 123 7 22 0 124 7 22 0 129 7 22 0 130 7 22 0 131 7 22 0 132 7 22 0 133 7 22 0 134 7 22 0 135 7 22 0 136 7 22 0 138 7 22 0 141 7 22 0 142 7 22 0 146 7 22 0 149 7 22 0 150 7 22 0 151 7 22 0 152 7 22 0 161 7 22 0 166 7 22 0 167 7 22 0 170 3 35 0 171 7 22 0 172 7 22 1 142] 
#[0 7 26 0 1 0 3 0 4 0 6 0 7 0 8 0 9 0 11 0 13 0 22 0 24 0 44 0 53 0 54 0 57 0 62 0 74 0 76 0 78 0 79 0 81 0 85 0 86 0 96 0 104 0 112 0 113 0 120 0 121 0 122 0 127 0 136 0 142 0 149 0 154 0 159 0 160 0 161 0 162 0 163 0 164 0 165 0 166 0 167 0 169 0 170 0 171 0 172 1 142] 
#[0 7 30 0 1 0 3 0 4 0 6 0 7 0 8 0 9 0 11 0 13 0 22 0 24 0 44 0 53 0 54 0 57 0 62 0 74 0 76 0 78 0 79 0 81 0 85 0 86 0 96 0 104 0 112 0 113 0 120 0 121 0 122 0 127 0 136 0 142 0 149 0 154 0 159 0 160 0 161 0 162 0 163 0 164 0 165 0 166 0 167 0 169 0 170 0 171 0 172 1 142] 
#[1 0 29 0 1 4 173 0 3 7 34 0 4 4 177 0 6 7 34 0 7 4 181 0 8 0 33 0 9 7 34 0 11 7 34 0 13 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 8 233 0 76 8 253 0 78 7 34 0 79 0 253 0 81 0 253 0 85 0 253 0 86 7 34 0 96 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 7 34 0 121 4 189 0 122 8 241 0 127 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 39 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 7 34 0 171 7 34 0 172 9 1 0 180 9 1 0 181 9 1 0 182 9 1 0 183 9 1 0 184 9 1 0 185 9 1 0 186 4 253 0 187 9 1 0 188 9 1 0 189 8 245 0 191 0 253 0 194 8 245 0 195 8 245 0 196 8 245 0 197 8 249 0 236 8 253 0 252 9 1 1 37 9 1 1 38 9 1 1 39 9 1 1 40 9 1 1 41 9 1 1 42 9 1 1 43 9 1 1 44 9 1 1 45 9 1 1 47 9 1 1 49 9 1 1 51 5 61 1 52 5 65 1 53 9 1 1 54 5 73 1 55 5 73 1 56 5 73 1 57 2 69 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 16 33 1 130 9 1 1 139 9 1 1 141 7 34 1 142] 
#[0 7 38 0 4 0 7 0 11 0 13 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 0 29 0 1 4 173 0 3 7 42 0 4 4 177 0 6 7 42 0 7 4 181 0 8 0 33 0 9 7 42 0 11 7 42 0 13 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 8 233 0 76 8 253 0 78 7 42 0 79 0 253 0 81 0 253 0 85 0 253 0 86 7 42 0 96 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 7 42 0 121 4 189 0 122 8 241 0 127 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 43 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 7 42 0 171 7 42 0 172 9 1 0 180 9 1 0 181 9 1 0 182 9 1 0 183 9 1 0 184 9 1 0 185 9 1 0 186 4 253 0 187 9 1 0 188 9 1 0 189 8 245 0 191 0 253 0 194 8 245 0 195 8 245 0 196 8 245 0 197 8 249 0 236 8 253 0 252 9 1 1 37 9 1 1 38 9 1 1 39 9 1 1 40 9 1 1 41 9 1 1 42 9 1 1 43 9 1 1 44 9 1 1 45 9 1 1 47 9 1 1 49 9 1 1 51 5 61 1 52 5 65 1 53 9 1 1 54 5 73 1 55 5 73 1 56 5 73 1 57 2 69 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 16 37 1 130 9 1 1 139 9 1 1 141 7 42 1 142] 
#[0 7 46 0 4 0 7 0 11 0 13 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 7 50 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 7 54 0 96 0 172] 
#[0 16 41 0 114] 
#[0 16 45 0 114] 
#[1 2 87 0 1 0 146 0 3 13 233 0 5 2 87 0 9 2 87 0 11 2 87 0 22 6 189 0 23 2 87 0 24 2 87 0 26 2 87 0 41 2 87 0 42 2 87 0 43 2 87 0 44 2 87 0 48 2 87 0 53 2 87 0 54 2 87 0 55 2 87 0 57 2 87 0 58 2 87 0 70 2 87 0 72 2 87 0 74 2 87 0 81 2 87 0 83 2 87 0 85 2 87 0 86 2 87 0 89 2 87 0 90 2 87 0 97 2 87 0 99 2 87 0 100 2 87 0 102 2 87 0 104 2 87 0 105 2 87 0 106 2 87 0 107 2 87 0 108 2 87 0 112 2 87 0 113 2 87 0 120 2 87 0 123 2 87 0 124 2 87 0 129 2 87 0 131 2 87 0 132 2 87 0 133 2 87 0 134 2 87 0 135 2 87 0 136 2 87 0 138 2 87 0 142 2 87 0 146 2 87 0 149 2 87 0 151 2 87 0 152 2 87 0 161 2 87 0 166 2 87 0 167 2 87 0 170 2 227 0 171 2 87 0 172 11 165 0 228 11 165 0 229 11 165 0 233 11 169 1 10 16 49 1 11] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 16 53 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 16 57 0 171 16 61 0 180 16 61 0 181 16 61 0 182 16 61 0 183 16 61 0 184 16 61 0 185 16 61 0 186 4 253 0 187 16 61 0 188 16 61 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 16 61 1 37 16 61 1 38 16 61 1 39 16 61 1 40 16 61 1 41 16 61 1 42 16 61 1 43 16 61 1 44 16 61 1 45 16 61 1 47 16 61 1 49 16 61 1 51 5 61 1 52 5 65 1 53 16 61 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 16 61 1 139 16 61 1 141] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 16 65 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 7 58 0 1 0 9 0 11 0 22 0 24 0 26 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 74 0 81 0 83 0 85 0 86 0 89 0 90 0 97 0 99 0 100 0 102 0 104 0 105 0 106 0 107 0 108 0 112 0 113 0 120 0 123 0 124 0 129 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 142 0 146 0 149 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172] 
#[0 16 69 0 96] 
#[1 0 29 0 1 0 146 0 3 4 13 0 5 3 47 0 9 3 51 0 11 3 55 0 22 3 59 0 24 3 63 0 26 3 67 0 41 3 71 0 42 3 75 0 43 3 79 0 44 3 83 0 48 3 87 0 53 3 91 0 54 3 95 0 55 3 99 0 57 3 103 0 58 3 107 0 70 3 111 0 72 3 115 0 74 3 119 0 81 3 123 0 83 3 127 0 85 3 131 0 86 3 135 0 89 3 139 0 90 3 143 0 97 3 147 0 99 3 151 0 100 3 155 0 102 3 159 0 104 3 163 0 105 3 167 0 106 3 171 0 107 3 175 0 108 3 179 0 112 3 183 0 113 3 187 0 120 3 191 0 123 3 195 0 124 3 199 0 129 3 203 0 131 3 207 0 132 3 211 0 133 3 215 0 134 3 219 0 135 3 223 0 136 3 227 0 138 3 231 0 142 3 235 0 146 3 239 0 149 3 243 0 151 3 247 0 152 3 251 0 161 3 255 0 166 4 3 0 167 4 7 0 170 4 11 0 171 3 51 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 16 73 0 213 3 197 0 215 1 29 0 223 16 77 0 228 16 77 0 229 16 77 0 233 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 16 81 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 16 85 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 16 89 0 96] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 16 93 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 16 97 0 171] 
#[0 16 101 0 96] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 16 105 0 191 0 253 0 194 16 105 0 195 16 105 0 196 16 105 0 197] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 16 109 0 191 0 253 0 194 16 109 0 195 16 109 0 196 16 109 0 197] 
#[1 8 81 0 3 16 113 0 253] 
#[1 2 87 0 1 0 146 0 3 4 13 0 5 2 87 0 9 2 87 0 11 2 87 0 22 2 87 0 24 2 87 0 26 2 87 0 41 2 87 0 42 2 87 0 43 2 87 0 44 2 87 0 48 2 87 0 53 2 87 0 54 2 87 0 55 2 87 0 57 2 87 0 58 2 87 0 70 2 87 0 72 2 87 0 74 2 87 0 81 2 87 0 83 2 87 0 85 2 87 0 86 2 87 0 89 2 87 0 90 2 87 0 97 2 87 0 99 2 87 0 100 2 87 0 102 2 87 0 104 2 87 0 105 2 87 0 106 2 87 0 107 2 87 0 108 2 87 0 112 2 87 0 113 2 87 0 120 2 87 0 123 2 87 0 124 2 87 0 129 2 87 0 131 2 87 0 132 2 87 0 133 2 87 0 134 2 87 0 135 2 87 0 136 2 87 0 138 2 87 0 142 2 87 0 146 2 87 0 149 2 87 0 151 2 87 0 152 2 87 0 161 2 87 0 166 2 87 0 167 2 87 0 170 4 15 0 171 2 87 0 172 11 165 0 228 11 165 0 229 11 165 0 233 11 169 1 10 16 121 1 11] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 16 125 0 191 0 253 0 194 16 125 0 195 16 125 0 196 16 125 0 197] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 16 129 0 191 0 253 0 194 16 129 0 195 16 129 0 196 16 129 0 197] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 16 133 0 191 0 253 0 194 16 133 0 195 16 133 0 196 16 133 0 197] 
#[1 2 95 0 1 8 81 0 3 2 95 0 9 2 95 0 11 2 95 0 22 2 95 0 24 2 95 0 26 2 95 0 41 2 95 0 42 2 95 0 43 2 95 0 44 2 95 0 48 2 95 0 53 2 95 0 54 2 95 0 55 2 95 0 57 2 95 0 58 2 95 0 70 2 95 0 72 2 95 0 74 2 95 0 81 2 95 0 83 2 95 0 85 2 95 0 86 2 95 0 89 2 95 0 90 2 95 0 97 2 95 0 99 2 95 0 100 2 95 0 102 2 95 0 104 2 95 0 105 2 95 0 106 2 95 0 107 2 95 0 108 2 95 0 112 2 95 0 113 2 95 0 120 2 95 0 123 2 95 0 124 2 95 0 129 2 95 0 131 2 95 0 132 2 95 0 133 2 95 0 134 2 95 0 135 2 95 0 136 2 95 0 138 2 95 0 142 2 95 0 146 2 95 0 149 2 95 0 151 2 95 0 152 2 95 0 161 2 95 0 166 2 95 0 167 2 95 0 170 2 99 0 171 2 95 0 172 16 137 0 221 16 141 0 253] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 16 145 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 4 174 0 1 4 174 0 9 4 174 0 11 4 174 0 22 4 174 0 24 4 174 0 26 4 174 0 41 4 174 0 42 4 174 0 43 4 174 0 44 4 174 0 48 4 174 0 53 4 174 0 54 4 174 0 55 4 174 0 57 4 174 0 58 4 174 0 70 4 174 0 72 4 174 0 74 4 174 0 81 4 174 0 83 4 174 0 85 4 174 0 86 4 174 0 89 4 174 0 90 4 174 0 97 4 174 0 99 4 174 0 100 4 174 0 102 4 174 0 104 4 174 0 105 4 174 0 106 4 174 0 107 4 174 0 108 4 174 0 112 4 174 0 113 4 174 0 120 4 174 0 123 4 174 0 124 4 174 0 129 4 174 0 131 4 174 0 132 4 174 0 133 4 174 0 134 4 174 0 135 4 174 0 136 4 174 0 138 4 174 0 142 4 174 0 146 4 174 0 149 4 174 0 151 4 174 0 152 4 174 0 161 4 174 0 166 4 174 0 167 4 174 0 170 2 103 0 171 4 174 0 172 16 149 0 221] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 16 153 0 191 0 253 0 194 16 153 0 195 16 153 0 196 16 153 0 197] 
#[1 16 157 0 104 16 161 0 113 16 165 0 136] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 16 169 0 191 0 253 0 194 16 169 0 195 16 169 0 196 16 169 0 197] 
#[1 8 81 0 3 16 173 0 253] 
#[1 2 87 0 1 0 146 0 3 4 13 0 5 2 87 0 9 2 87 0 11 2 87 0 22 2 87 0 24 2 87 0 26 2 87 0 41 2 87 0 42 2 87 0 43 2 87 0 44 2 87 0 48 2 87 0 53 2 87 0 54 2 87 0 55 2 87 0 57 2 87 0 58 2 87 0 70 2 87 0 72 2 87 0 74 2 87 0 81 2 87 0 83 2 87 0 85 2 87 0 86 2 87 0 89 2 87 0 90 2 87 0 97 2 87 0 99 2 87 0 100 2 87 0 102 2 87 0 104 2 87 0 105 2 87 0 106 2 87 0 107 2 87 0 108 2 87 0 112 2 87 0 113 2 87 0 120 2 87 0 123 2 87 0 124 2 87 0 129 2 87 0 131 2 87 0 132 2 87 0 133 2 87 0 134 2 87 0 135 2 87 0 136 2 87 0 138 2 87 0 142 2 87 0 146 2 87 0 149 2 87 0 151 2 87 0 152 2 87 0 161 2 87 0 166 2 87 0 167 2 87 0 170 4 19 0 171 2 87 0 172 11 165 0 228 11 165 0 229 11 165 0 233 11 169 1 10 16 181 1 11] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 16 185 0 191 0 253 0 194 16 185 0 195 16 185 0 196 16 185 0 197] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 16 189 0 191 0 253 0 194 16 189 0 195 16 189 0 196 16 189 0 197] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 16 193 0 191 0 253 0 194 16 193 0 195 16 193 0 196 16 193 0 197] 
#[1 2 95 0 1 8 81 0 3 2 95 0 9 2 95 0 11 2 95 0 22 2 95 0 24 2 95 0 26 2 95 0 41 2 95 0 42 2 95 0 43 2 95 0 44 2 95 0 48 2 95 0 53 2 95 0 54 2 95 0 55 2 95 0 57 2 95 0 58 2 95 0 70 2 95 0 72 2 95 0 74 2 95 0 81 2 95 0 83 2 95 0 85 2 95 0 86 2 95 0 89 2 95 0 90 2 95 0 97 2 95 0 99 2 95 0 100 2 95 0 102 2 95 0 104 2 95 0 105 2 95 0 106 2 95 0 107 2 95 0 108 2 95 0 112 2 95 0 113 2 95 0 120 2 95 0 123 2 95 0 124 2 95 0 129 2 95 0 131 2 95 0 132 2 95 0 133 2 95 0 134 2 95 0 135 2 95 0 136 2 95 0 138 2 95 0 142 2 95 0 146 2 95 0 149 2 95 0 151 2 95 0 152 2 95 0 161 2 95 0 166 2 95 0 167 2 95 0 170 2 99 0 171 2 95 0 172 16 197 0 221 16 201 0 253] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 16 205 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 4 174 0 1 4 174 0 9 4 174 0 11 4 174 0 22 4 174 0 24 4 174 0 26 4 174 0 41 4 174 0 42 4 174 0 43 4 174 0 44 4 174 0 48 4 174 0 53 4 174 0 54 4 174 0 55 4 174 0 57 4 174 0 58 4 174 0 70 4 174 0 72 4 174 0 74 4 174 0 81 4 174 0 83 4 174 0 85 4 174 0 86 4 174 0 89 4 174 0 90 4 174 0 97 4 174 0 99 4 174 0 100 4 174 0 102 4 174 0 104 4 174 0 105 4 174 0 106 4 174 0 107 4 174 0 108 4 174 0 112 4 174 0 113 4 174 0 120 4 174 0 123 4 174 0 124 4 174 0 129 4 174 0 131 4 174 0 132 4 174 0 133 4 174 0 134 4 174 0 135 4 174 0 136 4 174 0 138 4 174 0 142 4 174 0 146 4 174 0 149 4 174 0 151 4 174 0 152 4 174 0 161 4 174 0 166 4 174 0 167 4 174 0 170 2 103 0 171 4 174 0 172 16 209 0 221] 
#[0 7 62 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 16 213 0 171] 
#[0 16 217 0 171] 
#[1 7 165 0 158 16 221 0 190] 
#[1 7 66 0 1 7 66 0 3 7 66 0 4 7 66 0 5 7 66 0 7 7 66 0 9 7 66 0 11 7 66 0 13 7 66 0 22 7 66 0 24 7 66 0 26 7 66 0 27 7 66 0 28 7 66 0 29 7 66 0 30 7 66 0 31 7 66 0 32 7 66 0 33 7 66 0 34 7 66 0 35 7 66 0 36 7 66 0 37 7 66 0 38 7 66 0 39 7 66 0 40 7 66 0 41 7 66 0 42 7 66 0 43 7 66 0 44 7 66 0 48 7 66 0 53 7 66 0 54 7 66 0 55 7 66 0 57 7 66 0 58 7 66 0 70 7 66 0 72 7 66 0 73 7 66 0 74 7 66 0 79 7 66 0 81 7 66 0 83 7 66 0 85 7 66 0 86 7 66 0 88 7 66 0 89 7 66 0 90 7 66 0 96 7 66 0 97 7 66 0 99 7 66 0 100 7 66 0 102 7 66 0 103 7 66 0 104 7 66 0 105 7 66 0 106 7 66 0 107 7 66 0 108 7 66 0 109 7 66 0 112 7 66 0 113 7 66 0 118 7 66 0 120 7 66 0 121 7 66 0 123 7 66 0 124 7 66 0 129 7 66 0 130 7 66 0 131 7 66 0 132 7 66 0 133 7 66 0 134 7 66 0 135 7 66 0 136 7 66 0 138 7 66 0 141 7 66 0 142 7 66 0 146 7 66 0 149 7 66 0 150 7 66 0 151 7 66 0 152 7 66 0 161 7 66 0 166 7 66 0 167 7 66 0 170 4 23 0 171 7 66 0 172 7 66 1 142] 
#[1 7 70 0 1 7 70 0 3 7 70 0 4 7 70 0 5 7 70 0 7 7 70 0 9 7 70 0 11 7 70 0 13 7 70 0 22 7 70 0 24 7 70 0 26 7 70 0 27 7 70 0 28 7 70 0 29 7 70 0 30 7 70 0 31 7 70 0 32 7 70 0 33 7 70 0 34 7 70 0 35 7 70 0 36 7 70 0 37 7 70 0 38 7 70 0 39 7 70 0 40 7 70 0 41 7 70 0 42 7 70 0 43 7 70 0 44 7 70 0 48 7 70 0 53 7 70 0 54 7 70 0 55 7 70 0 57 7 70 0 58 7 70 0 70 7 70 0 72 7 70 0 73 7 70 0 74 7 70 0 79 7 70 0 81 7 70 0 83 7 70 0 85 7 70 0 86 7 70 0 88 7 70 0 89 7 70 0 90 7 70 0 96 7 70 0 97 7 70 0 99 7 70 0 100 7 70 0 102 7 70 0 103 7 70 0 104 7 70 0 105 7 70 0 106 7 70 0 107 7 70 0 108 7 70 0 109 7 70 0 112 7 70 0 113 7 70 0 118 7 70 0 120 7 70 0 121 7 70 0 123 7 70 0 124 7 70 0 129 7 70 0 130 7 70 0 131 7 70 0 132 7 70 0 133 7 70 0 134 7 70 0 135 7 70 0 136 7 70 0 138 7 70 0 141 7 70 0 142 7 70 0 146 7 70 0 149 7 70 0 150 7 70 0 151 7 70 0 152 7 70 0 161 7 70 0 166 7 70 0 167 7 70 0 170 4 27 0 171 7 70 0 172 7 70 1 142] 
#[1 7 74 0 1 7 74 0 3 7 74 0 4 7 74 0 5 7 74 0 7 7 74 0 9 7 74 0 11 7 74 0 13 7 74 0 22 7 74 0 24 7 74 0 26 7 74 0 27 7 74 0 28 7 74 0 29 7 74 0 30 7 74 0 31 7 74 0 32 7 74 0 33 7 74 0 34 7 74 0 35 7 74 0 36 7 74 0 37 7 74 0 38 7 74 0 39 7 74 0 40 7 74 0 41 7 74 0 42 7 74 0 43 7 74 0 44 7 74 0 48 7 74 0 53 7 74 0 54 7 74 0 55 7 74 0 57 7 74 0 58 7 74 0 70 7 74 0 72 7 74 0 73 7 74 0 74 7 74 0 79 7 74 0 81 7 74 0 83 7 74 0 85 7 74 0 86 7 74 0 88 7 74 0 89 7 74 0 90 7 74 0 96 7 74 0 97 7 74 0 99 7 74 0 100 7 74 0 102 7 74 0 103 7 74 0 104 7 74 0 105 7 74 0 106 7 74 0 107 7 74 0 108 7 74 0 109 7 74 0 112 7 74 0 113 7 74 0 118 7 74 0 120 7 74 0 121 7 74 0 123 7 74 0 124 7 74 0 129 7 74 0 130 7 74 0 131 7 74 0 132 7 74 0 133 7 74 0 134 7 74 0 135 7 74 0 136 7 74 0 138 7 74 0 141 7 74 0 142 7 74 0 146 7 74 0 149 7 74 0 150 7 74 0 151 7 74 0 152 7 74 0 161 7 74 0 166 7 74 0 167 7 74 0 170 4 31 0 171 7 74 0 172 7 74 1 142] 
#[1 7 78 0 1 7 78 0 3 7 78 0 4 7 78 0 5 7 78 0 7 7 78 0 9 7 78 0 11 7 78 0 13 7 78 0 22 7 78 0 24 7 78 0 26 7 78 0 27 7 78 0 28 7 78 0 29 7 78 0 30 7 78 0 31 7 78 0 32 7 78 0 33 7 78 0 34 7 78 0 35 7 78 0 36 7 78 0 37 7 78 0 38 7 78 0 39 7 78 0 40 7 78 0 41 7 78 0 42 7 78 0 43 7 78 0 44 7 78 0 48 7 78 0 53 7 78 0 54 7 78 0 55 7 78 0 57 7 78 0 58 7 78 0 70 7 78 0 72 7 78 0 73 7 78 0 74 7 78 0 79 7 78 0 81 7 78 0 83 7 78 0 85 7 78 0 86 7 78 0 88 7 78 0 89 7 78 0 90 7 78 0 96 7 78 0 97 7 78 0 99 7 78 0 100 7 78 0 102 7 78 0 103 7 78 0 104 7 78 0 105 7 78 0 106 7 78 0 107 7 78 0 108 7 78 0 109 7 78 0 112 7 78 0 113 7 78 0 118 7 78 0 120 7 78 0 121 7 78 0 123 7 78 0 124 7 78 0 129 7 78 0 130 7 78 0 131 7 78 0 132 7 78 0 133 7 78 0 134 7 78 0 135 7 78 0 136 7 78 0 138 7 78 0 141 7 78 0 142 7 78 0 146 7 78 0 149 7 78 0 150 7 78 0 151 7 78 0 152 7 78 0 161 7 78 0 166 7 78 0 167 7 78 0 170 4 35 0 171 7 78 0 172 7 78 1 142] 
#[1 7 82 0 1 7 82 0 3 7 82 0 4 7 82 0 5 7 82 0 7 7 82 0 9 7 82 0 11 7 82 0 13 7 82 0 22 7 82 0 24 7 82 0 26 7 82 0 27 7 82 0 28 7 82 0 29 7 82 0 30 7 82 0 31 7 82 0 32 7 82 0 33 7 82 0 34 7 82 0 35 7 82 0 36 7 82 0 37 7 82 0 38 7 82 0 39 7 82 0 40 7 82 0 41 7 82 0 42 7 82 0 43 7 82 0 44 7 82 0 48 7 82 0 53 7 82 0 54 7 82 0 55 7 82 0 57 7 82 0 58 7 82 0 70 7 82 0 72 7 82 0 73 7 82 0 74 7 82 0 79 7 82 0 81 7 82 0 83 7 82 0 85 7 82 0 86 7 82 0 88 7 82 0 89 7 82 0 90 7 82 0 96 7 82 0 97 7 82 0 99 7 82 0 100 7 82 0 102 7 82 0 103 7 82 0 104 7 82 0 105 7 82 0 106 7 82 0 107 7 82 0 108 7 82 0 109 7 82 0 112 7 82 0 113 7 82 0 118 7 82 0 120 7 82 0 121 7 82 0 123 7 82 0 124 7 82 0 129 7 82 0 130 7 82 0 131 7 82 0 132 7 82 0 133 7 82 0 134 7 82 0 135 7 82 0 136 7 82 0 138 7 82 0 141 7 82 0 142 7 82 0 146 7 82 0 149 7 82 0 150 7 82 0 151 7 82 0 152 7 82 0 161 7 82 0 166 7 82 0 167 7 82 0 170 4 39 0 171 7 82 0 172 7 82 1 142] 
#[1 7 86 0 1 7 86 0 3 7 86 0 4 7 86 0 5 7 86 0 7 7 86 0 9 7 86 0 11 7 86 0 13 7 86 0 22 7 86 0 24 7 86 0 26 7 86 0 27 7 86 0 28 7 86 0 29 7 86 0 30 7 86 0 31 7 86 0 32 7 86 0 33 7 86 0 34 7 86 0 35 7 86 0 36 7 86 0 37 7 86 0 38 7 86 0 39 7 86 0 40 7 86 0 41 7 86 0 42 7 86 0 43 7 86 0 44 7 86 0 48 7 86 0 53 7 86 0 54 7 86 0 55 7 86 0 57 7 86 0 58 7 86 0 70 7 86 0 72 7 86 0 73 7 86 0 74 7 86 0 79 7 86 0 81 7 86 0 83 7 86 0 85 7 86 0 86 7 86 0 88 7 86 0 89 7 86 0 90 7 86 0 96 7 86 0 97 7 86 0 99 7 86 0 100 7 86 0 102 7 86 0 103 7 86 0 104 7 86 0 105 7 86 0 106 7 86 0 107 7 86 0 108 7 86 0 109 7 86 0 112 7 86 0 113 7 86 0 118 7 86 0 120 7 86 0 121 7 86 0 123 7 86 0 124 7 86 0 129 7 86 0 130 7 86 0 131 7 86 0 132 7 86 0 133 7 86 0 134 7 86 0 135 7 86 0 136 7 86 0 138 7 86 0 141 7 86 0 142 7 86 0 146 7 86 0 149 7 86 0 150 7 86 0 151 7 86 0 152 7 86 0 161 7 86 0 166 7 86 0 167 7 86 0 170 4 43 0 171 7 86 0 172 7 86 1 142] 
#[0 3 54 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 4 47 0 1 4 51 0 3 3 70 0 4 3 70 0 5 3 70 0 7 4 47 0 9 3 70 0 11 3 70 0 13 3 70 0 22 3 70 0 24 3 70 0 26 3 70 0 27 3 70 0 28 3 70 0 29 3 70 0 30 3 70 0 31 3 70 0 32 3 70 0 33 3 70 0 34 3 70 0 35 3 70 0 36 3 70 0 37 3 70 0 38 3 70 0 39 3 70 0 40 3 70 0 41 3 70 0 42 3 70 0 43 3 70 0 44 3 70 0 48 3 70 0 53 3 70 0 54 3 70 0 55 3 70 0 57 3 70 0 58 3 70 0 70 3 70 0 72 3 70 0 73 3 70 0 74 3 70 0 79 3 70 0 81 3 70 0 83 3 70 0 85 3 70 0 86 3 70 0 88 3 70 0 89 3 70 0 90 3 70 0 96 3 70 0 97 3 70 0 99 3 70 0 100 3 70 0 102 3 70 0 103 3 70 0 104 3 70 0 105 3 70 0 106 3 70 0 107 3 70 0 108 3 70 0 109 3 70 0 112 3 70 0 113 3 70 0 118 3 70 0 120 3 70 0 121 3 70 0 123 3 70 0 124 3 70 0 129 3 70 0 130 3 70 0 131 3 70 0 132 3 70 0 133 3 70 0 134 3 70 0 135 3 70 0 136 3 70 0 138 3 70 0 141 3 70 0 142 3 70 0 146 3 70 0 149 3 70 0 150 3 70 0 151 3 70 0 152 3 70 0 161 3 70 0 166 3 70 0 167 3 70 0 170 3 70 0 171 3 70 0 172 3 70 1 142] 
#[1 7 90 0 1 7 90 0 3 7 90 0 4 7 90 0 5 7 90 0 7 7 90 0 9 7 90 0 11 7 90 0 13 7 90 0 22 7 90 0 24 7 90 0 26 7 90 0 27 7 90 0 28 7 90 0 29 7 90 0 30 7 90 0 31 7 90 0 32 7 90 0 33 7 90 0 34 7 90 0 35 7 90 0 36 7 90 0 37 7 90 0 38 7 90 0 39 7 90 0 40 7 90 0 41 7 90 0 42 7 90 0 43 7 90 0 44 7 90 0 48 7 90 0 53 7 90 0 54 7 90 0 55 7 90 0 57 7 90 0 58 7 90 0 70 7 90 0 72 7 90 0 73 7 90 0 74 7 90 0 79 7 90 0 81 7 90 0 83 7 90 0 85 7 90 0 86 7 90 0 88 7 90 0 89 7 90 0 90 7 90 0 96 7 90 0 97 7 90 0 99 7 90 0 100 7 90 0 102 7 90 0 103 7 90 0 104 7 90 0 105 7 90 0 106 7 90 0 107 7 90 0 108 7 90 0 109 7 90 0 112 7 90 0 113 7 90 0 118 7 90 0 120 7 90 0 121 7 90 0 123 7 90 0 124 7 90 0 129 7 90 0 130 7 90 0 131 7 90 0 132 7 90 0 133 7 90 0 134 7 90 0 135 7 90 0 136 7 90 0 138 7 90 0 141 7 90 0 142 7 90 0 146 7 90 0 149 7 90 0 150 7 90 0 151 7 90 0 152 7 90 0 161 7 90 0 166 7 90 0 167 7 90 0 170 4 55 0 171 7 90 0 172 7 90 1 142] 
#[0 3 126 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 4 59 0 1 4 63 0 3 3 142 0 4 3 142 0 5 3 142 0 7 4 59 0 9 3 142 0 11 3 142 0 13 3 142 0 22 3 142 0 24 3 142 0 26 3 142 0 27 3 142 0 28 3 142 0 29 3 142 0 30 3 142 0 31 3 142 0 32 3 142 0 33 3 142 0 34 3 142 0 35 3 142 0 36 3 142 0 37 3 142 0 38 3 142 0 39 3 142 0 40 3 142 0 41 3 142 0 42 3 142 0 43 3 142 0 44 3 142 0 48 3 142 0 53 3 142 0 54 3 142 0 55 3 142 0 57 3 142 0 58 3 142 0 70 3 142 0 72 3 142 0 73 3 142 0 74 3 142 0 79 3 142 0 81 3 142 0 83 3 142 0 85 3 142 0 86 3 142 0 88 3 142 0 89 3 142 0 90 3 142 0 96 3 142 0 97 3 142 0 99 3 142 0 100 3 142 0 102 3 142 0 103 3 142 0 104 3 142 0 105 3 142 0 106 3 142 0 107 3 142 0 108 3 142 0 109 3 142 0 112 3 142 0 113 3 142 0 118 3 142 0 120 3 142 0 121 3 142 0 123 3 142 0 124 3 142 0 129 3 142 0 130 3 142 0 131 3 142 0 132 3 142 0 133 3 142 0 134 3 142 0 135 3 142 0 136 3 142 0 138 3 142 0 141 3 142 0 142 3 142 0 146 3 142 0 149 3 142 0 150 3 142 0 151 3 142 0 152 3 142 0 161 3 142 0 166 3 142 0 167 3 142 0 170 3 142 0 171 3 142 0 172 3 142 1 142] 
#[1 4 67 0 1 4 71 0 3 3 150 0 4 3 150 0 5 3 150 0 7 4 67 0 9 3 150 0 11 3 150 0 13 3 150 0 22 3 150 0 24 3 150 0 26 3 150 0 27 3 150 0 28 3 150 0 29 3 150 0 30 3 150 0 31 3 150 0 32 3 150 0 33 3 150 0 34 3 150 0 35 3 150 0 36 3 150 0 37 3 150 0 38 3 150 0 39 3 150 0 40 3 150 0 41 3 150 0 42 3 150 0 43 3 150 0 44 3 150 0 48 3 150 0 53 3 150 0 54 3 150 0 55 3 150 0 57 3 150 0 58 3 150 0 70 3 150 0 72 3 150 0 73 3 150 0 74 3 150 0 79 3 150 0 81 3 150 0 83 3 150 0 85 3 150 0 86 3 150 0 88 3 150 0 89 3 150 0 90 3 150 0 96 3 150 0 97 3 150 0 99 3 150 0 100 3 150 0 102 3 150 0 103 3 150 0 104 3 150 0 105 3 150 0 106 3 150 0 107 3 150 0 108 3 150 0 109 3 150 0 112 3 150 0 113 3 150 0 118 3 150 0 120 3 150 0 121 3 150 0 123 3 150 0 124 3 150 0 129 3 150 0 130 3 150 0 131 3 150 0 132 3 150 0 133 3 150 0 134 3 150 0 135 3 150 0 136 3 150 0 138 3 150 0 141 3 150 0 142 3 150 0 146 3 150 0 149 3 150 0 150 3 150 0 151 3 150 0 152 3 150 0 161 3 150 0 166 3 150 0 167 3 150 0 170 3 150 0 171 3 150 0 172 3 150 1 142] 
#[1 7 94 0 1 7 94 0 3 7 94 0 4 7 94 0 5 7 94 0 7 7 94 0 9 7 94 0 11 7 94 0 13 7 94 0 22 7 94 0 24 7 94 0 26 7 94 0 27 7 94 0 28 7 94 0 29 7 94 0 30 7 94 0 31 7 94 0 32 7 94 0 33 7 94 0 34 7 94 0 35 7 94 0 36 7 94 0 37 7 94 0 38 7 94 0 39 7 94 0 40 7 94 0 41 7 94 0 42 7 94 0 43 7 94 0 44 7 94 0 48 7 94 0 53 7 94 0 54 7 94 0 55 7 94 0 57 7 94 0 58 7 94 0 70 7 94 0 72 7 94 0 73 7 94 0 74 7 94 0 79 7 94 0 81 7 94 0 83 7 94 0 85 7 94 0 86 7 94 0 88 7 94 0 89 7 94 0 90 7 94 0 96 7 94 0 97 7 94 0 99 7 94 0 100 7 94 0 102 7 94 0 103 7 94 0 104 7 94 0 105 7 94 0 106 7 94 0 107 7 94 0 108 7 94 0 109 7 94 0 112 7 94 0 113 7 94 0 118 7 94 0 120 7 94 0 121 7 94 0 123 7 94 0 124 7 94 0 129 7 94 0 130 7 94 0 131 7 94 0 132 7 94 0 133 7 94 0 134 7 94 0 135 7 94 0 136 7 94 0 138 7 94 0 141 7 94 0 142 7 94 0 146 7 94 0 149 7 94 0 150 7 94 0 151 7 94 0 152 7 94 0 161 7 94 0 166 7 94 0 167 7 94 0 170 4 75 0 171 7 94 0 172 7 94 1 142] 
#[0 16 225 0 171] 
#[0 16 229 0 171] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 16 233 0 180 16 233 0 181 16 233 0 182 16 233 0 183 16 233 0 184 16 233 0 185 16 233 0 186 4 253 0 187 16 233 0 188 16 233 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 16 233 1 37 16 233 1 38 16 233 1 39 16 233 1 40 16 233 1 41 16 233 1 42 16 233 1 43 16 233 1 44 16 233 1 45 16 233 1 47 16 233 1 49 16 233 1 51 5 61 1 52 5 65 1 53 16 233 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 16 233 1 139 16 233 1 141] 
#[1 7 98 0 11 7 98 0 79 7 98 0 96 7 98 0 121 7 98 0 161 4 79 0 171 7 98 0 172 7 98 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 16 237 0 171 16 241 0 180 16 241 0 181 16 241 0 182 16 241 0 183 16 241 0 184 16 241 0 185 16 241 0 186 4 253 0 187 16 241 0 188 16 241 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 16 241 1 37 16 241 1 38 16 241 1 39 16 241 1 40 16 241 1 41 16 241 1 42 16 241 1 43 16 241 1 44 16 241 1 45 16 241 1 47 16 241 1 49 16 241 1 51 5 61 1 52 5 65 1 53 16 241 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 16 241 1 139 16 241 1 141] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 16 245 0 180 16 245 0 181 16 245 0 182 16 245 0 183 16 245 0 184 16 245 0 185 16 245 0 186 4 253 0 187 16 245 0 188 16 245 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 16 245 1 37 16 245 1 38 16 245 1 39 16 245 1 40 16 245 1 41 16 245 1 42 16 245 1 43 16 245 1 44 16 245 1 45 16 245 1 47 16 245 1 49 16 245 1 51 5 61 1 52 5 65 1 53 16 245 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 16 245 1 139 16 245 1 141] 
#[1 7 102 0 11 7 102 0 79 7 102 0 96 7 102 0 121 7 102 0 161 4 83 0 171 7 102 0 172 7 102 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 16 249 0 171 16 253 0 180 16 253 0 181 16 253 0 182 16 253 0 183 16 253 0 184 16 253 0 185 16 253 0 186 4 253 0 187 16 253 0 188 16 253 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 16 253 1 37 16 253 1 38 16 253 1 39 16 253 1 40 16 253 1 41 16 253 1 42 16 253 1 43 16 253 1 44 16 253 1 45 16 253 1 47 16 253 1 49 16 253 1 51 5 61 1 52 5 65 1 53 16 253 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 16 253 1 139 16 253 1 141] 
#[0 7 106 0 171] 
#[0 7 110 0 171] 
#[0 7 114 0 171] 
#[0 7 118 0 171] 
#[0 7 122 0 171] 
#[0 17 1 0 171] 
#[1 9 173 0 5 9 177 0 6 9 181 0 8 9 185 0 10 4 218 0 11 4 218 0 13 9 189 0 14 9 193 0 16 9 197 0 17 9 201 0 18 9 205 0 19 9 209 0 20 9 213 0 45 9 217 0 47 9 221 0 52 9 225 0 66 9 229 0 67 9 233 0 69 4 218 0 79 4 218 0 96 9 237 0 98 4 218 0 121 9 241 0 126 9 245 0 145 9 249 0 153 4 218 0 161 4 218 0 171 4 218 0 172 9 253 1 46 10 1 1 48 10 5 1 50 17 5 1 65 4 218 1 142] 
#[1 7 126 0 11 12 133 0 13 7 126 0 79 7 126 0 96 7 126 0 121 7 126 0 161 7 126 0 171 7 126 0 172 12 137 1 64 7 126 1 142] 
#[1 7 130 0 11 12 133 0 13 7 130 0 79 7 130 0 96 7 130 0 121 7 130 0 161 7 130 0 171 7 130 0 172 12 137 1 64 7 130 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 17 9 0 180 17 9 0 181 17 9 0 182 17 9 0 183 17 9 0 184 17 9 0 185 17 9 0 186 4 253 0 187 17 9 0 188 17 9 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 17 9 1 37 17 9 1 38 17 9 1 39 17 9 1 40 17 9 1 41 17 9 1 42 17 9 1 43 17 9 1 44 17 9 1 45 17 9 1 47 17 9 1 49 17 9 1 51 5 61 1 52 5 65 1 53 17 9 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 17 9 1 139 17 9 1 141] 
#[1 7 134 0 11 7 134 0 13 7 134 0 79 7 134 0 96 7 134 0 121 7 134 0 161 4 87 0 171 7 134 0 172 7 134 1 142] 
#[1 4 218 0 11 4 218 0 13 4 218 0 79 4 218 0 96 4 218 0 121 4 218 0 161 4 91 0 171 4 218 0 172 17 17 1 65 4 218 1 142] 
#[1 7 138 0 11 12 133 0 13 7 138 0 79 7 138 0 96 7 138 0 121 7 138 0 161 7 138 0 171 7 138 0 172 12 137 1 64 7 138 1 142] 
#[1 9 173 0 5 9 177 0 6 9 181 0 8 9 185 0 10 4 218 0 11 4 218 0 13 9 189 0 14 9 193 0 16 9 197 0 17 9 201 0 18 9 205 0 19 9 209 0 20 9 213 0 45 9 217 0 47 9 221 0 52 9 225 0 66 9 229 0 67 9 233 0 69 4 218 0 79 4 218 0 96 9 237 0 98 4 218 0 121 9 241 0 126 9 245 0 145 9 249 0 153 4 218 0 161 4 218 0 171 4 218 0 172 9 253 1 46 10 1 1 48 10 5 1 50 17 21 1 65 4 218 1 142] 
#[1 7 142 0 11 12 133 0 13 7 142 0 79 7 142 0 96 7 142 0 121 7 142 0 161 7 142 0 171 7 142 0 172 12 137 1 64 7 142 1 142] 
#[1 7 146 0 11 7 146 0 22 7 146 0 27 7 146 0 28 7 146 0 29 7 146 0 30 7 146 0 31 7 146 0 32 7 146 0 33 7 146 0 34 7 146 0 35 7 146 0 36 7 146 0 37 7 146 0 38 7 146 0 39 7 146 0 40 7 146 0 44 7 146 0 54 7 146 0 57 7 146 0 70 7 146 0 73 7 146 0 74 7 146 0 79 7 146 0 81 7 146 0 83 7 146 0 85 7 146 0 86 7 146 0 88 7 146 0 89 7 146 0 96 7 146 0 97 7 146 0 99 7 146 0 102 7 146 0 103 7 146 0 104 7 146 0 105 7 146 0 109 7 146 0 112 7 146 0 113 7 146 0 120 7 146 0 121 7 146 0 124 7 146 0 129 7 146 0 130 7 146 0 131 7 146 0 132 7 146 0 136 7 146 0 138 7 146 0 141 7 146 0 142 7 146 0 146 7 146 0 149 7 146 0 161 7 146 0 166 7 146 0 167 7 146 0 170 4 95 0 171 7 146 0 172 7 146 1 142] 
#[1 7 150 0 11 7 150 0 22 7 150 0 27 7 150 0 28 7 150 0 29 7 150 0 30 7 150 0 31 7 150 0 32 7 150 0 33 7 150 0 34 7 150 0 35 7 150 0 36 7 150 0 37 7 150 0 38 7 150 0 39 7 150 0 40 7 150 0 44 7 150 0 54 7 150 0 57 7 150 0 70 7 150 0 73 7 150 0 74 7 150 0 79 7 150 0 81 7 150 0 83 7 150 0 85 7 150 0 86 7 150 0 88 7 150 0 89 7 150 0 96 7 150 0 97 7 150 0 99 7 150 0 102 7 150 0 103 7 150 0 104 7 150 0 105 7 150 0 109 7 150 0 112 7 150 0 113 7 150 0 120 7 150 0 121 7 150 0 124 7 150 0 129 7 150 0 130 7 150 0 131 7 150 0 132 7 150 0 136 7 150 0 138 7 150 0 141 7 150 0 142 7 150 0 146 7 150 0 149 7 150 0 161 7 150 0 166 7 150 0 167 7 150 0 170 4 99 0 171 7 150 0 172 7 150 1 142] 
#[0 7 154 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 17 25 0 180 17 25 0 181 17 25 0 182 17 25 0 183 17 25 0 184 17 25 0 185 17 25 0 186 4 253 0 187 17 25 0 188 17 25 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 17 25 1 37 17 25 1 38 17 25 1 39 17 25 1 40 17 25 1 41 17 25 1 42 17 25 1 43 17 25 1 44 17 25 1 45 17 25 1 47 17 25 1 49 17 25 1 51 5 61 1 52 5 65 1 53 17 25 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 17 25 1 139 17 25 1 141] 
#[1 7 158 0 4 7 158 0 7 7 177 0 171] 
#[0 7 162 0 1 0 4 0 5 0 7 0 9 0 11 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 7 166 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 7 170 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 17 29 0 171] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 8 29 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 17 33 0 118 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 8 29 0 201 8 29 0 203 8 29 0 212 8 33 0 215 1 29 0 223 8 29 0 234 1 37 0 235 8 29 0 236 8 29 0 237 8 29 0 238 8 29 0 239 8 29 0 240 8 29 0 241 8 29 0 242 8 29 0 243 8 29 0 247 8 29 0 248 8 29 1 17 8 29 1 18 8 29 1 19 8 29 1 20 8 29 1 21 8 29 1 22 1 105 1 24 8 29 1 25 8 29 1 26 8 29 1 27 8 29 1 28 8 29 1 29 8 29 1 33 8 29 1 36 1 137 1 55 1 137 1 56 1 137 1 57 8 29 1 61 8 29 1 62 8 29 1 63 8 29 1 66 8 29 1 67 8 29 1 68 8 29 1 69 8 29 1 70 8 29 1 71 8 29 1 72 8 29 1 73 8 29 1 74 8 29 1 75 8 29 1 76 8 29 1 77 8 29 1 78 8 29 1 79 8 29 1 80 8 29 1 81 8 29 1 82 8 29 1 83 8 29 1 88 8 29 1 89 1 241 1 90 8 29 1 95 8 29 1 98 8 29 1 99 8 29 1 100 8 29 1 101 8 29 1 102 8 29 1 107 8 29 1 108 8 29 1 109 8 29 1 110 8 29 1 111 8 29 1 112 8 29 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 8 29 1 127 2 93 1 128 2 97 1 129 8 29 1 137 8 29 1 138 8 29 1 140] 
#[0 7 174 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 17 37 0 171] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 17 41 0 180 17 41 0 181 17 41 0 182 17 41 0 183 17 41 0 184 17 41 0 185 17 41 0 186 4 253 0 187 17 41 0 188 17 41 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 17 41 1 37 17 41 1 38 17 41 1 39 17 41 1 40 17 41 1 41 17 41 1 42 17 41 1 43 17 41 1 44 17 41 1 45 17 41 1 47 17 41 1 49 17 41 1 51 5 61 1 52 5 65 1 53 17 41 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 17 41 1 139 17 41 1 141] 
#[1 7 178 0 11 7 178 0 79 7 178 0 96 7 178 0 121 7 178 0 161 4 103 0 171 7 178 0 172 7 178 1 142] 
#[1 7 182 0 11 7 182 0 79 7 182 0 96 7 182 0 121 7 182 0 161 4 107 0 171 7 182 0 172 7 182 1 142] 
#[0 17 45 0 171] 
#[0 17 49 0 171] 
#[0 17 53 0 97] 
#[0 17 57 0 18] 
#[0 17 61 0 171] 
#[1 7 237 0 3 2 135 0 4 4 13 0 5 2 135 0 7 2 139 0 171 17 69 0 228 17 69 0 229 17 65 0 230 17 69 0 233 17 69 1 1 17 69 1 2] 
#[0 17 73 0 171] 
#[1 7 237 0 3 2 135 0 4 4 13 0 5 2 135 0 7 2 139 0 171 17 81 0 228 17 81 0 229 17 77 0 230 17 81 0 233 17 81 1 1 17 81 1 2] 
#[1 6 226 0 4 6 226 0 7 3 7 0 171 15 109 1 3 17 85 1 4] 
#[0 17 89 0 18] 
#[0 7 186 0 4 0 7 0 171] 
#[0 7 190 0 4 0 7 0 171] 
#[0 17 93 0 171] 
#[1 7 237 0 3 2 135 0 4 4 13 0 5 2 135 0 7 2 139 0 171 17 101 0 228 17 101 0 229 17 97 0 230 17 101 0 233 17 101 1 1 17 101 1 2] 
#[0 7 194 0 1 0 3 0 5 0 9 0 11 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 17 105 0 171] 
#[0 17 109 0 4] 
#[0 7 198 0 4 0 7 0 171] 
#[0 7 202 0 7 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 4 181 0 8 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 3 177 0 161 0 253 0 166 0 237 0 167 0 241 0 170 17 113 0 182 17 113 0 191 0 253 0 194 17 113 0 195 17 113 0 196 17 113 0 197 17 113 1 42 17 113 1 103] 
#[0 7 206 0 7 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 5 254 0 11 5 254 0 79 5 254 0 96 5 254 0 121 5 254 0 161 5 254 0 171 5 254 0 172 17 117 0 220 5 254 1 142] 
#[1 17 121 0 11 7 210 0 79 7 210 0 96 7 210 0 121 7 210 0 161 4 111 0 171 7 210 0 172 15 181 0 219 7 210 1 142] 
#[1 17 129 0 11 7 214 0 79 7 214 0 96 7 214 0 121 7 214 0 161 4 115 0 171 7 214 0 172 15 181 0 219 7 214 1 142] 
#[1 17 137 0 93 17 141 0 95 17 145 0 96 3 177 0 161 17 149 0 182 17 153 1 84 17 157 1 86 17 153 1 87] 
#[1 17 165 0 93 17 169 0 94] 
#[1 0 29 0 1 0 33 0 9 4 174 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 17 177 0 72 0 253 0 74 4 174 0 79 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 4 174 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 4 174 0 121 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 4 174 0 161 0 233 0 166 0 237 0 167 0 241 0 170 4 119 0 171 4 174 0 172 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 17 177 0 201 17 177 0 203 17 177 0 212 17 181 0 221 1 29 0 223 17 177 0 234 1 37 0 235 17 177 0 236 17 177 0 237 17 177 0 238 17 177 0 239 17 177 0 240 17 177 0 241 17 177 0 242 17 177 0 243 17 177 0 247 17 177 0 248 17 177 1 17 17 177 1 18 17 177 1 19 17 177 1 20 17 177 1 21 17 177 1 22 1 105 1 24 17 177 1 25 17 177 1 26 17 177 1 27 17 177 1 28 17 177 1 29 17 177 1 33 17 177 1 36 1 137 1 55 1 137 1 56 1 137 1 57 17 177 1 61 17 177 1 62 17 177 1 63 17 177 1 66 17 177 1 67 17 177 1 68 17 177 1 69 17 177 1 70 17 177 1 71 17 177 1 72 17 177 1 73 17 177 1 74 17 177 1 75 17 177 1 76 17 177 1 77 17 177 1 78 17 177 1 79 17 177 1 80 17 177 1 81 17 177 1 82 17 177 1 83 17 177 1 88 17 177 1 89 1 241 1 90 17 177 1 95 17 177 1 98 17 177 1 99 17 177 1 100 17 177 1 101 17 177 1 102 17 177 1 107 17 177 1 108 17 177 1 109 17 177 1 110 17 177 1 111 17 177 1 112 17 177 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 17 177 1 127 2 93 1 128 2 97 1 129 17 177 1 137 17 177 1 138 17 177 1 140 4 174 1 142] 
#[0 17 185 0 11] 
#[0 7 218 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 17 189 0 93 17 193 0 94] 
#[1 7 222 0 11 7 222 0 79 7 222 0 96 7 222 0 121 7 222 0 161 4 123 0 171 7 222 0 172 7 222 1 142] 
#[0 7 226 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 17 197 0 171] 
#[0 17 201 0 171] 
#[0 7 230 0 79 0 96 0 161] 
#[0 7 234 0 79 0 96 0 161] 
#[1 15 197 0 79 17 205 0 96 3 177 0 161 17 209 0 182 17 213 1 92 17 213 1 96] 
#[0 17 217 0 146] 
#[1 17 221 0 5 7 238 0 22 7 238 0 44 7 238 0 54 7 238 0 57 7 238 0 74 7 238 0 81 7 238 0 85 7 238 0 86 7 238 0 96 7 238 0 104 7 238 0 112 7 238 0 113 7 238 0 120 7 238 0 136 7 238 0 142 7 238 0 149 7 238 0 166 7 238 0 167 7 238 0 170 17 225 0 171 7 238 0 172] 
#[0 7 242 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 7 246 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 17 229 0 171] 
#[0 7 250 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 17 233 0 180 17 233 0 181 17 233 0 182 17 233 0 183 17 233 0 184 17 233 0 185 17 233 0 186 4 253 0 187 17 233 0 188 17 233 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 17 233 1 37 17 233 1 38 17 233 1 39 17 233 1 40 17 233 1 41 17 233 1 42 17 233 1 43 17 233 1 44 17 233 1 45 17 233 1 47 17 233 1 49 17 233 1 51 5 61 1 52 5 65 1 53 17 233 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 17 233 1 139 17 233 1 141] 
#[1 7 254 0 1 7 254 0 3 7 254 0 4 7 254 0 5 7 254 0 7 7 254 0 9 7 254 0 11 7 254 0 22 7 254 0 24 7 254 0 26 7 254 0 27 7 254 0 28 7 254 0 29 7 254 0 30 7 254 0 31 7 254 0 32 7 254 0 33 7 254 0 34 7 254 0 35 7 254 0 36 7 254 0 37 7 254 0 38 7 254 0 39 7 254 0 40 7 254 0 41 7 254 0 42 7 254 0 43 7 254 0 44 7 254 0 48 7 254 0 53 7 254 0 54 7 254 0 55 7 254 0 57 7 254 0 58 7 254 0 70 7 254 0 72 7 254 0 73 7 254 0 74 7 254 0 79 7 254 0 81 7 254 0 83 7 254 0 85 7 254 0 86 7 254 0 88 7 254 0 89 7 254 0 90 7 254 0 96 7 254 0 97 7 254 0 99 7 254 0 100 7 254 0 102 7 254 0 103 7 254 0 104 7 254 0 105 7 254 0 106 7 254 0 107 7 254 0 108 7 254 0 109 7 254 0 112 7 254 0 113 7 254 0 120 7 254 0 121 7 254 0 123 7 254 0 124 7 254 0 129 7 254 0 130 7 254 0 131 7 254 0 132 7 254 0 133 7 254 0 134 7 254 0 135 7 254 0 136 7 254 0 138 7 254 0 141 7 254 0 142 7 254 0 146 7 254 0 149 7 254 0 151 7 254 0 152 7 254 0 161 7 254 0 166 7 254 0 167 7 254 0 170 4 127 0 171 7 254 0 172 7 254 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 17 237 0 171 17 241 0 180 17 241 0 181 17 241 0 182 17 241 0 183 17 241 0 184 17 241 0 185 17 241 0 186 4 253 0 187 17 241 0 188 17 241 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 17 241 1 37 17 241 1 38 17 241 1 39 17 241 1 40 17 241 1 41 17 241 1 42 17 241 1 43 17 241 1 44 17 241 1 45 17 241 1 47 17 241 1 49 17 241 1 51 5 61 1 52 5 65 1 53 17 241 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 17 241 1 139 17 241 1 141] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 17 245 0 96 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 3 69 0 172 12 245 0 191 0 253 0 194 12 245 0 195 12 245 0 196 12 245 0 197 12 249 0 251] 
#[0 8 2 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 17 249 0 96 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 3 69 0 172 13 89 0 191 0 253 0 194 13 89 0 195 13 89 0 196 13 89 0 197 13 93 0 246] 
#[1 8 6 0 11 8 6 0 79 8 6 0 96 8 6 0 121 8 6 0 161 4 131 0 171 8 6 0 172 8 6 1 142] 
#[1 8 10 0 11 8 10 0 79 8 10 0 96 8 10 0 121 8 10 0 161 4 135 0 171 8 10 0 172 8 10 1 142] 
#[1 8 14 0 11 8 14 0 79 8 14 0 96 8 14 0 121 8 14 0 161 4 139 0 171 8 14 0 172 8 14 1 142] 
#[1 8 18 0 11 8 18 0 79 8 18 0 96 8 18 0 121 8 18 0 161 4 143 0 171 8 18 0 172 8 18 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 17 253 0 180 17 253 0 181 17 253 0 182 17 253 0 183 17 253 0 184 17 253 0 185 17 253 0 186 4 253 0 187 17 253 0 188 17 253 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 17 253 1 37 17 253 1 38 17 253 1 39 17 253 1 40 17 253 1 41 17 253 1 42 17 253 1 43 17 253 1 44 17 253 1 45 17 253 1 47 17 253 1 49 17 253 1 51 5 61 1 52 5 65 1 53 17 253 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 17 253 1 139 17 253 1 141] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 18 5 0 180 18 5 0 181 18 5 0 182 18 5 0 183 18 5 0 184 18 5 0 185 18 5 0 186 4 253 0 187 18 5 0 188 18 5 0 189 8 245 0 191 0 253 0 194 8 245 0 195 8 245 0 196 8 245 0 197 18 1 0 236 18 5 1 37 18 5 1 38 18 5 1 39 18 5 1 40 18 5 1 41 18 5 1 42 18 5 1 43 18 5 1 44 18 5 1 45 18 5 1 47 18 5 1 49 18 5 1 51 5 61 1 52 5 65 1 53 18 5 1 54 5 73 1 55 5 73 1 56 5 73 1 57 2 69 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 18 5 1 139 18 5 1 141] 
#[0 8 22 0 4 0 7 0 11 0 13 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 8 26 0 4 0 7 0 11 0 13 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 18 9 0 171] 
#[0 18 13 0 171] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 18 17 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 18 21 0 96] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 18 25 0 180 18 25 0 181 18 25 0 182 18 25 0 183 18 25 0 184 18 25 0 185 18 25 0 186 4 253 0 187 18 25 0 188 18 25 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 18 25 1 37 18 25 1 38 18 25 1 39 18 25 1 40 18 25 1 41 18 25 1 42 18 25 1 43 18 25 1 44 18 25 1 45 18 25 1 47 18 25 1 49 18 25 1 51 5 61 1 52 5 65 1 53 18 25 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 18 25 1 139 18 25 1 141] 
#[1 4 147 0 1 4 147 0 3 4 147 0 9 4 147 0 11 4 147 0 22 4 147 0 24 4 147 0 26 4 147 0 41 4 147 0 42 4 147 0 43 4 147 0 44 4 147 0 48 4 147 0 53 4 147 0 54 4 147 0 55 4 147 0 57 4 147 0 58 4 147 0 70 4 147 0 72 4 147 0 74 4 147 0 81 4 147 0 83 4 147 0 85 4 147 0 86 4 147 0 89 4 147 0 90 4 147 0 97 4 147 0 99 4 147 0 100 4 147 0 102 4 147 0 104 4 147 0 105 4 147 0 106 4 147 0 107 4 147 0 108 4 147 0 112 4 147 0 113 4 147 0 120 4 147 0 123 4 147 0 124 4 147 0 129 4 147 0 131 4 147 0 132 4 147 0 133 4 147 0 134 4 147 0 135 4 147 0 136 4 147 0 138 4 147 0 142 4 147 0 146 4 147 0 149 4 147 0 151 4 147 0 152 4 147 0 161 4 147 0 166 4 147 0 167 4 147 0 170 4 151 0 171 4 147 0 172] 
#[0 18 29 0 96] 
#[0 18 33 0 171] 
#[0 18 37 0 96] 
#[1 0 29 0 1 7 237 0 3 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 18 41 0 213 3 197 0 215 1 29 0 223 18 45 0 230 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 18 49 0 96] 
#[0 18 53 0 96] 
#[0 18 57 0 171] 
#[0 18 61 0 96] 
#[0 18 65 0 141] 
#[0 18 69 0 171] 
#[0 18 73 0 171] 
#[0 18 77 0 171] 
#[1 2 87 0 1 0 146 0 3 4 13 0 5 2 87 0 9 2 87 0 11 2 87 0 22 2 87 0 24 2 87 0 26 2 87 0 41 2 87 0 42 2 87 0 43 2 87 0 44 2 87 0 48 2 87 0 53 2 87 0 54 2 87 0 55 2 87 0 57 2 87 0 58 2 87 0 70 2 87 0 72 2 87 0 74 2 87 0 81 2 87 0 83 2 87 0 85 2 87 0 86 2 87 0 89 2 87 0 90 2 87 0 97 2 87 0 99 2 87 0 100 2 87 0 102 2 87 0 104 2 87 0 105 2 87 0 106 2 87 0 107 2 87 0 108 2 87 0 112 2 87 0 113 2 87 0 120 2 87 0 123 2 87 0 124 2 87 0 129 2 87 0 131 2 87 0 132 2 87 0 133 2 87 0 134 2 87 0 135 2 87 0 136 2 87 0 138 2 87 0 142 2 87 0 146 2 87 0 149 2 87 0 151 2 87 0 152 2 87 0 161 2 87 0 166 2 87 0 167 2 87 0 170 4 155 0 171 2 87 0 172 11 165 0 228 11 165 0 229 11 165 0 233 11 169 1 10 18 85 1 11] 
#[1 2 87 0 1 0 146 0 3 13 233 0 5 2 87 0 9 2 87 0 11 2 87 0 22 6 189 0 23 2 87 0 24 2 87 0 26 2 87 0 41 2 87 0 42 2 87 0 43 2 87 0 44 2 87 0 48 2 87 0 53 2 87 0 54 2 87 0 55 2 87 0 57 2 87 0 58 2 87 0 70 2 87 0 72 2 87 0 74 2 87 0 81 2 87 0 83 2 87 0 85 2 87 0 86 2 87 0 89 2 87 0 90 2 87 0 97 2 87 0 99 2 87 0 100 2 87 0 102 2 87 0 104 2 87 0 105 2 87 0 106 2 87 0 107 2 87 0 108 2 87 0 112 2 87 0 113 2 87 0 120 2 87 0 123 2 87 0 124 2 87 0 129 2 87 0 131 2 87 0 132 2 87 0 133 2 87 0 134 2 87 0 135 2 87 0 136 2 87 0 138 2 87 0 142 2 87 0 146 2 87 0 149 2 87 0 151 2 87 0 152 2 87 0 161 2 87 0 166 2 87 0 167 2 87 0 170 2 227 0 171 2 87 0 172 11 165 0 228 11 165 0 229 11 165 0 233 11 169 1 10 18 89 1 11] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 18 93 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 8 81 0 3 18 97 0 253] 
#[1 8 81 0 3 18 101 0 253] 
#[1 8 81 0 3 18 105 0 253] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 18 109 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 4 174 0 1 4 174 0 9 4 174 0 11 4 174 0 22 4 174 0 24 4 174 0 26 4 174 0 41 4 174 0 42 4 174 0 43 4 174 0 44 4 174 0 48 4 174 0 53 4 174 0 54 4 174 0 55 4 174 0 57 4 174 0 58 4 174 0 70 4 174 0 72 4 174 0 74 4 174 0 81 4 174 0 83 4 174 0 85 4 174 0 86 4 174 0 89 4 174 0 90 4 174 0 97 4 174 0 99 4 174 0 100 4 174 0 102 4 174 0 104 4 174 0 105 4 174 0 106 4 174 0 107 4 174 0 108 4 174 0 112 4 174 0 113 4 174 0 120 4 174 0 123 4 174 0 124 4 174 0 129 4 174 0 131 4 174 0 132 4 174 0 133 4 174 0 134 4 174 0 135 4 174 0 136 4 174 0 138 4 174 0 142 4 174 0 146 4 174 0 149 4 174 0 151 4 174 0 152 4 174 0 161 4 174 0 166 4 174 0 167 4 174 0 170 2 103 0 171 4 174 0 172 18 113 0 221] 
#[0 18 117 0 96] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 18 121 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 8 81 0 3 18 125 0 171 18 129 0 253] 
#[0 18 133 0 171] 
#[0 18 137 0 171] 
#[0 18 141 0 171] 
#[1 4 174 0 1 8 81 0 3 4 174 0 9 4 174 0 11 4 174 0 22 4 174 0 24 4 174 0 26 4 174 0 41 4 174 0 42 4 174 0 43 4 174 0 44 4 174 0 48 4 174 0 53 4 174 0 54 4 174 0 55 4 174 0 57 4 174 0 58 4 174 0 70 4 174 0 72 4 174 0 74 4 174 0 81 4 174 0 83 4 174 0 85 4 174 0 86 4 174 0 89 4 174 0 90 4 174 0 97 4 174 0 99 4 174 0 100 4 174 0 102 4 174 0 104 4 174 0 105 4 174 0 106 4 174 0 107 4 174 0 108 4 174 0 112 4 174 0 113 4 174 0 120 4 174 0 123 4 174 0 124 4 174 0 129 4 174 0 131 4 174 0 132 4 174 0 133 4 174 0 134 4 174 0 135 4 174 0 136 4 174 0 138 4 174 0 142 4 174 0 146 4 174 0 149 4 174 0 151 4 174 0 152 4 174 0 161 4 174 0 166 4 174 0 167 4 174 0 170 4 159 0 171 4 174 0 172 18 149 0 221 18 153 0 253] 
#[1 2 87 0 1 0 146 0 3 4 13 0 5 2 87 0 9 2 87 0 11 2 87 0 22 2 87 0 24 2 87 0 26 2 87 0 41 2 87 0 42 2 87 0 43 2 87 0 44 2 87 0 48 2 87 0 53 2 87 0 54 2 87 0 55 2 87 0 57 2 87 0 58 2 87 0 70 2 87 0 72 2 87 0 74 2 87 0 81 2 87 0 83 2 87 0 85 2 87 0 86 2 87 0 89 2 87 0 90 2 87 0 97 2 87 0 99 2 87 0 100 2 87 0 102 2 87 0 104 2 87 0 105 2 87 0 106 2 87 0 107 2 87 0 108 2 87 0 112 2 87 0 113 2 87 0 120 2 87 0 123 2 87 0 124 2 87 0 129 2 87 0 131 2 87 0 132 2 87 0 133 2 87 0 134 2 87 0 135 2 87 0 136 2 87 0 138 2 87 0 142 2 87 0 146 2 87 0 149 2 87 0 151 2 87 0 152 2 87 0 161 2 87 0 166 2 87 0 167 2 87 0 170 4 163 0 171 2 87 0 172 11 165 0 228 11 165 0 229 11 165 0 233 11 169 1 10 18 161 1 11] 
#[1 2 87 0 1 0 146 0 3 13 233 0 5 2 87 0 9 2 87 0 11 2 87 0 22 6 189 0 23 2 87 0 24 2 87 0 26 2 87 0 41 2 87 0 42 2 87 0 43 2 87 0 44 2 87 0 48 2 87 0 53 2 87 0 54 2 87 0 55 2 87 0 57 2 87 0 58 2 87 0 70 2 87 0 72 2 87 0 74 2 87 0 81 2 87 0 83 2 87 0 85 2 87 0 86 2 87 0 89 2 87 0 90 2 87 0 97 2 87 0 99 2 87 0 100 2 87 0 102 2 87 0 104 2 87 0 105 2 87 0 106 2 87 0 107 2 87 0 108 2 87 0 112 2 87 0 113 2 87 0 120 2 87 0 123 2 87 0 124 2 87 0 129 2 87 0 131 2 87 0 132 2 87 0 133 2 87 0 134 2 87 0 135 2 87 0 136 2 87 0 138 2 87 0 142 2 87 0 146 2 87 0 149 2 87 0 151 2 87 0 152 2 87 0 161 2 87 0 166 2 87 0 167 2 87 0 170 2 227 0 171 2 87 0 172 11 165 0 228 11 165 0 229 11 165 0 233 11 169 1 10 18 165 1 11] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 18 169 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 8 81 0 3 18 173 0 253] 
#[1 8 81 0 3 18 177 0 253] 
#[1 8 81 0 3 18 181 0 253] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 18 185 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 4 174 0 1 4 174 0 9 4 174 0 11 4 174 0 22 4 174 0 24 4 174 0 26 4 174 0 41 4 174 0 42 4 174 0 43 4 174 0 44 4 174 0 48 4 174 0 53 4 174 0 54 4 174 0 55 4 174 0 57 4 174 0 58 4 174 0 70 4 174 0 72 4 174 0 74 4 174 0 81 4 174 0 83 4 174 0 85 4 174 0 86 4 174 0 89 4 174 0 90 4 174 0 97 4 174 0 99 4 174 0 100 4 174 0 102 4 174 0 104 4 174 0 105 4 174 0 106 4 174 0 107 4 174 0 108 4 174 0 112 4 174 0 113 4 174 0 120 4 174 0 123 4 174 0 124 4 174 0 129 4 174 0 131 4 174 0 132 4 174 0 133 4 174 0 134 4 174 0 135 4 174 0 136 4 174 0 138 4 174 0 142 4 174 0 146 4 174 0 149 4 174 0 151 4 174 0 152 4 174 0 161 4 174 0 166 4 174 0 167 4 174 0 170 2 103 0 171 4 174 0 172 18 189 0 221] 
#[0 18 193 0 96] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 18 197 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 8 233 0 76 8 253 0 78 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 8 241 0 127 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 9 1 0 180 9 1 0 181 9 1 0 182 9 1 0 183 9 1 0 184 9 1 0 185 9 1 0 186 4 253 0 187 9 1 0 188 9 1 0 189 8 245 0 191 0 253 0 194 8 245 0 195 8 245 0 196 8 245 0 197 8 249 0 236 8 253 0 252 9 1 1 37 9 1 1 38 9 1 1 39 9 1 1 40 9 1 1 41 9 1 1 42 9 1 1 43 9 1 1 44 9 1 1 45 9 1 1 47 9 1 1 49 9 1 1 51 5 61 1 52 5 65 1 53 9 1 1 54 5 73 1 55 5 73 1 56 5 73 1 57 2 69 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 18 201 1 130 9 1 1 139 9 1 1 141] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 8 233 0 76 8 253 0 78 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 8 241 0 127 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 9 1 0 180 9 1 0 181 9 1 0 182 9 1 0 183 9 1 0 184 9 1 0 185 9 1 0 186 4 253 0 187 9 1 0 188 9 1 0 189 8 245 0 191 0 253 0 194 8 245 0 195 8 245 0 196 8 245 0 197 8 249 0 236 8 253 0 252 9 1 1 37 9 1 1 38 9 1 1 39 9 1 1 40 9 1 1 41 9 1 1 42 9 1 1 43 9 1 1 44 9 1 1 45 9 1 1 47 9 1 1 49 9 1 1 51 5 61 1 52 5 65 1 53 9 1 1 54 5 73 1 55 5 73 1 56 5 73 1 57 2 69 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 18 205 1 130 9 1 1 139 9 1 1 141] 
#[1 18 209 0 8 9 165 0 158] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 18 213 0 180 18 213 0 181 18 213 0 182 18 213 0 183 18 213 0 184 18 213 0 185 18 213 0 186 4 253 0 187 18 213 0 188 18 213 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 18 213 1 37 18 213 1 38 18 213 1 39 18 213 1 40 18 213 1 41 18 213 1 42 18 213 1 43 18 213 1 44 18 213 1 45 18 213 1 47 18 213 1 49 18 213 1 51 5 61 1 52 5 65 1 53 18 213 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 18 213 1 139 18 213 1 141] 
#[1 9 173 0 5 9 177 0 6 9 181 0 8 9 185 0 10 9 189 0 14 9 193 0 16 9 197 0 17 9 201 0 18 9 205 0 19 9 209 0 20 9 213 0 45 9 217 0 47 9 221 0 52 9 225 0 66 9 229 0 67 9 233 0 69 9 237 0 98 9 241 0 126 18 217 0 145 9 249 0 153 9 253 1 46 10 1 1 48 10 5 1 50] 
#[1 8 30 0 11 8 30 0 79 8 30 0 96 8 30 0 121 8 30 0 161 4 167 0 171 8 30 0 172 8 30 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 18 221 0 180 18 221 0 181 18 221 0 182 18 221 0 183 18 221 0 184 18 221 0 185 18 221 0 186 4 253 0 187 18 221 0 188 18 221 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 18 221 1 37 18 221 1 38 18 221 1 39 18 221 1 40 18 221 1 41 18 221 1 42 18 221 1 43 18 221 1 44 18 221 1 45 18 221 1 47 18 221 1 49 18 221 1 51 5 61 1 52 5 65 1 53 18 221 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 18 221 1 139 18 221 1 141] 
#[1 8 34 0 11 8 34 0 79 8 34 0 96 8 34 0 121 8 34 0 161 4 171 0 171 8 34 0 172 8 34 1 142] 
#[1 8 38 0 11 8 38 0 79 8 38 0 96 8 38 0 121 8 38 0 161 4 175 0 171 8 38 0 172 8 38 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 18 225 0 180 18 225 0 181 18 225 0 182 18 225 0 183 18 225 0 184 18 225 0 185 18 225 0 186 4 253 0 187 18 225 0 188 18 225 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 18 225 1 37 18 225 1 38 18 225 1 39 18 225 1 40 18 225 1 41 18 225 1 42 18 225 1 43 18 225 1 44 18 225 1 45 18 225 1 47 18 225 1 49 18 225 1 51 5 61 1 52 5 65 1 53 18 225 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 18 225 1 139 18 225 1 141] 
#[1 8 42 0 11 8 42 0 79 8 42 0 96 8 42 0 121 8 42 0 161 4 179 0 171 8 42 0 172 8 42 1 142] 
#[1 18 229 0 23 19 5 0 49 19 5 0 50 19 5 0 51 18 245 0 60 19 5 0 61 19 1 0 64 19 1 1 59 19 5 1 60] 
#[1 8 46 0 11 12 133 0 13 8 46 0 79 8 46 0 96 8 46 0 121 8 46 0 161 8 46 0 171 8 46 0 172 12 137 1 64 8 46 1 142] 
#[1 8 50 0 11 8 50 0 13 8 50 0 79 8 50 0 96 8 50 0 121 8 50 0 161 4 183 0 171 8 50 0 172 8 50 1 142] 
#[1 9 173 0 5 9 177 0 6 9 181 0 8 9 185 0 10 4 218 0 11 4 218 0 13 9 189 0 14 9 193 0 16 9 197 0 17 9 201 0 18 9 205 0 19 9 209 0 20 9 213 0 45 9 217 0 47 9 221 0 52 9 225 0 66 9 229 0 67 9 233 0 69 4 218 0 79 4 218 0 96 9 237 0 98 4 218 0 121 9 241 0 126 9 245 0 145 9 249 0 153 4 218 0 161 4 218 0 171 4 218 0 172 9 253 1 46 10 1 1 48 10 5 1 50 19 9 1 65 4 218 1 142] 
#[1 8 54 0 11 12 133 0 13 8 54 0 79 8 54 0 96 8 54 0 121 8 54 0 161 8 54 0 171 8 54 0 172 12 137 1 64 8 54 1 142] 
#[1 8 58 0 11 12 133 0 13 8 58 0 79 8 58 0 96 8 58 0 121 8 58 0 161 8 58 0 171 8 58 0 172 12 137 1 64 8 58 1 142] 
#[1 8 62 0 4 8 62 0 7 7 177 0 171] 
#[0 19 13 0 118] 
#[0 8 66 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 19 17 0 118] 
#[1 8 70 0 11 8 70 0 79 8 70 0 96 8 70 0 121 8 70 0 161 4 187 0 171 8 70 0 172 8 70 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 19 21 0 180 19 21 0 181 19 21 0 182 19 21 0 183 19 21 0 184 19 21 0 185 19 21 0 186 4 253 0 187 19 21 0 188 19 21 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 19 21 1 37 19 21 1 38 19 21 1 39 19 21 1 40 19 21 1 41 19 21 1 42 19 21 1 43 19 21 1 44 19 21 1 45 19 21 1 47 19 21 1 49 19 21 1 51 5 61 1 52 5 65 1 53 19 21 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 19 21 1 139 19 21 1 141] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 19 25 0 180 19 25 0 181 19 25 0 182 19 25 0 183 19 25 0 184 19 25 0 185 19 25 0 186 4 253 0 187 19 25 0 188 19 25 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 19 25 1 37 19 25 1 38 19 25 1 39 19 25 1 40 19 25 1 41 19 25 1 42 19 25 1 43 19 25 1 44 19 25 1 45 19 25 1 47 19 25 1 49 19 25 1 51 5 61 1 52 5 65 1 53 19 25 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 19 25 1 139 19 25 1 141] 
#[0 8 74 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 19 29 0 171] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 19 33 0 191 0 253 0 194 19 33 0 195 19 33 0 196 19 33 0 197] 
#[1 2 135 0 4 4 13 0 5 2 135 0 7 2 139 0 171 19 37 0 228 19 37 0 229 19 37 0 233 19 37 1 1 19 37 1 2] 
#[1 6 226 0 4 6 226 0 7 3 7 0 171 15 109 1 3 19 41 1 4] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 19 45 0 127 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 19 49 0 191 0 253 0 194 19 49 0 195 19 49 0 196 19 49 0 197] 
#[1 2 135 0 4 4 13 0 5 2 135 0 7 2 139 0 171 19 53 0 228 19 53 0 229 19 53 0 233 19 53 1 1 19 53 1 2] 
#[1 6 226 0 4 6 226 0 7 3 7 0 171 15 109 1 3 19 57 1 4] 
#[0 8 78 0 4 0 7 0 171] 
#[0 19 61 0 171] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 19 65 0 191 0 253 0 194 19 65 0 195 19 65 0 196 19 65 0 197] 
#[1 2 135 0 4 4 13 0 5 2 135 0 7 2 139 0 171 19 69 0 228 19 69 0 229 19 69 0 233 19 69 1 1 19 69 1 2] 
#[1 6 226 0 4 6 226 0 7 3 7 0 171 15 109 1 3 19 73 1 4] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 8 233 0 76 10 169 0 78 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 10 153 0 125 10 157 0 127 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 10 165 0 191 0 253 0 194 10 165 0 195 10 165 0 196 10 165 0 197 10 169 0 252 19 77 1 0] 
#[0 8 82 0 1 0 3 0 5 0 9 0 11 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 8 86 0 7 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 19 81 0 11 8 90 0 79 8 90 0 96 8 90 0 121 8 90 0 161 4 191 0 171 8 90 0 172 15 181 0 219 8 90 1 142] 
#[1 0 29 0 1 0 33 0 9 4 174 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 17 177 0 72 0 253 0 74 4 174 0 79 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 4 174 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 4 174 0 121 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 4 174 0 161 0 233 0 166 0 237 0 167 0 241 0 170 4 119 0 171 4 174 0 172 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 17 177 0 201 17 177 0 203 17 177 0 212 19 89 0 221 1 29 0 223 17 177 0 234 1 37 0 235 17 177 0 236 17 177 0 237 17 177 0 238 17 177 0 239 17 177 0 240 17 177 0 241 17 177 0 242 17 177 0 243 17 177 0 247 17 177 0 248 17 177 1 17 17 177 1 18 17 177 1 19 17 177 1 20 17 177 1 21 17 177 1 22 1 105 1 24 17 177 1 25 17 177 1 26 17 177 1 27 17 177 1 28 17 177 1 29 17 177 1 33 17 177 1 36 1 137 1 55 1 137 1 56 1 137 1 57 17 177 1 61 17 177 1 62 17 177 1 63 17 177 1 66 17 177 1 67 17 177 1 68 17 177 1 69 17 177 1 70 17 177 1 71 17 177 1 72 17 177 1 73 17 177 1 74 17 177 1 75 17 177 1 76 17 177 1 77 17 177 1 78 17 177 1 79 17 177 1 80 17 177 1 81 17 177 1 82 17 177 1 83 17 177 1 88 17 177 1 89 1 241 1 90 17 177 1 95 17 177 1 98 17 177 1 99 17 177 1 100 17 177 1 101 17 177 1 102 17 177 1 107 17 177 1 108 17 177 1 109 17 177 1 110 17 177 1 111 17 177 1 112 17 177 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 17 177 1 127 2 93 1 128 2 97 1 129 17 177 1 137 17 177 1 138 17 177 1 140 4 174 1 142] 
#[0 19 93 0 11] 
#[1 0 29 0 1 0 33 0 9 4 174 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 17 177 0 72 0 253 0 74 4 174 0 79 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 4 174 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 4 174 0 121 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 4 174 0 161 0 233 0 166 0 237 0 167 0 241 0 170 4 119 0 171 4 174 0 172 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 17 177 0 201 17 177 0 203 17 177 0 212 19 97 0 221 1 29 0 223 17 177 0 234 1 37 0 235 17 177 0 236 17 177 0 237 17 177 0 238 17 177 0 239 17 177 0 240 17 177 0 241 17 177 0 242 17 177 0 243 17 177 0 247 17 177 0 248 17 177 1 17 17 177 1 18 17 177 1 19 17 177 1 20 17 177 1 21 17 177 1 22 1 105 1 24 17 177 1 25 17 177 1 26 17 177 1 27 17 177 1 28 17 177 1 29 17 177 1 33 17 177 1 36 1 137 1 55 1 137 1 56 1 137 1 57 17 177 1 61 17 177 1 62 17 177 1 63 17 177 1 66 17 177 1 67 17 177 1 68 17 177 1 69 17 177 1 70 17 177 1 71 17 177 1 72 17 177 1 73 17 177 1 74 17 177 1 75 17 177 1 76 17 177 1 77 17 177 1 78 17 177 1 79 17 177 1 80 17 177 1 81 17 177 1 82 17 177 1 83 17 177 1 88 17 177 1 89 1 241 1 90 17 177 1 95 17 177 1 98 17 177 1 99 17 177 1 100 17 177 1 101 17 177 1 102 17 177 1 107 17 177 1 108 17 177 1 109 17 177 1 110 17 177 1 111 17 177 1 112 17 177 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 17 177 1 127 2 93 1 128 2 97 1 129 17 177 1 137 17 177 1 138 17 177 1 140 4 174 1 142] 
#[0 19 101 0 11] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 8 94 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 4 195 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 19 105 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 19 109 0 171] 
#[0 19 113 0 171] 
#[0 19 117 0 171] 
#[0 8 98 0 93 0 95 0 96 0 161] 
#[1 19 121 0 96 3 177 0 161 19 125 0 182] 
#[0 8 102 0 93 0 95 0 96 0 161] 
#[1 0 29 0 1 0 33 0 9 5 254 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 13 65 0 72 0 253 0 74 5 254 0 79 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 5 254 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 5 254 0 121 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 5 254 0 161 0 233 0 166 0 237 0 167 0 241 0 170 2 155 0 171 5 254 0 172 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 13 65 0 201 13 65 0 203 13 65 0 212 19 129 0 218 13 61 0 220 1 29 0 223 13 65 0 234 1 37 0 235 13 65 0 236 13 65 0 237 13 65 0 238 13 65 0 239 13 65 0 240 13 65 0 241 13 65 0 242 13 65 0 243 13 65 0 247 13 65 0 248 13 65 1 17 13 65 1 18 13 65 1 19 13 65 1 20 13 65 1 21 13 65 1 22 1 105 1 24 13 65 1 25 13 65 1 26 13 65 1 27 13 65 1 28 13 65 1 29 13 65 1 33 13 65 1 36 1 137 1 55 1 137 1 56 1 137 1 57 13 65 1 61 13 65 1 62 13 65 1 63 13 65 1 66 13 65 1 67 13 65 1 68 13 65 1 69 13 65 1 70 13 65 1 71 13 65 1 72 13 65 1 73 13 65 1 74 13 65 1 75 13 65 1 76 13 65 1 77 13 65 1 78 13 65 1 79 13 65 1 80 13 65 1 81 13 65 1 82 13 65 1 83 13 65 1 88 13 65 1 89 1 241 1 90 13 65 1 95 13 65 1 98 13 65 1 99 13 65 1 100 13 65 1 101 13 65 1 102 13 65 1 107 13 65 1 108 13 65 1 109 13 65 1 110 13 65 1 111 13 65 1 112 13 65 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 13 65 1 127 2 93 1 128 2 97 1 129 13 65 1 137 13 65 1 138 13 65 1 140 5 254 1 142] 
#[1 0 29 0 1 0 33 0 9 5 254 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 13 65 0 72 0 253 0 74 5 254 0 79 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 5 254 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 5 254 0 121 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 5 254 0 161 0 233 0 166 0 237 0 167 0 241 0 170 2 155 0 171 5 254 0 172 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 13 65 0 201 13 65 0 203 13 65 0 212 19 133 0 218 13 61 0 220 1 29 0 223 13 65 0 234 1 37 0 235 13 65 0 236 13 65 0 237 13 65 0 238 13 65 0 239 13 65 0 240 13 65 0 241 13 65 0 242 13 65 0 243 13 65 0 247 13 65 0 248 13 65 1 17 13 65 1 18 13 65 1 19 13 65 1 20 13 65 1 21 13 65 1 22 1 105 1 24 13 65 1 25 13 65 1 26 13 65 1 27 13 65 1 28 13 65 1 29 13 65 1 33 13 65 1 36 1 137 1 55 1 137 1 56 1 137 1 57 13 65 1 61 13 65 1 62 13 65 1 63 13 65 1 66 13 65 1 67 13 65 1 68 13 65 1 69 13 65 1 70 13 65 1 71 13 65 1 72 13 65 1 73 13 65 1 74 13 65 1 75 13 65 1 76 13 65 1 77 13 65 1 78 13 65 1 79 13 65 1 80 13 65 1 81 13 65 1 82 13 65 1 83 13 65 1 88 13 65 1 89 1 241 1 90 13 65 1 95 13 65 1 98 13 65 1 99 13 65 1 100 13 65 1 101 13 65 1 102 13 65 1 107 13 65 1 108 13 65 1 109 13 65 1 110 13 65 1 111 13 65 1 112 13 65 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 13 65 1 127 2 93 1 128 2 97 1 129 13 65 1 137 13 65 1 138 13 65 1 140 5 254 1 142] 
#[1 0 29 0 1 0 33 0 9 5 82 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 19 137 0 72 0 253 0 74 5 82 0 79 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 5 82 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 5 82 0 121 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 5 82 0 161 0 233 0 166 0 237 0 167 0 241 0 170 5 82 0 171 5 82 0 172 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 19 137 0 201 19 137 0 203 19 137 0 212 1 29 0 223 19 137 0 234 1 37 0 235 19 137 0 236 19 137 0 237 19 137 0 238 19 137 0 239 19 137 0 240 19 137 0 241 19 137 0 242 19 137 0 243 19 137 0 247 19 137 0 248 19 137 1 17 19 137 1 18 19 137 1 19 19 137 1 20 19 137 1 21 19 137 1 22 1 105 1 24 19 137 1 25 19 137 1 26 19 137 1 27 19 137 1 28 19 137 1 29 19 137 1 33 19 137 1 36 1 137 1 55 1 137 1 56 1 137 1 57 19 137 1 61 19 137 1 62 19 137 1 63 19 137 1 66 19 137 1 67 19 137 1 68 19 137 1 69 19 137 1 70 19 137 1 71 19 137 1 72 19 137 1 73 19 137 1 74 19 137 1 75 19 137 1 76 19 137 1 77 19 137 1 78 19 137 1 79 19 137 1 80 19 137 1 81 19 137 1 82 19 137 1 83 19 137 1 88 19 137 1 89 1 241 1 90 19 137 1 95 19 137 1 98 19 137 1 99 19 137 1 100 19 137 1 101 19 137 1 102 19 137 1 107 19 137 1 108 19 137 1 109 19 137 1 110 19 137 1 111 19 137 1 112 19 137 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 19 137 1 127 2 93 1 128 2 97 1 129 19 137 1 137 19 137 1 138 19 137 1 140 5 82 1 142] 
#[0 8 106 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 8 110 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 0 29 0 1 0 33 0 9 4 174 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 19 145 0 72 0 253 0 74 4 174 0 79 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 4 174 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 4 174 0 121 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 4 174 0 161 0 233 0 166 0 237 0 167 0 241 0 170 4 199 0 171 4 174 0 172 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 19 145 0 201 19 145 0 203 19 145 0 212 19 149 0 221 1 29 0 223 19 145 0 234 1 37 0 235 19 145 0 236 19 145 0 237 19 145 0 238 19 145 0 239 19 145 0 240 19 145 0 241 19 145 0 242 19 145 0 243 19 145 0 247 19 145 0 248 19 145 1 17 19 145 1 18 19 145 1 19 19 145 1 20 19 145 1 21 19 145 1 22 1 105 1 24 19 145 1 25 19 145 1 26 19 145 1 27 19 145 1 28 19 145 1 29 19 145 1 33 19 145 1 36 1 137 1 55 1 137 1 56 1 137 1 57 19 145 1 61 19 145 1 62 19 145 1 63 19 145 1 66 19 145 1 67 19 145 1 68 19 145 1 69 19 145 1 70 19 145 1 71 19 145 1 72 19 145 1 73 19 145 1 74 19 145 1 75 19 145 1 76 19 145 1 77 19 145 1 78 19 145 1 79 19 145 1 80 19 145 1 81 19 145 1 82 19 145 1 83 19 145 1 88 19 145 1 89 1 241 1 90 19 145 1 95 19 145 1 98 19 145 1 99 19 145 1 100 19 145 1 101 19 145 1 102 19 145 1 107 19 145 1 108 19 145 1 109 19 145 1 110 19 145 1 111 19 145 1 112 19 145 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 19 145 1 127 2 93 1 128 2 97 1 129 19 145 1 137 19 145 1 138 19 145 1 140 4 174 1 142] 
#[1 0 29 0 1 0 33 0 9 5 254 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 13 65 0 72 0 253 0 74 5 254 0 79 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 5 254 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 5 254 0 121 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 5 254 0 161 0 233 0 166 0 237 0 167 0 241 0 170 2 155 0 171 5 254 0 172 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 13 65 0 201 13 65 0 203 13 65 0 212 19 153 0 218 13 61 0 220 1 29 0 223 13 65 0 234 1 37 0 235 13 65 0 236 13 65 0 237 13 65 0 238 13 65 0 239 13 65 0 240 13 65 0 241 13 65 0 242 13 65 0 243 13 65 0 247 13 65 0 248 13 65 1 17 13 65 1 18 13 65 1 19 13 65 1 20 13 65 1 21 13 65 1 22 1 105 1 24 13 65 1 25 13 65 1 26 13 65 1 27 13 65 1 28 13 65 1 29 13 65 1 33 13 65 1 36 1 137 1 55 1 137 1 56 1 137 1 57 13 65 1 61 13 65 1 62 13 65 1 63 13 65 1 66 13 65 1 67 13 65 1 68 13 65 1 69 13 65 1 70 13 65 1 71 13 65 1 72 13 65 1 73 13 65 1 74 13 65 1 75 13 65 1 76 13 65 1 77 13 65 1 78 13 65 1 79 13 65 1 80 13 65 1 81 13 65 1 82 13 65 1 83 13 65 1 88 13 65 1 89 1 241 1 90 13 65 1 95 13 65 1 98 13 65 1 99 13 65 1 100 13 65 1 101 13 65 1 102 13 65 1 107 13 65 1 108 13 65 1 109 13 65 1 110 13 65 1 111 13 65 1 112 13 65 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 13 65 1 127 2 93 1 128 2 97 1 129 13 65 1 137 13 65 1 138 13 65 1 140 5 254 1 142] 
#[1 0 29 0 1 0 33 0 9 5 254 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 13 65 0 72 0 253 0 74 5 254 0 79 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 5 254 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 5 254 0 121 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 5 254 0 161 0 233 0 166 0 237 0 167 0 241 0 170 2 155 0 171 5 254 0 172 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 13 65 0 201 13 65 0 203 13 65 0 212 19 157 0 218 13 61 0 220 1 29 0 223 13 65 0 234 1 37 0 235 13 65 0 236 13 65 0 237 13 65 0 238 13 65 0 239 13 65 0 240 13 65 0 241 13 65 0 242 13 65 0 243 13 65 0 247 13 65 0 248 13 65 1 17 13 65 1 18 13 65 1 19 13 65 1 20 13 65 1 21 13 65 1 22 1 105 1 24 13 65 1 25 13 65 1 26 13 65 1 27 13 65 1 28 13 65 1 29 13 65 1 33 13 65 1 36 1 137 1 55 1 137 1 56 1 137 1 57 13 65 1 61 13 65 1 62 13 65 1 63 13 65 1 66 13 65 1 67 13 65 1 68 13 65 1 69 13 65 1 70 13 65 1 71 13 65 1 72 13 65 1 73 13 65 1 74 13 65 1 75 13 65 1 76 13 65 1 77 13 65 1 78 13 65 1 79 13 65 1 80 13 65 1 81 13 65 1 82 13 65 1 83 13 65 1 88 13 65 1 89 1 241 1 90 13 65 1 95 13 65 1 98 13 65 1 99 13 65 1 100 13 65 1 101 13 65 1 102 13 65 1 107 13 65 1 108 13 65 1 109 13 65 1 110 13 65 1 111 13 65 1 112 13 65 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 13 65 1 127 2 93 1 128 2 97 1 129 13 65 1 137 13 65 1 138 13 65 1 140 5 254 1 142] 
#[1 0 29 0 1 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 19 161 0 93 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 19 177 0 180 19 177 0 181 19 177 0 182 19 177 0 183 19 177 0 184 19 177 0 185 19 177 0 186 19 177 0 187 19 177 0 188 19 177 0 189 19 173 0 191 0 253 0 194 19 173 0 195 19 173 0 196 19 173 0 197 1 137 1 55 1 137 1 56 1 137 1 57 19 177 1 91 4 157 1 122 2 81 1 123 19 181 1 124 2 81 1 125 2 93 1 128 19 185 1 129 19 177 1 139 19 177 1 141] 
#[0 19 193 0 79] 
#[0 19 197 0 171] 
#[0 19 201 0 171] 
#[0 8 114 0 79 0 96 0 161] 
#[0 8 118 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 3 177 0 161 19 205 0 171 19 209 0 182] 
#[0 19 213 0 5] 
#[0 19 217 0 152] 
#[1 8 122 0 1 8 122 0 3 8 122 0 4 8 122 0 5 8 122 0 7 8 122 0 9 8 122 0 11 8 122 0 22 8 122 0 24 8 122 0 26 8 122 0 27 8 122 0 28 8 122 0 29 8 122 0 30 8 122 0 31 8 122 0 32 8 122 0 33 8 122 0 34 8 122 0 35 8 122 0 36 8 122 0 37 8 122 0 38 8 122 0 39 8 122 0 40 8 122 0 41 8 122 0 42 8 122 0 43 8 122 0 44 8 122 0 48 8 122 0 53 8 122 0 54 8 122 0 55 8 122 0 57 8 122 0 58 8 122 0 70 8 122 0 72 8 122 0 73 8 122 0 74 8 122 0 79 8 122 0 81 8 122 0 83 8 122 0 85 8 122 0 86 8 122 0 88 8 122 0 89 8 122 0 90 8 122 0 96 8 122 0 97 8 122 0 99 8 122 0 100 8 122 0 102 8 122 0 103 8 122 0 104 8 122 0 105 8 122 0 106 8 122 0 107 8 122 0 108 8 122 0 109 8 122 0 112 8 122 0 113 8 122 0 120 8 122 0 121 8 122 0 123 8 122 0 124 8 122 0 129 8 122 0 130 8 122 0 131 8 122 0 132 8 122 0 133 8 122 0 134 8 122 0 135 8 122 0 136 8 122 0 138 8 122 0 141 8 122 0 142 8 122 0 146 8 122 0 149 8 122 0 151 8 122 0 152 8 122 0 161 8 122 0 166 8 122 0 167 8 122 0 170 4 203 0 171 8 122 0 172 8 122 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 19 221 0 180 19 221 0 181 19 221 0 182 19 221 0 183 19 221 0 184 19 221 0 185 19 221 0 186 4 253 0 187 19 221 0 188 19 221 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 19 221 1 37 19 221 1 38 19 221 1 39 19 221 1 40 19 221 1 41 19 221 1 42 19 221 1 43 19 221 1 44 19 221 1 45 19 221 1 47 19 221 1 49 19 221 1 51 5 61 1 52 5 65 1 53 19 221 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 19 221 1 139 19 221 1 141] 
#[1 8 126 0 1 8 126 0 3 8 126 0 4 8 126 0 5 8 126 0 7 8 126 0 9 8 126 0 11 8 126 0 22 8 126 0 24 8 126 0 26 8 126 0 27 8 126 0 28 8 126 0 29 8 126 0 30 8 126 0 31 8 126 0 32 8 126 0 33 8 126 0 34 8 126 0 35 8 126 0 36 8 126 0 37 8 126 0 38 8 126 0 39 8 126 0 40 8 126 0 41 8 126 0 42 8 126 0 43 8 126 0 44 8 126 0 48 8 126 0 53 8 126 0 54 8 126 0 55 8 126 0 57 8 126 0 58 8 126 0 70 8 126 0 72 8 126 0 73 8 126 0 74 8 126 0 79 8 126 0 81 8 126 0 83 8 126 0 85 8 126 0 86 8 126 0 88 8 126 0 89 8 126 0 90 8 126 0 96 8 126 0 97 8 126 0 99 8 126 0 100 8 126 0 102 8 126 0 103 8 126 0 104 8 126 0 105 8 126 0 106 8 126 0 107 8 126 0 108 8 126 0 109 8 126 0 112 8 126 0 113 8 126 0 120 8 126 0 121 8 126 0 123 8 126 0 124 8 126 0 129 8 126 0 130 8 126 0 131 8 126 0 132 8 126 0 133 8 126 0 134 8 126 0 135 8 126 0 136 8 126 0 138 8 126 0 141 8 126 0 142 8 126 0 146 8 126 0 149 8 126 0 151 8 126 0 152 8 126 0 161 8 126 0 166 8 126 0 167 8 126 0 170 4 207 0 171 8 126 0 172 8 126 1 142] 
#[0 19 225 0 171] 
#[0 19 229 0 171] 
#[1 4 211 0 1 4 211 0 3 4 211 0 4 4 211 0 5 4 211 0 7 4 211 0 9 4 211 0 11 4 211 0 13 4 211 0 22 4 211 0 24 4 211 0 26 4 211 0 27 4 211 0 28 4 211 0 29 4 211 0 30 4 211 0 31 4 211 0 32 4 211 0 33 4 211 0 34 4 211 0 35 4 211 0 36 4 211 0 37 4 211 0 38 4 211 0 39 4 211 0 40 4 211 0 41 4 211 0 42 4 211 0 43 4 211 0 44 4 211 0 48 4 211 0 53 4 211 0 54 4 211 0 55 4 211 0 57 4 211 0 58 4 211 0 70 4 211 0 72 4 211 0 73 4 211 0 74 4 211 0 79 4 211 0 81 4 211 0 83 4 211 0 85 4 211 0 86 4 211 0 88 4 211 0 89 4 211 0 90 4 211 0 96 4 211 0 97 4 211 0 99 4 211 0 100 4 211 0 102 4 211 0 103 4 211 0 104 4 211 0 105 4 211 0 106 4 211 0 107 4 211 0 108 4 211 0 109 4 211 0 112 4 211 0 113 4 211 0 118 4 211 0 120 4 211 0 121 4 211 0 123 4 211 0 124 4 211 0 129 4 211 0 130 4 211 0 131 4 211 0 132 4 211 0 133 4 211 0 134 4 211 0 135 4 211 0 136 4 211 0 138 4 211 0 141 4 211 0 142 4 211 0 146 4 211 0 149 4 211 0 150 4 211 0 151 4 211 0 152 4 211 0 161 4 211 0 166 4 211 0 167 4 211 0 170 4 215 0 171 4 211 0 172 4 211 1 142] 
#[0 8 130 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 8 134 0 1 8 134 0 3 8 134 0 4 8 134 0 5 8 134 0 7 8 134 0 9 8 134 0 11 8 134 0 13 8 134 0 22 8 134 0 24 8 134 0 26 8 134 0 27 8 134 0 28 8 134 0 29 8 134 0 30 8 134 0 31 8 134 0 32 8 134 0 33 8 134 0 34 8 134 0 35 8 134 0 36 8 134 0 37 8 134 0 38 8 134 0 39 8 134 0 40 8 134 0 41 8 134 0 42 8 134 0 43 8 134 0 44 8 134 0 48 8 134 0 53 8 134 0 54 8 134 0 55 8 134 0 57 8 134 0 58 8 134 0 70 8 134 0 72 8 134 0 73 8 134 0 74 8 134 0 79 8 134 0 81 8 134 0 83 8 134 0 85 8 134 0 86 8 134 0 88 8 134 0 89 8 134 0 90 8 134 0 96 8 134 0 97 8 134 0 99 8 134 0 100 8 134 0 102 8 134 0 103 8 134 0 104 8 134 0 105 8 134 0 106 8 134 0 107 8 134 0 108 8 134 0 109 8 134 0 112 8 134 0 113 8 134 0 118 8 134 0 120 8 134 0 121 8 134 0 123 8 134 0 124 8 134 0 129 8 134 0 130 8 134 0 131 8 134 0 132 8 134 0 133 8 134 0 134 8 134 0 135 8 134 0 136 8 134 0 138 8 134 0 141 8 134 0 142 8 134 0 146 8 134 0 149 8 134 0 150 8 134 0 151 8 134 0 152 8 134 0 161 8 134 0 166 8 134 0 167 8 134 0 170 4 219 0 171 8 134 0 172 8 134 1 142] 
#[1 4 213 0 164 19 233 0 187] 
#[1 4 213 0 164 19 237 0 187] 
#[0 19 241 0 96] 
#[0 19 245 0 171] 
#[1 4 223 0 1 4 223 0 3 4 223 0 9 4 223 0 11 4 223 0 22 4 223 0 24 4 223 0 26 4 223 0 41 4 223 0 42 4 223 0 43 4 223 0 44 4 223 0 48 4 223 0 53 4 223 0 54 4 223 0 55 4 223 0 57 4 223 0 58 4 223 0 70 4 223 0 72 4 223 0 74 4 223 0 81 4 223 0 83 4 223 0 85 4 223 0 86 4 223 0 89 4 223 0 90 4 223 0 97 4 223 0 99 4 223 0 100 4 223 0 102 4 223 0 104 4 223 0 105 4 223 0 106 4 223 0 107 4 223 0 108 4 223 0 112 4 223 0 113 4 223 0 120 4 223 0 123 4 223 0 124 4 223 0 129 4 223 0 131 4 223 0 132 4 223 0 133 4 223 0 134 4 223 0 135 4 223 0 136 4 223 0 138 4 223 0 142 4 223 0 146 4 223 0 149 4 223 0 151 4 223 0 152 4 223 0 161 4 223 0 166 4 223 0 167 4 223 0 170 4 227 0 171 4 223 0 172] 
#[0 19 249 0 171] 
#[0 19 253 0 103] 
#[0 20 1 0 171] 
#[0 20 5 0 96] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 20 9 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 20 13 0 171] 
#[0 20 17 0 171] 
#[0 20 21 0 141] 
#[0 20 25 0 171] 
#[0 8 138 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 20 29 0 141] 
#[0 20 33 0 114] 
#[0 20 37 0 114] 
#[1 2 87 0 1 0 146 0 3 13 233 0 5 2 87 0 9 2 87 0 11 2 87 0 22 6 189 0 23 2 87 0 24 2 87 0 26 2 87 0 41 2 87 0 42 2 87 0 43 2 87 0 44 2 87 0 48 2 87 0 53 2 87 0 54 2 87 0 55 2 87 0 57 2 87 0 58 2 87 0 70 2 87 0 72 2 87 0 74 2 87 0 81 2 87 0 83 2 87 0 85 2 87 0 86 2 87 0 89 2 87 0 90 2 87 0 97 2 87 0 99 2 87 0 100 2 87 0 102 2 87 0 104 2 87 0 105 2 87 0 106 2 87 0 107 2 87 0 108 2 87 0 112 2 87 0 113 2 87 0 120 2 87 0 123 2 87 0 124 2 87 0 129 2 87 0 131 2 87 0 132 2 87 0 133 2 87 0 134 2 87 0 135 2 87 0 136 2 87 0 138 2 87 0 142 2 87 0 146 2 87 0 149 2 87 0 151 2 87 0 152 2 87 0 161 2 87 0 166 2 87 0 167 2 87 0 170 2 227 0 171 2 87 0 172 11 165 0 228 11 165 0 229 11 165 0 233 11 169 1 10 20 41 1 11] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 20 45 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 20 49 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 20 53 0 96] 
#[1 0 29 0 1 0 146 0 3 4 13 0 5 3 47 0 9 3 51 0 11 3 55 0 22 3 59 0 24 3 63 0 26 3 67 0 41 3 71 0 42 3 75 0 43 3 79 0 44 3 83 0 48 3 87 0 53 3 91 0 54 3 95 0 55 3 99 0 57 3 103 0 58 3 107 0 70 3 111 0 72 3 115 0 74 3 119 0 81 3 123 0 83 3 127 0 85 3 131 0 86 3 135 0 89 3 139 0 90 3 143 0 97 3 147 0 99 3 151 0 100 3 155 0 102 3 159 0 104 3 163 0 105 3 167 0 106 3 171 0 107 3 175 0 108 3 179 0 112 3 183 0 113 3 187 0 120 3 191 0 123 3 195 0 124 3 199 0 129 3 203 0 131 3 207 0 132 3 211 0 133 3 215 0 134 3 219 0 135 3 223 0 136 3 227 0 138 3 231 0 142 3 235 0 146 3 239 0 149 3 243 0 151 3 247 0 152 3 251 0 161 3 255 0 166 4 3 0 167 4 7 0 170 4 11 0 171 3 51 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 20 57 0 213 3 197 0 215 1 29 0 223 20 61 0 228 20 61 0 229 20 61 0 233 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 20 65 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 20 69 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 20 73 0 96] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 20 77 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 20 81 0 171] 
#[0 20 85 0 96] 
#[1 8 81 0 3 20 89 0 253] 
#[1 2 87 0 1 0 146 0 3 4 13 0 5 2 87 0 9 2 87 0 11 2 87 0 22 2 87 0 24 2 87 0 26 2 87 0 41 2 87 0 42 2 87 0 43 2 87 0 44 2 87 0 48 2 87 0 53 2 87 0 54 2 87 0 55 2 87 0 57 2 87 0 58 2 87 0 70 2 87 0 72 2 87 0 74 2 87 0 81 2 87 0 83 2 87 0 85 2 87 0 86 2 87 0 89 2 87 0 90 2 87 0 97 2 87 0 99 2 87 0 100 2 87 0 102 2 87 0 104 2 87 0 105 2 87 0 106 2 87 0 107 2 87 0 108 2 87 0 112 2 87 0 113 2 87 0 120 2 87 0 123 2 87 0 124 2 87 0 129 2 87 0 131 2 87 0 132 2 87 0 133 2 87 0 134 2 87 0 135 2 87 0 136 2 87 0 138 2 87 0 142 2 87 0 146 2 87 0 149 2 87 0 151 2 87 0 152 2 87 0 161 2 87 0 166 2 87 0 167 2 87 0 170 4 231 0 171 2 87 0 172 11 165 0 228 11 165 0 229 11 165 0 233 11 169 1 10 20 97 1 11] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 20 101 0 191 0 253 0 194 20 101 0 195 20 101 0 196 20 101 0 197] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 20 105 0 191 0 253 0 194 20 105 0 195 20 105 0 196 20 105 0 197] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 20 109 0 191 0 253 0 194 20 109 0 195 20 109 0 196 20 109 0 197] 
#[1 2 95 0 1 8 81 0 3 2 95 0 9 2 95 0 11 2 95 0 22 2 95 0 24 2 95 0 26 2 95 0 41 2 95 0 42 2 95 0 43 2 95 0 44 2 95 0 48 2 95 0 53 2 95 0 54 2 95 0 55 2 95 0 57 2 95 0 58 2 95 0 70 2 95 0 72 2 95 0 74 2 95 0 81 2 95 0 83 2 95 0 85 2 95 0 86 2 95 0 89 2 95 0 90 2 95 0 97 2 95 0 99 2 95 0 100 2 95 0 102 2 95 0 104 2 95 0 105 2 95 0 106 2 95 0 107 2 95 0 108 2 95 0 112 2 95 0 113 2 95 0 120 2 95 0 123 2 95 0 124 2 95 0 129 2 95 0 131 2 95 0 132 2 95 0 133 2 95 0 134 2 95 0 135 2 95 0 136 2 95 0 138 2 95 0 142 2 95 0 146 2 95 0 149 2 95 0 151 2 95 0 152 2 95 0 161 2 95 0 166 2 95 0 167 2 95 0 170 2 99 0 171 2 95 0 172 20 113 0 221 20 117 0 253] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 20 121 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 4 174 0 1 4 174 0 9 4 174 0 11 4 174 0 22 4 174 0 24 4 174 0 26 4 174 0 41 4 174 0 42 4 174 0 43 4 174 0 44 4 174 0 48 4 174 0 53 4 174 0 54 4 174 0 55 4 174 0 57 4 174 0 58 4 174 0 70 4 174 0 72 4 174 0 74 4 174 0 81 4 174 0 83 4 174 0 85 4 174 0 86 4 174 0 89 4 174 0 90 4 174 0 97 4 174 0 99 4 174 0 100 4 174 0 102 4 174 0 104 4 174 0 105 4 174 0 106 4 174 0 107 4 174 0 108 4 174 0 112 4 174 0 113 4 174 0 120 4 174 0 123 4 174 0 124 4 174 0 129 4 174 0 131 4 174 0 132 4 174 0 133 4 174 0 134 4 174 0 135 4 174 0 136 4 174 0 138 4 174 0 142 4 174 0 146 4 174 0 149 4 174 0 151 4 174 0 152 4 174 0 161 4 174 0 166 4 174 0 167 4 174 0 170 2 103 0 171 4 174 0 172 20 125 0 221] 
#[1 2 87 0 1 0 146 0 3 13 233 0 5 2 87 0 9 2 87 0 11 2 87 0 22 6 189 0 23 2 87 0 24 2 87 0 26 2 87 0 41 2 87 0 42 2 87 0 43 2 87 0 44 2 87 0 48 2 87 0 53 2 87 0 54 2 87 0 55 2 87 0 57 2 87 0 58 2 87 0 70 2 87 0 72 2 87 0 74 2 87 0 81 2 87 0 83 2 87 0 85 2 87 0 86 2 87 0 89 2 87 0 90 2 87 0 97 2 87 0 99 2 87 0 100 2 87 0 102 2 87 0 104 2 87 0 105 2 87 0 106 2 87 0 107 2 87 0 108 2 87 0 112 2 87 0 113 2 87 0 120 2 87 0 123 2 87 0 124 2 87 0 129 2 87 0 131 2 87 0 132 2 87 0 133 2 87 0 134 2 87 0 135 2 87 0 136 2 87 0 138 2 87 0 142 2 87 0 146 2 87 0 149 2 87 0 151 2 87 0 152 2 87 0 161 2 87 0 166 2 87 0 167 2 87 0 170 2 227 0 171 2 87 0 172 11 165 0 228 11 165 0 229 11 165 0 233 11 169 1 10 20 129 1 11] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 20 133 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 20 137 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 20 141 0 96] 
#[1 0 29 0 1 0 146 0 3 4 13 0 5 3 47 0 9 3 51 0 11 3 55 0 22 3 59 0 24 3 63 0 26 3 67 0 41 3 71 0 42 3 75 0 43 3 79 0 44 3 83 0 48 3 87 0 53 3 91 0 54 3 95 0 55 3 99 0 57 3 103 0 58 3 107 0 70 3 111 0 72 3 115 0 74 3 119 0 81 3 123 0 83 3 127 0 85 3 131 0 86 3 135 0 89 3 139 0 90 3 143 0 97 3 147 0 99 3 151 0 100 3 155 0 102 3 159 0 104 3 163 0 105 3 167 0 106 3 171 0 107 3 175 0 108 3 179 0 112 3 183 0 113 3 187 0 120 3 191 0 123 3 195 0 124 3 199 0 129 3 203 0 131 3 207 0 132 3 211 0 133 3 215 0 134 3 219 0 135 3 223 0 136 3 227 0 138 3 231 0 142 3 235 0 146 3 239 0 149 3 243 0 151 3 247 0 152 3 251 0 161 3 255 0 166 4 3 0 167 4 7 0 170 4 11 0 171 3 51 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 20 145 0 213 3 197 0 215 1 29 0 223 20 149 0 228 20 149 0 229 20 149 0 233 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 20 153 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 20 157 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 20 161 0 96] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 20 165 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 20 169 0 171] 
#[0 20 173 0 96] 
#[0 8 142 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 8 146 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[1 7 165 0 158 20 177 0 190] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 20 181 0 121 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 4 235 0 171 0 54 0 172 2 85 0 175 20 189 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 20 193 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 20 197 0 171] 
#[1 8 150 0 11 8 150 0 79 8 150 0 96 8 150 0 121 8 150 0 161 4 239 0 171 8 150 0 172 8 150 1 142] 
#[1 8 154 0 11 8 154 0 79 8 154 0 96 8 154 0 121 8 154 0 161 4 243 0 171 8 154 0 172 8 154 1 142] 
#[0 20 201 0 171] 
#[0 8 158 0 171] 
#[0 8 162 0 171] 
#[0 8 166 0 171] 
#[0 4 247 0 171] 
#[0 8 174 0 171] 
#[0 8 178 0 171] 
#[0 20 209 0 171] 
#[0 20 213 0 171] 
#[1 8 182 0 11 12 133 0 13 8 182 0 79 8 182 0 96 8 182 0 121 8 182 0 161 8 182 0 171 8 182 0 172 12 137 1 64 8 182 1 142] 
#[0 8 186 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 8 190 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 8 194 0 11 8 194 0 79 8 194 0 96 8 194 0 121 8 194 0 161 4 251 0 171 8 194 0 172 8 194 1 142] 
#[1 8 198 0 11 8 198 0 79 8 198 0 96 8 198 0 121 8 198 0 161 4 255 0 171 8 198 0 172 8 198 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 20 217 0 180 20 217 0 181 20 217 0 182 20 217 0 183 20 217 0 184 20 217 0 185 20 217 0 186 4 253 0 187 20 217 0 188 20 217 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 20 217 1 37 20 217 1 38 20 217 1 39 20 217 1 40 20 217 1 41 20 217 1 42 20 217 1 43 20 217 1 44 20 217 1 45 20 217 1 47 20 217 1 49 20 217 1 51 5 61 1 52 5 65 1 53 20 217 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 20 217 1 139 20 217 1 141] 
#[1 7 237 0 3 2 135 0 4 4 13 0 5 2 135 0 7 2 139 0 171 20 225 0 228 20 225 0 229 20 221 0 230 20 225 0 233 20 225 1 1 20 225 1 2] 
#[1 6 226 0 4 6 226 0 7 3 7 0 171 15 109 1 3 20 229 1 4] 
#[0 8 202 0 4 0 7 0 171] 
#[0 20 233 0 171] 
#[1 7 237 0 3 2 135 0 4 4 13 0 5 2 135 0 7 2 139 0 171 20 241 0 228 20 241 0 229 20 237 0 230 20 241 0 233 20 241 1 1 20 241 1 2] 
#[1 6 226 0 4 6 226 0 7 3 7 0 171 15 109 1 3 20 245 1 4] 
#[0 8 206 0 4 0 7 0 171] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 20 249 0 180 20 249 0 181 20 249 0 182 20 249 0 183 20 249 0 184 20 249 0 185 20 249 0 186 4 253 0 187 20 249 0 188 20 249 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 20 249 1 37 20 249 1 38 20 249 1 39 20 249 1 40 20 249 1 41 20 249 1 42 20 249 1 43 20 249 1 44 20 249 1 45 20 249 1 47 20 249 1 49 20 249 1 51 5 61 1 52 5 65 1 53 20 249 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 20 249 1 139 20 249 1 141] 
#[1 7 237 0 3 2 135 0 4 4 13 0 5 2 135 0 7 2 139 0 171 21 1 0 228 21 1 0 229 20 253 0 230 21 1 0 233 21 1 1 1 21 1 1 2] 
#[1 6 226 0 4 6 226 0 7 3 7 0 171 15 109 1 3 21 5 1 4] 
#[0 8 210 0 4 0 7 0 171] 
#[0 8 214 0 4 0 7 0 171] 
#[1 0 29 0 1 0 33 0 9 4 174 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 17 177 0 72 0 253 0 74 4 174 0 79 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 4 174 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 4 174 0 121 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 4 174 0 161 0 233 0 166 0 237 0 167 0 241 0 170 4 119 0 171 4 174 0 172 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 17 177 0 201 17 177 0 203 17 177 0 212 21 9 0 221 1 29 0 223 17 177 0 234 1 37 0 235 17 177 0 236 17 177 0 237 17 177 0 238 17 177 0 239 17 177 0 240 17 177 0 241 17 177 0 242 17 177 0 243 17 177 0 247 17 177 0 248 17 177 1 17 17 177 1 18 17 177 1 19 17 177 1 20 17 177 1 21 17 177 1 22 1 105 1 24 17 177 1 25 17 177 1 26 17 177 1 27 17 177 1 28 17 177 1 29 17 177 1 33 17 177 1 36 1 137 1 55 1 137 1 56 1 137 1 57 17 177 1 61 17 177 1 62 17 177 1 63 17 177 1 66 17 177 1 67 17 177 1 68 17 177 1 69 17 177 1 70 17 177 1 71 17 177 1 72 17 177 1 73 17 177 1 74 17 177 1 75 17 177 1 76 17 177 1 77 17 177 1 78 17 177 1 79 17 177 1 80 17 177 1 81 17 177 1 82 17 177 1 83 17 177 1 88 17 177 1 89 1 241 1 90 17 177 1 95 17 177 1 98 17 177 1 99 17 177 1 100 17 177 1 101 17 177 1 102 17 177 1 107 17 177 1 108 17 177 1 109 17 177 1 110 17 177 1 111 17 177 1 112 17 177 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 17 177 1 127 2 93 1 128 2 97 1 129 17 177 1 137 17 177 1 138 17 177 1 140 4 174 1 142] 
#[0 21 13 0 11] 
#[0 8 218 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 0 29 0 1 0 33 0 9 4 174 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 19 145 0 72 0 253 0 74 4 174 0 79 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 4 174 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 4 174 0 121 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 4 174 0 161 0 233 0 166 0 237 0 167 0 241 0 170 4 199 0 171 4 174 0 172 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 19 145 0 201 19 145 0 203 19 145 0 212 21 17 0 221 1 29 0 223 19 145 0 234 1 37 0 235 19 145 0 236 19 145 0 237 19 145 0 238 19 145 0 239 19 145 0 240 19 145 0 241 19 145 0 242 19 145 0 243 19 145 0 247 19 145 0 248 19 145 1 17 19 145 1 18 19 145 1 19 19 145 1 20 19 145 1 21 19 145 1 22 1 105 1 24 19 145 1 25 19 145 1 26 19 145 1 27 19 145 1 28 19 145 1 29 19 145 1 33 19 145 1 36 1 137 1 55 1 137 1 56 1 137 1 57 19 145 1 61 19 145 1 62 19 145 1 63 19 145 1 66 19 145 1 67 19 145 1 68 19 145 1 69 19 145 1 70 19 145 1 71 19 145 1 72 19 145 1 73 19 145 1 74 19 145 1 75 19 145 1 76 19 145 1 77 19 145 1 78 19 145 1 79 19 145 1 80 19 145 1 81 19 145 1 82 19 145 1 83 19 145 1 88 19 145 1 89 1 241 1 90 19 145 1 95 19 145 1 98 19 145 1 99 19 145 1 100 19 145 1 101 19 145 1 102 19 145 1 107 19 145 1 108 19 145 1 109 19 145 1 110 19 145 1 111 19 145 1 112 19 145 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 19 145 1 127 2 93 1 128 2 97 1 129 19 145 1 137 19 145 1 138 19 145 1 140 4 174 1 142] 
#[0 8 222 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 0 29 0 1 0 33 0 9 4 174 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 19 145 0 72 0 253 0 74 4 174 0 79 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 4 174 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 4 174 0 121 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 4 174 0 161 0 233 0 166 0 237 0 167 0 241 0 170 4 199 0 171 4 174 0 172 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 19 145 0 201 19 145 0 203 19 145 0 212 21 21 0 221 1 29 0 223 19 145 0 234 1 37 0 235 19 145 0 236 19 145 0 237 19 145 0 238 19 145 0 239 19 145 0 240 19 145 0 241 19 145 0 242 19 145 0 243 19 145 0 247 19 145 0 248 19 145 1 17 19 145 1 18 19 145 1 19 19 145 1 20 19 145 1 21 19 145 1 22 1 105 1 24 19 145 1 25 19 145 1 26 19 145 1 27 19 145 1 28 19 145 1 29 19 145 1 33 19 145 1 36 1 137 1 55 1 137 1 56 1 137 1 57 19 145 1 61 19 145 1 62 19 145 1 63 19 145 1 66 19 145 1 67 19 145 1 68 19 145 1 69 19 145 1 70 19 145 1 71 19 145 1 72 19 145 1 73 19 145 1 74 19 145 1 75 19 145 1 76 19 145 1 77 19 145 1 78 19 145 1 79 19 145 1 80 19 145 1 81 19 145 1 82 19 145 1 83 19 145 1 88 19 145 1 89 1 241 1 90 19 145 1 95 19 145 1 98 19 145 1 99 19 145 1 100 19 145 1 101 19 145 1 102 19 145 1 107 19 145 1 108 19 145 1 109 19 145 1 110 19 145 1 111 19 145 1 112 19 145 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 19 145 1 127 2 93 1 128 2 97 1 129 19 145 1 137 19 145 1 138 19 145 1 140 4 174 1 142] 
#[0 8 226 0 96 0 161] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 21 25 0 180 21 25 0 181 21 25 0 182 21 25 0 183 21 25 0 184 21 25 0 185 21 25 0 186 4 253 0 187 21 25 0 188 21 25 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 21 25 1 37 21 25 1 38 21 25 1 39 21 25 1 40 21 25 1 41 21 25 1 42 21 25 1 43 21 25 1 44 21 25 1 45 21 25 1 47 21 25 1 49 21 25 1 51 5 61 1 52 5 65 1 53 21 25 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 21 25 1 139 21 25 1 141] 
#[0 21 29 0 108] 
#[1 21 33 0 93 21 37 0 95 21 41 0 96] 
#[0 21 45 0 171] 
#[0 21 49 0 171] 
#[0 8 230 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 8 234 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 8 238 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 0 29 0 1 0 33 0 9 5 82 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 21 53 0 72 0 253 0 74 5 82 0 79 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 5 82 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 5 82 0 121 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 5 82 0 161 0 233 0 166 0 237 0 167 0 241 0 170 5 82 0 171 5 82 0 172 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 21 53 0 201 21 53 0 203 21 53 0 212 1 29 0 223 21 53 0 234 1 37 0 235 21 53 0 236 21 53 0 237 21 53 0 238 21 53 0 239 21 53 0 240 21 53 0 241 21 53 0 242 21 53 0 243 21 53 0 247 21 53 0 248 21 53 1 17 21 53 1 18 21 53 1 19 21 53 1 20 21 53 1 21 21 53 1 22 1 105 1 24 21 53 1 25 21 53 1 26 21 53 1 27 21 53 1 28 21 53 1 29 21 53 1 33 21 53 1 36 1 137 1 55 1 137 1 56 1 137 1 57 21 53 1 61 21 53 1 62 21 53 1 63 21 53 1 66 21 53 1 67 21 53 1 68 21 53 1 69 21 53 1 70 21 53 1 71 21 53 1 72 21 53 1 73 21 53 1 74 21 53 1 75 21 53 1 76 21 53 1 77 21 53 1 78 21 53 1 79 21 53 1 80 21 53 1 81 21 53 1 82 21 53 1 83 21 53 1 88 21 53 1 89 1 241 1 90 21 53 1 95 21 53 1 98 21 53 1 99 21 53 1 100 21 53 1 101 21 53 1 102 21 53 1 107 21 53 1 108 21 53 1 109 21 53 1 110 21 53 1 111 21 53 1 112 21 53 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 21 53 1 127 2 93 1 128 2 97 1 129 21 53 1 137 21 53 1 138 21 53 1 140 5 82 1 142] 
#[0 8 242 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 8 246 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 8 250 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 8 254 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 9 2 0 1 9 2 0 7 9 2 0 9 9 2 0 11 9 2 0 22 9 2 0 24 9 2 0 26 9 2 0 41 9 2 0 42 9 2 0 43 9 2 0 44 9 2 0 48 9 2 0 53 9 2 0 54 9 2 0 55 9 2 0 57 9 2 0 58 9 2 0 70 9 2 0 72 9 2 0 74 9 2 0 79 9 2 0 81 9 2 0 83 9 2 0 85 9 2 0 86 9 2 0 89 9 2 0 90 9 2 0 96 9 2 0 97 9 2 0 99 9 2 0 100 9 2 0 102 9 2 0 104 9 2 0 105 9 2 0 106 9 2 0 107 9 2 0 108 9 2 0 112 9 2 0 113 9 2 0 120 9 2 0 123 9 2 0 124 9 2 0 129 9 2 0 131 9 2 0 132 9 2 0 133 9 2 0 134 9 2 0 135 9 2 0 136 9 2 0 138 9 2 0 142 9 2 0 146 9 2 0 149 9 2 0 151 9 2 0 152 9 2 0 161 9 2 0 166 9 2 0 167 9 2 0 170 9 2 0 171 9 2 0 172 21 57 1 94] 
#[0 9 6 0 1 0 7 0 9 0 11 0 22 0 24 0 26 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 74 0 79 0 81 0 83 0 85 0 86 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 104 0 105 0 106 0 107 0 108 0 112 0 113 0 120 0 123 0 124 0 129 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 142 0 146 0 149 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172] 
#[0 3 50 0 1 0 7 0 9 0 11 0 22 0 24 0 26 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 74 0 79 0 81 0 83 0 85 0 86 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 104 0 105 0 106 0 107 0 108 0 112 0 113 0 120 0 123 0 124 0 129 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 142 0 146 0 149 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172] 
#[1 5 3 0 1 0 138 0 3 9 10 0 7 5 3 0 9 9 10 0 11 9 10 0 22 9 10 0 24 9 10 0 26 9 10 0 41 9 10 0 42 9 10 0 43 9 10 0 44 9 10 0 48 9 10 0 53 9 10 0 54 9 10 0 55 9 10 0 57 9 10 0 58 9 10 0 70 9 10 0 72 9 10 0 74 9 10 0 79 9 10 0 81 9 10 0 83 9 10 0 85 9 10 0 86 9 10 0 89 9 10 0 90 9 10 0 96 9 10 0 97 9 10 0 99 9 10 0 100 9 10 0 102 9 10 0 104 9 10 0 105 9 10 0 106 9 10 0 107 9 10 0 108 9 10 0 112 9 10 0 113 9 10 0 120 9 10 0 123 9 10 0 124 9 10 0 129 9 10 0 131 9 10 0 132 9 10 0 133 9 10 0 134 9 10 0 135 9 10 0 136 9 10 0 138 9 10 0 142 9 10 0 146 9 10 0 149 9 10 0 151 9 10 0 152 9 10 0 161 9 10 0 166 9 10 0 167 9 10 0 170 9 10 0 171 9 10 0 172] 
#[1 9 2 0 1 9 2 0 7 9 2 0 9 9 2 0 11 9 2 0 22 9 2 0 24 9 2 0 26 9 2 0 41 9 2 0 42 9 2 0 43 9 2 0 44 9 2 0 48 9 2 0 53 9 2 0 54 9 2 0 55 9 2 0 57 9 2 0 58 9 2 0 70 9 2 0 72 9 2 0 74 9 2 0 79 9 2 0 81 9 2 0 83 9 2 0 85 9 2 0 86 9 2 0 89 9 2 0 90 9 2 0 96 9 2 0 97 9 2 0 99 9 2 0 100 9 2 0 102 9 2 0 104 9 2 0 105 9 2 0 106 9 2 0 107 9 2 0 108 9 2 0 112 9 2 0 113 9 2 0 120 9 2 0 123 9 2 0 124 9 2 0 129 9 2 0 131 9 2 0 132 9 2 0 133 9 2 0 134 9 2 0 135 9 2 0 136 9 2 0 138 9 2 0 142 9 2 0 146 9 2 0 149 9 2 0 151 9 2 0 152 9 2 0 161 9 2 0 166 9 2 0 167 9 2 0 170 9 2 0 171 9 2 0 172 21 61 1 94] 
#[1 5 7 0 1 1 222 0 3 9 14 0 7 5 7 0 9 9 14 0 11 9 14 0 22 9 14 0 24 9 14 0 26 9 14 0 41 9 14 0 42 9 14 0 43 9 14 0 44 9 14 0 48 9 14 0 53 9 14 0 54 9 14 0 55 9 14 0 57 9 14 0 58 9 14 0 70 9 14 0 72 9 14 0 74 9 14 0 79 9 14 0 81 9 14 0 83 9 14 0 85 9 14 0 86 9 14 0 89 9 14 0 90 9 14 0 96 9 14 0 97 9 14 0 99 9 14 0 100 9 14 0 102 9 14 0 104 9 14 0 105 9 14 0 106 9 14 0 107 9 14 0 108 9 14 0 112 9 14 0 113 9 14 0 120 9 14 0 123 9 14 0 124 9 14 0 129 9 14 0 131 9 14 0 132 9 14 0 133 9 14 0 134 9 14 0 135 9 14 0 136 9 14 0 138 9 14 0 142 9 14 0 146 9 14 0 149 9 14 0 151 9 14 0 152 9 14 0 161 9 14 0 166 9 14 0 167 9 14 0 170 9 14 0 171 9 14 0 172] 
#[1 1 159 0 1 1 250 0 3 3 146 0 7 1 159 0 9 3 146 0 11 3 146 0 22 3 146 0 24 3 146 0 26 3 146 0 41 3 146 0 42 3 146 0 43 3 146 0 44 3 146 0 48 3 146 0 53 3 146 0 54 3 146 0 55 3 146 0 57 3 146 0 58 3 146 0 70 3 146 0 72 3 146 0 74 3 146 0 79 3 146 0 81 3 146 0 83 3 146 0 85 3 146 0 86 3 146 0 89 3 146 0 90 3 146 0 96 3 146 0 97 3 146 0 99 3 146 0 100 3 146 0 102 3 146 0 104 3 146 0 105 3 146 0 106 3 146 0 107 3 146 0 108 3 146 0 112 3 146 0 113 3 146 0 120 3 146 0 123 3 146 0 124 3 146 0 129 3 146 0 131 3 146 0 132 3 146 0 133 3 146 0 134 3 146 0 135 3 146 0 136 3 146 0 138 3 146 0 142 3 146 0 146 3 146 0 149 3 146 0 151 3 146 0 152 3 146 0 161 3 146 0 166 3 146 0 167 3 146 0 170 3 146 0 171 3 146 0 172] 
#[0 9 18 0 1 0 7 0 9 0 11 0 22 0 24 0 26 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 74 0 79 0 81 0 83 0 85 0 86 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 104 0 105 0 106 0 107 0 108 0 112 0 113 0 120 0 123 0 124 0 129 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 142 0 146 0 149 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172] 
#[0 21 65 0 171] 
#[0 21 69 0 135] 
#[1 19 193 0 79 21 73 0 96] 
#[1 3 177 0 161 21 77 0 182] 
#[0 9 22 0 22 0 44 0 54 0 57 0 74 0 81 0 85 0 86 0 96 0 104 0 112 0 113 0 120 0 136 0 142 0 149 0 166 0 167 0 170 0 172] 
#[1 3 177 0 161 21 81 0 171 21 85 0 182] 
#[0 9 26 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 9 30 0 1 9 30 0 3 9 30 0 4 9 30 0 5 9 30 0 7 9 30 0 9 9 30 0 11 9 30 0 22 9 30 0 24 9 30 0 26 9 30 0 27 9 30 0 28 9 30 0 29 9 30 0 30 9 30 0 31 9 30 0 32 9 30 0 33 9 30 0 34 9 30 0 35 9 30 0 36 9 30 0 37 9 30 0 38 9 30 0 39 9 30 0 40 9 30 0 41 9 30 0 42 9 30 0 43 9 30 0 44 9 30 0 48 9 30 0 53 9 30 0 54 9 30 0 55 9 30 0 57 9 30 0 58 9 30 0 70 9 30 0 72 9 30 0 73 9 30 0 74 9 30 0 79 9 30 0 81 9 30 0 83 9 30 0 85 9 30 0 86 9 30 0 88 9 30 0 89 9 30 0 90 9 30 0 96 9 30 0 97 9 30 0 99 9 30 0 100 9 30 0 102 9 30 0 103 9 30 0 104 9 30 0 105 9 30 0 106 9 30 0 107 9 30 0 108 9 30 0 109 9 30 0 112 9 30 0 113 9 30 0 120 9 30 0 121 9 30 0 123 9 30 0 124 9 30 0 129 9 30 0 130 9 30 0 131 9 30 0 132 9 30 0 133 9 30 0 134 9 30 0 135 9 30 0 136 9 30 0 138 9 30 0 141 9 30 0 142 9 30 0 146 9 30 0 149 9 30 0 151 9 30 0 152 9 30 0 161 9 30 0 166 9 30 0 167 9 30 0 170 5 11 0 171 9 30 0 172 9 30 1 142] 
#[0 21 89 0 97] 
#[0 21 93 0 146] 
#[1 8 81 0 3 21 97 0 68 21 101 0 171 21 105 0 253] 
#[1 8 81 0 3 21 109 0 68 21 113 0 171 21 117 0 253] 
#[0 21 121 0 171] 
#[0 21 125 0 103] 
#[0 21 129 0 103] 
#[0 9 34 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 21 133 0 130] 
#[0 21 137 0 171] 
#[0 21 141 0 96] 
#[0 21 145 0 130] 
#[0 21 149 0 130] 
#[0 9 38 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 21 153 0 141] 
#[0 9 42 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 21 157 0 171] 
#[0 21 161 0 171] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 21 165 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 21 169 0 96] 
#[0 21 173 0 96] 
#[0 21 177 0 171] 
#[0 21 181 0 96] 
#[1 0 29 0 1 7 237 0 3 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 21 185 0 213 3 197 0 215 1 29 0 223 21 189 0 230 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 21 193 0 96] 
#[0 21 197 0 96] 
#[0 21 201 0 171] 
#[0 21 205 0 96] 
#[0 21 209 0 141] 
#[0 21 213 0 171] 
#[1 2 87 0 1 0 146 0 3 4 13 0 5 2 87 0 9 2 87 0 11 2 87 0 22 2 87 0 24 2 87 0 26 2 87 0 41 2 87 0 42 2 87 0 43 2 87 0 44 2 87 0 48 2 87 0 53 2 87 0 54 2 87 0 55 2 87 0 57 2 87 0 58 2 87 0 70 2 87 0 72 2 87 0 74 2 87 0 81 2 87 0 83 2 87 0 85 2 87 0 86 2 87 0 89 2 87 0 90 2 87 0 97 2 87 0 99 2 87 0 100 2 87 0 102 2 87 0 104 2 87 0 105 2 87 0 106 2 87 0 107 2 87 0 108 2 87 0 112 2 87 0 113 2 87 0 120 2 87 0 123 2 87 0 124 2 87 0 129 2 87 0 131 2 87 0 132 2 87 0 133 2 87 0 134 2 87 0 135 2 87 0 136 2 87 0 138 2 87 0 142 2 87 0 146 2 87 0 149 2 87 0 151 2 87 0 152 2 87 0 161 2 87 0 166 2 87 0 167 2 87 0 170 5 15 0 171 2 87 0 172 11 165 0 228 11 165 0 229 11 165 0 233 11 169 1 10 21 221 1 11] 
#[1 2 87 0 1 0 146 0 3 13 233 0 5 2 87 0 9 2 87 0 11 2 87 0 22 6 189 0 23 2 87 0 24 2 87 0 26 2 87 0 41 2 87 0 42 2 87 0 43 2 87 0 44 2 87 0 48 2 87 0 53 2 87 0 54 2 87 0 55 2 87 0 57 2 87 0 58 2 87 0 70 2 87 0 72 2 87 0 74 2 87 0 81 2 87 0 83 2 87 0 85 2 87 0 86 2 87 0 89 2 87 0 90 2 87 0 97 2 87 0 99 2 87 0 100 2 87 0 102 2 87 0 104 2 87 0 105 2 87 0 106 2 87 0 107 2 87 0 108 2 87 0 112 2 87 0 113 2 87 0 120 2 87 0 123 2 87 0 124 2 87 0 129 2 87 0 131 2 87 0 132 2 87 0 133 2 87 0 134 2 87 0 135 2 87 0 136 2 87 0 138 2 87 0 142 2 87 0 146 2 87 0 149 2 87 0 151 2 87 0 152 2 87 0 161 2 87 0 166 2 87 0 167 2 87 0 170 2 227 0 171 2 87 0 172 11 165 0 228 11 165 0 229 11 165 0 233 11 169 1 10 21 225 1 11] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 21 229 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 8 81 0 3 21 233 0 253] 
#[1 8 81 0 3 21 237 0 253] 
#[1 8 81 0 3 21 241 0 253] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 21 245 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 4 174 0 1 4 174 0 9 4 174 0 11 4 174 0 22 4 174 0 24 4 174 0 26 4 174 0 41 4 174 0 42 4 174 0 43 4 174 0 44 4 174 0 48 4 174 0 53 4 174 0 54 4 174 0 55 4 174 0 57 4 174 0 58 4 174 0 70 4 174 0 72 4 174 0 74 4 174 0 81 4 174 0 83 4 174 0 85 4 174 0 86 4 174 0 89 4 174 0 90 4 174 0 97 4 174 0 99 4 174 0 100 4 174 0 102 4 174 0 104 4 174 0 105 4 174 0 106 4 174 0 107 4 174 0 108 4 174 0 112 4 174 0 113 4 174 0 120 4 174 0 123 4 174 0 124 4 174 0 129 4 174 0 131 4 174 0 132 4 174 0 133 4 174 0 134 4 174 0 135 4 174 0 136 4 174 0 138 4 174 0 142 4 174 0 146 4 174 0 149 4 174 0 151 4 174 0 152 4 174 0 161 4 174 0 166 4 174 0 167 4 174 0 170 2 103 0 171 4 174 0 172 21 249 0 221] 
#[0 21 253 0 96] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 22 1 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 22 5 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 22 9 0 96] 
#[0 22 13 0 96] 
#[0 22 17 0 171] 
#[0 22 21 0 96] 
#[1 0 29 0 1 7 237 0 3 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 22 25 0 213 3 197 0 215 1 29 0 223 22 29 0 230 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 22 33 0 96] 
#[0 22 37 0 96] 
#[0 22 41 0 171] 
#[0 22 45 0 96] 
#[0 22 49 0 141] 
#[0 22 53 0 171] 
#[1 22 57 0 8 9 165 0 158] 
#[1 9 46 0 11 9 46 0 79 9 46 0 96 9 46 0 121 9 46 0 161 5 19 0 171 9 46 0 172 9 46 1 142] 
#[1 0 29 0 1 9 173 0 5 9 177 0 6 9 181 0 8 0 33 0 9 9 185 0 10 0 54 0 11 9 189 0 14 9 193 0 16 9 197 0 17 9 201 0 18 9 205 0 19 9 209 0 20 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 9 213 0 45 9 217 0 47 0 65 0 48 9 221 0 52 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 9 225 0 66 9 229 0 67 9 233 0 69 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 9 237 0 98 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 22 65 0 121 0 173 0 123 0 177 0 124 9 241 0 126 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 9 245 0 145 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 9 249 0 153 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 22 69 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 22 73 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 9 253 1 46 10 1 1 48 10 5 1 50 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 22 77 0 171] 
#[1 22 81 0 121 3 177 0 161 22 85 0 182] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 22 89 0 180 22 89 0 181 22 89 0 182 22 89 0 183 22 89 0 184 22 89 0 185 22 89 0 186 4 253 0 187 22 89 0 188 22 89 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 22 89 1 37 22 89 1 38 22 89 1 39 22 89 1 40 22 89 1 41 22 89 1 42 22 89 1 43 22 89 1 44 22 89 1 45 22 89 1 47 22 89 1 49 22 89 1 51 5 61 1 52 5 65 1 53 22 89 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 22 89 1 139 22 89 1 141] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 22 93 0 180 22 93 0 181 22 93 0 182 22 93 0 183 22 93 0 184 22 93 0 185 22 93 0 186 4 253 0 187 22 93 0 188 22 93 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 22 93 1 37 22 93 1 38 22 93 1 39 22 93 1 40 22 93 1 41 22 93 1 42 22 93 1 43 22 93 1 44 22 93 1 45 22 93 1 47 22 93 1 49 22 93 1 51 5 61 1 52 5 65 1 53 22 93 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 22 93 1 139 22 93 1 141] 
#[0 22 97 0 64] 
#[1 22 101 0 23 22 105 0 49 22 105 0 50 22 105 0 51 22 105 0 61 22 105 1 60] 
#[0 22 109 0 23] 
#[1 9 50 0 22 9 50 0 44 9 50 0 54 9 50 0 57 9 50 0 74 9 50 0 81 9 50 0 85 9 50 0 86 9 50 0 96 9 50 0 104 9 50 0 112 9 50 0 113 9 50 0 120 9 50 0 136 9 50 0 142 9 50 0 149 9 50 0 166 9 50 0 167 9 50 0 170 7 177 0 171 9 50 0 172] 
#[1 2 135 0 4 4 13 0 5 2 135 0 7 2 139 0 171 22 113 0 228 22 113 0 229 22 113 0 233 22 113 1 1 22 113 1 2] 
#[1 6 226 0 4 6 226 0 7 3 7 0 171 15 109 1 3 22 117 1 4] 
#[0 9 54 0 4 0 7 0 171] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 22 121 0 191 0 253 0 194 22 121 0 195 22 121 0 196 22 121 0 197] 
#[1 2 135 0 4 4 13 0 5 2 135 0 7 2 139 0 171 22 125 0 228 22 125 0 229 22 125 0 233 22 125 1 1 22 125 1 2] 
#[1 6 226 0 4 6 226 0 7 3 7 0 171 15 109 1 3 22 129 1 4] 
#[0 9 58 0 4 0 7 0 171] 
#[1 9 62 0 4 9 62 0 7 5 23 0 171] 
#[1 2 135 0 4 4 13 0 5 2 135 0 7 2 139 0 171 22 133 0 228 22 133 0 229 22 133 0 233 22 133 1 1 22 133 1 2] 
#[1 6 226 0 4 6 226 0 7 3 7 0 171 15 109 1 3 22 137 1 4] 
#[0 9 66 0 4 0 7 0 171] 
#[0 9 70 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 0 29 0 1 0 33 0 9 4 174 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 19 145 0 72 0 253 0 74 4 174 0 79 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 4 174 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 4 174 0 121 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 4 174 0 161 0 233 0 166 0 237 0 167 0 241 0 170 4 199 0 171 4 174 0 172 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 19 145 0 201 19 145 0 203 19 145 0 212 22 141 0 221 1 29 0 223 19 145 0 234 1 37 0 235 19 145 0 236 19 145 0 237 19 145 0 238 19 145 0 239 19 145 0 240 19 145 0 241 19 145 0 242 19 145 0 243 19 145 0 247 19 145 0 248 19 145 1 17 19 145 1 18 19 145 1 19 19 145 1 20 19 145 1 21 19 145 1 22 1 105 1 24 19 145 1 25 19 145 1 26 19 145 1 27 19 145 1 28 19 145 1 29 19 145 1 33 19 145 1 36 1 137 1 55 1 137 1 56 1 137 1 57 19 145 1 61 19 145 1 62 19 145 1 63 19 145 1 66 19 145 1 67 19 145 1 68 19 145 1 69 19 145 1 70 19 145 1 71 19 145 1 72 19 145 1 73 19 145 1 74 19 145 1 75 19 145 1 76 19 145 1 77 19 145 1 78 19 145 1 79 19 145 1 80 19 145 1 81 19 145 1 82 19 145 1 83 19 145 1 88 19 145 1 89 1 241 1 90 19 145 1 95 19 145 1 98 19 145 1 99 19 145 1 100 19 145 1 101 19 145 1 102 19 145 1 107 19 145 1 108 19 145 1 109 19 145 1 110 19 145 1 111 19 145 1 112 19 145 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 19 145 1 127 2 93 1 128 2 97 1 129 19 145 1 137 19 145 1 138 19 145 1 140 4 174 1 142] 
#[0 9 74 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 9 78 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 22 145 0 171] 
#[0 9 82 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 9 86 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 5 27 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 22 149 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 22 153 0 171] 
#[0 22 157 0 171] 
#[0 22 161 0 108] 
#[0 22 165 0 96] 
#[0 9 90 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 0 29 0 1 22 169 0 7 0 33 0 9 5 31 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 13 49 0 72 0 253 0 74 5 35 0 79 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 5 35 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 5 39 0 161 0 233 0 166 0 237 0 167 0 241 0 170 2 151 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 13 49 0 201 13 49 0 203 13 49 0 212 22 177 0 213 3 197 0 215 22 181 0 218 13 61 0 220 1 29 0 223 13 49 0 234 1 37 0 235 13 49 0 236 13 49 0 237 13 49 0 238 13 49 0 239 13 49 0 240 13 49 0 241 13 49 0 242 13 49 0 243 13 49 0 247 13 49 0 248 13 49 1 17 13 49 1 18 13 49 1 19 13 49 1 20 13 49 1 21 13 49 1 22 1 105 1 24 13 49 1 25 13 49 1 26 13 49 1 27 13 49 1 28 13 49 1 29 13 49 1 33 13 49 1 36 1 137 1 55 1 137 1 56 1 137 1 57 13 49 1 61 13 49 1 62 13 49 1 63 13 49 1 66 13 49 1 67 13 49 1 68 13 49 1 69 13 49 1 70 13 49 1 71 13 49 1 72 13 49 1 73 13 49 1 74 13 49 1 75 13 49 1 76 13 49 1 77 13 49 1 78 13 49 1 79 13 49 1 80 13 49 1 81 13 49 1 82 13 49 1 83 13 49 1 88 13 49 1 89 1 241 1 90 22 185 1 93 13 49 1 95 13 49 1 98 13 49 1 99 13 49 1 100 13 49 1 101 13 49 1 102 13 49 1 107 13 49 1 108 13 49 1 109 13 49 1 110 13 49 1 111 13 49 1 112 13 49 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 13 49 1 127 2 93 1 128 2 97 1 129 13 49 1 137 13 49 1 138 13 49 1 140] 
#[1 0 29 0 1 22 169 0 7 0 33 0 9 5 43 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 13 49 0 72 0 253 0 74 5 47 0 79 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 5 47 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 5 51 0 161 0 233 0 166 0 237 0 167 0 241 0 170 2 151 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 13 49 0 201 13 49 0 203 13 49 0 212 22 193 0 213 3 197 0 215 22 197 0 218 13 61 0 220 1 29 0 223 13 49 0 234 1 37 0 235 13 49 0 236 13 49 0 237 13 49 0 238 13 49 0 239 13 49 0 240 13 49 0 241 13 49 0 242 13 49 0 243 13 49 0 247 13 49 0 248 13 49 1 17 13 49 1 18 13 49 1 19 13 49 1 20 13 49 1 21 13 49 1 22 1 105 1 24 13 49 1 25 13 49 1 26 13 49 1 27 13 49 1 28 13 49 1 29 13 49 1 33 13 49 1 36 1 137 1 55 1 137 1 56 1 137 1 57 13 49 1 61 13 49 1 62 13 49 1 63 13 49 1 66 13 49 1 67 13 49 1 68 13 49 1 69 13 49 1 70 13 49 1 71 13 49 1 72 13 49 1 73 13 49 1 74 13 49 1 75 13 49 1 76 13 49 1 77 13 49 1 78 13 49 1 79 13 49 1 80 13 49 1 81 13 49 1 82 13 49 1 83 13 49 1 88 13 49 1 89 1 241 1 90 22 185 1 93 13 49 1 95 13 49 1 98 13 49 1 99 13 49 1 100 13 49 1 101 13 49 1 102 13 49 1 107 13 49 1 108 13 49 1 109 13 49 1 110 13 49 1 111 13 49 1 112 13 49 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 13 49 1 127 2 93 1 128 2 97 1 129 13 49 1 137 13 49 1 138 13 49 1 140] 
#[1 0 29 0 1 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 22 201 0 93 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 22 205 0 180 22 205 0 181 22 205 0 182 22 205 0 183 22 205 0 184 22 205 0 185 22 205 0 186 22 205 0 187 22 205 0 188 22 205 0 189 19 173 0 191 0 253 0 194 19 173 0 195 19 173 0 196 19 173 0 197 1 137 1 55 1 137 1 56 1 137 1 57 22 205 1 91 4 157 1 122 2 81 1 123 19 181 1 124 2 81 1 125 2 93 1 128 19 185 1 129 22 205 1 139 22 205 1 141] 
#[0 9 102 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 22 209 0 171] 
#[0 9 106 0 22 0 44 0 54 0 57 0 74 0 81 0 85 0 86 0 96 0 104 0 112 0 113 0 120 0 136 0 142 0 149 0 166 0 167 0 170 0 172] 
#[1 3 177 0 161 22 213 0 182] 
#[0 9 110 0 22 0 44 0 54 0 57 0 74 0 81 0 85 0 86 0 96 0 104 0 112 0 113 0 120 0 136 0 142 0 149 0 166 0 167 0 170 0 172] 
#[0 9 114 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 9 118 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 96 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 121 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 22 217 0 171] 
#[1 8 81 0 3 22 221 0 68 22 225 0 253] 
#[1 4 13 0 5 0 146 0 22 0 146 0 27 0 146 0 28 0 146 0 29 0 146 0 30 0 146 0 31 0 146 0 32 0 146 0 33 0 146 0 34 0 146 0 35 0 146 0 36 0 146 0 37 0 146 0 38 0 146 0 39 0 146 0 40 0 146 0 44 0 146 0 54 0 146 0 57 0 146 0 70 0 146 0 73 0 146 0 74 0 146 0 81 0 146 0 83 0 146 0 85 0 146 0 86 0 146 0 88 0 146 0 89 0 146 0 97 0 146 0 99 0 146 0 102 0 146 0 103 0 146 0 104 0 146 0 105 0 146 0 109 0 146 0 112 0 146 0 113 0 146 0 120 0 146 0 124 0 146 0 129 0 146 0 130 0 146 0 131 0 146 0 132 0 146 0 136 0 146 0 138 0 146 0 141 0 146 0 142 0 146 0 146 0 146 0 149 0 146 0 166 0 146 0 167 0 146 0 170 7 241 0 171 0 146 0 172 22 229 0 228 22 229 0 229 22 229 0 233 0 146 1 142] 
#[0 22 233 0 171] 
#[1 8 81 0 3 22 237 0 68 22 241 0 253] 
#[0 9 122 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 22 245 0 103] 
#[0 9 126 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 9 130 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 9 134 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 22 249 0 130] 
#[0 22 253 0 171] 
#[0 9 138 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 9 142 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 9 146 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[1 4 213 0 164 23 1 0 187] 
#[1 4 213 0 164 23 5 0 187] 
#[0 23 9 0 96] 
#[0 23 13 0 171] 
#[0 23 17 0 171] 
#[0 23 21 0 103] 
#[0 23 25 0 171] 
#[0 23 29 0 96] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 23 33 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 23 37 0 171] 
#[0 23 41 0 171] 
#[0 23 45 0 141] 
#[0 23 49 0 171] 
#[0 9 150 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 23 53 0 141] 
#[1 2 87 0 1 0 146 0 3 13 233 0 5 2 87 0 9 2 87 0 11 2 87 0 22 6 189 0 23 2 87 0 24 2 87 0 26 2 87 0 41 2 87 0 42 2 87 0 43 2 87 0 44 2 87 0 48 2 87 0 53 2 87 0 54 2 87 0 55 2 87 0 57 2 87 0 58 2 87 0 70 2 87 0 72 2 87 0 74 2 87 0 81 2 87 0 83 2 87 0 85 2 87 0 86 2 87 0 89 2 87 0 90 2 87 0 97 2 87 0 99 2 87 0 100 2 87 0 102 2 87 0 104 2 87 0 105 2 87 0 106 2 87 0 107 2 87 0 108 2 87 0 112 2 87 0 113 2 87 0 120 2 87 0 123 2 87 0 124 2 87 0 129 2 87 0 131 2 87 0 132 2 87 0 133 2 87 0 134 2 87 0 135 2 87 0 136 2 87 0 138 2 87 0 142 2 87 0 146 2 87 0 149 2 87 0 151 2 87 0 152 2 87 0 161 2 87 0 166 2 87 0 167 2 87 0 170 2 227 0 171 2 87 0 172 11 165 0 228 11 165 0 229 11 165 0 233 11 169 1 10 23 57 1 11] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 23 61 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 23 65 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 23 69 0 96] 
#[1 0 29 0 1 0 146 0 3 4 13 0 5 3 47 0 9 3 51 0 11 3 55 0 22 3 59 0 24 3 63 0 26 3 67 0 41 3 71 0 42 3 75 0 43 3 79 0 44 3 83 0 48 3 87 0 53 3 91 0 54 3 95 0 55 3 99 0 57 3 103 0 58 3 107 0 70 3 111 0 72 3 115 0 74 3 119 0 81 3 123 0 83 3 127 0 85 3 131 0 86 3 135 0 89 3 139 0 90 3 143 0 97 3 147 0 99 3 151 0 100 3 155 0 102 3 159 0 104 3 163 0 105 3 167 0 106 3 171 0 107 3 175 0 108 3 179 0 112 3 183 0 113 3 187 0 120 3 191 0 123 3 195 0 124 3 199 0 129 3 203 0 131 3 207 0 132 3 211 0 133 3 215 0 134 3 219 0 135 3 223 0 136 3 227 0 138 3 231 0 142 3 235 0 146 3 239 0 149 3 243 0 151 3 247 0 152 3 251 0 161 3 255 0 166 4 3 0 167 4 7 0 170 4 11 0 171 3 51 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 23 73 0 213 3 197 0 215 1 29 0 223 23 77 0 228 23 77 0 229 23 77 0 233 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 23 81 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 23 85 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 23 89 0 96] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 23 93 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 23 97 0 171] 
#[0 23 101 0 96] 
#[0 23 105 0 96] 
#[0 23 109 0 171] 
#[0 23 113 0 171] 
#[0 23 117 0 103] 
#[0 23 121 0 171] 
#[0 23 125 0 96] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 23 129 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 23 133 0 171] 
#[0 23 137 0 171] 
#[0 23 141 0 141] 
#[0 23 145 0 171] 
#[0 9 154 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 23 149 0 141] 
#[1 7 165 0 158 23 153 0 190] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 23 157 0 191 0 253 0 194 23 157 0 195 23 157 0 196 23 157 0 197] 
#[1 9 158 0 11 9 158 0 79 9 158 0 96 9 158 0 121 9 158 0 161 5 55 0 171 9 158 0 172 9 158 1 142] 
#[0 23 165 0 171] 
#[1 23 169 0 121 3 177 0 161 23 173 0 182] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 8 29 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 23 177 0 121 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 8 29 0 201 8 29 0 203 8 29 0 212 8 33 0 215 1 29 0 223 8 29 0 234 1 37 0 235 8 29 0 236 8 29 0 237 8 29 0 238 8 29 0 239 8 29 0 240 8 29 0 241 8 29 0 242 8 29 0 243 8 29 0 247 8 29 0 248 8 29 1 17 8 29 1 18 8 29 1 19 8 29 1 20 8 29 1 21 8 29 1 22 1 105 1 24 8 29 1 25 8 29 1 26 8 29 1 27 8 29 1 28 8 29 1 29 8 29 1 33 8 29 1 36 1 137 1 55 1 137 1 56 1 137 1 57 8 29 1 61 8 29 1 62 8 29 1 63 8 29 1 66 8 29 1 67 8 29 1 68 8 29 1 69 8 29 1 70 8 29 1 71 8 29 1 72 8 29 1 73 8 29 1 74 8 29 1 75 8 29 1 76 8 29 1 77 8 29 1 78 8 29 1 79 8 29 1 80 8 29 1 81 8 29 1 82 8 29 1 83 8 29 1 88 8 29 1 89 1 241 1 90 8 29 1 95 8 29 1 98 8 29 1 99 8 29 1 100 8 29 1 101 8 29 1 102 8 29 1 107 8 29 1 108 8 29 1 109 8 29 1 110 8 29 1 111 8 29 1 112 8 29 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 8 29 1 127 2 93 1 128 2 97 1 129 8 29 1 137 8 29 1 138 8 29 1 140] 
#[1 9 162 0 11 9 162 0 79 9 162 0 96 9 162 0 121 9 162 0 161 5 59 0 171 9 162 0 172 9 162 1 142] 
#[0 23 185 0 171] 
#[1 0 29 0 1 0 33 0 9 2 143 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 13 49 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 5 63 0 121 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 5 67 0 171 0 54 0 172 2 85 0 175 23 197 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 13 49 0 201 13 49 0 203 13 49 0 212 23 201 0 213 3 197 0 215 23 205 0 218 13 61 0 220 1 29 0 223 13 49 0 234 1 37 0 235 13 49 0 236 13 49 0 237 13 49 0 238 13 49 0 239 13 49 0 240 13 49 0 241 13 49 0 242 13 49 0 243 13 49 0 247 13 49 0 248 13 49 1 17 13 49 1 18 13 49 1 19 13 49 1 20 13 49 1 21 13 49 1 22 1 105 1 24 13 49 1 25 13 49 1 26 13 49 1 27 13 49 1 28 13 49 1 29 13 49 1 33 13 49 1 36 1 137 1 55 1 137 1 56 1 137 1 57 13 49 1 61 13 49 1 62 13 49 1 63 13 49 1 66 13 49 1 67 13 49 1 68 13 49 1 69 13 49 1 70 13 49 1 71 13 49 1 72 13 49 1 73 13 49 1 74 13 49 1 75 13 49 1 76 13 49 1 77 13 49 1 78 13 49 1 79 13 49 1 80 13 49 1 81 13 49 1 82 13 49 1 83 13 49 1 88 13 49 1 89 1 241 1 90 13 49 1 95 13 49 1 98 13 49 1 99 13 49 1 100 13 49 1 101 13 49 1 102 13 49 1 107 13 49 1 108 13 49 1 109 13 49 1 110 13 49 1 111 13 49 1 112 13 49 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 13 49 1 127 2 93 1 128 2 97 1 129 13 49 1 137 13 49 1 138 13 49 1 140] 
#[1 9 166 0 11 9 166 0 79 9 166 0 96 9 166 0 121 9 166 0 161 5 71 0 171 9 166 0 172 9 166 1 142] 
#[0 9 170 0 171] 
#[0 23 213 0 171] 
#[0 23 217 0 171] 
#[0 23 221 0 171] 
#[1 6 226 0 4 6 226 0 7 3 7 0 171 15 109 1 3 23 225 1 4] 
#[0 9 174 0 4 0 7 0 171] 
#[1 7 237 0 3 2 135 0 4 4 13 0 5 2 135 0 7 2 139 0 171 23 233 0 228 23 233 0 229 23 229 0 230 23 233 0 233 23 233 1 1 23 233 1 2] 
#[1 6 226 0 4 6 226 0 7 3 7 0 171 15 109 1 3 23 237 1 4] 
#[0 9 178 0 4 0 7 0 171] 
#[1 6 226 0 4 6 226 0 7 3 7 0 171 15 109 1 3 23 241 1 4] 
#[0 9 182 0 4 0 7 0 171] 
#[0 9 186 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 9 173 0 5 9 177 0 6 9 181 0 8 9 185 0 10 9 189 0 14 9 193 0 16 9 197 0 17 9 201 0 18 9 205 0 19 9 209 0 20 9 213 0 45 9 217 0 47 9 221 0 52 9 225 0 66 9 229 0 67 9 233 0 69 9 237 0 98 9 241 0 126 23 245 0 143 9 245 0 145 9 249 0 153 9 253 1 46 10 1 1 48 10 5 1 50] 
#[0 9 190 0 96 0 161] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 23 249 0 180 23 249 0 181 23 249 0 182 23 249 0 183 23 249 0 184 23 249 0 185 23 249 0 186 4 253 0 187 23 249 0 188 23 249 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 23 249 1 37 23 249 1 38 23 249 1 39 23 249 1 40 23 249 1 41 23 249 1 42 23 249 1 43 23 249 1 44 23 249 1 45 23 249 1 47 23 249 1 49 23 249 1 51 5 61 1 52 5 65 1 53 23 249 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 23 249 1 139 23 249 1 141] 
#[0 23 253 0 108] 
#[0 9 194 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 24 1 0 171] 
#[0 24 5 0 171] 
#[1 0 29 0 1 0 33 0 9 2 143 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 13 49 0 72 0 253 0 74 5 75 0 79 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 5 75 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 5 79 0 161 0 233 0 166 0 237 0 167 0 241 0 170 2 151 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 13 49 0 201 13 49 0 203 13 49 0 212 24 9 0 213 3 197 0 215 24 13 0 218 13 61 0 220 1 29 0 223 13 49 0 234 1 37 0 235 13 49 0 236 13 49 0 237 13 49 0 238 13 49 0 239 13 49 0 240 13 49 0 241 13 49 0 242 13 49 0 243 13 49 0 247 13 49 0 248 13 49 1 17 13 49 1 18 13 49 1 19 13 49 1 20 13 49 1 21 13 49 1 22 1 105 1 24 13 49 1 25 13 49 1 26 13 49 1 27 13 49 1 28 13 49 1 29 13 49 1 33 13 49 1 36 1 137 1 55 1 137 1 56 1 137 1 57 13 49 1 61 13 49 1 62 13 49 1 63 13 49 1 66 13 49 1 67 13 49 1 68 13 49 1 69 13 49 1 70 13 49 1 71 13 49 1 72 13 49 1 73 13 49 1 74 13 49 1 75 13 49 1 76 13 49 1 77 13 49 1 78 13 49 1 79 13 49 1 80 13 49 1 81 13 49 1 82 13 49 1 83 13 49 1 88 13 49 1 89 1 241 1 90 13 49 1 95 13 49 1 98 13 49 1 99 13 49 1 100 13 49 1 101 13 49 1 102 13 49 1 107 13 49 1 108 13 49 1 109 13 49 1 110 13 49 1 111 13 49 1 112 13 49 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 13 49 1 127 2 93 1 128 2 97 1 129 13 49 1 137 13 49 1 138 13 49 1 140] 
#[0 9 202 0 79 0 96 0 161] 
#[0 9 206 0 79 0 96 0 161] 
#[0 9 210 0 1 0 7 0 9 0 11 0 22 0 24 0 26 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 74 0 79 0 81 0 83 0 85 0 86 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 104 0 105 0 106 0 107 0 108 0 112 0 113 0 120 0 123 0 124 0 129 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 142 0 146 0 149 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172] 
#[1 0 29 0 1 0 33 0 9 2 143 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 13 49 0 72 0 253 0 74 5 83 0 79 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 5 83 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 5 87 0 161 0 233 0 166 0 237 0 167 0 241 0 170 2 151 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 13 49 0 201 13 49 0 203 13 49 0 212 24 17 0 213 3 197 0 215 24 21 0 218 13 61 0 220 1 29 0 223 13 49 0 234 1 37 0 235 13 49 0 236 13 49 0 237 13 49 0 238 13 49 0 239 13 49 0 240 13 49 0 241 13 49 0 242 13 49 0 243 13 49 0 247 13 49 0 248 13 49 1 17 13 49 1 18 13 49 1 19 13 49 1 20 13 49 1 21 13 49 1 22 1 105 1 24 13 49 1 25 13 49 1 26 13 49 1 27 13 49 1 28 13 49 1 29 13 49 1 33 13 49 1 36 1 137 1 55 1 137 1 56 1 137 1 57 13 49 1 61 13 49 1 62 13 49 1 63 13 49 1 66 13 49 1 67 13 49 1 68 13 49 1 69 13 49 1 70 13 49 1 71 13 49 1 72 13 49 1 73 13 49 1 74 13 49 1 75 13 49 1 76 13 49 1 77 13 49 1 78 13 49 1 79 13 49 1 80 13 49 1 81 13 49 1 82 13 49 1 83 13 49 1 88 13 49 1 89 1 241 1 90 13 49 1 95 13 49 1 98 13 49 1 99 13 49 1 100 13 49 1 101 13 49 1 102 13 49 1 107 13 49 1 108 13 49 1 109 13 49 1 110 13 49 1 111 13 49 1 112 13 49 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 13 49 1 127 2 93 1 128 2 97 1 129 13 49 1 137 13 49 1 138 13 49 1 140] 
#[0 9 218 0 79 0 96 0 161] 
#[0 9 222 0 79 0 96 0 161] 
#[1 9 2 0 1 9 2 0 7 9 2 0 9 9 2 0 11 9 2 0 22 9 2 0 24 9 2 0 26 9 2 0 41 9 2 0 42 9 2 0 43 9 2 0 44 9 2 0 48 9 2 0 53 9 2 0 54 9 2 0 55 9 2 0 57 9 2 0 58 9 2 0 70 9 2 0 72 9 2 0 74 9 2 0 79 9 2 0 81 9 2 0 83 9 2 0 85 9 2 0 86 9 2 0 89 9 2 0 90 9 2 0 96 9 2 0 97 9 2 0 99 9 2 0 100 9 2 0 102 9 2 0 104 9 2 0 105 9 2 0 106 9 2 0 107 9 2 0 108 9 2 0 112 9 2 0 113 9 2 0 120 9 2 0 123 9 2 0 124 9 2 0 129 9 2 0 131 9 2 0 132 9 2 0 133 9 2 0 134 9 2 0 135 9 2 0 136 9 2 0 138 9 2 0 142 9 2 0 146 9 2 0 149 9 2 0 151 9 2 0 152 9 2 0 161 9 2 0 166 9 2 0 167 9 2 0 170 9 2 0 171 9 2 0 172 24 25 1 94] 
#[1 9 2 0 1 9 2 0 7 9 2 0 9 9 2 0 11 9 2 0 22 9 2 0 24 9 2 0 26 9 2 0 41 9 2 0 42 9 2 0 43 9 2 0 44 9 2 0 48 9 2 0 53 9 2 0 54 9 2 0 55 9 2 0 57 9 2 0 58 9 2 0 70 9 2 0 72 9 2 0 74 9 2 0 79 9 2 0 81 9 2 0 83 9 2 0 85 9 2 0 86 9 2 0 89 9 2 0 90 9 2 0 96 9 2 0 97 9 2 0 99 9 2 0 100 9 2 0 102 9 2 0 104 9 2 0 105 9 2 0 106 9 2 0 107 9 2 0 108 9 2 0 112 9 2 0 113 9 2 0 120 9 2 0 123 9 2 0 124 9 2 0 129 9 2 0 131 9 2 0 132 9 2 0 133 9 2 0 134 9 2 0 135 9 2 0 136 9 2 0 138 9 2 0 142 9 2 0 146 9 2 0 149 9 2 0 151 9 2 0 152 9 2 0 161 9 2 0 166 9 2 0 167 9 2 0 170 9 2 0 171 9 2 0 172 24 29 1 94] 
#[0 24 33 0 135] 
#[0 9 226 0 22 0 44 0 54 0 57 0 74 0 81 0 85 0 86 0 96 0 104 0 112 0 113 0 120 0 136 0 142 0 149 0 166 0 167 0 170 0 172] 
#[1 4 213 0 164 24 37 0 187] 
#[0 24 41 0 171] 
#[1 4 13 0 5 0 146 0 22 0 146 0 27 0 146 0 28 0 146 0 29 0 146 0 30 0 146 0 31 0 146 0 32 0 146 0 33 0 146 0 34 0 146 0 35 0 146 0 36 0 146 0 37 0 146 0 38 0 146 0 39 0 146 0 40 0 146 0 44 0 146 0 54 0 146 0 57 0 146 0 70 0 146 0 73 0 146 0 74 0 146 0 81 0 146 0 83 0 146 0 85 0 146 0 86 0 146 0 88 0 146 0 89 0 146 0 97 0 146 0 99 0 146 0 102 0 146 0 103 0 146 0 104 0 146 0 105 0 146 0 109 0 146 0 112 0 146 0 113 0 146 0 120 0 146 0 124 0 146 0 129 0 146 0 130 0 146 0 131 0 146 0 132 0 146 0 136 0 146 0 138 0 146 0 141 0 146 0 142 0 146 0 146 0 146 0 149 0 146 0 166 0 146 0 167 0 146 0 170 7 241 0 171 0 146 0 172 24 45 0 228 24 45 0 229 24 45 0 233 0 146 1 142] 
#[0 9 230 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[1 4 213 0 164 24 49 0 187] 
#[0 24 53 0 171] 
#[0 9 234 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 9 238 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 9 242 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 24 57 0 130] 
#[1 8 81 0 3 24 61 0 68 24 65 0 171 24 69 0 253] 
#[1 8 81 0 3 24 73 0 68 24 77 0 171 24 81 0 253] 
#[0 24 85 0 171] 
#[0 24 89 0 103] 
#[0 24 93 0 103] 
#[0 9 246 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 24 97 0 130] 
#[0 24 101 0 171] 
#[0 24 105 0 96] 
#[0 24 109 0 130] 
#[0 24 113 0 130] 
#[0 9 250 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 24 117 0 141] 
#[0 9 254 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 24 121 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 24 125 0 96] 
#[0 24 129 0 96] 
#[0 24 133 0 171] 
#[0 24 137 0 96] 
#[1 0 29 0 1 7 237 0 3 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 24 141 0 213 3 197 0 215 1 29 0 223 24 145 0 230 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 24 149 0 96] 
#[0 24 153 0 96] 
#[0 24 157 0 171] 
#[0 24 161 0 96] 
#[0 24 165 0 141] 
#[0 24 169 0 171] 
#[0 24 173 0 171] 
#[0 24 177 0 103] 
#[0 24 181 0 103] 
#[0 10 2 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 24 185 0 130] 
#[0 24 189 0 171] 
#[0 24 193 0 96] 
#[0 24 197 0 130] 
#[0 24 201 0 130] 
#[0 10 6 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 24 205 0 141] 
#[0 10 10 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[1 24 209 0 155 9 165 0 158] 
#[0 10 14 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 24 213 0 191 0 253 0 194 24 213 0 195 24 213 0 196 24 213 0 197] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 8 29 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 24 217 0 121 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 8 29 0 201 8 29 0 203 8 29 0 212 8 33 0 215 1 29 0 223 8 29 0 234 1 37 0 235 8 29 0 236 8 29 0 237 8 29 0 238 8 29 0 239 8 29 0 240 8 29 0 241 8 29 0 242 8 29 0 243 8 29 0 247 8 29 0 248 8 29 1 17 8 29 1 18 8 29 1 19 8 29 1 20 8 29 1 21 8 29 1 22 1 105 1 24 8 29 1 25 8 29 1 26 8 29 1 27 8 29 1 28 8 29 1 29 8 29 1 33 8 29 1 36 1 137 1 55 1 137 1 56 1 137 1 57 8 29 1 61 8 29 1 62 8 29 1 63 8 29 1 66 8 29 1 67 8 29 1 68 8 29 1 69 8 29 1 70 8 29 1 71 8 29 1 72 8 29 1 73 8 29 1 74 8 29 1 75 8 29 1 76 8 29 1 77 8 29 1 78 8 29 1 79 8 29 1 80 8 29 1 81 8 29 1 82 8 29 1 83 8 29 1 88 8 29 1 89 1 241 1 90 8 29 1 95 8 29 1 98 8 29 1 99 8 29 1 100 8 29 1 101 8 29 1 102 8 29 1 107 8 29 1 108 8 29 1 109 8 29 1 110 8 29 1 111 8 29 1 112 8 29 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 8 29 1 127 2 93 1 128 2 97 1 129 8 29 1 137 8 29 1 138 8 29 1 140] 
#[1 10 18 0 11 10 18 0 79 10 18 0 96 10 18 0 121 10 18 0 161 5 91 0 171 10 18 0 172 10 18 1 142] 
#[0 24 225 0 171] 
#[1 10 22 0 11 10 22 0 79 10 22 0 96 10 22 0 121 10 22 0 161 5 95 0 171 10 22 0 172 10 22 1 142] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 24 233 0 191 0 253 0 194 24 233 0 195 24 233 0 196 24 233 0 197] 
#[0 24 237 0 121] 
#[1 5 99 0 11 5 99 0 79 5 99 0 96 5 99 0 121 5 99 0 161 5 103 0 171 5 99 0 172 5 99 1 142] 
#[1 0 29 0 1 9 173 0 5 9 177 0 6 9 181 0 8 0 33 0 9 9 185 0 10 5 254 0 11 9 189 0 14 9 193 0 16 9 197 0 17 9 201 0 18 9 205 0 19 9 209 0 20 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 9 213 0 45 9 217 0 47 0 65 0 48 9 221 0 52 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 9 225 0 66 9 229 0 67 9 233 0 69 0 89 0 70 15 153 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 9 237 0 98 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 5 254 0 121 0 173 0 123 0 177 0 124 9 241 0 126 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 24 245 0 139 0 253 0 142 9 245 0 145 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 9 249 0 153 0 233 0 166 0 237 0 167 0 241 0 170 5 254 0 171 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 15 153 0 201 15 153 0 203 15 153 0 212 15 157 0 220 1 29 0 223 15 153 0 234 1 37 0 235 15 153 0 236 15 153 0 237 15 153 0 238 15 153 0 239 15 153 0 240 15 153 0 241 15 153 0 242 15 153 0 243 15 153 0 247 15 153 0 248 15 153 1 17 15 153 1 18 15 153 1 19 15 153 1 20 15 153 1 21 15 153 1 22 1 105 1 24 15 153 1 25 15 153 1 26 15 153 1 27 15 153 1 28 15 153 1 29 15 153 1 33 15 153 1 36 9 253 1 46 10 1 1 48 10 5 1 50 1 137 1 55 1 137 1 56 1 137 1 57 15 153 1 61 15 153 1 62 15 153 1 63 15 153 1 66 15 153 1 67 15 153 1 68 15 153 1 69 15 153 1 70 15 153 1 71 15 153 1 72 15 153 1 73 15 153 1 74 15 153 1 75 15 153 1 76 15 153 1 77 15 153 1 78 15 153 1 79 15 153 1 80 15 153 1 81 15 153 1 82 15 153 1 83 15 153 1 88 15 153 1 89 1 241 1 90 15 153 1 95 15 153 1 98 15 153 1 99 15 153 1 100 15 153 1 101 15 153 1 102 15 153 1 107 15 153 1 108 15 153 1 109 15 153 1 110 15 153 1 111 15 153 1 112 15 153 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 15 153 1 127 2 93 1 128 2 97 1 129 15 153 1 137 15 153 1 138 15 153 1 140] 
#[0 24 249 0 171] 
#[1 24 253 0 121 3 177 0 161 25 1 0 182] 
#[0 25 5 0 121] 
#[1 9 173 0 5 9 177 0 6 9 181 0 8 9 185 0 10 9 189 0 14 9 193 0 16 9 197 0 17 9 201 0 18 9 205 0 19 9 209 0 20 9 213 0 45 9 217 0 47 9 221 0 52 9 225 0 66 9 229 0 67 9 233 0 69 9 237 0 98 25 9 0 112 9 241 0 126 9 245 0 145 9 249 0 153 9 253 1 46 10 1 1 48 10 5 1 50] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 25 13 0 180 25 13 0 181 25 13 0 182 25 13 0 183 25 13 0 184 25 13 0 185 25 13 0 186 4 253 0 187 25 13 0 188 25 13 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 25 13 1 37 25 13 1 38 25 13 1 39 25 13 1 40 25 13 1 41 25 13 1 42 25 13 1 43 25 13 1 44 25 13 1 45 25 13 1 47 25 13 1 49 25 13 1 51 5 61 1 52 5 65 1 53 25 13 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 25 13 1 139 25 13 1 141] 
#[0 25 17 0 23] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 25 21 0 180 25 21 0 181 25 21 0 182 25 21 0 183 25 21 0 184 25 21 0 185 25 21 0 186 4 253 0 187 25 21 0 188 25 21 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 25 21 1 37 25 21 1 38 25 21 1 39 25 21 1 40 25 21 1 41 25 21 1 42 25 21 1 43 25 21 1 44 25 21 1 45 25 21 1 47 25 21 1 49 25 21 1 51 5 61 1 52 5 65 1 53 25 21 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 25 21 1 139 25 21 1 141] 
#[0 10 34 0 4 0 7 0 171] 
#[1 2 135 0 4 4 13 0 5 2 135 0 7 2 139 0 171 25 25 0 228 25 25 0 229 25 25 0 233 25 25 1 1 25 25 1 2] 
#[1 6 226 0 4 6 226 0 7 3 7 0 171 15 109 1 3 25 29 1 4] 
#[0 10 38 0 4 0 7 0 171] 
#[0 10 42 0 4 0 7 0 171] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 10 46 0 93 10 46 0 95 10 46 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 5 107 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 25 33 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 25 37 0 171] 
#[0 10 50 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 25 41 0 108] 
#[1 0 29 0 1 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 25 45 0 180 25 45 0 181 25 45 0 182 25 45 0 183 25 45 0 184 25 45 0 185 25 45 0 186 25 45 0 187 25 45 0 188 25 45 0 189 19 173 0 191 0 253 0 194 19 173 0 195 19 173 0 196 19 173 0 197 1 137 1 55 1 137 1 56 1 137 1 57 25 45 1 91 4 157 1 122 2 81 1 123 19 181 1 124 2 81 1 125 2 93 1 128 19 185 1 129 25 45 1 139 25 45 1 141] 
#[0 10 54 0 79 0 96 0 161] 
#[0 10 58 0 79 0 96 0 161] 
#[0 10 62 0 79 0 96 0 161] 
#[0 10 66 0 79 0 96 0 161] 
#[1 0 29 0 1 22 169 0 7 0 33 0 9 5 111 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 13 49 0 72 0 253 0 74 5 115 0 79 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 5 115 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 5 119 0 161 0 233 0 166 0 237 0 167 0 241 0 170 2 151 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 13 49 0 201 13 49 0 203 13 49 0 212 25 53 0 213 3 197 0 215 25 57 0 218 13 61 0 220 1 29 0 223 13 49 0 234 1 37 0 235 13 49 0 236 13 49 0 237 13 49 0 238 13 49 0 239 13 49 0 240 13 49 0 241 13 49 0 242 13 49 0 243 13 49 0 247 13 49 0 248 13 49 1 17 13 49 1 18 13 49 1 19 13 49 1 20 13 49 1 21 13 49 1 22 1 105 1 24 13 49 1 25 13 49 1 26 13 49 1 27 13 49 1 28 13 49 1 29 13 49 1 33 13 49 1 36 1 137 1 55 1 137 1 56 1 137 1 57 13 49 1 61 13 49 1 62 13 49 1 63 13 49 1 66 13 49 1 67 13 49 1 68 13 49 1 69 13 49 1 70 13 49 1 71 13 49 1 72 13 49 1 73 13 49 1 74 13 49 1 75 13 49 1 76 13 49 1 77 13 49 1 78 13 49 1 79 13 49 1 80 13 49 1 81 13 49 1 82 13 49 1 83 13 49 1 88 13 49 1 89 1 241 1 90 22 185 1 93 13 49 1 95 13 49 1 98 13 49 1 99 13 49 1 100 13 49 1 101 13 49 1 102 13 49 1 107 13 49 1 108 13 49 1 109 13 49 1 110 13 49 1 111 13 49 1 112 13 49 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 13 49 1 127 2 93 1 128 2 97 1 129 13 49 1 137 13 49 1 138 13 49 1 140] 
#[1 0 29 0 1 22 169 0 7 0 33 0 9 5 123 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 13 49 0 72 0 253 0 74 5 127 0 79 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 5 127 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 5 131 0 161 0 233 0 166 0 237 0 167 0 241 0 170 2 151 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 13 49 0 201 13 49 0 203 13 49 0 212 25 65 0 213 3 197 0 215 25 69 0 218 13 61 0 220 1 29 0 223 13 49 0 234 1 37 0 235 13 49 0 236 13 49 0 237 13 49 0 238 13 49 0 239 13 49 0 240 13 49 0 241 13 49 0 242 13 49 0 243 13 49 0 247 13 49 0 248 13 49 1 17 13 49 1 18 13 49 1 19 13 49 1 20 13 49 1 21 13 49 1 22 1 105 1 24 13 49 1 25 13 49 1 26 13 49 1 27 13 49 1 28 13 49 1 29 13 49 1 33 13 49 1 36 1 137 1 55 1 137 1 56 1 137 1 57 13 49 1 61 13 49 1 62 13 49 1 63 13 49 1 66 13 49 1 67 13 49 1 68 13 49 1 69 13 49 1 70 13 49 1 71 13 49 1 72 13 49 1 73 13 49 1 74 13 49 1 75 13 49 1 76 13 49 1 77 13 49 1 78 13 49 1 79 13 49 1 80 13 49 1 81 13 49 1 82 13 49 1 83 13 49 1 88 13 49 1 89 1 241 1 90 22 185 1 93 13 49 1 95 13 49 1 98 13 49 1 99 13 49 1 100 13 49 1 101 13 49 1 102 13 49 1 107 13 49 1 108 13 49 1 109 13 49 1 110 13 49 1 111 13 49 1 112 13 49 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 13 49 1 127 2 93 1 128 2 97 1 129 13 49 1 137 13 49 1 138 13 49 1 140] 
#[0 10 78 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 8 81 0 3 25 73 0 171 25 77 0 253] 
#[1 4 213 0 164 25 81 0 187] 
#[0 10 82 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[1 8 81 0 3 25 85 0 171 25 89 0 253] 
#[1 4 213 0 164 25 93 0 187] 
#[0 10 86 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 25 97 0 171] 
#[1 8 81 0 3 25 101 0 68 25 105 0 253] 
#[1 4 13 0 5 0 146 0 22 0 146 0 27 0 146 0 28 0 146 0 29 0 146 0 30 0 146 0 31 0 146 0 32 0 146 0 33 0 146 0 34 0 146 0 35 0 146 0 36 0 146 0 37 0 146 0 38 0 146 0 39 0 146 0 40 0 146 0 44 0 146 0 54 0 146 0 57 0 146 0 70 0 146 0 73 0 146 0 74 0 146 0 81 0 146 0 83 0 146 0 85 0 146 0 86 0 146 0 88 0 146 0 89 0 146 0 97 0 146 0 99 0 146 0 102 0 146 0 103 0 146 0 104 0 146 0 105 0 146 0 109 0 146 0 112 0 146 0 113 0 146 0 120 0 146 0 124 0 146 0 129 0 146 0 130 0 146 0 131 0 146 0 132 0 146 0 136 0 146 0 138 0 146 0 141 0 146 0 142 0 146 0 146 0 146 0 149 0 146 0 166 0 146 0 167 0 146 0 170 7 241 0 171 0 146 0 172 25 109 0 228 25 109 0 229 25 109 0 233 0 146 1 142] 
#[0 25 113 0 171] 
#[1 8 81 0 3 25 117 0 68 25 121 0 253] 
#[0 10 90 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 25 125 0 103] 
#[0 10 94 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 10 98 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 10 102 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 25 129 0 130] 
#[0 25 133 0 171] 
#[0 10 106 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 10 110 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 10 114 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 25 137 0 96] 
#[0 25 141 0 171] 
#[0 25 145 0 171] 
#[0 25 149 0 103] 
#[0 25 153 0 171] 
#[0 25 157 0 96] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 25 161 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 25 165 0 171] 
#[0 25 169 0 171] 
#[0 25 173 0 141] 
#[0 25 177 0 171] 
#[0 10 118 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 25 181 0 141] 
#[0 25 185 0 103] 
#[0 10 122 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 10 126 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 10 130 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 25 189 0 130] 
#[0 25 193 0 171] 
#[0 10 134 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 10 138 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 10 142 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 10 146 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 73 0 74 0 79 0 81 0 83 0 85 0 86 0 88 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 112 0 113 0 118 0 120 0 121 0 123 0 124 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 141 0 142 0 146 0 149 0 150 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172 1 142] 
#[0 10 150 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 10 154 0 11 10 154 0 79 10 154 0 96 10 154 0 121 10 154 0 161 5 135 0 171 10 154 0 172 10 154 1 142] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 25 201 0 191 0 253 0 194 25 201 0 195 25 201 0 196 25 201 0 197] 
#[0 25 205 0 121] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 25 209 0 191 0 253 0 194 25 209 0 195 25 209 0 196 25 209 0 197] 
#[0 10 158 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 10 162 0 11 10 162 0 79 10 162 0 96 10 162 0 121 10 162 0 161 5 139 0 171 10 162 0 172 10 162 1 142] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 25 217 0 191 0 253 0 194 25 217 0 195 25 217 0 196 25 217 0 197] 
#[0 25 221 0 171] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 8 29 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 25 225 0 121 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 8 29 0 201 8 29 0 203 8 29 0 212 8 33 0 215 1 29 0 223 8 29 0 234 1 37 0 235 8 29 0 236 8 29 0 237 8 29 0 238 8 29 0 239 8 29 0 240 8 29 0 241 8 29 0 242 8 29 0 243 8 29 0 247 8 29 0 248 8 29 1 17 8 29 1 18 8 29 1 19 8 29 1 20 8 29 1 21 8 29 1 22 1 105 1 24 8 29 1 25 8 29 1 26 8 29 1 27 8 29 1 28 8 29 1 29 8 29 1 33 8 29 1 36 1 137 1 55 1 137 1 56 1 137 1 57 8 29 1 61 8 29 1 62 8 29 1 63 8 29 1 66 8 29 1 67 8 29 1 68 8 29 1 69 8 29 1 70 8 29 1 71 8 29 1 72 8 29 1 73 8 29 1 74 8 29 1 75 8 29 1 76 8 29 1 77 8 29 1 78 8 29 1 79 8 29 1 80 8 29 1 81 8 29 1 82 8 29 1 83 8 29 1 88 8 29 1 89 1 241 1 90 8 29 1 95 8 29 1 98 8 29 1 99 8 29 1 100 8 29 1 101 8 29 1 102 8 29 1 107 8 29 1 108 8 29 1 109 8 29 1 110 8 29 1 111 8 29 1 112 8 29 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 8 29 1 127 2 93 1 128 2 97 1 129 8 29 1 137 8 29 1 138 8 29 1 140] 
#[1 10 166 0 11 10 166 0 79 10 166 0 96 10 166 0 121 10 166 0 161 5 143 0 171 10 166 0 172 10 166 1 142] 
#[0 25 233 0 171] 
#[0 10 170 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 25 237 0 171] 
#[1 10 174 0 11 10 174 0 79 10 174 0 96 10 174 0 121 10 174 0 161 5 147 0 171 10 174 0 172 10 174 1 142] 
#[0 25 245 0 171] 
#[1 10 178 0 11 10 178 0 79 10 178 0 96 10 178 0 121 10 178 0 161 5 151 0 171 10 178 0 172 10 178 1 142] 
#[1 6 226 0 4 6 226 0 7 3 7 0 171 15 109 1 3 25 253 1 4] 
#[0 10 182 0 4 0 7 0 171] 
#[0 10 186 0 93 0 95 0 96 0 161] 
#[1 9 173 0 5 9 177 0 6 9 181 0 8 9 185 0 10 9 189 0 14 9 193 0 16 9 197 0 17 9 201 0 18 9 205 0 19 9 209 0 20 9 213 0 45 9 217 0 47 9 221 0 52 9 225 0 66 9 229 0 67 9 233 0 69 9 237 0 98 9 241 0 126 26 1 0 143 9 245 0 145 9 249 0 153 9 253 1 46 10 1 1 48 10 5 1 50] 
#[0 10 190 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[0 10 194 0 1 0 7 0 9 0 11 0 22 0 24 0 26 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 70 0 72 0 74 0 79 0 81 0 83 0 85 0 86 0 89 0 90 0 96 0 97 0 99 0 100 0 102 0 104 0 105 0 106 0 107 0 108 0 112 0 113 0 120 0 123 0 124 0 129 0 131 0 132 0 133 0 134 0 135 0 136 0 138 0 142 0 146 0 149 0 151 0 152 0 161 0 166 0 167 0 170 0 171 0 172] 
#[1 0 29 0 1 0 33 0 9 2 143 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 13 49 0 72 0 253 0 74 5 155 0 79 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 5 155 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 5 159 0 161 0 233 0 166 0 237 0 167 0 241 0 170 2 151 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 13 49 0 201 13 49 0 203 13 49 0 212 26 5 0 213 3 197 0 215 26 9 0 218 13 61 0 220 1 29 0 223 13 49 0 234 1 37 0 235 13 49 0 236 13 49 0 237 13 49 0 238 13 49 0 239 13 49 0 240 13 49 0 241 13 49 0 242 13 49 0 243 13 49 0 247 13 49 0 248 13 49 1 17 13 49 1 18 13 49 1 19 13 49 1 20 13 49 1 21 13 49 1 22 1 105 1 24 13 49 1 25 13 49 1 26 13 49 1 27 13 49 1 28 13 49 1 29 13 49 1 33 13 49 1 36 1 137 1 55 1 137 1 56 1 137 1 57 13 49 1 61 13 49 1 62 13 49 1 63 13 49 1 66 13 49 1 67 13 49 1 68 13 49 1 69 13 49 1 70 13 49 1 71 13 49 1 72 13 49 1 73 13 49 1 74 13 49 1 75 13 49 1 76 13 49 1 77 13 49 1 78 13 49 1 79 13 49 1 80 13 49 1 81 13 49 1 82 13 49 1 83 13 49 1 88 13 49 1 89 1 241 1 90 13 49 1 95 13 49 1 98 13 49 1 99 13 49 1 100 13 49 1 101 13 49 1 102 13 49 1 107 13 49 1 108 13 49 1 109 13 49 1 110 13 49 1 111 13 49 1 112 13 49 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 13 49 1 127 2 93 1 128 2 97 1 129 13 49 1 137 13 49 1 138 13 49 1 140] 
#[0 10 202 0 79 0 96 0 161] 
#[0 10 206 0 79 0 96 0 161] 
#[1 0 29 0 1 0 33 0 9 2 143 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 13 49 0 72 0 253 0 74 5 163 0 79 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 5 163 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 5 167 0 161 0 233 0 166 0 237 0 167 0 241 0 170 2 151 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 13 49 0 201 13 49 0 203 13 49 0 212 26 13 0 213 3 197 0 215 26 17 0 218 13 61 0 220 1 29 0 223 13 49 0 234 1 37 0 235 13 49 0 236 13 49 0 237 13 49 0 238 13 49 0 239 13 49 0 240 13 49 0 241 13 49 0 242 13 49 0 243 13 49 0 247 13 49 0 248 13 49 1 17 13 49 1 18 13 49 1 19 13 49 1 20 13 49 1 21 13 49 1 22 1 105 1 24 13 49 1 25 13 49 1 26 13 49 1 27 13 49 1 28 13 49 1 29 13 49 1 33 13 49 1 36 1 137 1 55 1 137 1 56 1 137 1 57 13 49 1 61 13 49 1 62 13 49 1 63 13 49 1 66 13 49 1 67 13 49 1 68 13 49 1 69 13 49 1 70 13 49 1 71 13 49 1 72 13 49 1 73 13 49 1 74 13 49 1 75 13 49 1 76 13 49 1 77 13 49 1 78 13 49 1 79 13 49 1 80 13 49 1 81 13 49 1 82 13 49 1 83 13 49 1 88 13 49 1 89 1 241 1 90 13 49 1 95 13 49 1 98 13 49 1 99 13 49 1 100 13 49 1 101 13 49 1 102 13 49 1 107 13 49 1 108 13 49 1 109 13 49 1 110 13 49 1 111 13 49 1 112 13 49 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 13 49 1 127 2 93 1 128 2 97 1 129 13 49 1 137 13 49 1 138 13 49 1 140] 
#[0 10 214 0 79 0 96 0 161] 
#[0 10 218 0 79 0 96 0 161] 
#[1 8 81 0 3 26 21 0 253] 
#[1 4 13 0 5 0 146 0 22 0 146 0 27 0 146 0 28 0 146 0 29 0 146 0 30 0 146 0 31 0 146 0 32 0 146 0 33 0 146 0 34 0 146 0 35 0 146 0 36 0 146 0 37 0 146 0 38 0 146 0 39 0 146 0 40 0 146 0 44 0 146 0 54 0 146 0 57 0 146 0 70 0 146 0 73 0 146 0 74 0 146 0 81 0 146 0 83 0 146 0 85 0 146 0 86 0 146 0 88 0 146 0 89 0 146 0 97 0 146 0 99 0 146 0 102 0 146 0 103 0 146 0 104 0 146 0 105 0 146 0 109 0 146 0 112 0 146 0 113 0 146 0 120 0 146 0 124 0 146 0 129 0 146 0 130 0 146 0 131 0 146 0 132 0 146 0 136 0 146 0 138 0 146 0 141 0 146 0 142 0 146 0 146 0 146 0 149 0 146 0 166 0 146 0 167 0 146 0 170 7 241 0 171 0 146 0 172 26 25 0 228 26 25 0 229 26 25 0 233 0 146 1 142] 
#[1 8 81 0 3 26 29 0 171 26 33 0 253] 
#[1 8 81 0 3 26 37 0 253] 
#[0 10 222 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[1 8 81 0 3 26 41 0 171 26 45 0 253] 
#[1 4 213 0 164 26 49 0 187] 
#[0 26 53 0 171] 
#[1 4 13 0 5 0 146 0 22 0 146 0 27 0 146 0 28 0 146 0 29 0 146 0 30 0 146 0 31 0 146 0 32 0 146 0 33 0 146 0 34 0 146 0 35 0 146 0 36 0 146 0 37 0 146 0 38 0 146 0 39 0 146 0 40 0 146 0 44 0 146 0 54 0 146 0 57 0 146 0 70 0 146 0 73 0 146 0 74 0 146 0 81 0 146 0 83 0 146 0 85 0 146 0 86 0 146 0 88 0 146 0 89 0 146 0 97 0 146 0 99 0 146 0 102 0 146 0 103 0 146 0 104 0 146 0 105 0 146 0 109 0 146 0 112 0 146 0 113 0 146 0 120 0 146 0 124 0 146 0 129 0 146 0 130 0 146 0 131 0 146 0 132 0 146 0 136 0 146 0 138 0 146 0 141 0 146 0 142 0 146 0 146 0 146 0 149 0 146 0 166 0 146 0 167 0 146 0 170 7 241 0 171 0 146 0 172 26 57 0 228 26 57 0 229 26 57 0 233 0 146 1 142] 
#[0 10 226 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[1 4 213 0 164 26 61 0 187] 
#[0 26 65 0 171] 
#[0 10 230 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 10 234 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 10 238 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 26 69 0 130] 
#[0 26 73 0 171] 
#[0 26 77 0 103] 
#[0 26 81 0 103] 
#[0 10 242 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 26 85 0 130] 
#[0 26 89 0 171] 
#[0 26 93 0 96] 
#[0 26 97 0 130] 
#[0 26 101 0 130] 
#[0 10 246 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 26 105 0 141] 
#[0 10 250 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 10 254 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 11 2 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 26 109 0 130] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 26 113 0 191 0 253 0 194 26 113 0 195 26 113 0 196 26 113 0 197] 
#[0 11 6 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 11 10 0 11 11 10 0 79 11 10 0 96 11 10 0 121 11 10 0 161 5 171 0 171 11 10 0 172 11 10 1 142] 
#[0 11 14 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 26 121 0 191 0 253 0 194 26 121 0 195 26 121 0 196 26 121 0 197] 
#[0 11 18 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 26 125 0 180 26 125 0 181 26 125 0 182 26 125 0 183 26 125 0 184 26 125 0 185 26 125 0 186 4 253 0 187 26 125 0 188 26 125 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 26 125 1 37 26 125 1 38 26 125 1 39 26 125 1 40 26 125 1 41 26 125 1 42 26 125 1 43 26 125 1 44 26 125 1 45 26 125 1 47 26 125 1 49 26 125 1 51 5 61 1 52 5 65 1 53 26 125 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 26 125 1 139 26 125 1 141] 
#[1 11 22 0 11 11 22 0 79 11 22 0 96 11 22 0 121 11 22 0 161 5 175 0 171 11 22 0 172 11 22 1 142] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 26 133 0 191 0 253 0 194 26 133 0 195 26 133 0 196 26 133 0 197] 
#[0 26 137 0 121] 
#[0 26 141 0 18] 
#[1 9 173 0 5 9 177 0 6 9 181 0 8 9 185 0 10 9 189 0 14 9 193 0 16 9 197 0 17 9 201 0 18 9 205 0 19 9 209 0 20 9 213 0 45 9 217 0 47 9 221 0 52 9 225 0 66 9 229 0 67 9 233 0 69 9 237 0 98 26 145 0 112 9 241 0 126 9 245 0 145 9 249 0 153 9 253 1 46 10 1 1 48 10 5 1 50] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 26 149 0 180 26 149 0 181 26 149 0 182 26 149 0 183 26 149 0 184 26 149 0 185 26 149 0 186 4 253 0 187 26 149 0 188 26 149 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 26 149 1 37 26 149 1 38 26 149 1 39 26 149 1 40 26 149 1 41 26 149 1 42 26 149 1 43 26 149 1 44 26 149 1 45 26 149 1 47 26 149 1 49 26 149 1 51 5 61 1 52 5 65 1 53 26 149 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 26 149 1 139 26 149 1 141] 
#[1 9 173 0 5 9 177 0 6 9 181 0 8 9 185 0 10 9 189 0 14 9 193 0 16 9 197 0 17 9 201 0 18 9 205 0 19 9 209 0 20 9 213 0 45 9 217 0 47 9 221 0 52 9 225 0 66 9 229 0 67 9 233 0 69 9 237 0 98 26 153 0 112 9 241 0 126 9 245 0 145 9 249 0 153 9 253 1 46 10 1 1 48 10 5 1 50] 
#[0 11 26 0 4 0 7 0 171] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 11 30 0 93 11 30 0 95 11 30 0 96 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 5 179 0 161 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 8 145 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 26 157 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[0 11 34 0 79 0 96 0 161] 
#[0 11 38 0 79 0 96 0 161] 
#[0 11 42 0 79 0 96 0 161] 
#[0 11 46 0 79 0 96 0 161] 
#[1 4 13 0 5 0 146 0 22 0 146 0 27 0 146 0 28 0 146 0 29 0 146 0 30 0 146 0 31 0 146 0 32 0 146 0 33 0 146 0 34 0 146 0 35 0 146 0 36 0 146 0 37 0 146 0 38 0 146 0 39 0 146 0 40 0 146 0 44 0 146 0 54 0 146 0 57 0 146 0 70 0 146 0 73 0 146 0 74 0 146 0 81 0 146 0 83 0 146 0 85 0 146 0 86 0 146 0 88 0 146 0 89 0 146 0 97 0 146 0 99 0 146 0 102 0 146 0 103 0 146 0 104 0 146 0 105 0 146 0 109 0 146 0 112 0 146 0 113 0 146 0 120 0 146 0 124 0 146 0 129 0 146 0 130 0 146 0 131 0 146 0 132 0 146 0 136 0 146 0 138 0 146 0 141 0 146 0 142 0 146 0 146 0 146 0 149 0 146 0 166 0 146 0 167 0 146 0 170 7 241 0 171 0 146 0 172 26 161 0 228 26 161 0 229 26 161 0 233 0 146 1 142] 
#[0 11 50 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[1 8 81 0 3 26 165 0 253] 
#[1 4 13 0 5 0 146 0 22 0 146 0 27 0 146 0 28 0 146 0 29 0 146 0 30 0 146 0 31 0 146 0 32 0 146 0 33 0 146 0 34 0 146 0 35 0 146 0 36 0 146 0 37 0 146 0 38 0 146 0 39 0 146 0 40 0 146 0 44 0 146 0 54 0 146 0 57 0 146 0 70 0 146 0 73 0 146 0 74 0 146 0 81 0 146 0 83 0 146 0 85 0 146 0 86 0 146 0 88 0 146 0 89 0 146 0 97 0 146 0 99 0 146 0 102 0 146 0 103 0 146 0 104 0 146 0 105 0 146 0 109 0 146 0 112 0 146 0 113 0 146 0 120 0 146 0 124 0 146 0 129 0 146 0 130 0 146 0 131 0 146 0 132 0 146 0 136 0 146 0 138 0 146 0 141 0 146 0 142 0 146 0 146 0 146 0 149 0 146 0 166 0 146 0 167 0 146 0 170 7 241 0 171 0 146 0 172 26 169 0 228 26 169 0 229 26 169 0 233 0 146 1 142] 
#[0 11 54 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[1 8 81 0 3 26 173 0 253] 
#[0 11 58 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[1 8 81 0 3 26 177 0 171 26 181 0 253] 
#[1 4 213 0 164 26 185 0 187] 
#[0 11 62 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[1 8 81 0 3 26 189 0 171 26 193 0 253] 
#[1 4 213 0 164 26 197 0 187] 
#[0 11 66 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 26 201 0 103] 
#[0 11 70 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 11 74 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 11 78 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 26 205 0 130] 
#[0 26 209 0 171] 
#[0 11 82 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 11 86 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 11 90 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 11 94 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 11 98 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 26 213 0 191 0 253 0 194 26 213 0 195 26 213 0 196 26 213 0 197] 
#[0 11 102 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 3 189 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 26 217 0 121 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 3 177 0 161 0 233 0 166 0 237 0 167 0 241 0 170 1 235 0 171 0 54 0 172 2 85 0 175 26 221 0 182 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 3 189 0 201 3 189 0 203 3 189 0 212 26 225 0 213 3 197 0 215 1 29 0 223 3 189 0 234 1 37 0 235 3 189 0 236 3 189 0 237 3 189 0 238 3 189 0 239 3 189 0 240 3 189 0 241 3 189 0 242 3 189 0 243 3 189 0 247 3 189 0 248 3 189 1 17 3 189 1 18 3 189 1 19 3 189 1 20 3 189 1 21 3 189 1 22 1 105 1 24 3 189 1 25 3 189 1 26 3 189 1 27 3 189 1 28 3 189 1 29 3 189 1 33 3 189 1 36 1 137 1 55 1 137 1 56 1 137 1 57 3 189 1 61 3 189 1 62 3 189 1 63 3 189 1 66 3 189 1 67 3 189 1 68 3 189 1 69 3 189 1 70 3 189 1 71 3 189 1 72 3 189 1 73 3 189 1 74 3 189 1 75 3 189 1 76 3 189 1 77 3 189 1 78 3 189 1 79 3 189 1 80 3 189 1 81 3 189 1 82 3 189 1 83 3 189 1 88 3 189 1 89 1 241 1 90 3 189 1 95 3 189 1 98 3 189 1 99 3 189 1 100 3 189 1 101 3 189 1 102 3 189 1 107 3 189 1 108 3 189 1 109 3 189 1 110 3 189 1 111 3 189 1 112 3 189 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 3 189 1 127 2 93 1 128 2 97 1 129 3 189 1 137 3 189 1 138 3 189 1 140] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 26 229 0 191 0 253 0 194 26 229 0 195 26 229 0 196 26 229 0 197] 
#[0 11 106 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 11 110 0 11 11 110 0 79 11 110 0 96 11 110 0 121 11 110 0 161 5 183 0 171 11 110 0 172 11 110 1 142] 
#[0 26 237 0 171] 
#[0 26 241 0 171] 
#[1 11 114 0 11 11 114 0 79 11 114 0 96 11 114 0 121 11 114 0 161 5 187 0 171 11 114 0 172 11 114 1 142] 
#[0 26 249 0 171] 
#[0 11 118 0 93 0 95 0 96 0 161] 
#[0 11 122 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[1 4 13 0 5 0 146 0 22 0 146 0 27 0 146 0 28 0 146 0 29 0 146 0 30 0 146 0 31 0 146 0 32 0 146 0 33 0 146 0 34 0 146 0 35 0 146 0 36 0 146 0 37 0 146 0 38 0 146 0 39 0 146 0 40 0 146 0 44 0 146 0 54 0 146 0 57 0 146 0 70 0 146 0 73 0 146 0 74 0 146 0 81 0 146 0 83 0 146 0 85 0 146 0 86 0 146 0 88 0 146 0 89 0 146 0 97 0 146 0 99 0 146 0 102 0 146 0 103 0 146 0 104 0 146 0 105 0 146 0 109 0 146 0 112 0 146 0 113 0 146 0 120 0 146 0 124 0 146 0 129 0 146 0 130 0 146 0 131 0 146 0 132 0 146 0 136 0 146 0 138 0 146 0 141 0 146 0 142 0 146 0 146 0 146 0 149 0 146 0 166 0 146 0 167 0 146 0 170 7 241 0 171 0 146 0 172 26 253 0 228 26 253 0 229 26 253 0 233 0 146 1 142] 
#[0 11 126 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 11 130 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[1 8 81 0 3 27 1 0 253] 
#[1 4 13 0 5 0 146 0 22 0 146 0 27 0 146 0 28 0 146 0 29 0 146 0 30 0 146 0 31 0 146 0 32 0 146 0 33 0 146 0 34 0 146 0 35 0 146 0 36 0 146 0 37 0 146 0 38 0 146 0 39 0 146 0 40 0 146 0 44 0 146 0 54 0 146 0 57 0 146 0 70 0 146 0 73 0 146 0 74 0 146 0 81 0 146 0 83 0 146 0 85 0 146 0 86 0 146 0 88 0 146 0 89 0 146 0 97 0 146 0 99 0 146 0 102 0 146 0 103 0 146 0 104 0 146 0 105 0 146 0 109 0 146 0 112 0 146 0 113 0 146 0 120 0 146 0 124 0 146 0 129 0 146 0 130 0 146 0 131 0 146 0 132 0 146 0 136 0 146 0 138 0 146 0 141 0 146 0 142 0 146 0 146 0 146 0 149 0 146 0 166 0 146 0 167 0 146 0 170 7 241 0 171 0 146 0 172 27 5 0 228 27 5 0 229 27 5 0 233 0 146 1 142] 
#[1 8 81 0 3 27 9 0 171 27 13 0 253] 
#[1 8 81 0 3 27 17 0 253] 
#[0 11 134 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[1 8 81 0 3 27 21 0 171 27 25 0 253] 
#[0 11 138 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 11 142 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 27 29 0 130] 
#[0 11 146 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 11 150 0 11 11 150 0 79 11 150 0 96 11 150 0 121 11 150 0 161 5 191 0 171 11 150 0 172 11 150 1 142] 
#[0 27 37 0 171] 
#[1 27 41 0 121 3 177 0 161 27 45 0 182] 
#[0 11 154 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 27 49 0 191 0 253 0 194 27 49 0 195 27 49 0 196 27 49 0 197] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 27 53 0 180 27 53 0 181 27 53 0 182 27 53 0 183 27 53 0 184 27 53 0 185 27 53 0 186 4 253 0 187 27 53 0 188 27 53 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 27 53 1 37 27 53 1 38 27 53 1 39 27 53 1 40 27 53 1 41 27 53 1 42 27 53 1 43 27 53 1 44 27 53 1 45 27 53 1 47 27 53 1 49 27 53 1 51 5 61 1 52 5 65 1 53 27 53 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 27 53 1 139 27 53 1 141] 
#[0 27 57 0 18] 
#[1 9 173 0 5 9 177 0 6 9 181 0 8 9 185 0 10 9 189 0 14 9 193 0 16 9 197 0 17 9 201 0 18 9 205 0 19 9 209 0 20 9 213 0 45 9 217 0 47 9 221 0 52 9 225 0 66 9 229 0 67 9 233 0 69 9 237 0 98 27 61 0 112 9 241 0 126 9 245 0 145 9 249 0 153 9 253 1 46 10 1 1 48 10 5 1 50] 
#[0 27 65 0 18] 
#[0 11 158 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[1 4 13 0 5 0 146 0 22 0 146 0 27 0 146 0 28 0 146 0 29 0 146 0 30 0 146 0 31 0 146 0 32 0 146 0 33 0 146 0 34 0 146 0 35 0 146 0 36 0 146 0 37 0 146 0 38 0 146 0 39 0 146 0 40 0 146 0 44 0 146 0 54 0 146 0 57 0 146 0 70 0 146 0 73 0 146 0 74 0 146 0 81 0 146 0 83 0 146 0 85 0 146 0 86 0 146 0 88 0 146 0 89 0 146 0 97 0 146 0 99 0 146 0 102 0 146 0 103 0 146 0 104 0 146 0 105 0 146 0 109 0 146 0 112 0 146 0 113 0 146 0 120 0 146 0 124 0 146 0 129 0 146 0 130 0 146 0 131 0 146 0 132 0 146 0 136 0 146 0 138 0 146 0 141 0 146 0 142 0 146 0 146 0 146 0 149 0 146 0 166 0 146 0 167 0 146 0 170 7 241 0 171 0 146 0 172 27 69 0 228 27 69 0 229 27 69 0 233 0 146 1 142] 
#[0 11 162 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[1 8 81 0 3 27 73 0 253] 
#[1 4 13 0 5 0 146 0 22 0 146 0 27 0 146 0 28 0 146 0 29 0 146 0 30 0 146 0 31 0 146 0 32 0 146 0 33 0 146 0 34 0 146 0 35 0 146 0 36 0 146 0 37 0 146 0 38 0 146 0 39 0 146 0 40 0 146 0 44 0 146 0 54 0 146 0 57 0 146 0 70 0 146 0 73 0 146 0 74 0 146 0 81 0 146 0 83 0 146 0 85 0 146 0 86 0 146 0 88 0 146 0 89 0 146 0 97 0 146 0 99 0 146 0 102 0 146 0 103 0 146 0 104 0 146 0 105 0 146 0 109 0 146 0 112 0 146 0 113 0 146 0 120 0 146 0 124 0 146 0 129 0 146 0 130 0 146 0 131 0 146 0 132 0 146 0 136 0 146 0 138 0 146 0 141 0 146 0 142 0 146 0 146 0 146 0 149 0 146 0 166 0 146 0 167 0 146 0 170 7 241 0 171 0 146 0 172 27 77 0 228 27 77 0 229 27 77 0 233 0 146 1 142] 
#[0 11 166 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[1 8 81 0 3 27 81 0 253] 
#[0 11 170 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 11 174 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 27 85 0 191 0 253 0 194 27 85 0 195 27 85 0 196 27 85 0 197] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 253 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 253 0 44 0 65 0 48 0 69 0 53 0 253 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 70 8 29 0 72 0 253 0 74 0 253 0 81 0 105 0 83 0 253 0 85 0 253 0 86 0 117 0 89 0 121 0 90 0 125 0 97 0 129 0 99 0 133 0 100 1 29 0 102 0 253 0 104 1 29 0 105 0 149 0 106 0 153 0 107 0 157 0 108 0 253 0 112 0 165 0 113 0 169 0 120 27 89 0 121 0 173 0 123 0 177 0 124 1 29 0 129 1 29 0 131 0 189 0 132 0 193 0 133 0 197 0 134 0 201 0 135 0 205 0 136 0 209 0 138 0 253 0 142 0 217 0 146 0 253 0 149 0 225 0 151 0 229 0 152 0 233 0 166 0 237 0 167 0 241 0 170 0 54 0 171 0 54 0 172 2 85 0 175 0 249 0 191 0 253 0 194 0 249 0 195 0 249 0 196 0 249 0 197 1 13 0 198 8 29 0 201 8 29 0 203 8 29 0 212 8 33 0 215 1 29 0 223 8 29 0 234 1 37 0 235 8 29 0 236 8 29 0 237 8 29 0 238 8 29 0 239 8 29 0 240 8 29 0 241 8 29 0 242 8 29 0 243 8 29 0 247 8 29 0 248 8 29 1 17 8 29 1 18 8 29 1 19 8 29 1 20 8 29 1 21 8 29 1 22 1 105 1 24 8 29 1 25 8 29 1 26 8 29 1 27 8 29 1 28 8 29 1 29 8 29 1 33 8 29 1 36 1 137 1 55 1 137 1 56 1 137 1 57 8 29 1 61 8 29 1 62 8 29 1 63 8 29 1 66 8 29 1 67 8 29 1 68 8 29 1 69 8 29 1 70 8 29 1 71 8 29 1 72 8 29 1 73 8 29 1 74 8 29 1 75 8 29 1 76 8 29 1 77 8 29 1 78 8 29 1 79 8 29 1 80 8 29 1 81 8 29 1 82 8 29 1 83 8 29 1 88 8 29 1 89 1 241 1 90 8 29 1 95 8 29 1 98 8 29 1 99 8 29 1 100 8 29 1 101 8 29 1 102 8 29 1 107 8 29 1 108 8 29 1 109 8 29 1 110 8 29 1 111 8 29 1 112 8 29 1 114 2 41 1 115 2 41 1 116 2 41 1 117 2 41 1 118 2 41 1 119 2 41 1 120 2 41 1 121 2 69 1 122 2 81 1 123 2 77 1 124 2 81 1 125 2 85 1 126 8 29 1 127 2 93 1 128 2 97 1 129 8 29 1 137 8 29 1 138 8 29 1 140] 
#[1 11 178 0 11 11 178 0 79 11 178 0 96 11 178 0 121 11 178 0 161 5 195 0 171 11 178 0 172 11 178 1 142] 
#[0 27 97 0 171] 
#[0 11 182 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 11 186 0 11 11 186 0 79 11 186 0 96 11 186 0 121 11 186 0 161 5 199 0 171 11 186 0 172 11 186 1 142] 
#[0 27 101 0 171] 
#[0 27 105 0 171] 
#[0 27 109 0 171] 
#[0 11 190 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[1 4 13 0 5 0 146 0 22 0 146 0 27 0 146 0 28 0 146 0 29 0 146 0 30 0 146 0 31 0 146 0 32 0 146 0 33 0 146 0 34 0 146 0 35 0 146 0 36 0 146 0 37 0 146 0 38 0 146 0 39 0 146 0 40 0 146 0 44 0 146 0 54 0 146 0 57 0 146 0 70 0 146 0 73 0 146 0 74 0 146 0 81 0 146 0 83 0 146 0 85 0 146 0 86 0 146 0 88 0 146 0 89 0 146 0 97 0 146 0 99 0 146 0 102 0 146 0 103 0 146 0 104 0 146 0 105 0 146 0 109 0 146 0 112 0 146 0 113 0 146 0 120 0 146 0 124 0 146 0 129 0 146 0 130 0 146 0 131 0 146 0 132 0 146 0 136 0 146 0 138 0 146 0 141 0 146 0 142 0 146 0 146 0 146 0 149 0 146 0 166 0 146 0 167 0 146 0 170 7 241 0 171 0 146 0 172 27 113 0 228 27 113 0 229 27 113 0 233 0 146 1 142] 
#[0 11 194 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 11 198 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[0 11 202 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 11 206 0 11 11 206 0 79 11 206 0 96 11 206 0 121 11 206 0 161 5 203 0 171 11 206 0 172 11 206 1 142] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 27 121 0 191 0 253 0 194 27 121 0 195 27 121 0 196 27 121 0 197] 
#[0 27 125 0 121] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 27 129 0 180 27 129 0 181 27 129 0 182 27 129 0 183 27 129 0 184 27 129 0 185 27 129 0 186 4 253 0 187 27 129 0 188 27 129 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 27 129 1 37 27 129 1 38 27 129 1 39 27 129 1 40 27 129 1 41 27 129 1 42 27 129 1 43 27 129 1 44 27 129 1 45 27 129 1 47 27 129 1 49 27 129 1 51 5 61 1 52 5 65 1 53 27 129 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 27 129 1 139 27 129 1 141] 
#[0 27 133 0 18] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 27 137 0 180 27 137 0 181 27 137 0 182 27 137 0 183 27 137 0 184 27 137 0 185 27 137 0 186 4 253 0 187 27 137 0 188 27 137 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 27 137 1 37 27 137 1 38 27 137 1 39 27 137 1 40 27 137 1 41 27 137 1 42 27 137 1 43 27 137 1 44 27 137 1 45 27 137 1 47 27 137 1 49 27 137 1 51 5 61 1 52 5 65 1 53 27 137 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 27 137 1 139 27 137 1 141] 
#[0 11 210 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 70 0 73 0 74 0 81 0 83 0 85 0 86 0 88 0 89 0 97 0 99 0 102 0 103 0 104 0 105 0 109 0 112 0 113 0 120 0 124 0 129 0 130 0 131 0 132 0 136 0 138 0 141 0 142 0 146 0 149 0 166 0 167 0 170 0 172 1 142] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 27 141 0 191 0 253 0 194 27 141 0 195 27 141 0 196 27 141 0 197] 
#[0 11 214 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 11 218 0 11 11 218 0 79 11 218 0 96 11 218 0 121 11 218 0 161 5 207 0 171 11 218 0 172 11 218 1 142] 
#[1 11 222 0 11 11 222 0 79 11 222 0 96 11 222 0 121 11 222 0 161 5 211 0 171 11 222 0 172 11 222 1 142] 
#[0 27 149 0 171] 
#[1 11 226 0 11 11 226 0 79 11 226 0 96 11 226 0 121 11 226 0 161 5 215 0 171 11 226 0 172 11 226 1 142] 
#[0 11 230 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 0 253 0 22 0 253 0 44 0 253 0 54 0 253 0 57 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 0 253 0 136 0 253 0 142 0 253 0 149 0 253 0 166 0 237 0 167 0 241 0 170 27 153 0 191 0 253 0 194 27 153 0 195 27 153 0 196 27 153 0 197] 
#[1 0 29 0 1 4 173 0 3 4 177 0 6 4 181 0 8 0 33 0 9 0 253 0 22 0 41 0 24 0 253 0 44 0 69 0 53 0 253 0 54 0 253 0 57 4 185 0 62 0 253 0 74 0 253 0 81 0 253 0 85 0 253 0 86 0 253 0 104 0 253 0 112 0 253 0 113 0 253 0 120 4 189 0 122 0 253 0 136 0 253 0 142 0 253 0 149 4 193 0 154 4 197 0 159 4 201 0 160 3 177 0 161 4 205 0 162 4 209 0 163 4 213 0 164 4 217 0 165 0 253 0 166 0 237 0 167 4 221 0 169 0 241 0 170 27 157 0 180 27 157 0 181 27 157 0 182 27 157 0 183 27 157 0 184 27 157 0 185 27 157 0 186 4 253 0 187 27 157 0 188 27 157 0 189 5 9 0 191 0 253 0 194 5 9 0 195 5 9 0 196 5 9 0 197 27 157 1 37 27 157 1 38 27 157 1 39 27 157 1 40 27 157 1 41 27 157 1 42 27 157 1 43 27 157 1 44 27 157 1 45 27 157 1 47 27 157 1 49 27 157 1 51 5 61 1 52 5 65 1 53 27 157 1 54 5 73 1 55 5 73 1 56 5 73 1 57 4 157 1 122 5 81 1 123 5 77 1 124 5 81 1 125 2 93 1 128 5 85 1 129 27 157 1 139 27 157 1 141] 
#[0 11 234 0 11 0 79 0 96 0 121 0 161 0 171 0 172 1 142] 
#[1 11 238 0 11 11 238 0 79 11 238 0 96 11 238 0 121 11 238 0 161 5 219 0 171 11 238 0 172 11 238 1 142]
	).
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForAddressOfClause1: nodes [
	| result |
	result := VBAddressOfClauseNode new.
	result addressOfToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result name: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgument2: nodes [
	| result |
	result := VBArgumentNode new.
	result value: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgument4: nodes [
	| result |
	result := VBArgumentNode new.
	result paramarrayToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgument6: nodes [
	| result |
	result := VBArgumentNode new.
	result strategy: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgument8: nodes [
	| result |
	result := VBArgumentNode new.
	result strategy: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result paramarrayToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result value: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgumentList1: nodes [
	| result |
	result := VBArgumentListNode new.
	result addTokens: ((nodes at: 1) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 1) at: 2) to: result whitespaceTokens.
	result addTokens: ((nodes at: 1) at: 3) to: result semicolonTokens.
	result addNodes: ((nodes at: 1) at: 4) to: result arguments.
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 2) at: 2) to: result arguments.
	result addTokens: ((nodes at: 2) at: 3) to: result whitespaceTokens.
	result addTokens: ((nodes at: 2) at: 4) to: result semicolonTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgumentList2: nodes [
	| result |
	result := VBArgumentListNode new.
	result addTokens: ((nodes at: 1) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 1) at: 2) to: result whitespaceTokens.
	result addTokens: ((nodes at: 1) at: 3) to: result semicolonTokens.
	result addNodes: ((nodes at: 1) at: 4) to: result arguments.
	result addNode: (nodes at: 2) to: result arguments.
	result addTokens: ((nodes at: 3) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 3) at: 2) to: result arguments.
	result addTokens: ((nodes at: 3) at: 3) to: result whitespaceTokens.
	result addTokens: ((nodes at: 3) at: 4) to: result semicolonTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperation1: nodes [
	| result |
	result := VBArithmeticOperationNode new.
	result left: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result timesToken: ((nodes at: 3) at: 1).
	result plusToken: ((nodes at: 3) at: 2).
	result minusToken: ((nodes at: 3) at: 3).
	result divideToken: ((nodes at: 3) at: 4).
	result upArrowToken: ((nodes at: 3) at: 5).
	result _Token: ((nodes at: 3) at: 6).
	result modToken: ((nodes at: 3) at: 7).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result right: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator1: nodes [
	| result |
	result := Array new: 7.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator2: nodes [
	| result |
	result := Array new: 7.
	result at: 2 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator3: nodes [
	| result |
	result := Array new: 7.
	result at: 3 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator4: nodes [
	| result |
	result := Array new: 7.
	result at: 4 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForAssignment2: nodes [
	| result |
	result := VBExplicitAssignementNode new.
	result left: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result operator: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result right: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForAttribute1: nodes [
	| result |
	result := VBModuleAttributeNode new.
	result attributeToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result setting: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBaseType15: nodes [
	| result |
	result := VBBaseTypeNode new.
	result variantToken: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBlock1: nodes [
	| result |
	result := VBBlockNode new.
	result addObjects: ((nodes at: 1) at: 1) to: result statements.
	result addNodes: ((nodes at: 1) at: 2) to: result lineNumbers.
	result addTokens: ((nodes at: 1) at: 3) to: result whitespaceTokens.
	result addTokens: ((nodes at: 1) at: 4) to: result eolTokens.
	result addTokens: ((nodes at: 1) at: 5) to: result colonTokens.
	result addTokens: (nodes at: 2) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBlock2: nodes [
	| result |
	result := VBBlockNode new.
	result addObject: (nodes at: 1) to: result statements.
	result addObjects: ((nodes at: 2) at: 1) to: result statements.
	result addNodes: ((nodes at: 2) at: 2) to: result lineNumbers.
	result addTokens: ((nodes at: 2) at: 3) to: result whitespaceTokens.
	result addTokens: ((nodes at: 2) at: 4) to: result eolTokens.
	result addTokens: ((nodes at: 2) at: 5) to: result colonTokens.
	result addTokens: (nodes at: 3) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBlock3: nodes [
	| result |
	result := VBBlockNode new.
	result addNode: (nodes at: 1) to: result lineNumbers.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addObjects: ((nodes at: 3) at: 1) to: result statements.
	result addNodes: ((nodes at: 3) at: 2) to: result lineNumbers.
	result addTokens: ((nodes at: 3) at: 3) to: result whitespaceTokens.
	result addTokens: ((nodes at: 3) at: 4) to: result eolTokens.
	result addTokens: ((nodes at: 3) at: 5) to: result colonTokens.
	result addTokens: (nodes at: 4) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBlock4: nodes [
	| result |
	result := VBBlockNode new.
	result addNode: (nodes at: 1) to: result lineNumbers.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addObject: (nodes at: 3) to: result statements.
	result addObjects: ((nodes at: 4) at: 1) to: result statements.
	result addNodes: ((nodes at: 4) at: 2) to: result lineNumbers.
	result addTokens: ((nodes at: 4) at: 3) to: result whitespaceTokens.
	result addTokens: ((nodes at: 4) at: 4) to: result eolTokens.
	result addTokens: ((nodes at: 4) at: 5) to: result colonTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanBinaryOperation1: nodes [
	| result |
	result := VBArithmeticOperationNode new.
	result left: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result andToken: ((nodes at: 3) at: 1).
	result orToken: ((nodes at: 3) at: 2).
	result xorToken: ((nodes at: 3) at: 3).
	result eqvToken: ((nodes at: 3) at: 4).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result right: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanLiteral1: nodes [
	| result |
	result := VBBooleanLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanOperator2: nodes [
	| result |
	result := Array new: 4.
	result at: 2 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanOperator4: nodes [
	| result |
	result := Array new: 4.
	result at: 4 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase10: nodes [
	| result |
	result := VBCaseNode new.
	result caseToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result elseToken: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 4) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 4) at: 3) to: result expressions.
	result colonToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase11: nodes [
	| result |
	result := VBCaseNode new.
	result caseToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result elseToken: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 4) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 4) at: 3) to: result expressions.
	result colonToken: (nodes at: 5).
	result body: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase13: nodes [
	| result |
	result := VBCaseNode new.
	result lineNumber: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result caseToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result expressions.
	result addTokens: ((nodes at: 6) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 6) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 6) at: 3) to: result expressions.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase14: nodes [
	| result |
	result := VBCaseNode new.
	result lineNumber: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result caseToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result expressions.
	result addTokens: ((nodes at: 6) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 6) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 6) at: 3) to: result expressions.
	result body: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase16: nodes [
	| result |
	result := VBCaseNode new.
	result lineNumber: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result caseToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result expressions.
	result addTokens: ((nodes at: 6) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 6) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 6) at: 3) to: result expressions.
	result colonToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase17: nodes [
	| result |
	result := VBCaseNode new.
	result lineNumber: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result caseToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result expressions.
	result addTokens: ((nodes at: 6) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 6) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 6) at: 3) to: result expressions.
	result colonToken: (nodes at: 7).
	result body: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase19: nodes [
	| result |
	result := VBCaseNode new.
	result lineNumber: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result caseToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result elseToken: (nodes at: 5).
	result addTokens: ((nodes at: 6) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 6) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 6) at: 3) to: result expressions.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase1: nodes [
	| result |
	result := VBCaseNode new.
	result caseToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addNode: (nodes at: 3) to: result expressions.
	result addTokens: ((nodes at: 4) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 4) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 4) at: 3) to: result expressions.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase20: nodes [
	| result |
	result := VBCaseNode new.
	result lineNumber: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result caseToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result elseToken: (nodes at: 5).
	result addTokens: ((nodes at: 6) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 6) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 6) at: 3) to: result expressions.
	result body: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase22: nodes [
	| result |
	result := VBCaseNode new.
	result lineNumber: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result caseToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result elseToken: (nodes at: 5).
	result addTokens: ((nodes at: 6) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 6) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 6) at: 3) to: result expressions.
	result colonToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase23: nodes [
	| result |
	result := VBCaseNode new.
	result lineNumber: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result caseToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result elseToken: (nodes at: 5).
	result addTokens: ((nodes at: 6) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 6) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 6) at: 3) to: result expressions.
	result colonToken: (nodes at: 7).
	result body: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase2: nodes [
	| result |
	result := VBCaseNode new.
	result caseToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addNode: (nodes at: 3) to: result expressions.
	result addTokens: ((nodes at: 4) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 4) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 4) at: 3) to: result expressions.
	result body: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase4: nodes [
	| result |
	result := VBCaseNode new.
	result caseToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addNode: (nodes at: 3) to: result expressions.
	result addTokens: ((nodes at: 4) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 4) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 4) at: 3) to: result expressions.
	result colonToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase5: nodes [
	| result |
	result := VBCaseNode new.
	result caseToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addNode: (nodes at: 3) to: result expressions.
	result addTokens: ((nodes at: 4) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 4) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 4) at: 3) to: result expressions.
	result colonToken: (nodes at: 5).
	result body: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase7: nodes [
	| result |
	result := VBCaseNode new.
	result caseToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result elseToken: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 4) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 4) at: 3) to: result expressions.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase8: nodes [
	| result |
	result := VBCaseNode new.
	result caseToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result elseToken: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 4) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 4) at: 3) to: result expressions.
	result body: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForColorLiteral1: nodes [
	| result |
	result := VBColorLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForComparisonOperation1: nodes [
	| result |
	result := VBComparisonOperationNode new.
	result left: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result greaterThanToken: ((nodes at: 3) at: 1).
	result lessThanToken: ((nodes at: 3) at: 2).
	result lessThanGreaterThanToken: ((nodes at: 3) at: 3).
	result lessThanEqualToken: ((nodes at: 3) at: 4).
	result greaterThanEqualToken: ((nodes at: 3) at: 5).
	result iSToken: ((nodes at: 3) at: 6).
	result lIKEToken: ((nodes at: 3) at: 7).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result right: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForComparisonOperator5: nodes [
	| result |
	result := Array new: 7.
	result at: 5 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForComparisonOperator6: nodes [
	| result |
	result := Array new: 7.
	result at: 6 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForComparisonOperator7: nodes [
	| result |
	result := Array new: 7.
	result at: 7 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForComplexType1: nodes [
	| result |
	result := VBComplexTypeNode new.
	result addTokens: ((nodes at: 1) at: 1) to: result periodTokens.
	result addTokens: ((nodes at: 1) at: 2) to: result members.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForComplexType2: nodes [
	| result |
	result := VBComplexTypeNode new.
	result base: (nodes at: 1).
	result addTokens: ((nodes at: 2) at: 1) to: result periodTokens.
	result addTokens: ((nodes at: 2) at: 2) to: result members.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConcatenationOperation1: nodes [
	| result |
	result := VBConcatenationOperationNode new.
	result left: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result andToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result right: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConfiguration1: nodes [
	| result |
	result := VBConfigurationNode new.
	result beginToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addNode: (nodes at: 3) to: result settings.
	result addNodes: ((nodes at: 4) at: 1) to: result settings.
	result addTokens: ((nodes at: 4) at: 2) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConstant1: nodes [
	| result |
	result := VBConstantNode new.
	result constant: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result equalToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result value: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConstant2: nodes [
	| result |
	result := VBConstantNode new.
	result constant: (nodes at: 1).
	result type: (nodes at: 2).
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result equalToken: (nodes at: 4).
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result value: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConstantList1: nodes [
	| result |
	result := VBConstantListNode new.
	result addNode: (nodes at: 1) to: result constants.
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 2) at: 2) to: result constants.
	result addTokens: ((nodes at: 2) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDateLiteral1: nodes [
	| result |
	result := VBDateLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction10: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result declareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result functionToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result libToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result library: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result parameters: (nodes at: 13).
	result type: (nodes at: 14).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction11: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result declareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result functionToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result libToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result library: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result aliasToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result alias: (nodes at: 15).
	result parameters: (nodes at: 16).
	result type: (nodes at: 17).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction12: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result declareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result functionToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result libToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result library: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result aliasToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result alias: (nodes at: 15).
	result addToken: (nodes at: 16) to: result whitespaceTokens.
	result parameters: (nodes at: 17).
	result type: (nodes at: 18).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction1: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result declareToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result functionToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result libToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result library: (nodes at: 9).
	result parameters: (nodes at: 10).
	result type: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction2: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result declareToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result functionToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result libToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result library: (nodes at: 9).
	result aliasToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result alias: (nodes at: 12).
	result parameters: (nodes at: 13).
	result type: (nodes at: 14).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction3: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result declareToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result functionToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result libToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result library: (nodes at: 9).
	result aliasToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result alias: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result parameters: (nodes at: 14).
	result type: (nodes at: 15).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction4: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result declareToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result functionToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result libToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result library: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result parameters: (nodes at: 11).
	result type: (nodes at: 12).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction5: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result declareToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result functionToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result libToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result library: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result aliasToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result alias: (nodes at: 13).
	result parameters: (nodes at: 14).
	result type: (nodes at: 15).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction6: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result declareToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result functionToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result libToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result library: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result aliasToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result alias: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result parameters: (nodes at: 15).
	result type: (nodes at: 16).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction7: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result declareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result functionToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result libToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result library: (nodes at: 11).
	result parameters: (nodes at: 12).
	result type: (nodes at: 13).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction8: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result declareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result functionToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result libToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result library: (nodes at: 11).
	result aliasToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result alias: (nodes at: 14).
	result parameters: (nodes at: 15).
	result type: (nodes at: 16).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction9: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result declareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result functionToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result libToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result library: (nodes at: 11).
	result aliasToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result alias: (nodes at: 14).
	result addToken: (nodes at: 15) to: result whitespaceTokens.
	result parameters: (nodes at: 16).
	result type: (nodes at: 17).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub10: nodes [
	| result |
	result := VBExternalSubNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result declareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result subToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result libToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result library: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result parameters: (nodes at: 13).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub11: nodes [
	| result |
	result := VBExternalSubNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result declareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result subToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result libToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result library: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result aliasToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result alias: (nodes at: 15).
	result parameters: (nodes at: 16).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub12: nodes [
	| result |
	result := VBExternalSubNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result declareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result subToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result libToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result library: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result aliasToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result alias: (nodes at: 15).
	result addToken: (nodes at: 16) to: result whitespaceTokens.
	result parameters: (nodes at: 17).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub1: nodes [
	| result |
	result := VBExternalSubNode new.
	result declareToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result subToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result libToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result library: (nodes at: 9).
	result parameters: (nodes at: 10).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub2: nodes [
	| result |
	result := VBExternalSubNode new.
	result declareToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result subToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result libToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result library: (nodes at: 9).
	result aliasToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result alias: (nodes at: 12).
	result parameters: (nodes at: 13).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub3: nodes [
	| result |
	result := VBExternalSubNode new.
	result declareToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result subToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result libToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result library: (nodes at: 9).
	result aliasToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result alias: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result parameters: (nodes at: 14).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub4: nodes [
	| result |
	result := VBExternalSubNode new.
	result declareToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result subToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result libToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result library: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result parameters: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub5: nodes [
	| result |
	result := VBExternalSubNode new.
	result declareToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result subToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result libToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result library: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result aliasToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result alias: (nodes at: 13).
	result parameters: (nodes at: 14).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub6: nodes [
	| result |
	result := VBExternalSubNode new.
	result declareToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result subToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result libToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result library: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result aliasToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result alias: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result parameters: (nodes at: 15).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub7: nodes [
	| result |
	result := VBExternalSubNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result declareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result subToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result libToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result library: (nodes at: 11).
	result parameters: (nodes at: 12).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub8: nodes [
	| result |
	result := VBExternalSubNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result declareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result subToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result libToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result library: (nodes at: 11).
	result aliasToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result alias: (nodes at: 14).
	result parameters: (nodes at: 15).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub9: nodes [
	| result |
	result := VBExternalSubNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result declareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result subToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result libToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result library: (nodes at: 11).
	result aliasToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result alias: (nodes at: 14).
	result addToken: (nodes at: 15) to: result whitespaceTokens.
	result parameters: (nodes at: 16).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefType1: nodes [
	| result |
	result := VBDefTypeNode new.
	result deftype: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result pattern: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineEnum1: nodes [
	| result |
	result := VBDefineEnumNode new.
	result addToken: (nodes at: 1) to: result enumTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result name: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 4) at: 2) to: result fields.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result addToken: (nodes at: 8) to: result enumTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineEnum2: nodes [
	| result |
	result := VBDefineEnumNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result enumTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result name: (nodes at: 5).
	result addTokens: ((nodes at: 6) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 6) at: 2) to: result fields.
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result addToken: (nodes at: 10) to: result enumTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction10: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result functionTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result type: ((nodes at: 8) at: 1).
	result _size: ((nodes at: 8) at: 2).
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction11: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result functionTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result parameters: (nodes at: 7).
	result type: ((nodes at: 8) at: 1).
	result _size: ((nodes at: 8) at: 2).
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction12: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result functionTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result parameters: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result type: ((nodes at: 9) at: 1).
	result _size: ((nodes at: 9) at: 2).
	result block: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result addToken: (nodes at: 13) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction13: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result modifier: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result functionTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result parameters: (nodes at: 8).
	result type: ((nodes at: 9) at: 1).
	result _size: ((nodes at: 9) at: 2).
	result block: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result addToken: (nodes at: 13) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction14: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result modifier: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result functionTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result parameters: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result type: ((nodes at: 10) at: 1).
	result _size: ((nodes at: 10) at: 2).
	result block: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result addToken: (nodes at: 14) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction15: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result modifier: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result functionTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result parameters: (nodes at: 9).
	result type: ((nodes at: 10) at: 1).
	result _size: ((nodes at: 10) at: 2).
	result block: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result addToken: (nodes at: 14) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction16: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result modifier: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result functionTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result parameters: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result type: ((nodes at: 11) at: 1).
	result _size: ((nodes at: 11) at: 2).
	result block: (nodes at: 12).
	result endToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result addToken: (nodes at: 15) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction1: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result addToken: (nodes at: 1) to: result functionTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result type: ((nodes at: 5) at: 1).
	result _size: ((nodes at: 5) at: 2).
	result block: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result addToken: (nodes at: 9) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction2: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result addToken: (nodes at: 1) to: result functionTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result type: ((nodes at: 6) at: 1).
	result _size: ((nodes at: 6) at: 2).
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result addToken: (nodes at: 10) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction3: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result addToken: (nodes at: 1) to: result functionTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result selector: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result parameters: (nodes at: 5).
	result type: ((nodes at: 6) at: 1).
	result _size: ((nodes at: 6) at: 2).
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result addToken: (nodes at: 10) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction4: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result addToken: (nodes at: 1) to: result functionTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result selector: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result parameters: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result type: ((nodes at: 7) at: 1).
	result _size: ((nodes at: 7) at: 2).
	result block: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result addToken: (nodes at: 11) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction5: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result functionTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result type: ((nodes at: 7) at: 1).
	result _size: ((nodes at: 7) at: 2).
	result block: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result addToken: (nodes at: 11) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction6: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result functionTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result type: ((nodes at: 8) at: 1).
	result _size: ((nodes at: 8) at: 2).
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction7: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result functionTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result parameters: (nodes at: 7).
	result type: ((nodes at: 8) at: 1).
	result _size: ((nodes at: 8) at: 2).
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction8: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result functionTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result parameters: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result type: ((nodes at: 9) at: 1).
	result _size: ((nodes at: 9) at: 2).
	result block: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result addToken: (nodes at: 13) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction9: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result functionTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result type: ((nodes at: 7) at: 1).
	result _size: ((nodes at: 7) at: 2).
	result block: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result addToken: (nodes at: 11) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub10: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result subTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result block: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result addToken: (nodes at: 11) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub11: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result subTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result block: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result addToken: (nodes at: 11) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub12: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result subTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result parameters: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub13: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result modifier: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result subTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub14: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result modifier: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result subTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result parameters: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result block: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result addToken: (nodes at: 13) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub15: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result modifier: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result subTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result block: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result addToken: (nodes at: 13) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub16: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result modifier: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result subTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result parameters: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result block: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result addToken: (nodes at: 14) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub1: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result addToken: (nodes at: 1) to: result subTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result selector: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result block: (nodes at: 5).
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result addToken: (nodes at: 8) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub2: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result addToken: (nodes at: 1) to: result subTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result block: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result addToken: (nodes at: 9) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub3: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result addToken: (nodes at: 1) to: result subTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result selector: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result block: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result addToken: (nodes at: 9) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub4: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result addToken: (nodes at: 1) to: result subTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result selector: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result parameters: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result addToken: (nodes at: 10) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub5: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result subTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result addToken: (nodes at: 10) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub6: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result subTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result block: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result addToken: (nodes at: 11) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub7: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result subTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result block: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result addToken: (nodes at: 11) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub8: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result subTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result parameters: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub9: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result subTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result addToken: (nodes at: 10) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineType1: nodes [
	| result |
	result := VBDefineTypeNode new.
	result addToken: (nodes at: 1) to: result typeTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result name: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 4) at: 2) to: result fields.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result addToken: (nodes at: 8) to: result typeTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineType2: nodes [
	| result |
	result := VBDefineTypeNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result typeTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result name: (nodes at: 5).
	result addTokens: ((nodes at: 6) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 6) at: 2) to: result fields.
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result addToken: (nodes at: 10) to: result typeTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineVariable1: nodes [
	| result |
	result := VBDimVariableNode new.
	result dimToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result variable: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineVariables1: nodes [
	| result |
	result := VBDimMultipleVariablesNode new.
	result dimToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result variables: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDestinationList1: nodes [
	| result |
	result := VBDestinationListNode new.
	result addNode: (nodes at: 1) to: result labels.
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 2) at: 2) to: result labels.
	result addTokens: ((nodes at: 2) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDictionaryAccess1: nodes [
	| result |
	result := VBDictionaryAccessNode new.
	result bangToken: (nodes at: 1).
	result member: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDictionaryAccess2: nodes [
	| result |
	result := VBDictionaryAccessNode new.
	result receiver: (nodes at: 1).
	result bangToken: (nodes at: 2).
	result member: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoEvents1: nodes [
	| result |
	result := VBDoEventsNode new.
	result doEventsToken: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoUntilTrue1: nodes [
	| result |
	result := VBDoUntilTrueNode new.
	result doToken: (nodes at: 1).
	result body: (nodes at: 2).
	result loopToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result untilToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result condition: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoUntilTrue2: nodes [
	| result |
	result := VBDoUntilTrueNode new.
	result doToken: (nodes at: 1).
	result body: (nodes at: 2).
	result endLineNumber: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result loopToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result untilToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result condition: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoWhileTrue1: nodes [
	| result |
	result := VBDoWhileTrueNode new.
	result doToken: (nodes at: 1).
	result loopToken: (nodes at: 2).
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result whileToken: (nodes at: 4).
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result condition: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoWhileTrue2: nodes [
	| result |
	result := VBDoWhileTrueNode new.
	result doToken: (nodes at: 1).
	result endLineNumber: (nodes at: 2).
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result loopToken: (nodes at: 4).
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result whileToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result condition: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoWhileTrue3: nodes [
	| result |
	result := VBDoWhileTrueNode new.
	result doToken: (nodes at: 1).
	result body: (nodes at: 2).
	result loopToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result whileToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result condition: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoWhileTrue4: nodes [
	| result |
	result := VBDoWhileTrueNode new.
	result doToken: (nodes at: 1).
	result body: (nodes at: 2).
	result endLineNumber: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result loopToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result whileToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result condition: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElse1: nodes [
	| result |
	result := VBElseIfBlockNode new.
	result elseToken: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElse2: nodes [
	| result |
	result := VBElseIfBlockNode new.
	result elseToken: (nodes at: 1).
	result ifMatch: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElse3: nodes [
	| result |
	result := VBElseIfBlockNode new.
	result endLineNumber: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result elseToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElse4: nodes [
	| result |
	result := VBElseIfBlockNode new.
	result endLineNumber: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result elseToken: (nodes at: 3).
	result ifMatch: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElseIf1: nodes [
	| result |
	result := VBElseIfBlockNode new.
	result elseifToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result thenToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElseIf2: nodes [
	| result |
	result := VBElseIfBlockNode new.
	result elseifToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result thenToken: (nodes at: 5).
	result ifMatch: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElseIf3: nodes [
	| result |
	result := VBElseIfBlockNode new.
	result endLineNumber: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result elseifToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result condition: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result thenToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElseIf4: nodes [
	| result |
	result := VBElseIfBlockNode new.
	result endLineNumber: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result elseifToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result condition: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result thenToken: (nodes at: 7).
	result ifMatch: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEnumEntry1: nodes [
	| result |
	result := VBEnumEntryNode new.
	result name: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEnumEntry2: nodes [
	| result |
	result := VBEnumEntryNode new.
	result name: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result equalToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result value: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEquals1: nodes [
	| result |
	result := VBEqualsNode new.
	result left: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result operator: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result right: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEvent1: nodes [
	| result |
	result := VBEventNode new.
	result eventToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEvent2: nodes [
	| result |
	result := VBEventNode new.
	result eventToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result selector: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result parameters: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEvent3: nodes [
	| result |
	result := VBEventNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eventToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEvent4: nodes [
	| result |
	result := VBEventNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eventToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result parameters: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitDo1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result doToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitFor1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result fORToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitFunction1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result functionToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitProperty1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result propertyToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitSub1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result subToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExplicitAssignement2: nodes [
	| result |
	result := VBExplicitAssignementNode new.
	result kind: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result left: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result operator: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result right: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExplicitCall1: nodes [
	| result |
	result := VBExplicitCallNode new.
	result callToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result selector: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForFileDescriptorLiteral1: nodes [
	| result |
	result := VBFileDescriptorLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForFloatLiteral1: nodes [
	| result |
	result := VBFloatLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach10: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result nextToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result addNode: (nodes at: 13) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach11: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result endLineNumber: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result nextToken: (nodes at: 13).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach12: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result endLineNumber: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result nextToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result addNode: (nodes at: 15) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach13: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result body: (nodes at: 11).
	result nextToken: (nodes at: 12).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach14: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result body: (nodes at: 11).
	result nextToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result addNode: (nodes at: 14) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach15: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result body: (nodes at: 11).
	result endLineNumber: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result nextToken: (nodes at: 14).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach16: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result body: (nodes at: 11).
	result endLineNumber: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result nextToken: (nodes at: 14).
	result addToken: (nodes at: 15) to: result whitespaceTokens.
	result addNode: (nodes at: 16) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach1: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result nextToken: (nodes at: 10).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach2: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result nextToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addNode: (nodes at: 12) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach3: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result endLineNumber: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result nextToken: (nodes at: 12).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach4: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result endLineNumber: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result nextToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result addNode: (nodes at: 14) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach5: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result body: (nodes at: 10).
	result nextToken: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach6: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result body: (nodes at: 10).
	result nextToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result addNode: (nodes at: 13) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach7: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result body: (nodes at: 10).
	result endLineNumber: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result nextToken: (nodes at: 13).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach8: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result body: (nodes at: 10).
	result endLineNumber: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result nextToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result addNode: (nodes at: 15) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach9: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result nextToken: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext1: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result nextToken: (nodes at: 12).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext2: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result nextToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result element: (nodes at: 14).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext3: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result endLineNumber: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result nextToken: (nodes at: 14).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext4: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result endLineNumber: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result nextToken: (nodes at: 14).
	result addToken: (nodes at: 15) to: result whitespaceTokens.
	result element: (nodes at: 16).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext5: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result body: (nodes at: 12).
	result nextToken: (nodes at: 13).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext6: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result body: (nodes at: 12).
	result nextToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result element: (nodes at: 15).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext7: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result body: (nodes at: 12).
	result endLineNumber: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result nextToken: (nodes at: 15).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext8: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result body: (nodes at: 12).
	result endLineNumber: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result nextToken: (nodes at: 15).
	result addToken: (nodes at: 16) to: result whitespaceTokens.
	result element: (nodes at: 17).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext1: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result stepToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result step: (nodes at: 15).
	result nextToken: (nodes at: 16).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext2: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result stepToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result step: (nodes at: 15).
	result nextToken: (nodes at: 16).
	result addToken: (nodes at: 17) to: result whitespaceTokens.
	result element: (nodes at: 18).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext3: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result stepToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result step: (nodes at: 15).
	result endLineNumber: (nodes at: 16).
	result addToken: (nodes at: 17) to: result whitespaceTokens.
	result nextToken: (nodes at: 18).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext4: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result stepToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result step: (nodes at: 15).
	result endLineNumber: (nodes at: 16).
	result addToken: (nodes at: 17) to: result whitespaceTokens.
	result nextToken: (nodes at: 18).
	result addToken: (nodes at: 19) to: result whitespaceTokens.
	result element: (nodes at: 20).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext5: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result stepToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result step: (nodes at: 15).
	result body: (nodes at: 16).
	result nextToken: (nodes at: 17).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext6: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result stepToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result step: (nodes at: 15).
	result body: (nodes at: 16).
	result nextToken: (nodes at: 17).
	result addToken: (nodes at: 18) to: result whitespaceTokens.
	result element: (nodes at: 19).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext7: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result stepToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result step: (nodes at: 15).
	result body: (nodes at: 16).
	result endLineNumber: (nodes at: 17).
	result addToken: (nodes at: 18) to: result whitespaceTokens.
	result nextToken: (nodes at: 19).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext8: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result stepToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result step: (nodes at: 15).
	result body: (nodes at: 16).
	result endLineNumber: (nodes at: 17).
	result addToken: (nodes at: 18) to: result whitespaceTokens.
	result nextToken: (nodes at: 19).
	result addToken: (nodes at: 20) to: result whitespaceTokens.
	result element: (nodes at: 21).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForGoSub1: nodes [
	| result |
	result := VBGoSubNode new.
	result gosubToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result destination: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForGoToStatement1: nodes [
	| result |
	result := VBGoToStatementNode new.
	result gotoToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result destination: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForGuidLiteral1: nodes [
	| result |
	result := VBGuidLiteralNode new.
	result leftBraceToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result hEX_INTEGERTokens.
	result addToken: (nodes at: 3) to: result minusTokens.
	result addTokens: (nodes at: 4) to: result hEX_INTEGERTokens.
	result addToken: (nodes at: 5) to: result minusTokens.
	result addTokens: (nodes at: 6) to: result hEX_INTEGERTokens.
	result addToken: (nodes at: 7) to: result minusTokens.
	result addTokens: (nodes at: 8) to: result hEX_INTEGERTokens.
	result addToken: (nodes at: 9) to: result minusTokens.
	result addTokens: (nodes at: 10) to: result hEX_INTEGERTokens.
	result rightBraceToken: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForHashIdentifier1: nodes [
	| result |
	result := VBHashIdentifierNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse1: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result thenToken: (nodes at: 5).
	result
		ifTrue: (nodes at: 6).
	result addNodes: (nodes at: 7) to: result elseifs.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result addToken: (nodes at: 10) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse2: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result thenToken: (nodes at: 5).
	result
		ifTrue: (nodes at: 6).
	result addNodes: (nodes at: 7) to: result elseifs.
	result endLineNumber: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse3: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result thenToken: (nodes at: 5).
	result
		ifTrue: (nodes at: 6).
	result addNodes: (nodes at: 7) to: result elseifs.
	result else: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result addToken: (nodes at: 11) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse4: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result thenToken: (nodes at: 5).
	result
		ifTrue: (nodes at: 6).
	result addNodes: (nodes at: 7) to: result elseifs.
	result else: (nodes at: 8).
	result endLineNumber: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseOneLine1: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result thenToken: (nodes at: 5).
	result
		ifTrue: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseOneLine2: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result thenToken: (nodes at: 5).
	result
		ifTrue: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result elseToken: (nodes at: 8).
	result
		ifFalse: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseOneLine3: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result thenToken: (nodes at: 5).
	result
		ifTrue: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result elseColonToken: (nodes at: 8).
	result
		ifFalse: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseOneLine4: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result thenColonToken: (nodes at: 5).
	result
		ifTrue: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseOneLine5: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result thenColonToken: (nodes at: 5).
	result
		ifTrue: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result elseToken: (nodes at: 8).
	result
		ifFalse: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseOneLine6: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result thenColonToken: (nodes at: 5).
	result
		ifTrue: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result elseColonToken: (nodes at: 8).
	result
		ifFalse: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForImplements1: nodes [
	| result |
	result := VBImplementsNode new.
	result implementsToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result interface: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForImplicitParenthesesLessCall1: nodes [
	| result |
	result := VBImplicitParenthesesLessCallNode new.
	result selector: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result arguments: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForImplicitParenthesesLessCall2: nodes [
	| result |
	result := VBImplicitParenthesesLessCallNode new.
	result selector: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForInfinityLoop1: nodes [
	| result |
	result := VBInfinityLoopNode new.
	result doToken: (nodes at: 1).
	result loopToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForInfinityLoop2: nodes [
	| result |
	result := VBInfinityLoopNode new.
	result doToken: (nodes at: 1).
	result endLineNumber: (nodes at: 2).
	result whitespaceToken: (nodes at: 3).
	result loopToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForInfinityLoop3: nodes [
	| result |
	result := VBInfinityLoopNode new.
	result doToken: (nodes at: 1).
	result body: (nodes at: 2).
	result loopToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForInfinityLoop4: nodes [
	| result |
	result := VBInfinityLoopNode new.
	result doToken: (nodes at: 1).
	result body: (nodes at: 2).
	result endLineNumber: (nodes at: 3).
	result whitespaceToken: (nodes at: 4).
	result loopToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIntegerLiteral1: nodes [
	| result |
	result := VBIntegerLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForInterval1: nodes [
	| result |
	result := VBIntervalNode new.
	result from: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result toToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result to: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabel1: nodes [
	| result |
	result := VBLabelNode new.
	result label: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabelTag1: nodes [
	| result |
	result := VBLabelTagNode new.
	result name: (nodes at: 1).
	result colonToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLineInputClause5: nodes [
	| result |
	result := VBLineInputClauseNode new.
	result lineToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result iNPUTToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result fileNumber: (nodes at: 5).
	result commaToken: (nodes at: 6).
	result value: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLineInputClause6: nodes [
	| result |
	result := VBLineInputClauseNode new.
	result lineToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result iNPUTToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result fileNumber: (nodes at: 5).
	result commaToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result value: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLineInputClause7: nodes [
	| result |
	result := VBLineInputClauseNode new.
	result lineToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result iNPUTToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result fileNumber: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result commaToken: (nodes at: 7).
	result value: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLineInputClause8: nodes [
	| result |
	result := VBLineInputClauseNode new.
	result lineToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result iNPUTToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result fileNumber: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result commaToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result value: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForMemberAccess1: nodes [
	| result |
	result := VBMemberAccessNode new.
	result periodToken: (nodes at: 1).
	result member: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForMemberAccess2: nodes [
	| result |
	result := VBMemberAccessNode new.
	result receiver: (nodes at: 1).
	result periodToken: (nodes at: 2).
	result member: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleConstant1: nodes [
	| result |
	result := VBModuleConstantNode new.
	result constToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result constant: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleConstant2: nodes [
	| result |
	result := VBModuleConstantNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result constToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result constant: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleConstants1: nodes [
	| result |
	result := VBModuleMultipleConstantsNode new.
	result constToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result constants: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleConstants2: nodes [
	| result |
	result := VBModuleMultipleConstantsNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result constToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result constants: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleProperties1: nodes [
	| result |
	result := VBModuleMultiplePropertiesNode new.
	result visibility: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result variables: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleProperty1: nodes [
	| result |
	result := VBModulePropertyNode new.
	result visibility: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result variable: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet10: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result modifier: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result propertyTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result getToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result selector: (nodes at: 9).
	result parameters: (nodes at: 10).
	result block: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result addToken: (nodes at: 14) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet11: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result modifier: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result propertyTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result getToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result selector: (nodes at: 9).
	result parameters: (nodes at: 10).
	result type: (nodes at: 11).
	result block: (nodes at: 12).
	result endToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result addToken: (nodes at: 15) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet12: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result modifier: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result propertyTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result getToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result selector: (nodes at: 9).
	result parameters: (nodes at: 10).
	result type: (nodes at: 11).
	result _size: (nodes at: 12).
	result block: (nodes at: 13).
	result endToken: (nodes at: 14).
	result addToken: (nodes at: 15) to: result whitespaceTokens.
	result addToken: (nodes at: 16) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet1: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result getToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet2: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result getToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result type: (nodes at: 7).
	result block: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result addToken: (nodes at: 11) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet3: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result getToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result type: (nodes at: 7).
	result _size: (nodes at: 8).
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet4: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result propertyTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result getToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result parameters: (nodes at: 8).
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet5: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result propertyTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result getToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result parameters: (nodes at: 8).
	result type: (nodes at: 9).
	result block: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result addToken: (nodes at: 13) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet6: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result propertyTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result getToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result parameters: (nodes at: 8).
	result type: (nodes at: 9).
	result _size: (nodes at: 10).
	result block: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result addToken: (nodes at: 14) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet7: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result propertyTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result getToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result parameters: (nodes at: 8).
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet8: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result propertyTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result getToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result parameters: (nodes at: 8).
	result type: (nodes at: 9).
	result block: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result addToken: (nodes at: 13) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet9: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result propertyTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result getToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result parameters: (nodes at: 8).
	result type: (nodes at: 9).
	result _size: (nodes at: 10).
	result block: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result addToken: (nodes at: 14) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet1: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result letToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet2: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result propertyTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result letToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result parameters: (nodes at: 8).
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet3: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result propertyTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result letToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result parameters: (nodes at: 8).
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet4: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result modifier: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result propertyTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result letToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result selector: (nodes at: 9).
	result parameters: (nodes at: 10).
	result block: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result addToken: (nodes at: 14) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet1: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result setToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet2: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result propertyTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result setToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result parameters: (nodes at: 8).
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet3: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result propertyTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result setToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result parameters: (nodes at: 8).
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet4: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result modifier: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result propertyTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result setToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result selector: (nodes at: 9).
	result parameters: (nodes at: 10).
	result block: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result addToken: (nodes at: 14) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForNegatedOperation2: nodes [
	| result |
	result := VBNegatedOperationNode new.
	result minusToken: (nodes at: 1).
	result value: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForNewClause1: nodes [
	| result |
	result := VBNewClauseNode new.
	result nEWToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result typeName: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForNotOperation2: nodes [
	| result |
	result := VBNotOperationNode new.
	result notToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForNull1: nodes [
	| result |
	result := VBNullNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOnErrorGoTo1: nodes [
	| result |
	result := VBOnErrorGoToNode new.
	result onToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eRRORToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result to: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOnErrorResumeNext1: nodes [
	| result |
	result := VBOnErrorResumeNextNode new.
	result onToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eRRORToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result resumeToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result nextToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOnExpressionGo1: nodes [
	| result |
	result := VBOnExpressionGoNode new.
	result onToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result integerExpression: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result to: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOneLineBlock10: nodes [
	| result |
	result := VBBlockNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result addObject: (nodes at: 2) to: result statements.
	result addTokens: ((nodes at: 3) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 3) at: 2) to: result statements.
	result addTokens: ((nodes at: 3) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOneLineBlock11: nodes [
	| result |
	result := VBBlockNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result addObject: (nodes at: 2) to: result statements.
	result addTokens: ((nodes at: 3) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 3) at: 2) to: result statements.
	result addTokens: ((nodes at: 3) at: 3) to: result whitespaceTokens.
	result addToken: (nodes at: 4) to: result colonTokens.
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOneLineBlock12: nodes [
	| result |
	result := VBBlockNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result addObject: (nodes at: 2) to: result statements.
	result addTokens: ((nodes at: 3) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 3) at: 2) to: result statements.
	result addTokens: ((nodes at: 3) at: 3) to: result whitespaceTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result colonTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOneLineBlock1: nodes [
	| result |
	result := VBBlockNode new.
	result addTokens: ((nodes at: 1) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 1) at: 2) to: result statements.
	result addTokens: ((nodes at: 1) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOneLineBlock2: nodes [
	| result |
	result := VBBlockNode new.
	result addTokens: ((nodes at: 1) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 1) at: 2) to: result statements.
	result addTokens: ((nodes at: 1) at: 3) to: result whitespaceTokens.
	result addToken: (nodes at: 2) to: result colonTokens.
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOneLineBlock3: nodes [
	| result |
	result := VBBlockNode new.
	result addTokens: ((nodes at: 1) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 1) at: 2) to: result statements.
	result addTokens: ((nodes at: 1) at: 3) to: result whitespaceTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result colonTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOneLineBlock4: nodes [
	| result |
	result := VBBlockNode new.
	result addObject: (nodes at: 1) to: result statements.
	result addTokens: ((nodes at: 2) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 2) at: 2) to: result statements.
	result addTokens: ((nodes at: 2) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOneLineBlock5: nodes [
	| result |
	result := VBBlockNode new.
	result addObject: (nodes at: 1) to: result statements.
	result addTokens: ((nodes at: 2) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 2) at: 2) to: result statements.
	result addTokens: ((nodes at: 2) at: 3) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result colonTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOneLineBlock6: nodes [
	| result |
	result := VBBlockNode new.
	result addObject: (nodes at: 1) to: result statements.
	result addTokens: ((nodes at: 2) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 2) at: 2) to: result statements.
	result addTokens: ((nodes at: 2) at: 3) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result addToken: (nodes at: 4) to: result colonTokens.
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOneLineBlock7: nodes [
	| result |
	result := VBBlockNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result addTokens: ((nodes at: 2) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 2) at: 2) to: result statements.
	result addTokens: ((nodes at: 2) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOneLineBlock8: nodes [
	| result |
	result := VBBlockNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result addTokens: ((nodes at: 2) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 2) at: 2) to: result statements.
	result addTokens: ((nodes at: 2) at: 3) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result colonTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOneLineBlock9: nodes [
	| result |
	result := VBBlockNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result addTokens: ((nodes at: 2) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 2) at: 2) to: result statements.
	result addTokens: ((nodes at: 2) at: 3) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result addToken: (nodes at: 4) to: result colonTokens.
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause1: nodes [
	| result |
	result := VBOpenClauseNode new.
	result oPENToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result filepath: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result fORToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result mode: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result aSToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result fileDescriptor: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause2: nodes [
	| result |
	result := VBOpenClauseNode new.
	result oPENToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result filepath: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result fORToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result mode: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result aSToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result fileDescriptor: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result lenToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result equalToken: (nodes at: 15).
	result addToken: (nodes at: 16) to: result whitespaceTokens.
	result length: (nodes at: 17).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause3: nodes [
	| result |
	result := VBOpenClauseNode new.
	result oPENToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result filepath: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result fORToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result mode: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result lock: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result aSToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result fileDescriptor: (nodes at: 13).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause4: nodes [
	| result |
	result := VBOpenClauseNode new.
	result oPENToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result filepath: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result fORToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result mode: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result lock: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result aSToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result fileDescriptor: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result lenToken: (nodes at: 15).
	result addToken: (nodes at: 16) to: result whitespaceTokens.
	result equalToken: (nodes at: 17).
	result addToken: (nodes at: 18) to: result whitespaceTokens.
	result length: (nodes at: 19).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause5: nodes [
	| result |
	result := VBOpenClauseNode new.
	result oPENToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result filepath: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result fORToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result mode: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result access: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result aSToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result fileDescriptor: (nodes at: 13).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause6: nodes [
	| result |
	result := VBOpenClauseNode new.
	result oPENToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result filepath: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result fORToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result mode: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result access: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result aSToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result fileDescriptor: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result lenToken: (nodes at: 15).
	result addToken: (nodes at: 16) to: result whitespaceTokens.
	result equalToken: (nodes at: 17).
	result addToken: (nodes at: 18) to: result whitespaceTokens.
	result length: (nodes at: 19).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause7: nodes [
	| result |
	result := VBOpenClauseNode new.
	result oPENToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result filepath: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result fORToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result mode: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result access: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result lock: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result aSToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result fileDescriptor: (nodes at: 15).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause8: nodes [
	| result |
	result := VBOpenClauseNode new.
	result oPENToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result filepath: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result fORToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result mode: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result access: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result lock: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result aSToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result fileDescriptor: (nodes at: 15).
	result addToken: (nodes at: 16) to: result whitespaceTokens.
	result lenToken: (nodes at: 17).
	result addToken: (nodes at: 18) to: result whitespaceTokens.
	result equalToken: (nodes at: 19).
	result addToken: (nodes at: 20) to: result whitespaceTokens.
	result length: (nodes at: 21).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption1: nodes [
	| result |
	result := VBOptionValueNode new.
	result optionToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption2: nodes [
	| result |
	result := VBOptionCompareDatabaseNode new.
	result optionToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result compareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result databaseToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption3: nodes [
	| result |
	result := VBOptionCompareNode new.
	result optionToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result compareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result bINARYToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption4: nodes [
	| result |
	result := VBOptionCompareNode new.
	result optionToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result compareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result compare: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption5: nodes [
	| result |
	result := VBOptionExplicitNode new.
	result optionToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result explicitToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption6: nodes [
	| result |
	result := VBOptionPrivateModuleNode new.
	result optionToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result privateToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result moduleToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOptionBase1: nodes [
	| result |
	result := VBOptionBaseNode new.
	result optionToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result baseToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result value: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter10: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result name: (nodes at: 3).
	result _size: (nodes at: 4).
	result type: (nodes at: 5).
	result addTokens: ((nodes at: 6) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 6) at: 2).
	result default: ((nodes at: 6) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter11: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result paramarrayToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result name: (nodes at: 5).
	result type: (nodes at: 6).
	result addTokens: ((nodes at: 7) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 7) at: 2).
	result default: ((nodes at: 7) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter12: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result paramarrayToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result name: (nodes at: 5).
	result _size: (nodes at: 6).
	result type: (nodes at: 7).
	result addTokens: ((nodes at: 8) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 8) at: 2).
	result default: ((nodes at: 8) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter13: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result strategy: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result name: (nodes at: 5).
	result type: (nodes at: 6).
	result addTokens: ((nodes at: 7) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 7) at: 2).
	result default: ((nodes at: 7) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter14: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result strategy: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result name: (nodes at: 5).
	result _size: (nodes at: 6).
	result type: (nodes at: 7).
	result addTokens: ((nodes at: 8) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 8) at: 2).
	result default: ((nodes at: 8) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter15: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result strategy: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result paramarrayToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result name: (nodes at: 7).
	result type: (nodes at: 8).
	result addTokens: ((nodes at: 9) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 9) at: 2).
	result default: ((nodes at: 9) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter16: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result strategy: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result paramarrayToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result name: (nodes at: 7).
	result _size: (nodes at: 8).
	result type: (nodes at: 9).
	result addTokens: ((nodes at: 10) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 10) at: 2).
	result default: ((nodes at: 10) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter1: nodes [
	| result |
	result := VBParameterNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	result addTokens: ((nodes at: 3) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 3) at: 2).
	result default: ((nodes at: 3) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter2: nodes [
	| result |
	result := VBParameterNode new.
	result name: (nodes at: 1).
	result _size: (nodes at: 2).
	result type: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 4) at: 2).
	result default: ((nodes at: 4) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter3: nodes [
	| result |
	result := VBParameterNode new.
	result paramarrayToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result name: (nodes at: 3).
	result type: (nodes at: 4).
	result addTokens: ((nodes at: 5) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 5) at: 2).
	result default: ((nodes at: 5) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter4: nodes [
	| result |
	result := VBParameterNode new.
	result paramarrayToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result name: (nodes at: 3).
	result _size: (nodes at: 4).
	result type: (nodes at: 5).
	result addTokens: ((nodes at: 6) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 6) at: 2).
	result default: ((nodes at: 6) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter5: nodes [
	| result |
	result := VBParameterNode new.
	result strategy: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result name: (nodes at: 3).
	result type: (nodes at: 4).
	result addTokens: ((nodes at: 5) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 5) at: 2).
	result default: ((nodes at: 5) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter6: nodes [
	| result |
	result := VBParameterNode new.
	result strategy: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result name: (nodes at: 3).
	result _size: (nodes at: 4).
	result type: (nodes at: 5).
	result addTokens: ((nodes at: 6) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 6) at: 2).
	result default: ((nodes at: 6) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter7: nodes [
	| result |
	result := VBParameterNode new.
	result strategy: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result paramarrayToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result name: (nodes at: 5).
	result type: (nodes at: 6).
	result addTokens: ((nodes at: 7) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 7) at: 2).
	result default: ((nodes at: 7) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter8: nodes [
	| result |
	result := VBParameterNode new.
	result strategy: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result paramarrayToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result name: (nodes at: 5).
	result _size: (nodes at: 6).
	result type: (nodes at: 7).
	result addTokens: ((nodes at: 8) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 8) at: 2).
	result default: ((nodes at: 8) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter9: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result name: (nodes at: 3).
	result type: (nodes at: 4).
	result addTokens: ((nodes at: 5) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 5) at: 2).
	result default: ((nodes at: 5) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameterList1: nodes [
	| result |
	result := VBParameterListNode new.
	result leftParenToken: (nodes at: 1).
	result rightParenToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameterList2: nodes [
	| result |
	result := VBParameterListNode new.
	result leftParenToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result rightParenToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameterList3: nodes [
	| result |
	result := VBParameterListNode new.
	result leftParenToken: (nodes at: 1).
	result addNode: (nodes at: 2) to: result parameters.
	result addTokens: ((nodes at: 3) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 3) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 3) at: 3) to: result parameters.
	result rightParenToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameterList4: nodes [
	| result |
	result := VBParameterListNode new.
	result leftParenToken: (nodes at: 1).
	result addNode: (nodes at: 2) to: result parameters.
	result addTokens: ((nodes at: 3) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 3) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 3) at: 3) to: result parameters.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result rightParenToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameterPassingStrategy2: nodes [
	| result |
	result := VBParameterPassingStrategyNode new.
	result byrefToken: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParentheseesExpression1: nodes [
	| result |
	result := VBParentheseesExpressionNode new.
	result leftParenToken: (nodes at: 1).
	result expression: (nodes at: 2).
	result rightParenToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParentheseesExpression2: nodes [
	| result |
	result := VBParentheseesExpressionNode new.
	result leftParenToken: (nodes at: 1).
	result expression: (nodes at: 2).
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result rightParenToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParentheseesExpression3: nodes [
	| result |
	result := VBParentheseesExpressionNode new.
	result leftParenToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result expression: (nodes at: 3).
	result rightParenToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParentheseesExpression4: nodes [
	| result |
	result := VBParentheseesExpressionNode new.
	result leftParenToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result expression: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result rightParenToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPositiveOperation2: nodes [
	| result |
	result := VBPositiveOperationNode new.
	result plusToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPrintFileClause10: nodes [
	| result |
	result := VBPrintIntoFileClauseNode new.
	result pRINTToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result fileNumber: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result commaToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result addTokens: ((nodes at: 7) at: 1) to: result semicolonTokens.
	result addNodes: ((nodes at: 7) at: 2) to: result values.
	result addTokens: ((nodes at: 7) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPrintFileClause11: nodes [
	| result |
	result := VBPrintIntoFileClauseNode new.
	result pRINTToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result fileNumber: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result commaToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result addNode: (nodes at: 7) to: result values.
	result addTokens: ((nodes at: 8) at: 1) to: result semicolonTokens.
	result addNodes: ((nodes at: 8) at: 2) to: result values.
	result addTokens: ((nodes at: 8) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPrintFileClause12: nodes [
	| result |
	result := VBPrintIntoFileClauseNode new.
	result pRINTToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result fileNumber: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result commaToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result addNode: (nodes at: 7) to: result values.
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result addTokens: ((nodes at: 9) at: 1) to: result semicolonTokens.
	result addNodes: ((nodes at: 9) at: 2) to: result values.
	result addTokens: ((nodes at: 9) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPrintFileClause1: nodes [
	| result |
	result := VBPrintIntoFileClauseNode new.
	result pRINTToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result fileNumber: (nodes at: 3).
	result commaToken: (nodes at: 4).
	result addTokens: ((nodes at: 5) at: 1) to: result semicolonTokens.
	result addNodes: ((nodes at: 5) at: 2) to: result values.
	result addTokens: ((nodes at: 5) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPrintFileClause2: nodes [
	| result |
	result := VBPrintIntoFileClauseNode new.
	result pRINTToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result fileNumber: (nodes at: 3).
	result commaToken: (nodes at: 4).
	result addNode: (nodes at: 5) to: result values.
	result addTokens: ((nodes at: 6) at: 1) to: result semicolonTokens.
	result addNodes: ((nodes at: 6) at: 2) to: result values.
	result addTokens: ((nodes at: 6) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPrintFileClause3: nodes [
	| result |
	result := VBPrintIntoFileClauseNode new.
	result pRINTToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result fileNumber: (nodes at: 3).
	result commaToken: (nodes at: 4).
	result addNode: (nodes at: 5) to: result values.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result addTokens: ((nodes at: 7) at: 1) to: result semicolonTokens.
	result addNodes: ((nodes at: 7) at: 2) to: result values.
	result addTokens: ((nodes at: 7) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPrintFileClause4: nodes [
	| result |
	result := VBPrintIntoFileClauseNode new.
	result pRINTToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result fileNumber: (nodes at: 3).
	result commaToken: (nodes at: 4).
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result addTokens: ((nodes at: 6) at: 1) to: result semicolonTokens.
	result addNodes: ((nodes at: 6) at: 2) to: result values.
	result addTokens: ((nodes at: 6) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPrintFileClause5: nodes [
	| result |
	result := VBPrintIntoFileClauseNode new.
	result pRINTToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result fileNumber: (nodes at: 3).
	result commaToken: (nodes at: 4).
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result addNode: (nodes at: 6) to: result values.
	result addTokens: ((nodes at: 7) at: 1) to: result semicolonTokens.
	result addNodes: ((nodes at: 7) at: 2) to: result values.
	result addTokens: ((nodes at: 7) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPrintFileClause6: nodes [
	| result |
	result := VBPrintIntoFileClauseNode new.
	result pRINTToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result fileNumber: (nodes at: 3).
	result commaToken: (nodes at: 4).
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result addNode: (nodes at: 6) to: result values.
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result addTokens: ((nodes at: 8) at: 1) to: result semicolonTokens.
	result addNodes: ((nodes at: 8) at: 2) to: result values.
	result addTokens: ((nodes at: 8) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPrintFileClause7: nodes [
	| result |
	result := VBPrintIntoFileClauseNode new.
	result pRINTToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result fileNumber: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result commaToken: (nodes at: 5).
	result addTokens: ((nodes at: 6) at: 1) to: result semicolonTokens.
	result addNodes: ((nodes at: 6) at: 2) to: result values.
	result addTokens: ((nodes at: 6) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPrintFileClause8: nodes [
	| result |
	result := VBPrintIntoFileClauseNode new.
	result pRINTToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result fileNumber: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result commaToken: (nodes at: 5).
	result addNode: (nodes at: 6) to: result values.
	result addTokens: ((nodes at: 7) at: 1) to: result semicolonTokens.
	result addNodes: ((nodes at: 7) at: 2) to: result values.
	result addTokens: ((nodes at: 7) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPrintFileClause9: nodes [
	| result |
	result := VBPrintIntoFileClauseNode new.
	result pRINTToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result fileNumber: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result commaToken: (nodes at: 5).
	result addNode: (nodes at: 6) to: result values.
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result addTokens: ((nodes at: 8) at: 1) to: result semicolonTokens.
	result addNodes: ((nodes at: 8) at: 2) to: result values.
	result addTokens: ((nodes at: 8) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForProcedureCallOrArrayAccess1: nodes [
	| result |
	result := VBProcedureCallOrArrayAccessNode new.
	result selector: (nodes at: 1).
	result leftParenToken: (nodes at: 2).
	result arguments: (nodes at: 3).
	result rightParenToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForProcedureCallOrArrayAccess2: nodes [
	| result |
	result := VBProcedureCallOrArrayAccessNode new.
	result selector: (nodes at: 1).
	result leftParenToken: (nodes at: 2).
	result arguments: (nodes at: 3).
	result whitespaceToken: (nodes at: 4).
	result rightParenToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForRaiseError1: nodes [
	| result |
	result := VBRaiseErrorNode new.
	result eRRORToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result errorCode: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForRaiseEvent1: nodes [
	| result |
	result := VBRaiseEventNode new.
	result raiseEventToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result selector: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForReDefineVariable1: nodes [
	| result |
	result := VBReDimVariableNode new.
	result redimToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result variable: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForReDefineVariable2: nodes [
	| result |
	result := VBReDimVariableNode new.
	result redimToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result preserveToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result variable: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForReDefineVariables1: nodes [
	| result |
	result := VBReDimMultipleVariablesNode new.
	result redimToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result variables: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForReDefineVariables2: nodes [
	| result |
	result := VBReDimMultipleVariablesNode new.
	result redimToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result preserveToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result variables: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForRename1: nodes [
	| result |
	result := VBRenameNode new.
	result nameToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result oldName: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result aSToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result newName: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForResumeEmpty1: nodes [
	| result |
	result := VBResumeEmptyNode new.
	result resumeToken: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForResumeLabel1: nodes [
	| result |
	result := VBResumeLabelNode new.
	result resumeToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result destination: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForResumeNext1: nodes [
	| result |
	result := VBResumeNextNode new.
	result resumeToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result nextToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForReturn1: nodes [
	| result |
	result := VBReturnNode new.
	result returnToken: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSelect1: nodes [
	| result |
	result := VBSelectNode new.
	result addToken: (nodes at: 1) to: result selectTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result caseToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result expression: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addNodes: (nodes at: 7) to: result cases.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result addToken: (nodes at: 10) to: result selectTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSelect2: nodes [
	| result |
	result := VBSelectNode new.
	result addToken: (nodes at: 1) to: result selectTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result caseToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result expression: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addNodes: (nodes at: 7) to: result cases.
	result endLineNumber: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result selectTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSetUpAssignation1: nodes [
	| result |
	result := VBSetUpAssignationNode new.
	result identifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result equalToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result value: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSimpleIdentifier1: nodes [
	| result |
	result := VBSimpleIdentifierNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSquareBracketIdentifier1: nodes [
	| result |
	result := VBSquareBracketIdentifierNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForStaticVariable1: nodes [
	| result |
	result := VBStaticVariableNode new.
	result staticToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result variable: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForStaticVariables1: nodes [
	| result |
	result := VBStaticMultipleVariablesNode new.
	result staticToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result variables: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForStringLiteral1: nodes [
	| result |
	result := VBStringLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeEntry1: nodes [
	| result |
	result := VBTypeEntryNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeEntry2: nodes [
	| result |
	result := VBTypeEntryNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	result timesToken: (nodes at: 3).
	result _size: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeEntry3: nodes [
	| result |
	result := VBTypeEntryNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	result timesToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result _size: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeEntry4: nodes [
	| result |
	result := VBTypeEntryNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result timesToken: (nodes at: 4).
	result _size: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeEntry5: nodes [
	| result |
	result := VBTypeEntryNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result timesToken: (nodes at: 4).
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result _size: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeOf1: nodes [
	| result |
	result := VBTypeOfNode new.
	result typeOfToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result argument: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result iSToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result type: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeOf2: nodes [
	| result |
	result := VBTypeOfNode new.
	result typeOfToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result argument: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result isNotToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result type: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeSize1: nodes [
	| result |
	result := VBTypeSizeNode new.
	result leftParenToken: (nodes at: 1).
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 2) at: 2) to: result sizes.
	result addTokens: ((nodes at: 2) at: 3) to: result whitespaceTokens.
	result rightParenToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeSize2: nodes [
	| result |
	result := VBTypeSizeNode new.
	result leftParenToken: (nodes at: 1).
	result addNode: (nodes at: 2) to: result sizes.
	result addTokens: ((nodes at: 3) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 3) at: 2) to: result sizes.
	result addTokens: ((nodes at: 3) at: 3) to: result whitespaceTokens.
	result rightParenToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing1: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result aSToken: (nodes at: 2).
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result nEWToken: (nodes at: 4).
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result type: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing10: nodes [
	| result |
	result := VBTypedThingNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result aSToken: (nodes at: 2).
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result type: (nodes at: 4).
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result timesToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result fixedSize: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing1: nodes [
	| result |
	result := VBTypedThingNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing2: nodes [
	| result |
	result := VBTypedThingNode new.
	result timesToken: (nodes at: 1).
	result fixedSize: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing3: nodes [
	| result |
	result := VBTypedThingNode new.
	result timesToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result fixedSize: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing4: nodes [
	| result |
	result := VBTypedThingNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result timesToken: (nodes at: 2).
	result fixedSize: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing5: nodes [
	| result |
	result := VBTypedThingNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result timesToken: (nodes at: 2).
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result fixedSize: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing6: nodes [
	| result |
	result := VBTypedThingNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result aSToken: (nodes at: 2).
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result type: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing7: nodes [
	| result |
	result := VBTypedThingNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result aSToken: (nodes at: 2).
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result type: (nodes at: 4).
	result timesToken: (nodes at: 5).
	result fixedSize: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing8: nodes [
	| result |
	result := VBTypedThingNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result aSToken: (nodes at: 2).
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result type: (nodes at: 4).
	result timesToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result fixedSize: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing9: nodes [
	| result |
	result := VBTypedThingNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result aSToken: (nodes at: 2).
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result type: (nodes at: 4).
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result timesToken: (nodes at: 6).
	result fixedSize: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForUntilTrue1: nodes [
	| result |
	result := VBUntilTrueNode new.
	result doToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result untilToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result condition: (nodes at: 5).
	result body: (nodes at: 6).
	result loopToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForUntilTrue2: nodes [
	| result |
	result := VBUntilTrueNode new.
	result doToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result untilToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result condition: (nodes at: 5).
	result body: (nodes at: 6).
	result endLineNumber: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result loopToken: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable1: nodes [
	| result |
	result := VBVariableNode new.
	result name: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable2: nodes [
	| result |
	result := VBVariableNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable3: nodes [
	| result |
	result := VBVariableNode new.
	result name: (nodes at: 1).
	result _size: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable4: nodes [
	| result |
	result := VBVariableNode new.
	result name: (nodes at: 1).
	result _size: (nodes at: 2).
	result type: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable5: nodes [
	| result |
	result := VBVariableNode new.
	result withEventsToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result name: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable6: nodes [
	| result |
	result := VBVariableNode new.
	result withEventsToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result name: (nodes at: 3).
	result type: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable7: nodes [
	| result |
	result := VBVariableNode new.
	result withEventsToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result name: (nodes at: 3).
	result _size: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable8: nodes [
	| result |
	result := VBVariableNode new.
	result withEventsToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result name: (nodes at: 3).
	result _size: (nodes at: 4).
	result type: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariableList1: nodes [
	| result |
	result := VBVariableListNode new.
	result addNode: (nodes at: 1) to: result variables.
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 2) at: 2) to: result variables.
	result addTokens: ((nodes at: 2) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileTrue1: nodes [
	| result |
	result := VBWhileTrueNode new.
	result doToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result whileToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result condition: (nodes at: 5).
	result loopToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileTrue2: nodes [
	| result |
	result := VBWhileTrueNode new.
	result doToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result whileToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result condition: (nodes at: 5).
	result endLineNumber: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result loopToken: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileTrue3: nodes [
	| result |
	result := VBWhileTrueNode new.
	result doToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result whileToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result condition: (nodes at: 5).
	result body: (nodes at: 6).
	result loopToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileTrue4: nodes [
	| result |
	result := VBWhileTrueNode new.
	result doToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result whileToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result condition: (nodes at: 5).
	result body: (nodes at: 6).
	result endLineNumber: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result loopToken: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileWend1: nodes [
	| result |
	result := VBWhileWendNode new.
	result whileToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result wendToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileWend2: nodes [
	| result |
	result := VBWhileWendNode new.
	result whileToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result endLineNumber: (nodes at: 4).
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result wendToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileWend3: nodes [
	| result |
	result := VBWhileWendNode new.
	result whileToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result body: (nodes at: 4).
	result wendToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileWend4: nodes [
	| result |
	result := VBWhileWendNode new.
	result whileToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result body: (nodes at: 4).
	result endLineNumber: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result wendToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWith1: nodes [
	| result |
	result := VBWithNode new.
	result addToken: (nodes at: 1) to: result withTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result with: (nodes at: 3).
	result block: (nodes at: 4).
	result endToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result addToken: (nodes at: 7) to: result withTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWith2: nodes [
	| result |
	result := VBWithNode new.
	result addToken: (nodes at: 1) to: result withTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result with: (nodes at: 3).
	result block: (nodes at: 4).
	result endLineNumber: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result addToken: (nodes at: 9) to: result withTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument___________________whitespace___1: nodes [
	| result |
	result := Array new: 4.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument___________________whitespace___2: nodes [
	| result |
	result := Array new: 4.
	result at: 1 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument___________________whitespace___3: nodes [
	| result |
	result := Array new: 4.
	result at: 3 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument___________________whitespace___4: nodes [
	| result |
	result := Array new: 4.
	result at: 3 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument___________________whitespace___5: nodes [
	| result |
	result := Array new: 4.
	result at: 4 put: (nodes at: 1).
	result at: 1 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument___________________whitespace___6: nodes [
	| result |
	result := Array new: 4.
	result at: 4 put: (nodes at: 1).
	result at: 1 put: (nodes at: 2).
	result at: 2 put: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument___________________whitespace___7: nodes [
	| result |
	result := Array new: 4.
	result at: 4 put: (nodes at: 1).
	result at: 3 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument___________________whitespace___8: nodes [
	| result |
	result := Array new: 4.
	result at: 4 put: (nodes at: 1).
	result at: 3 put: (nodes at: 2).
	result at: 2 put: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument___________________whitespace____1: nodes [
	| result |
	result := Array new: 4.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument___________________whitespace____2: nodes [
	| result |
	result := nodes at: 1.
	self add: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	self add: ((nodes at: 2) at: 3) to: (result at: 3).
	self add: ((nodes at: 2) at: 4) to: (result at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_AsType__type__TypeSize__size_____1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_AsType__type__TypeSize__size______1: nodes [
	| result |
	result := Array new: 2.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_AsType__type__TypeSize__size______2: nodes [
	| result |
	result := nodes at: 1.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_HEX_INTEGER___1: nodes [
	| result |
	result := OrderedCollection new: 2.
	self add: (nodes at: 1) to: result.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_____UsableKeywords__member__1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_____UsableKeywords__member___2: nodes [
	| result |
	result := nodes at: 1.
	self add: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_______________whitespace___Argument__argument_____3: nodes [
	| result |
	result := Array new: 4.
	result at: 1 put: (nodes at: 1).
	result at: 3 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_______________whitespace___Argument__argument_____4: nodes [
	| result |
	result := Array new: 4.
	result at: 1 put: (nodes at: 1).
	result at: 3 put: (nodes at: 2).
	result at: 2 put: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_______________whitespace___Argument__argument_____6: nodes [
	| result |
	result := Array new: 4.
	result at: 4 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_______eol____whitespace______whitespace__________IntegerLiteral__lineNumber___whitespace_________Statement__statement________1: nodes [
	| result |
	result := Array new: 5.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	self addAll: ((nodes at: 1) at: 1) to: (result at: 1).
	self addAll: ((nodes at: 1) at: 2) to: (result at: 2).
	self addAll: ((nodes at: 1) at: 3) to: (result at: 3).
	result at: 4 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_______eol____whitespace______whitespace__________IntegerLiteral__lineNumber___whitespace_________Statement__statement________2: nodes [
	| result |
	result := Array new: 5.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	self addAll: ((nodes at: 1) at: 1) to: (result at: 1).
	self addAll: ((nodes at: 1) at: 2) to: (result at: 2).
	self addAll: ((nodes at: 1) at: 3) to: (result at: 3).
	result at: 5 put: (nodes at: 2).
	self add: (nodes at: 3) to: (result at: 3).
	result at: 4 put: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_______eol____whitespace______whitespace__________IntegerLiteral__lineNumber___whitespace_________Statement__statement_________1: nodes [
	| result |
	result := Array new: 5.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_______eol____whitespace______whitespace__________IntegerLiteral__lineNumber___whitespace_________Statement__statement_________2: nodes [
	| result |
	result := nodes at: 1.
	self addAll: ((nodes at: 2) at: 1) to: (result at: 4).
	self addAll: ((nodes at: 2) at: 2) to: (result at: 5).
	self addAll: ((nodes at: 2) at: 3) to: (result at: 3).
	self add: ((nodes at: 2) at: 4) to: (result at: 1).
	self add: ((nodes at: 2) at: 5) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______whitespace__Parameter__parameter__1: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	result at: 3 put: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______whitespace___Expression__value__1: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______whitespace___Expression__value__2: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (nodes at: 1).
	result at: 3 put: (nodes at: 2).
	result at: 2 put: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______whitespace___Expression__value___2: nodes [
	| result |
	result := nodes at: 1.
	self add: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	self add: ((nodes at: 2) at: 3) to: (result at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor___eol___SetUpAssignation__setting___2: nodes [
	| result |
	result := nodes at: 1.
	self addAll: ((nodes at: 2) at: 1) to: (result at: 2).
	self add: ((nodes at: 2) at: 2) to: (result at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor___whitespace_________whitespace____Constant__constant___1: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (OrderedCollection new: 2).
	result at: 1 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor___whitespace_________whitespace____Constant__constant___2: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (OrderedCollection new: 2).
	result at: 1 put: (nodes at: 1).
	self add: (nodes at: 2) to: (result at: 3).
	result at: 2 put: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor___whitespace_________whitespace____Constant__constant___3: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (OrderedCollection new: 2).
	self add: (nodes at: 1) to: (result at: 3).
	result at: 1 put: (nodes at: 2).
	result at: 2 put: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor___whitespace_________whitespace____Constant__constant___4: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (OrderedCollection new: 2).
	self add: (nodes at: 1) to: (result at: 3).
	result at: 1 put: (nodes at: 2).
	self add: (nodes at: 3) to: (result at: 3).
	result at: 2 put: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor___whitespace_________whitespace____Constant__constant____1: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	self add: ((nodes at: 1) at: 1) to: (result at: 1).
	self add: ((nodes at: 1) at: 2) to: (result at: 2).
	self addAll: ((nodes at: 1) at: 3) to: (result at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor___whitespace_________whitespace____Constant__constant____2: nodes [
	| result |
	result := nodes at: 1.
	self add: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	self addAll: ((nodes at: 2) at: 3) to: (result at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol___ModuleStatement__element___1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (OrderedCollection new: 2).
	self addAll: (nodes at: 1) to: (result at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol___ModuleStatement__element____1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol___ModuleStatement__element____2: nodes [
	| result |
	result := nodes at: 1.
	self addAll: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol____whitespace______whitespace___1: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (OrderedCollection new: 2).
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol____whitespace______whitespace___2: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (OrderedCollection new: 2).
	result at: 2 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol____whitespace______whitespace___3: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (OrderedCollection new: 2).
	result at: 2 put: (nodes at: 1).
	self add: (nodes at: 2) to: (result at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol____whitespace______whitespace___4: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (OrderedCollection new: 2).
	self add: (nodes at: 1) to: (result at: 3).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol____whitespace______whitespace___5: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (OrderedCollection new: 2).
	self add: (nodes at: 1) to: (result at: 3).
	result at: 2 put: (nodes at: 2).
	self add: (nodes at: 3) to: (result at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__whitespace_______whitespace__Destination__label___1: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__whitespace_______whitespace__Expression__default__1: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (OrderedCollection new: 2).
	self add: (nodes at: 1) to: (result at: 1).
	result at: 2 put: (nodes at: 2).
	self add: (nodes at: 3) to: (result at: 1).
	result at: 3 put: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__whitespace_______whitespace__Expression__default___1: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (OrderedCollection new: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_eol__1: nodes [
	| result |
	result := OrderedCollection new: 2.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_eol__2: nodes [
	| result |
	result := nodes at: 1.
	self add: (nodes at: 2) to: result.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForheader1: nodes [
	| result |
	result := VBHeaderNode new.
	result versionToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result version: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForheader2: nodes [
	| result |
	result := VBHeaderNode new.
	result versionToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result version: (nodes at: 3).
	result classToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFormodule1: nodes [
	| result |
	result := VBModuleNode new.
	result addTokens: (nodes at: 1) to: result eolTokens.
	result addTokens: ((nodes at: 2) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 2) at: 2) to: result elements.
	result addTokens: (nodes at: 3) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFormodule2: nodes [
	| result |
	result := VBModuleNode new.
	result addTokens: (nodes at: 1) to: result eolTokens.
	result addNode: (nodes at: 2) to: result elements.
	result addTokens: ((nodes at: 3) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 3) at: 2) to: result elements.
	result addTokens: (nodes at: 4) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFormodule3: nodes [
	| result |
	result := VBModuleNode new.
	result addTokens: (nodes at: 1) to: result eolTokens.
	result header: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addTokens: ((nodes at: 4) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 4) at: 2) to: result elements.
	result addTokens: (nodes at: 5) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFormodule4: nodes [
	| result |
	result := VBModuleNode new.
	result addTokens: (nodes at: 1) to: result eolTokens.
	result header: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addNode: (nodes at: 4) to: result elements.
	result addTokens: ((nodes at: 5) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 5) at: 2) to: result elements.
	result addTokens: (nodes at: 6) to: result eolTokens.
	^ result
]
