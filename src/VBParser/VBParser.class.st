Class {
	#name : #VBParser,
	#superclass : #VBAbstractParser,
	#category : #'VBParser-ParsingCore'
}

{ #category : #generated }
VBParser class >> ambiguousTransitions [
^#(
#[ 0 10 0 37] 
#[ 0 10 2 109] 
#[ 0 10 2 113] 
#[ 0 10 2 117] 
#[ 0 10 2 121] 
#[ 0 10 2 125] 
#[ 0 10 2 129] 
#[ 0 10 2 133] 
#[ 0 10 2 137] 
#[ 0 10 2 141] 
#[ 0 10 2 145] 
#[ 0 10 2 149] 
#[ 0 10 2 153] 
#[ 0 10 2 157] 
#[ 0 10 2 161] 
#[ 0 10 0 61] 
#[ 0 10 0 73] 
#[ 0 10 2 165] 
#[ 0 10 0 89] 
#[ 0 10 2 169] 
#[ 0 10 0 97] 
#[ 0 10 0 101] 
#[ 0 10 0 105] 
#[ 0 10 0 109] 
#[ 0 10 0 113] 
#[ 0 10 2 173] 
#[ 0 10 0 117] 
#[ 0 10 0 125] 
#[ 0 10 0 129] 
#[ 0 10 0 137] 
#[ 0 10 2 177] 
#[ 0 10 0 141] 
#[ 0 10 0 145] 
#[ 0 10 2 181] 
#[ 0 10 0 161] 
#[ 0 10 2 185] 
#[ 0 10 2 189] 
#[ 0 10 2 193] 
#[ 0 10 0 181] 
#[ 0 10 2 197] 
#[ 0 10 0 185] 
#[ 0 10 0 189] 
#[ 0 10 2 201] 
#[ 0 10 2 205] 
#[ 0 10 2 209] 
#[ 0 10 0 213] 
#[ 0 10 0 217] 
#[ 0 10 3 61] 
#[ 0 10 2 213] 
#[ 0 10 0 237] 
#[ 0 10 0 241] 
#[ 0 10 3 65] 
#[ 0 30 3 149] 
#[ 0 54 3 177] 
#[ 0 74 0 78] 
#[ 0 82 3 221] 
#[ 0 94 3 237] 
#[ 0 102 0 106] 
#[ 0 130 0 138 0 142 4 13] 
#[ 1 14 1 18] 
#[ 1 122 1 126] 
#[ 1 182 1 186] 
#[ 1 218 1 222] 
#[ 1 226 1 230] 
#[ 1 234 4 65] 
#[ 1 242 1 246] 
#[ 2 62 3 245] 
#[ 0 142 4 101] 
#[ 0 114 4 121] 
#[ 0 37 2 178] 
#[ 0 61 2 178] 
#[ 2 178 5 97] 
#[ 2 165 2 178] 
#[ 0 97 2 178] 
#[ 2 178 5 109] 
#[ 0 109 2 178] 
#[ 2 178 5 117] 
#[ 0 141 2 178] 
#[ 0 161 2 178] 
#[ 2 178 2 185] 
#[ 2 178 2 189] 
#[ 2 178 2 201] 
#[ 0 213 2 178] 
#[ 0 221 2 178] 
#[ 2 178 2 213] 
#[ 0 237 2 178] 
#[ 0 241 2 178] 
#[ 2 182 5 233] 
#[ 2 206 4 41] 
#[ 0 10 0 221] 
#[ 0 130 3 54] 
#[ 0 134 3 54] 
#[ 3 54 7 161] 
#[ 3 58 7 165] 
#[ 1 14 3 114] 
#[ 1 18 3 114] 
#[ 1 218 7 169] 
#[ 1 226 3 118] 
#[ 1 230 3 118] 
#[ 1 242 3 122] 
#[ 1 246 3 122] 
#[ 0 26 3 134] 
#[ 0 42 3 146] 
#[ 0 50 3 154] 
#[ 3 202 7 189] 
#[ 3 222 4 41] 
#[ 0 142 3 230] 
#[ 0 142 3 230 7 225] 
#[ 3 234 7 241] 
#[ 3 242 8 25] 
#[ 3 246 8 33] 
#[ 3 250 3 254] 
#[ 0 142 3 54 3 230] 
#[ 0 142 3 54 3 230 8 105] 
#[ 4 62 7 241] 
#[ 4 70 7 165] 
#[ 4 82 7 241] 
#[ 0 54 7 165] 
#[ 4 94 7 165] 
#[ 4 98 7 241] 
#[ 0 130 8 181] 
#[ 4 126 8 213] 
#[ 3 173 4 126] 
#[ 4 146 9 49] 
#[ 0 130 0 134] 
#[ 4 57 4 174] 
#[ 4 182 7 189] 
#[ 3 173 4 190] 
#[ 4 190 10 25] 
#[ 0 142 4 198] 
#[ 0 142 4 198 7 225] 
#[ 4 210 7 241] 
#[ 4 214 10 93] 
#[ 4 226 10 117] 
#[ 4 246 10 169] 
#[ 4 254 7 165] 
#[ 5 2 7 165] 
#[ 2 178 11 9] 
#[ 5 14 11 69] 
#[ 5 18 11 73] 
#[ 0 130 3 54 11 81] 
#[ 5 34 7 165] 
#[ 4 126 11 93] 
#[ 0 6 11 117] 
#[ 0 142 5 50] 
#[ 0 142 5 50 11 145] 
#[ 4 146 5 54] 
#[ 4 146 5 54 11 189] 
#[ 4 146 11 189] 
#[ 4 57 5 78] 
#[ 4 57 5 86] 
#[ 4 190 12 109] 
#[ 4 190 12 125] 
#[ 0 142 5 174] 
#[ 0 142 5 174 7 225] 
#[ 5 194 12 217] 
#[ 0 142 5 210] 
#[ 0 142 5 210 7 225] 
#[ 0 54 5 226] 
#[ 3 173 5 226] 
#[ 0 54 5 226 13 29] 
#[ 5 226 13 29] 
#[ 5 238 7 165] 
#[ 5 242 7 241] 
#[ 5 250 7 165] 
#[ 6 6 7 165] 
#[ 6 10 7 165] 
#[ 6 14 6 18 7 165] 
#[ 6 22 13 105] 
#[ 4 41 6 26] 
#[ 6 38 7 165] 
#[ 6 42 7 165] 
#[ 6 54 13 169] 
#[ 6 58 13 173] 
#[ 3 173 6 66] 
#[ 6 66 13 177] 
#[ 3 173 6 70] 
#[ 6 70 13 185] 
#[ 0 142 5 50 13 209] 
#[ 0 142 5 50 7 225] 
#[ 6 14 7 165] 
#[ 4 146 14 33] 
#[ 4 146 14 77] 
#[ 4 190 14 193] 
#[ 4 190 14 221] 
#[ 0 142 6 138] 
#[ 0 142 6 138 7 225] 
#[ 6 162 7 165] 
#[ 6 198 15 69] 
#[ 6 210 15 133] 
#[ 6 214 15 141] 
#[ 6 218 15 149] 
#[ 0 142 7 225] 
#[ 6 230 7 165] 
#[ 6 242 7 165] 
#[ 6 250 7 165] 
#[ 3 173 7 6] 
#[ 3 173 7 14] 
#[ 0 33 0 142] 
#[ 0 54 0 142] 
#[ 0 37 0 142] 
#[ 0 41 0 142] 
#[ 0 45 0 142] 
#[ 0 49 0 142] 
#[ 0 53 0 142] 
#[ 0 57 0 142] 
#[ 0 61 0 142] 
#[ 0 65 0 142] 
#[ 0 69 0 142] 
#[ 0 73 0 142] 
#[ 0 77 0 142] 
#[ 0 81 0 142] 
#[ 0 85 0 142] 
#[ 0 89 0 142] 
#[ 0 93 0 142] 
#[ 0 97 0 142] 
#[ 0 101 0 142] 
#[ 0 105 0 142] 
#[ 0 109 0 142] 
#[ 0 113 0 142] 
#[ 0 117 0 142] 
#[ 0 121 0 142] 
#[ 0 125 0 142] 
#[ 0 129 0 142] 
#[ 0 133 0 142] 
#[ 0 137 0 142] 
#[ 0 141 0 142] 
#[ 0 142 0 145] 
#[ 0 142 0 149] 
#[ 0 142 0 153] 
#[ 0 142 0 157] 
#[ 0 142 0 161] 
#[ 0 142 0 165] 
#[ 0 142 0 169] 
#[ 0 142 0 173] 
#[ 0 142 0 177] 
#[ 0 142 0 181] 
#[ 0 142 0 185] 
#[ 0 142 0 189] 
#[ 0 142 0 193] 
#[ 0 142 0 197] 
#[ 0 142 0 201] 
#[ 0 142 0 205] 
#[ 0 142 0 209] 
#[ 0 142 0 213] 
#[ 0 142 0 217] 
#[ 0 142 0 221] 
#[ 0 142 0 225] 
#[ 0 142 0 229] 
#[ 0 142 3 173] 
#[ 0 142 0 233] 
#[ 0 142 0 237] 
#[ 0 142 0 241] 
#[ 0 54 0 142 7 225] 
#[ 0 142 5 50 16 81] 
#[ 0 142 5 50 16 141] 
#[ 7 38 7 165] 
#[ 7 42 7 165] 
#[ 7 46 7 165] 
#[ 7 50 7 165] 
#[ 7 54 7 165] 
#[ 7 58 7 165] 
#[ 7 62 7 165] 
#[ 7 66 7 165] 
#[ 7 70 7 165] 
#[ 7 74 7 165] 
#[ 7 106 7 165] 
#[ 4 190 16 233] 
#[ 7 118 7 165] 
#[ 7 122 7 165] 
#[ 7 150 7 165] 
#[ 7 154 7 165] 
#[ 7 182 17 89] 
#[ 7 186 17 97] 
#[ 4 146 17 137] 
#[ 7 165 7 194] 
#[ 7 165 7 226] 
#[ 7 165 7 234] 
#[ 7 165 7 238] 
#[ 7 165 7 242] 
#[ 7 165 7 246] 
#[ 4 94 5 2] 
#[ 4 94 5 2 7 165] 
#[ 0 142 5 50 18 45] 
#[ 4 146 18 109] 
#[ 0 142 5 50 18 121] 
#[ 7 165 8 2] 
#[ 7 165 8 6] 
#[ 7 165 8 10] 
#[ 7 165 8 14] 
#[ 7 165 8 22] 
#[ 7 165 8 42] 
#[ 8 62 19 53] 
#[ 3 173 8 66] 
#[ 4 146 19 109] 
#[ 7 165 8 94] 
#[ 7 165 8 98] 
#[ 6 18 7 38] 
#[ 6 18 7 38 7 165] 
#[ 7 165 8 106] 
#[ 4 254 6 6] 
#[ 4 254 6 6 7 165] 
#[ 0 142 5 50 20 53] 
#[ 0 54 20 145] 
#[ 7 165 8 122] 
#[ 7 165 8 126] 
#[ 7 165 8 170] 
#[ 7 165 8 174] 
#[ 0 130 8 242] 
#[ 1 218 8 246] 
#[ 7 165 9 6] 
#[ 0 142 5 50 21 173] 
#[ 9 22 22 17] 
#[ 7 165 9 38] 
#[ 3 173 9 62] 
#[ 0 54 5 226 22 125] 
#[ 5 226 9 70] 
#[ 3 173 5 226 9 70] 
#[ 0 54 5 226 22 141] 
#[ 5 226 9 74] 
#[ 3 173 5 226 9 74] 
#[ 9 134 23 113] 
#[ 9 138 23 133] 
#[ 5 226 23 141] 
#[ 0 54 5 226 7 50 23 145] 
#[ 9 142 23 161] 
#[ 5 226 9 170] 
#[ 3 173 5 226 9 170] 
#[ 5 226 9 186] 
#[ 3 173 5 226 9 186] 
#[ 9 246 24 173] 
#[ 9 250 24 181] 
#[ 9 254 10 2] 
#[ 9 254 10 2 24 193] 
#[ 3 173 10 18] 
#[ 0 54 5 226 25 1] 
#[ 5 226 10 42] 
#[ 3 173 5 226 10 42] 
#[ 0 54 5 226 25 13] 
#[ 5 226 10 46] 
#[ 3 173 5 226 10 46] 
#[ 10 126 25 149] 
#[ 10 134 25 165] 
#[ 10 138 25 181] 
#[ 10 146 25 193] 
#[ 10 150 25 201] 
#[ 5 226 10 170] 
#[ 3 173 5 226 10 170] 
#[ 5 226 10 182] 
#[ 3 173 5 226 10 182] 
#[ 10 238 26 69] 
#[ 10 250 26 81] 
#[ 3 173 11 2] 
#[ 11 82 26 185] 
#[ 11 86 26 197] 
#[ 11 122 26 241] 
#[ 11 150 27 45] 
#[ 7 165 11 158] 
#[ 11 178 27 69] 
#[ 11 190 27 97] 
#[ 7 165 11 194] 
#[ 7 165 11 198] 
#[ 7 165 11 210]
	).
]

{ #category : #'generated-accessing' }
VBParser class >> cacheId [
	^'2022-06-14T08:28:51.199783+02:00'
]

{ #category : #generated }
VBParser class >> definitionComment [
"%glr;
%ignorecase;
%annotate_tokens;

#expression operators -- lowest precedence are first.

%left "")""  ;
%nonassoc  ""="" "":="";
%nonassoc  ""New"";
%left "","";
%right "":"";
%left ""eqv"" ;

%left ""xor"";
%left  ""or"";
%left  ""and"";
%nonassoc  ""<>"" ""<"" "">"" ""<="" "">="" ""Like"" ""Is"" ""IsNot"";
%left ""<<"" "">>"";
%left ""&"" ;
%left ""+"" ""-"";
%left ""*"" ""/"" ""Mod"";
%right ""not"" ;
%right ""^"";
%right  ""~"";
%right ""["" ""("";
%right ""!"" ;


%prefix VB;
%root Program;
%suffix Node;
%start module Statement ModuleStatement BehaviourDefinition;

<lineContinuation>
   :   ( \x20 | \xA0 | \x9) (_) ( \x20 | \xA0 | \x9)* ( \r | \n | \r\n | \x2028 ) ( \x20 | \xA0 | \x9)*
   ;

<DECIMAL_INTEGER>
	: 0 | [1-9] [0-9]*	
	;
<HEX_INTEGER>
	: 0[xX][0-9a-fA-F]+	
	;
<OCTAL_INTEGER>
	: 0[0-7]+	
	;
	
<EXPONENT>
	: [eE] [\-\+]? [0-9]+ 	
	;
<FLOAT_TYPE>
	: [fFdD]	
	;

<DATE_LITERAL>
   : (\#) ([^\#\r\n])* (\#)
   ;

<COLOR_LITERAL>
   : \& H [0-9a-fA-F]+ \&?
   ;


<INTEGER_LITERAL>
	: (<DECIMAL_INTEGER> | <HEX_INTEGER> | <OCTAL_INTEGER>) [lL]?	
	;
<FLOATING_POINT_LITERAL>
	: [0-9]+ \. [0-9]* <EXPONENT>? <FLOAT_TYPE>? 
	| \. [0-9]+ <EXPONENT>? <FLOAT_TYPE>? 
	| [0-9]+ <EXPONENT> <FLOAT_TYPE>? 
	| [0-9]+ <FLOAT_TYPE>	
	| <HEX_INTEGER> \. [0-9a-fA-F]+ [pP] [\-\+]? [0-9]+ <FLOAT_TYPE>?
	;
<BOOLEAN_LITERAL>
	: true
	| false
	;
<STRING_LITERAL>
   : \"" ([^\""\r\n] | \""\"")* \""
   ;
<NULL_LITERAL>
	: Nothing	
	;

<IDENTIFIER>
	: (<isLetter> | [a-zA-Z_$] ) (<isLetter>|\w|$)* 
	;

<SBIDENTIFIER>
	: (\[) (<isLetter> | [a-zA-Z_$] ) (<isLetter>|\w|/|$|\s)* (\]) 
	;
<DEFTYPE> 
	: ([a-zA-Z]) (\-) ([a-zA-Z]); 
	
<HASH_NUMBER>
	: ( \#) (<DECIMAL_INTEGER>)
	;
	
<HASH_IDENTIFIER>
	: ( \#) (<isLetter>|\w|$)*
	;

<whitespace> : ( \x20 | \xA0 | \x9) + ; 

<eol>
   : (<whitespace>?) ( \r | \n | \r\n | \x2028 | \ ) (<whitespace>?)
   ;

<comment>
   :  (<whitespace>?)(\' | :?  REM  \ ) ( [^\n\r])* 
   ;

###################################################### 
########## Basic module
###################################################### 

module: <eol>* (header 'header' <eol>*)? (ModuleStatement 'element')?  (<eol>* ModuleStatement 'element' )*  <eol>* {{Module}};

###################################################### 
########## Literals
###################################################### 
literal 
	: 
	  FileDescriptorLiteral
	| IntegerLiteral
	| ColorLiteral
	| DateLiteral
	| FloatLiteral
	| BooleanLiteral
	| StringLiteral
	| Null
	| GuidLiteral
;

FileDescriptorLiteral 	: <HASH_NUMBER> 'token' 			{{FileDescriptorLiteral}};
IntegerLiteral 			: <INTEGER_LITERAL> 'token' 		{{IntegerLiteral}};
ColorLiteral			: <COLOR_LITERAL> 'token' 			{{ColorLiteral}} ; 
DateLiteral				: <DATE_LITERAL> 'token' 			{{DateLiteral}};
FloatLiteral			: <FLOATING_POINT_LITERAL> 'token' 	{{FloatLiteral}};
BooleanLiteral			: <BOOLEAN_LITERAL> 'token' 		{{BooleanLiteral}};
StringLiteral			: <STRING_LITERAL> 'token' 			{{StringLiteral}};
Null					: <NULL_LITERAL> 'token' 			{{Null}};




GuidLiteral: 
		""{""
		<HEX_INTEGER> + 
		""-""
		<HEX_INTEGER> +
		""-"" 
		<HEX_INTEGER> + 
		""-""
		<HEX_INTEGER> + 
		""-""
		<HEX_INTEGER> + 
		""}"" 
		{{GuidLiteral}};


Identifier : 
	 SimpleIdentifier
	| HashIdentifier
	| SquareBracketIdentifier;

KeywordIdentifier : UsableKeywords 'token'  {{SimpleIdentifier}} | SquareBracketIdentifier;


UsableKeywords  :  
  IdentifierWords  
| ""open"" 
| ""type"" 
| ""select"" 
| ""case"" 
| ""else""   
;

IdentifierWords :  
  <IDENTIFIER>     
| ""text"" | ""name"" | ""version"" | ""database"" 
| ""collection"" | ""bold"" | ""append"" | ""Object""  
| ""len"" | ""get"" | ""set"" | ""let"" |  ""date"" | ""input"" | ""print""
;

HashIdentifier 			: <HASH_IDENTIFIER> 'token' {{HashIdentifier}};
SquareBracketIdentifier : <SBIDENTIFIER> 'token' 	{{SquareBracketIdentifier}};
SimpleIdentifier 		: IdentifierWords 'token'  	{{SimpleIdentifier}};


LabelTag : <IDENTIFIER> 'name' "":""  {{LabelTag}};

###################################################### 
########## Module header and configuration
###################################################### 

header: ""version"" <whitespace> FloatLiteral  'version'  (""class"")?  {{}};
Option
   :   ""option"" <whitespace> IntegerLiteral 'value' {{OptionValue}}
   |   ""option"" <whitespace> ""compare"" <whitespace> ""database"" {{OptionCompareDatabase}}
   |   ""option"" <whitespace> ""compare"" <whitespace> (""binary""| ""text"" 'compare') {{OptionCompare}}
   |   ""option"" <whitespace> ""explicit"" {{OptionExplicit}}
   |   ""option"" <whitespace> ""private"" <whitespace> ""module""{{OptionPrivateModule}}
   | OptionBase
   ;
OptionBase : ""option"" <whitespace> ""base"" <whitespace> Expression 'value' {{OptionBase}} ;
SetUpAssignation :  
	(Identifier  'identifier' | MemberAccess 'identifier') <whitespace> ""="" <whitespace> Expression 'value' {{SetUpAssignation}} 
;
Attribute
 : ""attribute"" <whitespace> SetUpAssignation 'setting' {{ModuleAttribute}}
 ;
Configuration 
:	""begin""  <eol>* SetUpAssignation 'setting' ( <eol>+ SetUpAssignation 'setting')* <eol>*""end"" {{Configuration}};

Implements : ""implements"" <whitespace> Identifier 'interface' {{Implements}}; 

DefTypeLabel : 
  ""DefBool"" | ""DefByte"" |""DefCur"" 
| ""DefDate"" | ""DefDec"" | ""DefDbl"" 
| ""DefInt"" | ""DefLng"" | ""DefLnglng"" 
| ""DefLngPtr"" | ""DefObj"" | ""DefSng"" 
| ""DefStr"" | ""DefVar"" 
;

DefType : DefTypeLabel 'deftype' <whitespace> <DEFTYPE> 'pattern' {{DefType}}; 

ModuleStatement :  
  Option  
| Configuration 
| Attribute 
| DeclareExternal 
| VariableDefinition 
| BehaviourDefinition 
| Types 
| Implements 
| DefType
 ;

###################################################### 
########## Body statements
###################################################### 

Statement :  
  StatementAssignment 
| VariableDefinition 
| Attribute 
| OptionBase 
| StatementCalls  
| ControlFlowStatement 
| Types 
| Label 
| Exits 
| Go 
| FileClauses 
| RaiseEvent 
| OtherStatements ;

# A Block is a list of statements. Each entry can be headed with a line number. Lines are splitted by newline 
Block: 
       (IntegerLiteral 'lineNumber' <whitespace>)? 
	   (Statement 'statement') ? 
	   (
		 (<eol>| <whitespace>?"":""<whitespace>?)+ 
		 (IntegerLiteral 'lineNumber' <whitespace>)? 
		  Statement 'statement' 
	   )*
	   <eol>+ 
	   {{Block}};
	   
# Oneline blocks can have one or more ""lines"" splitted by "":"" 

OneLineBlock : 
		 <whitespace>? (Statement 'statement')? 
		(<whitespace>? "":"" <whitespace>? Statement 'statement')* 
		(<whitespace>? "":"" <whitespace>?) ? 
		{{Block}};

BaseType : 
  ""boolean"" 
| ""byte"" 
| ""currency"" 
| ""collection"" 
| ""date"" 
| ""decimal"" 
| ""double"" 
| ""integer"" 
| ""long"" 
| ""longlong""
| ""longptr"" 
| ""object"" 
| ""single"" 
| ""string"" 
| ""variant"" 
{{BaseType}};

Visibility: 
  ""private"" 
| ""public"" 
| ""friend"" 
| ""global"" ; 

ComplexType: 
	(Identifier 'base')?  
	(""."" UsableKeywords 'member')* 
	{{ComplexType}}
;

Type: 
  BaseType 
| ComplexType 
;



TypedThing : 
			 (<whitespace> ""as"" <whitespace> Type 'type')?
			 (<whitespace>? ""*"" <whitespace>? Expression 'fixedSize')?  
			 {{TypedThing}}
;
			 
TypedAndInstantiatedThing:	 
			<whitespace> ""as"" <whitespace>
			""new"" <whitespace> 
			Type 'type'
			{{AsTypeAndNew}}
; 

TypeSize : ""("" 
			Expression 'size'? 
			("",""<whitespace>? Expression 'size')* 
			"")"" 
			{{TypeSize}} 
;

AsType : 
  TypedThing 
| TypedAndInstantiatedThing;



###################################################### 
########## assign statements
###################################################### 

StatementAssignment : Assignment | ExplicitAssignement ;

ExplicitLetSet: ""let"" | ""set""; 

Assignment : 
		(Identifier 'left' | StateAccessBase 'left') <whitespace> 
		(""="" 'operator' | "":="" 'operator') <whitespace> 
		Expression 'right' 
		{{ExplicitAssignement}};
		
ExplicitAssignement : 
		ExplicitLetSet 'kind' <whitespace> 
		(Identifier 'left' | StateAccessBase 'left') <whitespace> 
		(""="" 'operator' |  "":="" 'operator') <whitespace> 
		Expression 'right' 
		{{ExplicitAssignement}};

###################################################### 
########## other statements
###################################################### 
 
OtherStatements : 
  Rename 
| Beep 
| DoEvents;

Rename : 
	""name"" <whitespace> 
	Expression 'oldName' <whitespace> 
	""as"" <whitespace> 
	Expression 'newName' 
	{{Rename}} ;
	
Beep : ""beep"" ;
DoEvents : ""DoEvents"" {{DoEvents}} ;

###################################################### 
########## Types
###################################################### 

Types : 
  DefineEnum 
| DefineType 
| Event ;

DefineType : 
      (Visibility 'visibility' <whitespace>)? 
	  ""type"" <whitespace> 
	  Identifier 'name' 
	  ( <eol>* TypeEntry 'field' )* 
	  <eol>* 
	  ""end"" <whitespace>  ""type"" 
	  {{DefineType}} ;
	  
TypeEntry :
	  Identifier 'name'
	  AsType 'type' 
	  (<whitespace>?""*""<whitespace>? IntegerLiteral 'size' )? 
	  {{TypeEntry}};
	  
Event  : 
	  (Visibility 'visibility' <whitespace>)?  
	  ""event"" <whitespace> 
	  Identifier 'selector' <whitespace>?
	  ParameterList 'parameters'
	  {{Event}} ;
	  
DefineEnum :  
	  (Visibility 'visibility' <whitespace>)?  
	  ""enum"" <whitespace> 
	  Identifier 'name'  
	  ( <eol>* EnumEntry 'field')* 
	  <eol>*  
	  ""end"" <whitespace> ""enum"" 
	  {{DefineEnum}};
	  
EnumEntry : 
      Identifier 'name'  
	  ( <whitespace> ""="" <whitespace> Expression 'value')? 
	  {{EnumEntry}};

###################################################### 
########## Parameters
###################################################### 

ParameterPassingStrategy :  ""byval"" | ""byref"" {{ParameterPassingStrategy}};
ParameterList:""(""(Parameter 'parameter' ("","" <whitespace> Parameter 'parameter')* )? <whitespace>? "")"" {{ParameterList}};
	
Parameter: 
	(""optional"" <whitespace>)? 
	(ParameterPassingStrategy 'strategy' <whitespace>)? 
	(""paramarray"" <whitespace>)? 
	Identifier 'name' 
	(TypeSize 'size')?
	(AsType 'type')? 
	(<whitespace> ""="" <whitespace> Expression 'default')? 
	{{Parameter}};

###################################################### 
########## External declaration
###################################################### 

DeclareSub: 
			(Visibility 'visibility' <whitespace> )? 
			""declare"" <whitespace> 
			""sub"" <whitespace> 
			Identifier 'selector' <whitespace> 
			""lib"" <whitespace> 
			StringLiteral 'library' <whitespace>?
			(""alias"" <whitespace> StringLiteral 'alias' <whitespace>?)? 
			ParameterList 'parameters' 
			{{ExternalSub}};
			
DeclareFunction: 
		(Visibility 'visibility' <whitespace> )? 
		""declare"" <whitespace> 
		""function"" <whitespace> 
		Identifier 'selector' <whitespace> 
		""lib"" <whitespace> 
		StringLiteral 'library' <whitespace>? 
		(""alias"" <whitespace>  StringLiteral 'alias' <whitespace>? )? 
		ParameterList 'parameters'
		AsType 'type'
		{{ExternalFunction}};
		
		
DeclareExternal : DeclareSub|DeclareFunction; 

###################################################### 
########## Function / Sub Definition 
###################################################### 

Modifier: ""static"" ;

DefineFunction: 
	(Visibility 'visibility' <whitespace>)? 
	(Modifier 'modifier' <whitespace>)? 
	""function""  <whitespace>
	Identifier 'selector'<whitespace>?
	ParameterList 'parameters' <whitespace>?
	(AsType 'type' TypeSize 'size'?  )?
	Block 'block' 
	""end""  <whitespace> ""function"" 
   {{FunctionDefinition}};

DefineSub: 
	(Visibility 'visibility' <whitespace>)? 
	(Modifier 'modifier' <whitespace>)? 
	""sub""  <whitespace>
	Identifier 'selector'<whitespace>?
	(ParameterList 'parameters')? <whitespace>?
	Block 'block' 
	""end"" <whitespace> ""sub"" 
   {{SubDefinition}};
   

ModulePropertyGet : 
	(Visibility 'visibility' <whitespace>)? 
	(Modifier 'modifier' <whitespace>)? 
	""property"" <whitespace> ""get""  <whitespace>
	Identifier 'selector'
	ParameterList 'parameters'
	(AsType 'type' TypeSize 'size'?)? 
	Block 'block' 
	""end"" <whitespace> ""property"" 
    {{ModulePropertyGet}}; 
	
	
ModulePropertySet : 
	(Visibility 'visibility' <whitespace>)? 
	(Modifier 'modifier' <whitespace>)? 
	""property"" <whitespace> ""set""  <whitespace>
	Identifier 'selector'
	ParameterList 'parameters'
	Block 'block'  
	""end"" <whitespace> ""property"" 
  {{ModulePropertyGet}}; 
  
ModulePropertyLet : 
	(Visibility 'visibility' <whitespace>)? 
	(Modifier 'modifier' <whitespace>)? 
	""property"" <whitespace> ""let""  <whitespace>
	Identifier 'selector' 
	ParameterList 'parameters'
	 Block 'block'  
	 ""end"" <whitespace> ""property"" 
{{ModulePropertyGet}}; 

BehaviourDefinition:  
  DefineFunction 
| DefineSub 
| ModulePropertyGet 
| ModulePropertySet 
| ModulePropertyLet ;

###################################################### 
########## Variable / And Multiple Variables
###################################################### 

ModuleProperty : 
	Visibility 'visibility' <whitespace>
	Variable 'variable' 
	{{ModuleProperty}};
	
ModuleConstant : 
	(Visibility 'visibility' <whitespace>)? 
	""const"" <whitespace> 
	Constant 'constant'
	{{ModuleConstant}};

DefineVariable : 
	""dim"" <whitespace> 
	Variable 'variable' 
	{{DimVariable}};


ReDefineVariable : 
	""redim"" <whitespace> 
	(""preserve"" <whitespace>)? 
	Variable 'variable' 
	{{ReDimVariable}};
	
ReDefineExpression : 
	""redim"" <whitespace>
	(""preserve"" <whitespace>)? 
	Expression 'variable' 
	{{ReDimVariable}};
	
StaticVariable : 
	""static""  <whitespace>  
	Variable 'variable'
	{{StaticVariable}};
	
Variable : 
	(""WithEvents""  <whitespace> )? 
	Identifier 'name'
	(TypeSize 'size')?
	(AsType 'type') ? 
	{{Variable}};
	
Constant :  
	Identifier 'constant'
	(AsType 'type') ? 
	<whitespace> ""=""  <whitespace> 
	Expression 'value' 
	{{Constant}} ;

ModuleProperties : 
	Visibility 'visibility'  <whitespace>
	VariableList 'variables' 
	{{ModuleMultipleProperties}};
	
	
ModuleConstants : 
	(Visibility 'visibility'  <whitespace> )? 
	""const""  <whitespace> 
	ConstantList 'constants' 
	{{ModuleMultipleConstants}};
	
DefineVariables : 
	""dim""  <whitespace>
	VariableList 'variables' 
	{{DimMultipleVariables}};
	
ReDefineVariables : 
	""redim""  <whitespace> 
	(""preserve""  <whitespace>)?  
	VariableList 'variables' 
	{{ReDimMultipleVariables}};
	
StaticVariables : 
	""static"" <whitespace> 
	VariableList 'variables' 
	{{StaticMultipleVariables}};
	
VariableList : Variable 'variable' ( <whitespace>? "",""  <whitespace>?  Variable 'variable' )+ {{VariableList}};
ConstantList : Constant 'constant' ( <whitespace>? "",""  <whitespace>?  Constant 'constant' )+ {{ConstantList}};

VariableDefinition :
  ModuleProperties 
| ModuleProperty 
| ModuleConstant 
| ModuleConstants 
| ConstantList 
| DefineVariable 
| ReDefineVariable 
| ReDefineExpression 
| DefineVariables 
| ReDefineVariables 
| StaticVariable 
| StaticVariables ;

###################################################### 
########## Value Statements
###################################################### 


Expression :   
  ValueClause  
| StateAccess 
| ExpressionCalls 
| Identifier 
| literal 
| ParentheseesExpression  
| Interval 
| Operation ; 

ParentheseesExpression : 
	""(""  <whitespace>? 
	Expression 'expression'  
	<whitespace>? "")"" 
	{{ParentheseesExpression}};
	
Interval : 
	Expression 'from' <whitespace> 
	""to""  <whitespace> 
	Expression 'to'  
	{{Interval}} ; 


##########
### Ops
##########

Operation : 
  UnaryOperation 
| BinaryOperation ;

####################
### Unary Ops 
####################

UnaryOperation:   
  NegatedOperation
| PositiveOperation 
| NotOperation 
; 

NegatedOperation : 
	""-""
	(StateAccessBase 'value' | IntegerLiteral 'value' | FloatLiteral 'value')
	{{NegatedOperation}}
;
	
PositiveOperation : 
	""+"" <whitespace> 
	(StateAccessBase 'value' | IntegerLiteral 'value' | FloatLiteral 'value')
	{{PositiveOperation}} 
;

NotOperation : 
	""not"" <whitespace>
	(StateAccessBase 'value' | BooleanLiteral 'value')
	{{NotOperation}}
;


####################
### Binary Ops 
####################


BinaryOperation : 
  ComparisonOperation  
| ArithmeticOperation 
| BooleanBinaryOperation 
| Equals  
| ConcatenationOperation ;

ComparisonOperator : "">"" | ""<""  |  ""<>"" | ""<="" | "">="" | ""is"" | ""like"" ;

ComparisonOperation : 
		Expression 'left' <whitespace>
		ComparisonOperator <whitespace> 
		Expression 'right' 
		{{ComparisonOperation}};
		
ArithmeticOperator : ""*"" | ""+"" | ""-"" | ""/"" | ""^"" | ""\"" | ""Mod"";

ArithmeticOperation : 
		Expression 'left' <whitespace>
		ArithmeticOperator <whitespace>
		Expression 'right' {{ArithmeticOperation}};


BooleanOperator : ""and"" | ""or"" | ""xor"" | ""eqv"";
BooleanBinaryOperation : 
		Expression 'left' <whitespace>
		BooleanOperator   <whitespace>
		Expression 'right' 
		{{ArithmeticOperation}};

Concatenable : 
  Identifier 
| StateAccessBase
| literal 
| ConcatenationOperation;

ConcatenationOperation : 
		Expression 'left' <whitespace>
		""&"" <whitespace>
		Expression 'right' 
		{{ConcatenationOperation}}; 

Equals : 
	(Identifier 'left' | MemberAccess 'left' | Expression 'left') <whitespace>
	""="" 'operator' <whitespace>
	Expression 'right' 
	{{Equals}}; 


####################
### Value Clause 
####################

ValueClause: 
  AddressOfClause 
| NewClause ;

AddressOfClause : 
		""AddressOf"" <whitespace>
		Identifier 'name'  
		{{AddressOfClause}}; 
		
NewClause : 
		""New"" <whitespace>
		Type 'typeName' 
		{{NewClause}};

OpenMode :  
  ""Append"" 
| ""Binary"" 
| ""Input"" 
| ""Output"" 
| ""Random"" ;


OpenAccess : 
  ""Read"" 
| ""Write"" 
| ""Read Write"" ;

Lock :  
  ""Shared"" 
| ""Lock Read"" 
| ""Lock Write"" 
| ""Lock Read Write"";


FileClauses : 
  OpenFileClause 
| PrintFileClause 
| LineInputClause ;

OpenFileClause : 
		""Open"" <whitespace>
		Expression 'filepath' <whitespace>
		""For"" <whitespace>
		OpenMode 'mode' <whitespace>
		(OpenAccess 'access' <whitespace>)? 
		(Lock 'lock' <whitespace>)? 
		""As"" <whitespace>
		Expression 'fileDescriptor' 
		(<whitespace> ""len"" <whitespace> ""="" <whitespace> Expression'length')? 
		{{OpenClause}};
		
		
PrintFileClause : 
		""Print"" <whitespace>
		Identifier 'fileNumber' <whitespace>?
		"","" <whitespace>? 
		(Expression 'value' <whitespace>?)? 
		("";"" <whitespace>? Expression 'value')*  
		{{PrintIntoFileClause}};
		
LineInputClause : 
		""Line"" <whitespace>
		""Input"" <whitespace>
		(Identifier 'fileNumber' | FileDescriptorLiteral  'fileNumber') <whitespace>?  
		"",""  <whitespace>?
		(Expression 'value') 
		{{LineInputClause}};


###################################################### 
########## Control flow statements
###################################################### 

ControlFlowStatement : 
  Exits
| Loops 
| If  
| On 
| Resume 
| To 
| With 
| RaiseError 
| Select ; 

####################
#### Loops
####################


Loops : 
  DoLoop 
| WhileWend 
| ForLoop ;

####################
########## Do
####################

DoLoop : 
  InfinityLoop 
| WhileTrue 
| UntilTrue 
| DoWhileTrue 
| DoUntilTrue; 


InfinityLoop : 
	""do""  
		(Block 'body')? 
	(IntegerLiteral 'endLineNumber' <whitespace>)? 
	""loop""  
	{{InfinityLoop}} ;

WhileTrue :  
	""do"" <whitespace>
	""while"" <whitespace>
	Expression 'condition' 
	( Block 'body')? 
	(IntegerLiteral 'endLineNumber' <whitespace>)? 
	""loop""  
	{{WhileTrue}}; 
	
	
UntilTrue : 
	""do"" <whitespace>
	""until"" <whitespace>
	Expression 'condition'
		Block 'body'
	(IntegerLiteral 'endLineNumber' <whitespace>)?
	""loop"" 
   {{UntilTrue}}; 

DoWhileTrue :  
	""do"" 
	( Block 'body')?
	(IntegerLiteral 'endLineNumber' <whitespace>)?  
	""loop"" <whitespace> 
	""while"" <whitespace> 
	Expression 'condition' 
    {{DoWhileTrue}}; 

DoUntilTrue : 
	""do"" 
	 Block 'body' 
	(IntegerLiteral 'endLineNumber' <whitespace>)? 
	""loop"" <whitespace> 
	""until"" <whitespace>
	Expression 'condition'
    {{DoUntilTrue}}; 


####################
########## WhileWend
####################

WhileWend: 
	""while"" <whitespace> 
	Expression 'condition'
	( Block 'body')?   
	(IntegerLiteral 'endLineNumber' <whitespace>)? 
	""wend"" 
	{{WhileWend}}; 

####################
########## For 
####################

ForLoop : 
  ForEach 
| ForNext 
| ForNextOneLine 
| ForStepNext;

ForEach :  
	""for"" <whitespace> 
	""each"" <whitespace> 
	Identifier 'element' <whitespace> 
	""in"" <whitespace> 
	Expression 'group' <whitespace>?
	( Block 'body')?
	(IntegerLiteral 'endLineNumber' <whitespace>)? 
	""next"" 
	(<whitespace> Identifier 'element' )? 
    {{ForEach}} ;

ForNext :   
	""for"" <whitespace> 
	Identifier 'counter' <whitespace>
	""="" <whitespace> 
	Expression  'initialValue' <whitespace> 
	""to"" <whitespace> 
	Expression  'limit'   
	( Block 'body')? 
	 (IntegerLiteral 'endLineNumber' <whitespace>) ? 
	 ""next"" 
	 (<whitespace> Identifier 'element')? 
    {{ForNext}} ;

ForNextOneLine :   
	""for"" <whitespace> 
	Identifier 'counter' <whitespace> 
	""="" <whitespace> 
	Expression  'initialValue' <whitespace> 
	""to"" <whitespace> 
	Expression  'limit'
		( OneLineBlock 'body')? 
	""next""
   {{ForNext}} ;

ForStepNext:   
	""for"" <whitespace> 
	Identifier 'counter' <whitespace>
	""="" <whitespace>
	Expression  'initialValue' <whitespace> 
	""to"" <whitespace> 
	Expression  'limit' <whitespace> 
	""step"" <whitespace> 
	Expression 'step'   
		( Block 'body')?  
	(IntegerLiteral 'endLineNumber' <whitespace>)? 
	""next"" 
	(<whitespace> Identifier 'element' )? 
    {{ForStepNext}} ;

####################
########## If
####################

If : 
  IfThenElseOneLine 
| IfThenElse ; 


IfThenElseOneLine : 
	""if"" <whitespace> 
	Expression 'condition' <whitespace> 
	(""then""|""then:"") 
	OneLineBlock 'ifTrue' 
	(<whitespace> (""else""|""else:"") OneLineBlock 'ifFalse' )?
{{IfThenElse}};

IfThenElse : 
	""if"" <whitespace> 
	Expression  'condition' 
	<whitespace> 
	""then""
	(Block 'ifTrue')  
	(ElseIf 'elseif')* 
	(Else 'else')?
    (IntegerLiteral 'endLineNumber'<whitespace>)? 
	""end"" <whitespace> ""if""
	{{IfThenElse}};
	
Else: 
	(IntegerLiteral 'endLineNumber' <whitespace>)? 
	""else"" 
	(Block 'ifMatch')?  
	{{ElseIfBlock}};
	
ElseIf: 
    (IntegerLiteral 'endLineNumber' <whitespace>)? 
	""elseif"" <whitespace> 
	Expression  'condition' <whitespace>
	""then"" 
	(Block 'ifMatch')?  
	{{ElseIfBlock}}; 



####################
###### Error 
####################

RaiseError : 
  ""Error"" <whitespace> Expression 'errorCode'  
  {{RaiseError}} ;
	
##########################
###### Label / LabelSub
##########################

	To : Label ;
	Label : LabelTag 'label' {{Label}}; 	
	
	
####################
###### Select Case 
####################
CaseCondition : 
  ExpressionCalls 
| Identifier 
| MemberAccess 
| literal;

Case : 
	(IntegerLiteral 'lineNumber' <whitespace>)? 
	""case"" <whitespace>
	(CaseCondition 'expression' | ""else"") 
	("","" <whitespace> (CaseCondition 'expression'))* 
	"":""?
	(Block 'body' | OneLineBlock 'body')? 
	{{Case}};
Select : 
	""select"" <whitespace> 
	""case"" <whitespace>
	Expression 'expression' 
	<eol>+ (Case 'case')+ 
	(IntegerLiteral 'endLineNumber' <whitespace>)? 
	""end"" <whitespace> ""select"" 
	{{Select}};

####################
###### Resume
####################

Resume: 
  ResumeLabel 
| ResumeNext 
| ResumeEmpty ;
	
ResumeLabel : 
	""resume"" <whitespace> 
	DestinationList 'destination' 
	{{ResumeLabel}} ; 
	
ResumeNext : 
	""resume"" <whitespace> 
	""next"" 
	{{ResumeNext}} ; 
	
ResumeEmpty : ""resume"" {{ResumeEmpty}}; 

####################
###### GoTo / GoSub 
####################

Go : 
  GoToStatement 
| GoSub ;


Destination : 
  Identifier 
| IntegerLiteral 
| NegatedOperation ;

 
DestinationList :  
	Destination 'label' 
	(<whitespace>?"","" <whitespace>?Destination 'label')*
	{{DestinationList}};

GoToStatement : 
	""goto"" <whitespace> 
	DestinationList 'destination'   
	{{GoToStatement}};
	
GoSub :  
	""gosub"" <whitespace> 
	DestinationList 'destination'  
	{{GoSub}} ;

####################
########## On 
####################

On : 
  OnErrorGoTo 
| OnErrorResumeNext 
| OnExpressionGo; 

OnErrorGoTo : 
	""on"" <whitespace>
	""error"" <whitespace>
	GoToStatement 'to' 
	{{OnErrorGoTo}};
	
OnErrorResumeNext : 
	""on""  <whitespace>
	""error"" <whitespace>
	""resume""  <whitespace>
	""next""
	{{OnErrorResumeNext}} ;
	
OnExpressionGo : 
	""on"" <whitespace>
	Expression 'integerExpression' <whitespace>
	Go 'to' 
	{{OnExpressionGo}} ;

####################
########## Error
####################

Error: 
	""error"" <whitespace>
	Expression 'errorCode' 
	{{Error}} ;

####################
########## With
####################

With : 
	""with"" <whitespace>
	Expression 'with' 
	Block 'block' 
	(IntegerLiteral 'endLineNumber' <whitespace>)?
	""end"" <whitespace> ""with"" 
	{{With}} ;

####################
########## Exits
####################

Exits : 
  ExitFunction 
| ExitSub 
| ExitProperty 
| ExitDo 
| ExitFor 
| Return; 

ExitFunction : 
	""exit"" <whitespace>
	""function"" 
	{{Exits}} ;
	
ExitSub : 
	""exit"" <whitespace>
	""sub"" 
	{{Exits}} ; 
ExitDo : 
	""exit"" <whitespace>
	""do"" 
	{{Exits}} ; 
	
ExitFor : 
	""exit"" <whitespace>
	""for"" 
	{{Exits}} ;
	
ExitProperty : 
	""exit"" <whitespace> 
	""property"" 
	{{Exits}} ;
	
Return : 
	""return"" 
	{{Return}} ;

########################################
### Calls and accesses 
########################################

StateAccessBase :
  StateAccess
| ValueClause
| Identifier
| ProcedureCallOrArrayAccess; 

############################################################
### Normal accesses.  object.value dic!key
############################################################

DictionaryAccess : 
	(StateAccessBase 'receiver')?
	""!"" 
	KeywordIdentifier 'member' 
	{{DictionaryAccess}} ;

MemberAccess : 
	(StateAccessBase 'receiver')?
	"".""  
	KeywordIdentifier 'member' 
	{{MemberAccess}};


StateAccess : 
	DictionaryAccess 
  | MemberAccess;
  
  
############################################################
### ImplicitParenthesesLessCall.   selector arg1, arg2, , , arg
############################################################

ImplicitCallExpression : 
  MemberAccess
| Identifier
;


ImplicitParenthesesLessCall :  
		ImplicitCallExpression 'selector'  <whitespace> 
		ArgumentList 'arguments' 
		{{ImplicitParenthesesLessCall}} 
		
|       ImplicitCallExpression 'selector'
		{{ImplicitParenthesesLessCall}} 
 
;

############################################################
### ImplicitCalls.   selector(arg1, arg2, , , arg). 
############################################################
ProcedureCallOrArrayExpression : 
  StateAccess
| ValueClause
| Identifier
| ProcedureCallOrArrayAccess
;

ProcedureCallOrArrayAccess :  
		ProcedureCallOrArrayExpression 'selector'
		""(""
		  ArgumentList 'arguments'
		 <whitespace>?"")""
		{{ProcedureCallOrArrayAccess}} 

;

############################################################
### Argument and argument list. 
### Expression, expression, assignment 
############################################################

Argument : 
        (ParameterPassingStrategy 'strategy' <whitespace>)?  
		(""paramarray"" <whitespace>)?  
		(Expression 'value' | Assignment 'value') 
		{{Argument}};
ArgumentList : 
		(Argument 'argument' ? ("","" | "";"" )  <whitespace>?)* 
		Argument 'argument'? 
		(("","" | "";"" ) <whitespace>? Argument 'argument' ? )*
		{{ArgumentList}};


ExplicitCallSelectorTypes :
  Identifier 
| MemberAccess  
| ProcedureCallOrArrayAccess;


############################################################
### ExplicitCall.  Call selector(arg1, arg2, , , arg). 
############################################################

ExplicitCall : 
		""Call"" <whitespace>
		 ExplicitCallSelectorTypes 'selector'  
		{{ExplicitCall}} ;
		
RaiseEvent : 
		""RaiseEvent"" <whitespace>
		(Identifier 'selector' | ProcedureCallOrArrayAccess 'selector' )
		{{RaiseEvent}};

TypeOf : 
		""TypeOf"" <whitespace>
		Argument 'argument' <whitespace>
		(""Is"" | ""IsNot"") <whitespace>
		Argument 'type'  
		{{TypeOf}};

StatementCalls :  
  ImplicitParenthesesLessCall 
| ExplicitCall ;

ExpressionCalls : 
  ProcedureCallOrArrayAccess 
| TypeOf ;"
]

{ #category : #generated }
VBParser class >> reduceTable [
^#(
	#(177 0 #reduceActionFor_eol__1: 2054145 false ) 
	#(179 0 #reduceActionFor__eol___ModuleStatement__element____1: 2118657 false ) 
	#(194 1 #liftFirstValue: 3463176 false ) 
	#(241 1 #reduceActionForDoEvents1: 8444929 false ) 
	#(194 1 #liftFirstValue: 3463183 false ) 
	#(194 1 #liftFirstValue: 3463177 false ) 
	#(194 1 #liftFirstValue: 3463184 false ) 
	#(240 1 #liftFirstValue: 8428545 false ) 
	#(194 1 #liftFirstValue: 3463175 false ) 
	#(194 1 #liftFirstValue: 3463174 false ) 
	#(194 1 #liftFirstValue: 3463173 false ) 
	#(194 1 #liftFirstValue: 3463182 false ) 
	#(215 0 #reduceActionFor_______eol____whitespace______whitespace__________IntegerLiteral__lineNumber___whitespace_________Statement__statement_________1: 6173697 false ) 
	#(223 1 #liftFirstValue: 6797315 false ) 
	#(194 1 #liftFirstValue: 3463179 false ) 
	#(223 1 #liftFirstValue: 6797316 false ) 
	#(194 1 #liftFirstValue: 3463178 false ) 
	#(194 1 #liftFirstValue: 3463181 false ) 
	#(235 1 #liftFirstValue: 7656449 false ) 
	#(194 1 #liftFirstValue: 3463171 false ) 
	#(223 1 #liftFirstValue: 6797313 false ) 
	#(223 1 #liftFirstValue: 6797314 false ) 
	#(357 1 #reduceActionForResumeEmpty1: 23578625 false ) 
	#(377 1 #reduceActionForReturn1: 25361409 false ) 
	#(194 1 #liftFirstValue: 3463180 false ) 
	#(235 1 #liftFirstValue: 7656450 false ) 
	#(194 1 #liftFirstValue: 3463170 false ) 
	#(194 1 #liftFirstValue: 3463172 false ) 
	#(194 1 #liftFirstValue: 3463169 false ) 
	#(196 1 #reduceActionForSquareBracketIdentifier1: 3732481 false ) 
	#(195 1 #reduceActionForHashIdentifier1: 3664897 false ) 
	#(378 1 #liftFirstValue: 25507843 false ) 
	#(384 1 #liftFirstValue: 26717187 false ) 
	#(382 1 #liftFirstValue: 26242050 false ) 
	#(228 0 #reduceActionForTypedThing1: 6996993 false ) 
	#(197 1 #reduceActionForSimpleIdentifier1: 3813377 false ) 
	#(191 1 #liftFirstValue: 3185666 false ) 
	#(191 1 #liftFirstValue: 3185667 false ) 
	#(191 1 #liftFirstValue: 3185665 false ) 
	#(346 1 #reduceActionForLabel1: 22680577 false ) 
	#(212 1 #liftFirstValue: 5745668 false ) 
	#(212 1 #liftFirstValue: 5745667 false ) 
	#(212 1 #liftFirstValue: 5745665 false ) 
	#(234 1 #liftFirstValue: 7597057 false ) 
	#(234 1 #liftFirstValue: 7597058 false ) 
	#(212 1 #liftFirstValue: 5745677 false ) 
	#(238 1 #liftFirstValue: 8247297 false ) 
	#(238 1 #liftFirstValue: 8247298 false ) 
	#(238 1 #liftFirstValue: 8247299 false ) 
	#(212 1 #liftFirstValue: 5745671 false ) 
	#(242 1 #liftFirstValue: 8616962 false ) 
	#(242 1 #liftFirstValue: 8616963 false ) 
	#(242 1 #liftFirstValue: 8616961 false ) 
	#(292 1 #liftFirstValue: 14701570 false ) 
	#(292 1 #liftFirstValue: 14701571 false ) 
	#(292 1 #liftFirstValue: 14701574 false ) 
	#(292 1 #liftFirstValue: 14701575 false ) 
	#(292 1 #liftFirstValue: 14701576 false ) 
	#(292 1 #liftFirstValue: 14701579 false ) 
	#(292 1 #liftFirstValue: 14701569 false ) 
	#(292 1 #liftFirstValue: 14701572 false ) 
	#(292 1 #liftFirstValue: 14701577 false ) 
	#(292 1 #liftFirstValue: 14701578 false ) 
	#(292 1 #liftFirstValue: 14701580 false ) 
	#(292 1 #liftFirstValue: 14701573 false ) 
	#(212 1 #liftFirstValue: 5745666 false ) 
	#(378 1 #liftFirstValue: 25507842 false ) 
	#(384 1 #liftFirstValue: 26717186 false ) 
	#(311 1 #liftFirstValue: 17360897 false ) 
	#(311 1 #liftFirstValue: 17360898 false ) 
	#(212 1 #liftFirstValue: 5745675 false ) 
	#(317 1 #liftFirstValue: 17787905 false ) 
	#(317 1 #liftFirstValue: 17787906 false ) 
	#(317 1 #liftFirstValue: 17787907 false ) 
	#(212 1 #liftFirstValue: 5745670 false ) 
	#(323 1 #liftFirstValue: 18812930 false ) 
	#(324 1 #liftFirstValue: 18976769 false ) 
	#(325 1 #liftFirstValue: 19081217 false ) 
	#(325 1 #liftFirstValue: 19081218 false ) 
	#(325 1 #liftFirstValue: 19081219 false ) 
	#(325 1 #liftFirstValue: 19081220 false ) 
	#(325 1 #liftFirstValue: 19081221 false ) 
	#(324 1 #liftFirstValue: 18976770 false ) 
	#(324 1 #liftFirstValue: 18976771 false ) 
	#(332 1 #liftFirstValue: 20308993 false ) 
	#(332 1 #liftFirstValue: 20308994 false ) 
	#(332 1 #liftFirstValue: 20308995 false ) 
	#(332 1 #liftFirstValue: 20308996 false ) 
	#(323 1 #liftFirstValue: 18812931 false ) 
	#(337 1 #liftFirstValue: 21662721 false ) 
	#(337 1 #liftFirstValue: 21662722 false ) 
	#(323 1 #liftFirstValue: 18812936 false ) 
	#(323 1 #liftFirstValue: 18812934 false ) 
	#(345 1 #liftFirstValue: 22666241 false ) 
	#(212 1 #liftFirstValue: 5745672 false ) 
	#(323 1 #liftFirstValue: 18812937 false ) 
	#(323 1 #liftFirstValue: 18812933 false ) 
	#(354 1 #liftFirstValue: 23356417 false ) 
	#(354 1 #liftFirstValue: 23356418 false ) 
	#(354 1 #liftFirstValue: 23356419 false ) 
	#(212 1 #liftFirstValue: 5745674 false ) 
	#(358 1 #liftFirstValue: 23687169 false ) 
	#(358 1 #liftFirstValue: 23687170 false ) 
	#(323 1 #liftFirstValue: 18812932 false ) 
	#(365 1 #liftFirstValue: 24156161 false ) 
	#(365 1 #liftFirstValue: 24156162 false ) 
	#(365 1 #liftFirstValue: 24156163 false ) 
	#(323 1 #liftFirstValue: 18812935 false ) 
	#(212 1 #liftFirstValue: 5745673 false ) 
	#(323 1 #liftFirstValue: 18812929 false ) 
	#(371 1 #liftFirstValue: 24973313 false ) 
	#(371 1 #liftFirstValue: 24973314 false ) 
	#(371 1 #liftFirstValue: 24973316 false ) 
	#(371 1 #liftFirstValue: 24973317 false ) 
	#(371 1 #liftFirstValue: 24973315 false ) 
	#(371 1 #liftFirstValue: 24973318 false ) 
	#(381 1 #liftFirstValue: 25991169 false ) 
	#(381 1 #liftFirstValue: 25991170 false ) 
	#(382 1 #liftFirstValue: 26242049 false ) 
	#(378 1 #liftFirstValue: 25507841 false ) 
	#(384 1 #liftFirstValue: 26717185 false ) 
	#(383 1 #reduceActionForImplicitParenthesesLessCall2: 26301442 false ) 
	#(396 1 #liftFirstValue: 28201985 false ) 
	#(378 1 #liftFirstValue: 25507844 false ) 
	#(384 1 #liftFirstValue: 26717188 false ) 
	#(396 1 #liftFirstValue: 28201986 false ) 
	#(212 1 #liftFirstValue: 5745676 false ) 
	#(212 1 #liftFirstValue: 5745669 false ) 
	#(209 1 #liftFirstValue: 5163009 false ) 
	#(209 1 #liftFirstValue: 5163010 false ) 
	#(209 1 #liftFirstValue: 5163011 false ) 
	#(209 1 #liftFirstValue: 5163012 false ) 
	#(209 1 #liftFirstValue: 5163014 false ) 
	#(209 1 #liftFirstValue: 5163013 false ) 
	#(209 1 #liftFirstValue: 5163015 false ) 
	#(209 1 #liftFirstValue: 5163016 false ) 
	#(209 1 #liftFirstValue: 5163018 false ) 
	#(209 1 #liftFirstValue: 5163017 false ) 
	#(209 1 #liftFirstValue: 5163019 false ) 
	#(209 1 #liftFirstValue: 5163020 false ) 
	#(209 1 #liftFirstValue: 5163021 false ) 
	#(209 1 #liftFirstValue: 5163022 false ) 
	#(264 1 #liftFirstValue: 11175937 false ) 
	#(211 1 #liftFirstValue: 5436417 false ) 
	#(200 1 #liftFirstValue: 4173831 false ) 
	#(211 1 #liftFirstValue: 5436419 false ) 
	#(211 1 #liftFirstValue: 5436418 false ) 
	#(211 1 #liftFirstValue: 5436424 false ) 
	#(211 1 #liftFirstValue: 5436425 false ) 
	#(211 1 #liftFirstValue: 5436423 false ) 
	#(263 1 #liftFirstValue: 10972161 false ) 
	#(263 1 #liftFirstValue: 10972162 false ) 
	#(211 1 #liftFirstValue: 5436420 false ) 
	#(272 1 #liftFirstValue: 12674049 false ) 
	#(272 1 #liftFirstValue: 12674050 false ) 
	#(272 1 #liftFirstValue: 12674051 false ) 
	#(272 1 #liftFirstValue: 12674052 false ) 
	#(272 1 #liftFirstValue: 12674053 false ) 
	#(211 1 #liftFirstValue: 5436422 false ) 
	#(211 1 #liftFirstValue: 5436421 false ) 
	#(177 2 #reduceActionFor_eol__2: 2054146 false ) 
	#(193 1 #liftFirstValue: 3363842 false ) 
	#(193 1 #liftFirstValue: 3363845 false ) 
	#(193 1 #liftFirstValue: 3363846 false ) 
	#(193 1 #liftFirstValue: 3363844 false ) 
	#(193 1 #liftFirstValue: 3363843 false ) 
	#(379 2 #reduceActionForDictionaryAccess1: 25771009 false ) 
	#(192 1 #reduceActionForSimpleIdentifier1: 3267585 false ) 
	#(193 1 #liftFirstValue: 3363841 false ) 
	#(192 1 #liftFirstValue: 3267586 false ) 
	#(380 2 #reduceActionForMemberAccess1: 25884673 false ) 
	#(226 0 #reduceActionFor__eol___ModuleStatement__element____1: 6903809 false ) 
	#(326 2 #reduceActionForInfinityLoop1: 19168257 false ) 
	#(182 1 #reduceActionForIntegerLiteral1: 2560001 false ) 
	#(198 2 #reduceActionForLabelTag1: 3886081 false ) 
	#(233 1 #liftFirstValue: 7394305 false ) 
	#(233 1 #liftFirstValue: 7394306 false ) 
	#(291 1 #reduceActionFor___whitespace_________whitespace____Constant__constant____1: 14621697 false ) 
	#(289 2 #reduceActionForConstantList1: 14585857 false ) 
	#(389 0 #reduceActionFor_Argument__argument___________________whitespace____1: 27389953 false ) 
	#(176 3 #reduceActionFormodule1: 2045953 false ) 
	#(179 2 #reduceActionFor__eol___ModuleStatement__element____2: 2118658 false ) 
	#(312 3 #reduceActionForAddressOfClause1: 17410049 false ) 
	#(392 1 #liftFirstValue: 27548673 false ) 
	#(392 1 #liftFirstValue: 27548674 false ) 
	#(392 1 #liftFirstValue: 27548675 false ) 
	#(393 3 #reduceActionForExplicitCall1: 27825153 false ) 
	#(184 1 #reduceActionForDateLiteral1: 2695169 false ) 
	#(183 1 #reduceActionForColorLiteral1: 2629633 false ) 
	#(185 1 #reduceActionForFloatLiteral1: 2756609 false ) 
	#(186 1 #reduceActionForBooleanLiteral1: 2827265 false ) 
	#(187 1 #reduceActionForStringLiteral1: 2895873 false ) 
	#(188 1 #reduceActionForNull1: 2962433 false ) 
	#(181 1 #reduceActionForFileDescriptorLiteral1: 2481153 false ) 
	#(293 1 #liftFirstValue: 15104005 false ) 
	#(180 1 #liftFirstValue: 2313217 false ) 
	#(180 1 #liftFirstValue: 2313218 false ) 
	#(180 1 #liftFirstValue: 2313219 false ) 
	#(180 1 #liftFirstValue: 2313220 false ) 
	#(180 1 #liftFirstValue: 2313221 false ) 
	#(180 1 #liftFirstValue: 2313222 false ) 
	#(180 1 #liftFirstValue: 2313223 false ) 
	#(180 1 #liftFirstValue: 2313224 false ) 
	#(180 1 #liftFirstValue: 2313225 false ) 
	#(293 1 #liftFirstValue: 15104004 false ) 
	#(344 3 #reduceActionForRaiseError1: 22499329 false ) 
	#(293 1 #liftFirstValue: 15104006 false ) 
	#(293 1 #liftFirstValue: 15104007 false ) 
	#(293 1 #liftFirstValue: 15104008 false ) 
	#(296 1 #liftFirstValue: 15519745 false ) 
	#(297 1 #liftFirstValue: 15632385 false ) 
	#(297 1 #liftFirstValue: 15632386 false ) 
	#(297 1 #liftFirstValue: 15632387 false ) 
	#(296 1 #liftFirstValue: 15519746 false ) 
	#(301 1 #liftFirstValue: 16161793 false ) 
	#(301 1 #liftFirstValue: 16161794 false ) 
	#(301 1 #liftFirstValue: 16161795 false ) 
	#(301 1 #liftFirstValue: 16161797 false ) 
	#(301 1 #liftFirstValue: 16161796 false ) 
	#(293 1 #liftFirstValue: 15104001 false ) 
	#(293 1 #liftFirstValue: 15104002 false ) 
	#(397 1 #liftFirstValue: 28271617 false ) 
	#(397 1 #liftFirstValue: 28271618 false ) 
	#(293 1 #liftFirstValue: 15104003 false ) 
	#(222 1 #liftFirstValue: 6579212 false ) 
	#(222 1 #liftFirstValue: 6579201 false ) 
	#(222 1 #liftFirstValue: 6579202 false ) 
	#(222 1 #liftFirstValue: 6579204 false ) 
	#(222 1 #liftFirstValue: 6579203 false ) 
	#(222 1 #liftFirstValue: 6579205 false ) 
	#(222 1 #liftFirstValue: 6579206 false ) 
	#(222 1 #liftFirstValue: 6579207 false ) 
	#(222 1 #liftFirstValue: 6579208 false ) 
	#(222 1 #liftFirstValue: 6579209 false ) 
	#(222 1 #liftFirstValue: 6579210 false ) 
	#(222 1 #liftFirstValue: 6579211 false ) 
	#(222 1 #liftFirstValue: 6579213 false ) 
	#(222 1 #liftFirstValue: 6579214 false ) 
	#(222 1 #reduceActionForBaseType15: 6579215 false ) 
	#(227 1 #liftFirstValue: 6957057 false ) 
	#(227 1 #liftFirstValue: 6957058 false ) 
	#(224 1 #reduceActionForComplexType1: 6863873 false ) 
	#(313 3 #reduceActionForNewClause1: 17507329 false ) 
	#(394 3 #reduceActionForRaiseEvent1: 27931649 false ) 
	#(394 3 #reduceActionForRaiseEvent1: 27931650 false ) 
	#(203 3 #reduceActionForAttribute1: 4857857 false ) 
	#(274 3 #reduceActionForModuleConstant1: 13061121 false ) 
	#(282 3 #reduceActionForModuleConstants1: 13981697 false ) 
	#(279 1 #reduceActionForVariable1: 13603841 false ) 
	#(275 3 #reduceActionForDefineVariable1: 13190145 false ) 
	#(283 3 #reduceActionForDefineVariables1: 14131201 false ) 
	#(326 3 #reduceActionForInfinityLoop3: 19168259 false ) 
	#(216 1 #reduceActionFor__eol____whitespace______whitespace___2: 6178818 false ) 
	#(216 1 #reduceActionFor__eol____whitespace______whitespace___1: 6178817 false ) 
	#(207 1 #reduceActionFor_eol__1: 5011457 false ) 
	#(213 2 #reduceActionForBlock1: 6076417 false ) 
	#(215 2 #reduceActionFor_______eol____whitespace______whitespace__________IntegerLiteral__lineNumber___whitespace_________Statement__statement_________2: 6173698 false ) 
	#(217 1 #reduceActionFor___whitespace_________whitespace____Constant__constant____1: 6178817 false ) 
	#(250 0 #reduceActionFor__eol___ModuleStatement__element____1: 9298945 false ) 
	#(375 3 #reduceActionForExitFor1: 25237505 false ) 
	#(374 3 #reduceActionForExitDo1: 25182209 false ) 
	#(372 3 #reduceActionForExitFunction1: 25060353 false ) 
	#(376 3 #reduceActionForExitProperty1: 25293825 false ) 
	#(373 3 #reduceActionForExitSub1: 25126913 false ) 
	#(359 1 #liftFirstValue: 23723010 false ) 
	#(359 1 #liftFirstValue: 23723009 false ) 
	#(359 1 #liftFirstValue: 23723011 false ) 
	#(362 0 #reduceActionFor__whitespace_______whitespace__Destination__label___1: 23839745 false ) 
	#(364 3 #reduceActionForGoSub1: 24014849 false ) 
	#(363 3 #reduceActionForGoToStatement1: 23917569 false ) 
	#(276 3 #reduceActionForReDefineVariable1: 13273089 false ) 
	#(284 3 #reduceActionForReDefineVariables1: 14229505 false ) 
	#(277 3 #reduceActionForReDefineVariable1: 13391873 false ) 
	#(356 3 #reduceActionForResumeNext1: 23508993 false ) 
	#(355 3 #reduceActionForResumeLabel1: 23413761 false ) 
	#(278 3 #reduceActionForStaticVariable1: 13513729 false ) 
	#(285 3 #reduceActionForStaticVariables1: 14366721 false ) 
	#(245 0 #reduceActionFor__eol___ModuleStatement__element____1: 8778753 false ) 
	#(228 2 #reduceActionForTypedThing2: 6996994 false ) 
	#(273 3 #reduceActionForModuleProperty1: 12957697 false ) 
	#(281 3 #reduceActionForModuleProperties1: 13857793 false ) 
	#(290 2 #reduceActionFor___whitespace_________whitespace____Constant__constant___1: 14621697 false ) 
	#(291 2 #reduceActionFor___whitespace_________whitespace____Constant__constant____2: 14621698 false ) 
	#(379 3 #reduceActionForDictionaryAccess2: 25771010 false ) 
	#(380 3 #reduceActionForMemberAccess2: 25884674 false ) 
	#(383 3 #reduceActionForImplicitParenthesesLessCall1: 26301441 false ) 
	#(391 0 #reduceActionFor_Argument__argument___________________whitespace____1: 27471873 false ) 
	#(206 0 #reduceActionFor__eol___ModuleStatement__element____1: 5009409 false ) 
	#(208 3 #reduceActionForImplements1: 5081089 false ) 
	#(200 3 #reduceActionForOption5: 4173829 false ) 
	#(200 3 #reduceActionForOption1: 4173825 false ) 
	#(221 0 #nil 6546433 false ) 
	#(210 3 #reduceActionForDefType1: 5353473 false ) 
	#(199 3 #reduceActionForheader1: 4098049 false ) 
	#(178 2 #reduceActionFor__eol___ModuleStatement__element___1: 2118657 false ) 
	#(176 4 #reduceActionFormodule2: 2045954 false ) 
	#(298 2 #reduceActionForNegatedOperation2: 15713282 false ) 
	#(298 2 #reduceActionForNegatedOperation2: 15713283 false ) 
	#(298 2 #reduceActionForNegatedOperation2: 15713281 false ) 
	#(190 1 #reduceActionFor_HEX_INTEGER___1: 3037185 false ) 
	#(224 2 #reduceActionForComplexType2: 6863874 false ) 
	#(226 2 #reduceActionFor_____UsableKeywords__member___2: 6903810 false ) 
	#(321 0 #reduceActionFor__whitespace_______whitespace__Destination__label___1: 18366465 false ) 
	#(232 0 #reduceActionFor__whitespace_______whitespace__Destination__label___1: 7325697 false ) 
	#(279 2 #reduceActionForVariable3: 13603843 false ) 
	#(279 2 #reduceActionForVariable2: 13603842 false ) 
	#(288 1 #reduceActionFor___whitespace_________whitespace____Constant__constant____1: 14507009 false ) 
	#(286 2 #reduceActionForVariableList1: 14471169 false ) 
	#(326 4 #reduceActionForInfinityLoop2: 19168258 false ) 
	#(213 3 #reduceActionForBlock2: 6076418 false ) 
	#(216 2 #reduceActionFor__eol____whitespace______whitespace___3: 6178819 false ) 
	#(216 2 #reduceActionFor__eol____whitespace______whitespace___4: 6178820 false ) 
	#(207 2 #reduceActionFor_eol__2: 5011458 false ) 
	#(214 2 #reduceActionFor_______eol____whitespace______whitespace__________IntegerLiteral__lineNumber___whitespace_________Statement__statement________1: 6173697 false ) 
	#(217 2 #reduceActionFor___whitespace_________whitespace____Constant__constant____2: 6178818 false ) 
	#(247 4 #reduceActionForEvent1: 9014273 false ) 
	#(360 2 #reduceActionForDestinationList1: 23795713 false ) 
	#(331 4 #reduceActionForWhileWend1: 20088833 false ) 
	#(228 3 #reduceActionForTypedThing3: 6996995 false ) 
	#(228 3 #reduceActionForTypedThing4: 6996996 false ) 
	#(290 3 #reduceActionFor___whitespace_________whitespace____Constant__constant___2: 14621698 false ) 
	#(290 3 #reduceActionFor___whitespace_________whitespace____Constant__constant___3: 14621699 false ) 
	#(388 1 #reduceActionFor_Argument__argument___________________whitespace___1: 27389953 false ) 
	#(388 1 #reduceActionFor_Argument__argument___________________whitespace___3: 27389955 false ) 
	#(252 1 #reduceActionForParameterPassingStrategy2: 9652226 false ) 
	#(252 1 #liftFirstValue: 9652225 false ) 
	#(386 1 #reduceActionForArgument2: 27199490 false ) 
	#(386 1 #reduceActionForArgument2: 27199489 false ) 
	#(389 2 #reduceActionFor_Argument__argument___________________whitespace____2: 27389954 false ) 
	#(387 2 #reduceActionForArgumentList1: 27371521 false ) 
	#(385 4 #reduceActionForProcedureCallOrArrayAccess1: 26826753 false ) 
	#(267 0 #reduceActionFor_AsType__type__TypeSize__size______1: 11405313 false ) 
	#(221 1 #liftFirstValue: 6546434 false ) 
	#(199 4 #reduceActionForheader2: 4098050 false ) 
	#(176 5 #reduceActionFormodule3: 2045955 false ) 
	#(294 3 #reduceActionForParentheseesExpression1: 15253505 false ) 
	#(299 3 #reduceActionForPositiveOperation2: 15842306 false ) 
	#(299 3 #reduceActionForPositiveOperation2: 15842307 false ) 
	#(299 3 #reduceActionForPositiveOperation2: 15842305 false ) 
	#(300 3 #reduceActionForNotOperation2: 15987714 false ) 
	#(300 3 #reduceActionForNotOperation2: 15987713 false ) 
	#(190 2 #reduceActionFor_eol__2: 3037186 false ) 
	#(304 1 #reduceActionForArithmeticOperator1: 16517121 false ) 
	#(304 1 #reduceActionForArithmeticOperator2: 16517122 false ) 
	#(304 1 #reduceActionForArithmeticOperator3: 16517123 false ) 
	#(304 1 #reduceActionForArithmeticOperator4: 16517124 false ) 
	#(302 1 #reduceActionForArithmeticOperator2: 16295938 false ) 
	#(302 1 #reduceActionForArithmeticOperator4: 16295940 false ) 
	#(302 1 #reduceActionForArithmeticOperator3: 16295939 false ) 
	#(302 1 #reduceActionForArithmeticOperator1: 16295937 false ) 
	#(302 1 #reduceActionForComparisonOperator5: 16295941 false ) 
	#(302 1 #reduceActionForComparisonOperator6: 16295942 false ) 
	#(302 1 #reduceActionForComparisonOperator7: 16295943 false ) 
	#(304 1 #reduceActionForComparisonOperator7: 16517127 false ) 
	#(304 1 #reduceActionForComparisonOperator6: 16517126 false ) 
	#(304 1 #reduceActionForComparisonOperator5: 16517125 false ) 
	#(306 1 #reduceActionFor_Argument__argument___________________whitespace___1: 16724993 false ) 
	#(306 1 #reduceActionForBooleanOperator4: 16724996 false ) 
	#(306 1 #reduceActionForBooleanOperator2: 16724994 false ) 
	#(306 1 #reduceActionFor_Argument__argument___________________whitespace___3: 16724995 false ) 
	#(225 2 #reduceActionFor_____UsableKeywords__member__1: 6903809 false ) 
	#(319 5 #reduceActionForPrintFileClause1: 18219009 false ) 
	#(279 3 #reduceActionForVariable5: 13603845 false ) 
	#(279 3 #reduceActionForVariable4: 13603844 false ) 
	#(287 2 #reduceActionFor___whitespace_________whitespace____Constant__constant___1: 14507009 false ) 
	#(288 2 #reduceActionFor___whitespace_________whitespace____Constant__constant____2: 14507010 false ) 
	#(213 4 #reduceActionForBlock3: 6076419 false ) 
	#(326 5 #reduceActionForInfinityLoop4: 19168260 false ) 
	#(216 3 #reduceActionFor__eol____whitespace______whitespace___5: 6178821 false ) 
	#(250 2 #reduceActionFor__eol___ModuleStatement__element____2: 9298946 false ) 
	#(253 2 #reduceActionForParameterList1: 9730049 false ) 
	#(258 0 #nil 10028033 false ) 
	#(255 0 #reduceActionFor__whitespace_______whitespace__Destination__label___1: 9771009 false ) 
	#(247 5 #reduceActionForEvent2: 9014274 false ) 
	#(362 2 #reduceActionFor___whitespace_________whitespace____Constant__constant____2: 23839746 false ) 
	#(220 0 #reduceActionFor__whitespace_______whitespace__Destination__label___1: 6465537 false ) 
	#(366 5 #reduceActionForOnErrorGoTo1: 24219649 false ) 
	#(368 5 #reduceActionForOnExpressionGo1: 24443905 false ) 
	#(201 5 #reduceActionForOptionBase1: 4611073 false ) 
	#(276 5 #reduceActionForReDefineVariable2: 13273090 false ) 
	#(284 5 #reduceActionForReDefineVariables2: 14229506 false ) 
	#(277 5 #reduceActionForReDefineVariable2: 13391874 false ) 
	#(245 2 #reduceActionFor__eol___ModuleStatement__element____2: 8778754 false ) 
	#(331 5 #reduceActionForWhileWend3: 20088835 false ) 
	#(228 4 #reduceActionForTypedThing5: 6996997 false ) 
	#(236 5 #reduceActionForAssignment2: 7690242 false ) 
	#(280 5 #reduceActionForConstant1: 13727745 false ) 
	#(236 5 #reduceActionForAssignment2: 7690241 false ) 
	#(228 4 #reduceActionForTypedThing6: 6996998 false ) 
	#(274 5 #reduceActionForModuleConstant2: 13061122 false ) 
	#(282 5 #reduceActionForModuleConstants2: 13981698 false ) 
	#(290 4 #reduceActionFor___whitespace_________whitespace____Constant__constant___4: 14621700 false ) 
	#(236 5 #reduceActionForAssignment2: 7690244 false ) 
	#(236 5 #reduceActionForAssignment2: 7690243 false ) 
	#(388 2 #reduceActionFor_Argument__argument___________________whitespace___2: 27389954 false ) 
	#(388 2 #reduceActionFor_Argument__argument___________________whitespace___4: 27389956 false ) 
	#(388 2 #reduceActionFor_Argument__argument___________________whitespace___5: 27389957 false ) 
	#(388 2 #reduceActionFor_Argument__argument___________________whitespace___7: 27389959 false ) 
	#(387 3 #reduceActionForArgumentList2: 27371522 false ) 
	#(390 1 #reduceActionFor_Argument__argument___________________whitespace___1: 27471873 false ) 
	#(390 1 #reduceActionForBooleanOperator4: 27471877 false ) 
	#(391 2 #reduceActionFor_Argument__argument___________________whitespace____2: 27471874 false ) 
	#(385 5 #reduceActionForProcedureCallOrArrayAccess2: 26826754 false ) 
	#(206 2 #reduceActionFor___eol___SetUpAssignation__setting___2: 5009410 false ) 
	#(266 1 #reduceActionFor_AsType__type__TypeSize__size_____1: 11405313 false ) 
	#(267 1 #reduceActionFor_AsType__type__TypeSize__size______2: 11405314 false ) 
	#(200 5 #reduceActionForOption3: 4173827 false ) 
	#(200 5 #reduceActionForOption2: 4173826 false ) 
	#(200 5 #reduceActionForOption4: 4173828 false ) 
	#(200 5 #reduceActionForOption6: 4173830 false ) 
	#(176 6 #reduceActionFormodule4: 2045956 false ) 
	#(294 4 #reduceActionForParentheseesExpression3: 15253507 false ) 
	#(294 4 #reduceActionForParentheseesExpression2: 15253506 false ) 
	#(319 6 #reduceActionForPrintFileClause4: 18219012 false ) 
	#(319 6 #reduceActionForPrintFileClause2: 18219010 false ) 
	#(321 2 #reduceActionFor______whitespace___Expression__value___2: 18366466 false ) 
	#(319 6 #reduceActionForPrintFileClause7: 18219015 false ) 
	#(279 4 #reduceActionForVariable7: 13603847 false ) 
	#(279 4 #reduceActionForVariable6: 13603846 false ) 
	#(230 3 #reduceActionForTypeSize1: 7282689 false ) 
	#(232 2 #reduceActionFor______whitespace___Expression__value___2: 7325698 false ) 
	#(287 3 #reduceActionFor___whitespace_________whitespace____Constant__constant___2: 14507010 false ) 
	#(287 3 #reduceActionFor___whitespace_________whitespace____Constant__constant___3: 14507011 false ) 
	#(329 6 #reduceActionForDoWhileTrue1: 19651585 false ) 
	#(327 6 #reduceActionForWhileTrue1: 19294209 false ) 
	#(213 5 #reduceActionForBlock4: 6076420 false ) 
	#(214 4 #reduceActionFor_______eol____whitespace______whitespace__________IntegerLiteral__lineNumber___whitespace_________Statement__statement________2: 6173698 false ) 
	#(251 1 #reduceActionForEnumEntry1: 9396225 false ) 
	#(249 2 #reduceActionFor__eol___ModuleStatement__element___1: 9298945 false ) 
	#(253 3 #reduceActionForParameterList2: 9730050 false ) 
	#(257 1 #liftFirstValue: 10028033 false ) 
	#(258 1 #liftFirstValue: 10028034 false ) 
	#(260 0 #reduceActionFor__whitespace_______whitespace__Expression__default___1: 10047489 false ) 
	#(361 2 #reduceActionFor___whitespace_________whitespace____Constant__constant___1: 23839745 false ) 
	#(341 0 #reduceActionFor_eol__1: 22017025 false ) 
	#(338 6 #reduceActionForIfThenElseOneLine1: 21708801 false ) 
	#(218 1 #reduceActionForOneLineBlock1: 6403073 false ) 
	#(338 6 #reduceActionForIfThenElseOneLine4: 21708804 false ) 
	#(244 2 #reduceActionFor__eol___ModuleStatement__element___1: 8778753 false ) 
	#(331 6 #reduceActionForWhileWend2: 20088834 false ) 
	#(280 6 #reduceActionForConstant2: 13727746 false ) 
	#(247 6 #reduceActionForEvent3: 9014275 false ) 
	#(386 3 #reduceActionForArgument4: 27199492 false ) 
	#(386 3 #reduceActionForArgument4: 27199491 false ) 
	#(386 3 #reduceActionForArgument6: 27199494 false ) 
	#(386 3 #reduceActionForArgument6: 27199493 false ) 
	#(388 3 #reduceActionFor_Argument__argument___________________whitespace___6: 27389958 false ) 
	#(388 3 #reduceActionFor_Argument__argument___________________whitespace___8: 27389960 false ) 
	#(390 2 #reduceActionFor_______________whitespace___Argument__argument_____3: 27471875 false ) 
	#(390 2 #reduceActionFor_Argument__argument___________________whitespace___2: 27471874 false ) 
	#(390 2 #reduceActionFor_Argument__argument___________________whitespace___7: 27471879 false ) 
	#(390 2 #reduceActionFor_______________whitespace___Argument__argument_____6: 27471878 false ) 
	#(204 6 #reduceActionForConfiguration1: 4947969 false ) 
	#(205 2 #reduceActionFor__eol___ModuleStatement__element___1: 5009409 false ) 
	#(266 2 #reduceActionFor_____UsableKeywords__member__1: 11405314 false ) 
	#(294 5 #reduceActionForParentheseesExpression4: 15253508 false ) 
	#(310 5 #reduceActionForEquals1: 17142785 false ) 
	#(309 5 #reduceActionForConcatenationOperation1: 17007617 false ) 
	#(310 5 #reduceActionForEquals1: 17142787 false ) 
	#(295 5 #reduceActionForInterval1: 15381505 false ) 
	#(303 5 #reduceActionForComparisonOperation1: 16370689 false ) 
	#(305 5 #reduceActionForArithmeticOperation1: 16583681 false ) 
	#(307 5 #reduceActionForBooleanBinaryOperation1: 16774145 false ) 
	#(310 5 #reduceActionForEquals1: 17142786 false ) 
	#(322 7 #reduceActionForLineInputClause5: 18440197 false ) 
	#(322 7 #reduceActionForLineInputClause5: 18440193 false ) 
	#(314 1 #liftFirstValue: 17580033 false ) 
	#(314 1 #liftFirstValue: 17580034 false ) 
	#(314 1 #liftFirstValue: 17580035 false ) 
	#(314 1 #liftFirstValue: 17580036 false ) 
	#(314 1 #liftFirstValue: 17580037 false ) 
	#(319 7 #reduceActionForPrintFileClause5: 18219013 false ) 
	#(319 7 #reduceActionForPrintFileClause3: 18219011 false ) 
	#(320 2 #reduceActionFor______whitespace___Expression__value__1: 18366465 false ) 
	#(319 7 #reduceActionForPrintFileClause10: 18219018 false ) 
	#(319 7 #reduceActionForPrintFileClause8: 18219016 false ) 
	#(202 5 #reduceActionForSetUpAssignation1: 4704257 false ) 
	#(202 5 #reduceActionForSetUpAssignation1: 4704258 false ) 
	#(279 5 #reduceActionForVariable8: 13603848 false ) 
	#(231 2 #reduceActionFor______whitespace___Expression__value__1: 7325697 false ) 
	#(230 4 #reduceActionForTypeSize2: 7282690 false ) 
	#(287 4 #reduceActionFor___whitespace_________whitespace____Constant__constant___4: 14507012 false ) 
	#(328 7 #reduceActionForUntilTrue1: 19477505 false ) 
	#(327 7 #reduceActionForWhileTrue3: 19294211 false ) 
	#(330 7 #reduceActionForDoUntilTrue1: 19840001 false ) 
	#(329 7 #reduceActionForDoWhileTrue3: 19651587 false ) 
	#(260 1 #reduceActionFor_AsType__type__TypeSize__size______2: 10047490 false ) 
	#(256 3 #reduceActionForParameter1: 9857025 false ) 
	#(253 4 #reduceActionForParameterList3: 9730051 false ) 
	#(255 2 #reduceActionFor______whitespace___Expression__value___2: 9771010 false ) 
	#(361 3 #reduceActionFor___whitespace_________whitespace____Constant__constant___2: 23839746 false ) 
	#(361 3 #reduceActionFor___whitespace_________whitespace____Constant__constant___3: 23839747 false ) 
	#(218 2 #reduceActionForOneLineBlock7: 6403079 false ) 
	#(218 2 #reduceActionForOneLineBlock4: 6403076 false ) 
	#(220 2 #reduceActionFor___whitespace_________whitespace____Constant__constant____2: 6465538 false ) 
	#(239 7 #reduceActionForRename1: 8298497 false ) 
	#(367 7 #reduceActionForOnErrorResumeNext1: 24318977 false ) 
	#(352 1 #liftFirstValue: 23186433 false ) 
	#(353 1 #reduceActionFor_HEX_INTEGER___1: 23186433 false ) 
	#(246 2 #reduceActionForTypeEntry1: 8878081 false ) 
	#(331 7 #reduceActionForWhileWend4: 20088836 false ) 
	#(370 7 #reduceActionForWith1: 24754177 false ) 
	#(229 6 #reduceActionForTypedAndInstantiatedThing1: 7154689 false ) 
	#(228 6 #reduceActionForTypedThing7: 6996999 false ) 
	#(247 7 #reduceActionForEvent4: 9014276 false ) 
	#(237 7 #reduceActionForExplicitAssignement2: 7872514 false ) 
	#(237 7 #reduceActionForExplicitAssignement2: 7872513 false ) 
	#(237 7 #reduceActionForExplicitAssignement2: 7872516 false ) 
	#(237 7 #reduceActionForExplicitAssignement2: 7872515 false ) 
	#(390 3 #reduceActionFor_______________whitespace___Argument__argument_____4: 27471876 false ) 
	#(390 3 #reduceActionFor_Argument__argument___________________whitespace___8: 27471880 false ) 
	#(322 8 #reduceActionForLineInputClause6: 18440198 false ) 
	#(322 8 #reduceActionForLineInputClause7: 18440199 false ) 
	#(322 8 #reduceActionForLineInputClause6: 18440194 false ) 
	#(322 8 #reduceActionForLineInputClause7: 18440195 false ) 
	#(319 8 #reduceActionForPrintFileClause6: 18219014 false ) 
	#(320 3 #reduceActionFor______whitespace___Expression__value__2: 18366466 false ) 
	#(319 8 #reduceActionForPrintFileClause11: 18219019 false ) 
	#(319 8 #reduceActionForPrintFileClause9: 18219017 false ) 
	#(231 3 #reduceActionFor______whitespace___Expression__value__2: 7325698 false ) 
	#(327 8 #reduceActionForWhileTrue2: 19294210 false ) 
	#(329 8 #reduceActionForDoWhileTrue2: 19651586 false ) 
	#(248 8 #reduceActionForDefineEnum1: 9186305 false ) 
	#(256 4 #reduceActionForParameter2: 9857026 false ) 
	#(253 5 #reduceActionForParameterList4: 9730052 false ) 
	#(361 4 #reduceActionFor___whitespace_________whitespace____Constant__constant___4: 23839748 false ) 
	#(218 3 #reduceActionForOneLineBlock10: 6403082 false ) 
	#(342 1 #reduceActionForElse1: 22151169 false ) 
	#(341 2 #reduceActionFor_eol__2: 22017026 false ) 
	#(340 1 #liftFirstValue: 22017025 false ) 
	#(219 2 #reduceActionFor___whitespace_________whitespace____Constant__constant___1: 6465537 false ) 
	#(218 3 #reduceActionForOneLineBlock2: 6403074 false ) 
	#(353 2 #reduceActionFor_eol__2: 23186434 false ) 
	#(243 8 #reduceActionForDefineType1: 8666113 false ) 
	#(228 7 #reduceActionForTypedThing8: 6997000 false ) 
	#(228 7 #reduceActionForTypedThing9: 6997001 false ) 
	#(386 5 #reduceActionForArgument8: 27199496 false ) 
	#(386 5 #reduceActionForArgument8: 27199495 false ) 
	#(268 8 #reduceActionForDefineSub1: 11521025 false ) 
	#(395 7 #reduceActionForTypeOf1: 28062721 false ) 
	#(395 7 #reduceActionForTypeOf2: 28062722 false ) 
	#(322 9 #reduceActionForLineInputClause8: 18440200 false ) 
	#(322 9 #reduceActionForLineInputClause8: 18440196 false ) 
	#(316 1 #liftFirstValue: 17711108 false ) 
	#(316 1 #liftFirstValue: 17711106 false ) 
	#(316 1 #liftFirstValue: 17711107 false ) 
	#(315 1 #liftFirstValue: 17656835 false ) 
	#(315 1 #liftFirstValue: 17656833 false ) 
	#(316 1 #liftFirstValue: 17711105 false ) 
	#(315 1 #liftFirstValue: 17656834 false ) 
	#(319 9 #reduceActionForPrintFileClause12: 18219020 false ) 
	#(328 9 #reduceActionForUntilTrue2: 19477506 false ) 
	#(327 9 #reduceActionForWhileTrue4: 19294212 false ) 
	#(330 9 #reduceActionForDoUntilTrue2: 19840002 false ) 
	#(329 9 #reduceActionForDoWhileTrue4: 19651588 false ) 
	#(256 5 #reduceActionForParameter9: 9857033 false ) 
	#(256 5 #reduceActionForParameter3: 9857027 false ) 
	#(256 5 #reduceActionForParameter5: 9857029 false ) 
	#(254 3 #reduceActionFor______whitespace__Parameter__parameter__1: 9771009 false ) 
	#(218 4 #reduceActionForOneLineBlock8: 6403080 false ) 
	#(218 4 #reduceActionForOneLineBlock5: 6403077 false ) 
	#(342 2 #reduceActionForElse2: 22151170 false ) 
	#(338 9 #reduceActionForIfThenElseOneLine2: 21708802 false ) 
	#(338 9 #reduceActionForIfThenElseOneLine3: 21708803 false ) 
	#(219 3 #reduceActionFor___whitespace_________whitespace____Constant__constant___2: 6465538 false ) 
	#(219 3 #reduceActionFor___whitespace_________whitespace____Constant__constant___3: 6465539 false ) 
	#(218 4 #reduceActionForOneLineBlock3: 6403075 false ) 
	#(338 9 #reduceActionForIfThenElseOneLine5: 21708805 false ) 
	#(338 9 #reduceActionForIfThenElseOneLine6: 21708806 false ) 
	#(350 0 #reduceActionFor__whitespace_______whitespace__Destination__label___1: 22985729 false ) 
	#(347 1 #liftFirstValue: 22787076 false ) 
	#(347 1 #liftFirstValue: 22787074 false ) 
	#(347 1 #liftFirstValue: 22787075 false ) 
	#(347 1 #liftFirstValue: 22787073 false ) 
	#(246 4 #reduceActionForTypeEntry2: 8878082 false ) 
	#(370 9 #reduceActionForWith2: 24754178 false ) 
	#(228 8 #reduceActionForTypedThing10: 6997002 false ) 
	#(265 9 #reduceActionForDefineFunction1: 11198465 false ) 
	#(268 9 #reduceActionForDefineSub3: 11521027 false ) 
	#(268 9 #reduceActionForDefineSub2: 11521026 false ) 
	#(333 10 #reduceActionForForEach1: 20377601 false ) 
	#(251 5 #reduceActionForEnumEntry2: 9396226 false ) 
	#(256 6 #reduceActionForParameter10: 9857034 false ) 
	#(256 6 #reduceActionForParameter4: 9857028 false ) 
	#(259 4 #reduceActionFor__whitespace_______whitespace__Expression__default__1: 10047489 false ) 
	#(256 6 #reduceActionForParameter6: 9857030 false ) 
	#(218 5 #reduceActionForOneLineBlock11: 6403083 false ) 
	#(218 5 #reduceActionForOneLineBlock9: 6403081 false ) 
	#(218 5 #reduceActionForOneLineBlock6: 6403078 false ) 
	#(339 10 #reduceActionForIfThenElse1: 21910529 false ) 
	#(342 3 #reduceActionForElse3: 22151171 false ) 
	#(219 4 #reduceActionFor___whitespace_________whitespace____Constant__constant___4: 6465540 false ) 
	#(348 4 #reduceActionForCase7: 22866951 false ) 
	#(348 4 #reduceActionForCase1: 22866945 false ) 
	#(351 10 #reduceActionForSelect1: 23095297 false ) 
	#(246 5 #reduceActionForTypeEntry3: 8878083 false ) 
	#(246 5 #reduceActionForTypeEntry4: 8878084 false ) 
	#(248 10 #reduceActionForDefineEnum2: 9186306 false ) 
	#(243 10 #reduceActionForDefineType2: 8666114 false ) 
	#(261 10 #reduceActionForDeclareSub1: 10269697 false ) 
	#(265 10 #reduceActionForDefineFunction3: 11198467 false ) 
	#(265 10 #reduceActionForDefineFunction2: 11198466 false ) 
	#(269 10 #reduceActionForModulePropertyGet1: 11791361 false ) 
	#(271 10 #reduceActionForModulePropertyLet1: 12393473 false ) 
	#(270 10 #reduceActionForModulePropertySet1: 12111873 false ) 
	#(268 10 #reduceActionForDefineSub4: 11521028 false ) 
	#(268 10 #reduceActionForDefineSub9: 11521033 false ) 
	#(268 10 #reduceActionForDefineSub5: 11521029 false ) 
	#(333 11 #reduceActionForForEach9: 20377609 false ) 
	#(333 11 #reduceActionForForEach5: 20377605 false ) 
	#(318 11 #reduceActionForOpenFileClause1: 17862657 false ) 
	#(256 7 #reduceActionForParameter11: 9857035 false ) 
	#(256 7 #reduceActionForParameter13: 9857037 false ) 
	#(256 7 #reduceActionForParameter7: 9857031 false ) 
	#(218 6 #reduceActionForOneLineBlock12: 6403084 false ) 
	#(342 4 #reduceActionForElse4: 22151172 false ) 
	#(339 11 #reduceActionForIfThenElse3: 21910531 false ) 
	#(348 5 #reduceActionForCase10: 22866954 false ) 
	#(348 5 #reduceActionForCase8: 22866952 false ) 
	#(348 5 #reduceActionForCase8: 22866953 false ) 
	#(350 2 #reduceActionFor______whitespace___Expression__value___2: 22985730 false ) 
	#(348 5 #reduceActionForCase4: 22866948 false ) 
	#(348 5 #reduceActionForCase2: 22866946 false ) 
	#(348 5 #reduceActionForCase2: 22866947 false ) 
	#(246 6 #reduceActionForTypeEntry5: 8878085 false ) 
	#(262 11 #reduceActionForDeclareFunction1: 10607617 false ) 
	#(261 11 #reduceActionForDeclareSub4: 10269700 false ) 
	#(265 11 #reduceActionForDefineFunction4: 11198468 false ) 
	#(269 11 #reduceActionForModulePropertyGet2: 11791362 false ) 
	#(265 11 #reduceActionForDefineFunction9: 11198473 false ) 
	#(268 11 #reduceActionForDefineSub11: 11521035 false ) 
	#(268 11 #reduceActionForDefineSub10: 11521034 false ) 
	#(265 11 #reduceActionForDefineFunction5: 11198469 false ) 
	#(268 11 #reduceActionForDefineSub7: 11521031 false ) 
	#(268 11 #reduceActionForDefineSub6: 11521030 false ) 
	#(333 12 #reduceActionForForEach2: 20377602 false ) 
	#(333 12 #reduceActionForForEach13: 20377613 false ) 
	#(333 12 #reduceActionForForEach3: 20377603 false ) 
	#(334 12 #reduceActionForForNext1: 20664321 false ) 
	#(335 12 #reduceActionForForNext1: 20984833 false ) 
	#(256 8 #reduceActionForParameter12: 9857036 false ) 
	#(256 8 #reduceActionForParameter14: 9857038 false ) 
	#(256 8 #reduceActionForParameter8: 9857032 false ) 
	#(343 5 #reduceActionForElseIf1: 22260737 false ) 
	#(339 12 #reduceActionForIfThenElse2: 21910530 false ) 
	#(348 6 #reduceActionForCase11: 22866955 false ) 
	#(348 6 #reduceActionForCase11: 22866956 false ) 
	#(348 6 #reduceActionForCase5: 22866949 false ) 
	#(348 6 #reduceActionForCase5: 22866950 false ) 
	#(348 6 #reduceActionForCase19: 22866963 false ) 
	#(348 6 #reduceActionForCase13: 22866957 false ) 
	#(351 12 #reduceActionForSelect2: 23095298 false ) 
	#(262 12 #reduceActionForDeclareFunction4: 10607620 false ) 
	#(269 12 #reduceActionForModulePropertyGet3: 11791363 false ) 
	#(261 12 #reduceActionForDeclareSub7: 10269703 false ) 
	#(265 12 #reduceActionForDefineFunction11: 11198475 false ) 
	#(265 12 #reduceActionForDefineFunction10: 11198474 false ) 
	#(269 12 #reduceActionForModulePropertyGet7: 11791367 false ) 
	#(271 12 #reduceActionForModulePropertyLet3: 12393475 false ) 
	#(270 12 #reduceActionForModulePropertySet3: 12111875 false ) 
	#(268 12 #reduceActionForDefineSub12: 11521036 false ) 
	#(268 12 #reduceActionForDefineSub13: 11521037 false ) 
	#(265 12 #reduceActionForDefineFunction7: 11198471 false ) 
	#(265 12 #reduceActionForDefineFunction6: 11198470 false ) 
	#(269 12 #reduceActionForModulePropertyGet4: 11791364 false ) 
	#(271 12 #reduceActionForModulePropertyLet2: 12393474 false ) 
	#(270 12 #reduceActionForModulePropertySet2: 12111874 false ) 
	#(268 12 #reduceActionForDefineSub8: 11521032 false ) 
	#(189 11 #reduceActionForGuidLiteral1: 3014657 false ) 
	#(333 13 #reduceActionForForEach10: 20377610 false ) 
	#(333 13 #reduceActionForForEach11: 20377611 false ) 
	#(333 13 #reduceActionForForEach6: 20377606 false ) 
	#(333 13 #reduceActionForForEach7: 20377607 false ) 
	#(334 13 #reduceActionForForNext5: 20664325 false ) 
	#(335 13 #reduceActionForForNext5: 20984834 false ) 
	#(318 13 #reduceActionForOpenFileClause5: 17862661 false ) 
	#(318 13 #reduceActionForOpenFileClause3: 17862659 false ) 
	#(256 9 #reduceActionForParameter15: 9857039 false ) 
	#(343 6 #reduceActionForElseIf2: 22260738 false ) 
	#(339 13 #reduceActionForIfThenElse4: 21910532 false ) 
	#(349 3 #reduceActionFor______whitespace__Parameter__parameter__1: 22985729 false ) 
	#(348 7 #reduceActionForCase22: 22866966 false ) 
	#(348 7 #reduceActionForCase20: 22866964 false ) 
	#(348 7 #reduceActionForCase20: 22866965 false ) 
	#(348 7 #reduceActionForCase16: 22866960 false ) 
	#(348 7 #reduceActionForCase14: 22866958 false ) 
	#(348 7 #reduceActionForCase14: 22866959 false ) 
	#(261 13 #reduceActionForDeclareSub2: 10269698 false ) 
	#(262 13 #reduceActionForDeclareFunction7: 10607623 false ) 
	#(261 13 #reduceActionForDeclareSub10: 10269706 false ) 
	#(265 13 #reduceActionForDefineFunction12: 11198476 false ) 
	#(269 13 #reduceActionForModulePropertyGet8: 11791368 false ) 
	#(265 13 #reduceActionForDefineFunction13: 11198477 false ) 
	#(268 13 #reduceActionForDefineSub15: 11521039 false ) 
	#(268 13 #reduceActionForDefineSub14: 11521038 false ) 
	#(265 13 #reduceActionForDefineFunction8: 11198472 false ) 
	#(269 13 #reduceActionForModulePropertyGet5: 11791365 false ) 
	#(333 14 #reduceActionForForEach14: 20377614 false ) 
	#(333 14 #reduceActionForForEach15: 20377615 false ) 
	#(333 14 #reduceActionForForEach4: 20377604 false ) 
	#(334 14 #reduceActionForForNext2: 20664322 false ) 
	#(334 14 #reduceActionForForNext3: 20664323 false ) 
	#(256 10 #reduceActionForParameter16: 9857040 false ) 
	#(343 7 #reduceActionForElseIf3: 22260739 false ) 
	#(348 8 #reduceActionForCase23: 22866967 false ) 
	#(348 8 #reduceActionForCase23: 22866968 false ) 
	#(348 8 #reduceActionForCase17: 22866961 false ) 
	#(348 8 #reduceActionForCase17: 22866962 false ) 
	#(262 14 #reduceActionForDeclareFunction2: 10607618 false ) 
	#(261 14 #reduceActionForDeclareSub3: 10269699 false ) 
	#(261 14 #reduceActionForDeclareSub5: 10269701 false ) 
	#(262 14 #reduceActionForDeclareFunction10: 10607626 false ) 
	#(269 14 #reduceActionForModulePropertyGet9: 11791369 false ) 
	#(265 14 #reduceActionForDefineFunction15: 11198479 false ) 
	#(265 14 #reduceActionForDefineFunction14: 11198478 false ) 
	#(269 14 #reduceActionForModulePropertyGet10: 11791370 false ) 
	#(271 14 #reduceActionForModulePropertyLet4: 12393476 false ) 
	#(270 14 #reduceActionForModulePropertySet4: 12111876 false ) 
	#(268 14 #reduceActionForDefineSub16: 11521040 false ) 
	#(269 14 #reduceActionForModulePropertyGet6: 11791366 false ) 
	#(333 15 #reduceActionForForEach12: 20377612 false ) 
	#(333 15 #reduceActionForForEach8: 20377608 false ) 
	#(334 15 #reduceActionForForNext6: 20664326 false ) 
	#(334 15 #reduceActionForForNext7: 20664327 false ) 
	#(318 15 #reduceActionForOpenFileClause7: 17862663 false ) 
	#(343 8 #reduceActionForElseIf4: 22260740 false ) 
	#(262 15 #reduceActionForDeclareFunction3: 10607619 false ) 
	#(262 15 #reduceActionForDeclareFunction5: 10607621 false ) 
	#(261 15 #reduceActionForDeclareSub6: 10269702 false ) 
	#(261 15 #reduceActionForDeclareSub8: 10269704 false ) 
	#(265 15 #reduceActionForDefineFunction16: 11198480 false ) 
	#(269 15 #reduceActionForModulePropertyGet11: 11791371 false ) 
	#(333 16 #reduceActionForForEach16: 20377616 false ) 
	#(336 16 #reduceActionForForStepNext1: 21222401 false ) 
	#(334 16 #reduceActionForForNext4: 20664324 false ) 
	#(262 16 #reduceActionForDeclareFunction6: 10607622 false ) 
	#(262 16 #reduceActionForDeclareFunction8: 10607624 false ) 
	#(261 16 #reduceActionForDeclareSub9: 10269705 false ) 
	#(261 16 #reduceActionForDeclareSub11: 10269707 false ) 
	#(269 16 #reduceActionForModulePropertyGet12: 11791372 false ) 
	#(336 17 #reduceActionForForStepNext5: 21222405 false ) 
	#(334 17 #reduceActionForForNext8: 20664328 false ) 
	#(318 17 #reduceActionForOpenFileClause2: 17862658 false ) 
	#(262 17 #reduceActionForDeclareFunction9: 10607625 false ) 
	#(262 17 #reduceActionForDeclareFunction11: 10607627 false ) 
	#(261 17 #reduceActionForDeclareSub12: 10269708 false ) 
	#(336 18 #reduceActionForForStepNext2: 21222402 false ) 
	#(336 18 #reduceActionForForStepNext3: 21222403 false ) 
	#(262 18 #reduceActionForDeclareFunction12: 10607628 false ) 
	#(336 19 #reduceActionForForStepNext6: 21222406 false ) 
	#(336 19 #reduceActionForForStepNext7: 21222407 false ) 
	#(318 19 #reduceActionForOpenFileClause6: 17862662 false ) 
	#(318 19 #reduceActionForOpenFileClause4: 17862660 false ) 
	#(336 20 #reduceActionForForStepNext4: 21222404 false ) 
	#(336 21 #reduceActionForForStepNext8: 21222408 false ) 
	#(318 21 #reduceActionForOpenFileClause8: 17862664 false )
	).
]

{ #category : #'generated-accessing' }
VBParser class >> scannerClass [
	^VBScanner
]

{ #category : #generated }
VBParser class >> startingStateForBehaviourDefinition [
	^ 4
]

{ #category : #generated }
VBParser class >> startingStateForModuleStatement [
	^ 3
]

{ #category : #generated }
VBParser class >> startingStateForStatement [
	^ 2
]

{ #category : #generated }
VBParser class >> startingStateFormodule [
	^ 1
]

{ #category : #generated }
VBParser class >> symbolNames [
	^ #('"!"' '"&"' '"("' '")"' '"*"' '"+"' '","' '"-"' '"."' '"/"' '":"' '":="' '";"' '"<"' '"<<"' '"<="' '"<>"' '"="' '">"' '">="' '">>"' '"APPEND"' '"AS"' '"AddressOf"' '"BINARY"' '"Call"' '"DefBool"' '"DefByte"' '"DefCur"' '"DefDate"' '"DefDbl"' '"DefDec"' '"DefInt"' '"DefLng"' '"DefLngPtr"' '"DefLnglng"' '"DefObj"' '"DefSng"' '"DefStr"' '"DefVar"' '"DoEvents"' '"ERROR"' '"FOR"' '"INPUT"' '"IS"' '"IsNot"' '"LIKE"' '"Line"' '"Lock Read Write"' '"Lock Read"' '"Lock Write"' '"Mod"' '"NEW"' '"OBJECT"' '"OPEN"' '"Output"' '"PRINT"' '"RaiseEvent"' '"Random"' '"Read Write"' '"Read"' '"Shared"' '"TypeOf"' '"WithEvents"' '"Write"' '"["' '"\"' '"^"' '"alias"' '"and"' '"attribute"' '"base"' '"beep"' '"begin"' '"bold"' '"boolean"' '"byref"' '"byte"' '"byval"' '"case"' '"class"' '"collection"' '"compare"' '"const"' '"currency"' '"database"' '"date"' '"decimal"' '"declare"' '"dim"' '"do"' '"double"' '"each"' '"else"' '"else:"' '"elseif"' '"end"' '"enum"' '"eqv"' '"event"' '"exit"' '"explicit"' '"friend"' '"function"' '"get"' '"global"' '"gosub"' '"goto"' '"if"' '"implements"' '"in"' '"integer"' '"len"' '"let"' '"lib"' '"long"' '"longlong"' '"longptr"' '"loop"' '"module"' '"name"' '"next"' '"not"' '"on"' '"option"' '"optional"' '"or"' '"paramarray"' '"preserve"' '"private"' '"property"' '"public"' '"redim"' '"resume"' '"return"' '"select"' '"set"' '"single"' '"static"' '"step"' '"string"' '"sub"' '"text"' '"then"' '"then:"' '"to"' '"type"' '"until"' '"variant"' '"version"' '"wend"' '"while"' '"with"' '"xor"' '"{"' '"}"' '"~"' '<lineContinuation>' '<HEX_INTEGER>' '<DATE_LITERAL>' '<COLOR_LITERAL>' '<INTEGER_LITERAL>' '<FLOATING_POINT_LITERAL>' '<BOOLEAN_LITERAL>' '<STRING_LITERAL>' '<NULL_LITERAL>' '<IDENTIFIER>' '<SBIDENTIFIER>' '<DEFTYPE>' '<HASH_NUMBER>' '<HASH_IDENTIFIER>' '<whitespace>' '<eol>' '<comment>' 'B e g i n' 'module' '<eol>*' '(<eol>* ModuleStatement ''element'' )' '(<eol>* ModuleStatement ''element'' )*' 'literal' 'FileDescriptorLiteral' 'IntegerLiteral' 'ColorLiteral' 'DateLiteral' 'FloatLiteral' 'BooleanLiteral' 'StringLiteral' 'Null' 'GuidLiteral' '<HEX_INTEGER> +' 'Identifier' 'KeywordIdentifier' 'UsableKeywords' 'IdentifierWords' 'HashIdentifier' 'SquareBracketIdentifier' 'SimpleIdentifier' 'LabelTag' 'header' 'Option' 'OptionBase' 'SetUpAssignation' 'Attribute' 'Configuration' '( <eol>+ SetUpAssignation ''setting'')' '( <eol>+ SetUpAssignation ''setting'')*' '<eol>+' 'Implements' 'DefTypeLabel' 'DefType' 'ModuleStatement' 'Statement' 'Block' '(
		 (<eol>| <whitespace>?":"<whitespace>?)+ 
		 (IntegerLiteral ''lineNumber'' <whitespace>)? 
		  Statement ''statement'' 
	   )' '(
		 (<eol>| <whitespace>?":"<whitespace>?)+ 
		 (IntegerLiteral ''lineNumber'' <whitespace>)? 
		  Statement ''statement'' 
	   )*' '(<eol>| <whitespace>?":"<whitespace>?)' '(<eol>| <whitespace>?":"<whitespace>?)+' 'OneLineBlock' '(<whitespace>? ":" <whitespace>? Statement ''statement'')' '(<whitespace>? ":" <whitespace>? Statement ''statement'')*' '<whitespace>?' 'BaseType' 'Visibility' 'ComplexType' '("." UsableKeywords ''member'')' '("." UsableKeywords ''member'')*' 'Type' 'TypedThing' 'TypedAndInstantiatedThing' 'TypeSize' '(","<whitespace>? Expression ''size'')' '(","<whitespace>? Expression ''size'')*' 'AsType' 'StatementAssignment' 'ExplicitLetSet' 'Assignment' 'ExplicitAssignement' 'OtherStatements' 'Rename' 'Beep' 'DoEvents' 'Types' 'DefineType' '( <eol>* TypeEntry ''field'' )' '( <eol>* TypeEntry ''field'' )*' 'TypeEntry' 'Event' 'DefineEnum' '( <eol>* EnumEntry ''field'')' '( <eol>* EnumEntry ''field'')*' 'EnumEntry' 'ParameterPassingStrategy' 'ParameterList' '("," <whitespace> Parameter ''parameter'')' '("," <whitespace> Parameter ''parameter'')*' 'Parameter' '(AsType ''type'')' '(AsType ''type'')?' '(<whitespace> "=" <whitespace> Expression ''default'')' '(<whitespace> "=" <whitespace> Expression ''default'')?' 'DeclareSub' 'DeclareFunction' 'DeclareExternal' 'Modifier' 'DefineFunction' '(AsType ''type'' TypeSize ''size''?  )' '(AsType ''type'' TypeSize ''size''?  )?' 'DefineSub' 'ModulePropertyGet' 'ModulePropertySet' 'ModulePropertyLet' 'BehaviourDefinition' 'ModuleProperty' 'ModuleConstant' 'DefineVariable' 'ReDefineVariable' 'ReDefineExpression' 'StaticVariable' 'Variable' 'Constant' 'ModuleProperties' 'ModuleConstants' 'DefineVariables' 'ReDefineVariables' 'StaticVariables' 'VariableList' '( <whitespace>? ","  <whitespace>?  Variable ''variable'' )' '( <whitespace>? ","  <whitespace>?  Variable ''variable'' )+' 'ConstantList' '( <whitespace>? ","  <whitespace>?  Constant ''constant'' )' '( <whitespace>? ","  <whitespace>?  Constant ''constant'' )+' 'VariableDefinition' 'Expression' 'ParentheseesExpression' 'Interval' 'Operation' 'UnaryOperation' 'NegatedOperation' 'PositiveOperation' 'NotOperation' 'BinaryOperation' 'ComparisonOperator' 'ComparisonOperation' 'ArithmeticOperator' 'ArithmeticOperation' 'BooleanOperator' 'BooleanBinaryOperation' 'Concatenable' 'ConcatenationOperation' 'Equals' 'ValueClause' 'AddressOfClause' 'NewClause' 'OpenMode' 'OpenAccess' 'Lock' 'FileClauses' 'OpenFileClause' 'PrintFileClause' '(";" <whitespace>? Expression ''value'')' '(";" <whitespace>? Expression ''value'')*' 'LineInputClause' 'ControlFlowStatement' 'Loops' 'DoLoop' 'InfinityLoop' 'WhileTrue' 'UntilTrue' 'DoWhileTrue' 'DoUntilTrue' 'WhileWend' 'ForLoop' 'ForEach' 'ForNext' 'ForNextOneLine' 'ForStepNext' 'If' 'IfThenElseOneLine' 'IfThenElse' '(ElseIf ''elseif'')' '(ElseIf ''elseif'')*' 'Else' 'ElseIf' 'RaiseError' 'To' 'Label' 'CaseCondition' 'Case' '("," <whitespace> (CaseCondition ''expression''))' '("," <whitespace> (CaseCondition ''expression''))*' 'Select' '(Case ''case'')' '(Case ''case'')+' 'Resume' 'ResumeLabel' 'ResumeNext' 'ResumeEmpty' 'Go' 'Destination' 'DestinationList' '(<whitespace>?"," <whitespace>?Destination ''label'')' '(<whitespace>?"," <whitespace>?Destination ''label'')*' 'GoToStatement' 'GoSub' 'On' 'OnErrorGoTo' 'OnErrorResumeNext' 'OnExpressionGo' 'Error' 'With' 'Exits' 'ExitFunction' 'ExitSub' 'ExitDo' 'ExitFor' 'ExitProperty' 'Return' 'StateAccessBase' 'DictionaryAccess' 'MemberAccess' 'StateAccess' 'ImplicitCallExpression' 'ImplicitParenthesesLessCall' 'ProcedureCallOrArrayExpression' 'ProcedureCallOrArrayAccess' 'Argument' 'ArgumentList' '(Argument ''argument'' ? ("," | ";" )  <whitespace>?)' '(Argument ''argument'' ? ("," | ";" )  <whitespace>?)*' '(("," | ";" ) <whitespace>? Argument ''argument'' ? )' '(("," | ";" ) <whitespace>? Argument ''argument'' ? )*' 'ExplicitCallSelectorTypes' 'ExplicitCall' 'RaiseEvent' 'TypeOf' 'StatementCalls' 'ExpressionCalls' 'E O F' 'error')
]

{ #category : #generated }
VBParser class >> symbolTypes [
	^ #(#SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #VBModuleNode #VBModuleNode #OrderedCollection #OrderedCollection #OrderedCollection #VBProgramNode #VBFileDescriptorLiteralNode #VBIntegerLiteralNode #VBColorLiteralNode #VBDateLiteralNode #VBFloatLiteralNode #VBBooleanLiteralNode #VBStringLiteralNode #VBNullNode #VBGuidLiteralNode #OrderedCollection #VBProgramNode #VBProgramNode #SmaCCToken #SmaCCToken #VBHashIdentifierNode #VBSquareBracketIdentifierNode #VBSimpleIdentifierNode #VBLabelTagNode #VBHeaderNode #VBProgramNode #VBOptionBaseNode #VBSetUpAssignationNode #VBModuleAttributeNode #VBConfigurationNode #OrderedCollection #OrderedCollection #OrderedCollection #VBImplementsNode #SmaCCToken #VBDefTypeNode #VBProgramNode #Object #VBBlockNode #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #VBBlockNode #OrderedCollection #OrderedCollection #SmaCCToken #Object #SmaCCToken #VBComplexTypeNode #OrderedCollection #OrderedCollection #Object #VBTypedThingNode #VBAsTypeAndNewNode #VBTypeSizeNode #OrderedCollection #OrderedCollection #VBProgramNode #VBExplicitAssignementNode #SmaCCToken #VBExplicitAssignementNode #VBExplicitAssignementNode #Object #VBRenameNode #SmaCCToken #VBDoEventsNode #VBProgramNode #VBDefineTypeNode #OrderedCollection #OrderedCollection #VBTypeEntryNode #VBEventNode #VBDefineEnumNode #OrderedCollection #OrderedCollection #VBEnumEntryNode #Object #VBParameterListNode #OrderedCollection #OrderedCollection #VBParameterNode #VBProgramNode #VBProgramNode #OrderedCollection #OrderedCollection #VBExternalSubNode #VBExternalFunctionNode #VBProgramNode #SmaCCToken #VBFunctionDefinitionNode #OrderedCollection #OrderedCollection #VBSubDefinitionNode #VBModulePropertyGetNode #VBModulePropertyGetNode #VBModulePropertyGetNode #VBProgramNode #VBModulePropertyNode #VBModuleConstantNode #VBDimVariableNode #VBReDimVariableNode #VBReDimVariableNode #VBStaticVariableNode #VBVariableNode #VBConstantNode #VBModuleMultiplePropertiesNode #VBModuleMultipleConstantsNode #VBDimMultipleVariablesNode #VBReDimMultipleVariablesNode #VBStaticMultipleVariablesNode #VBVariableListNode #OrderedCollection #OrderedCollection #VBConstantListNode #OrderedCollection #OrderedCollection #VBProgramNode #VBProgramNode #VBParentheseesExpressionNode #VBIntervalNode #VBProgramNode #VBProgramNode #VBNegatedOperationNode #VBPositiveOperationNode #VBNotOperationNode #VBProgramNode #OrderedCollection #VBComparisonOperationNode #OrderedCollection #VBArithmeticOperationNode #OrderedCollection #VBArithmeticOperationNode #VBProgramNode #VBConcatenationOperationNode #VBEqualsNode #VBProgramNode #VBAddressOfClauseNode #VBNewClauseNode #SmaCCToken #SmaCCToken #SmaCCToken #VBProgramNode #VBOpenClauseNode #VBPrintIntoFileClauseNode #OrderedCollection #OrderedCollection #VBLineInputClauseNode #VBProgramNode #VBProgramNode #VBProgramNode #VBInfinityLoopNode #VBWhileTrueNode #VBUntilTrueNode #VBDoWhileTrueNode #VBDoUntilTrueNode #VBWhileWendNode #VBProgramNode #VBForEachNode #VBForNextNode #VBForNextNode #VBForStepNextNode #VBIfThenElseNode #VBIfThenElseNode #VBIfThenElseNode #VBElseIfBlockNode #OrderedCollection #VBElseIfBlockNode #VBElseIfBlockNode #VBRaiseErrorNode #VBLabelNode #VBLabelNode #VBProgramNode #VBCaseNode #OrderedCollection #OrderedCollection #VBSelectNode #VBCaseNode #OrderedCollection #VBProgramNode #VBResumeLabelNode #VBResumeNextNode #VBResumeEmptyNode #VBProgramNode #VBProgramNode #VBDestinationListNode #OrderedCollection #OrderedCollection #VBGoToStatementNode #VBGoSubNode #VBProgramNode #VBOnErrorGoToNode #VBOnErrorResumeNextNode #VBOnExpressionGoNode #VBErrorNode #VBWithNode #VBProgramNode #VBExitsNode #VBExitsNode #VBExitsNode #VBExitsNode #VBExitsNode #VBReturnNode #VBProgramNode #VBDictionaryAccessNode #VBMemberAccessNode #VBProgramNode #VBProgramNode #VBImplicitParenthesesLessCallNode #VBProgramNode #VBProcedureCallOrArrayAccessNode #VBArgumentNode #VBArgumentListNode #OrderedCollection #OrderedCollection #OrderedCollection #OrderedCollection #VBProgramNode #VBExplicitCallNode #VBRaiseEventNode #VBTypeOfNode #VBProgramNode #VBProgramNode #SmaCCToken #SmaCCErrorNode)
]

{ #category : #generated }
VBParser class >> transitionTable [
^#(
#[1 0 6 0 22 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 30 0 6 0 31 0 6 0 32 0 6 0 33 0 6 0 34 0 6 0 35 0 6 0 36 0 6 0 37 0 6 0 38 0 6 0 39 0 6 0 40 0 6 0 44 0 6 0 54 0 6 0 57 0 6 0 71 0 6 0 74 0 6 0 75 0 6 0 82 0 6 0 84 0 6 0 86 0 6 0 87 0 6 0 89 0 6 0 90 0 6 0 98 0 6 0 100 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 110 0 6 0 113 0 6 0 114 0 6 0 121 0 6 0 125 0 6 0 130 0 6 0 131 0 6 0 132 0 6 0 133 0 6 0 137 0 6 0 139 0 6 0 142 0 6 0 143 0 6 0 147 0 6 0 150 0 6 0 167 0 6 0 168 0 6 0 171 0 6 0 173 0 21 0 176 0 25 0 177 0 6 1 142] 
#[1 0 29 0 1 0 33 0 9 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 1 21 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 0 233 0 167 0 237 0 168 0 241 0 171 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 1 21 0 201 1 21 0 203 1 21 0 212 1 25 0 223 1 21 0 234 1 33 0 235 1 21 0 236 1 21 0 237 1 21 0 238 1 21 0 239 1 21 0 240 1 21 0 241 1 21 0 242 1 21 0 243 1 21 0 247 1 21 0 248 1 21 1 17 1 21 1 18 1 21 1 19 1 21 1 20 1 21 1 21 1 21 1 22 1 101 1 24 1 21 1 25 1 21 1 26 1 21 1 27 1 21 1 28 1 21 1 29 1 21 1 33 1 21 1 36 1 133 1 55 1 133 1 56 1 133 1 57 1 21 1 61 1 21 1 62 1 21 1 63 1 21 1 66 1 21 1 67 1 21 1 68 1 21 1 69 1 21 1 70 1 21 1 71 1 21 1 72 1 21 1 73 1 21 1 74 1 21 1 75 1 21 1 76 1 21 1 77 1 21 1 78 1 21 1 79 1 21 1 80 1 21 1 81 1 21 1 82 1 21 1 83 1 21 1 88 1 21 1 89 1 237 1 90 1 21 1 95 1 21 1 98 1 21 1 99 1 21 1 100 1 21 1 101 1 21 1 102 1 21 1 107 1 21 1 108 1 21 1 109 1 21 1 110 1 21 1 111 1 21 1 112 1 21 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 1 21 1 127 2 89 1 128 2 93 1 129 1 21 1 137 1 21 1 138 1 21 1 140] 
#[1 0 249 0 22 2 241 0 27 2 241 0 28 2 241 0 29 2 241 0 30 2 241 0 31 2 241 0 32 2 241 0 33 2 241 0 34 2 241 0 35 2 241 0 36 2 241 0 37 2 241 0 38 2 241 0 39 2 241 0 40 0 249 0 44 0 249 0 54 0 249 0 57 0 89 0 71 2 169 0 74 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 2 173 0 89 0 117 0 90 0 125 0 98 0 129 0 100 2 253 0 103 2 177 0 104 0 249 0 105 2 253 0 106 2 181 0 110 0 249 0 113 0 249 0 114 0 249 0 121 2 193 0 125 2 253 0 130 2 197 0 131 2 253 0 132 0 189 0 133 0 249 0 137 2 205 0 139 2 209 0 142 0 249 0 143 0 217 0 147 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 2 217 0 191 0 249 0 194 2 217 0 195 2 217 0 196 2 217 0 197 2 249 0 200 2 249 0 201 2 249 0 203 2 249 0 204 2 249 0 208 2 241 0 209 2 249 0 210 2 249 0 211 2 253 0 223 2 249 0 242 2 249 0 243 2 249 0 247 2 249 0 248 2 249 1 5 2 249 1 6 2 249 1 7 3 17 1 8 2 249 1 9 2 249 1 12 2 249 1 13 2 249 1 14 2 249 1 15 2 249 1 16 2 249 1 17 2 249 1 18 2 249 1 19 2 249 1 20 2 249 1 21 2 249 1 22 1 101 1 24 2 249 1 25 2 249 1 26 2 249 1 27 2 249 1 28 2 249 1 29 2 249 1 33 2 249 1 36] 
#[1 3 53 0 103 2 177 0 104 3 53 0 106 3 53 0 130 2 197 0 131 3 53 0 132 3 17 0 139 2 209 0 142 3 53 0 223 3 17 1 8 3 57 1 9 3 57 1 12 3 57 1 13 3 57 1 14 3 57 1 15 3 57 1 16] 
#[0 0 0 1 142] 
#[1 0 7 0 22 0 11 0 27 0 15 0 28 0 19 0 29 0 23 0 30 0 27 0 31 0 31 0 32 0 35 0 33 0 39 0 34 0 43 0 35 0 47 0 36 0 51 0 37 0 55 0 38 0 59 0 39 0 63 0 40 0 67 0 44 0 71 0 54 0 75 0 57 0 79 0 71 0 83 0 74 0 87 0 75 0 91 0 82 0 95 0 84 0 99 0 86 0 103 0 87 0 107 0 89 0 111 0 90 0 115 0 98 0 119 0 100 0 123 0 103 0 127 0 104 0 131 0 105 0 135 0 106 0 139 0 110 0 143 0 113 0 147 0 114 0 151 0 121 0 155 0 125 0 159 0 130 0 163 0 131 0 167 0 132 0 171 0 133 0 175 0 137 0 179 0 139 0 183 0 142 0 187 0 143 0 191 0 147 0 195 0 150 0 199 0 167 0 203 0 168 0 207 0 171 0 211 0 173 3 69 0 179 2 217 0 191 0 249 0 194 2 217 0 195 2 217 0 196 2 217 0 197 3 73 0 199 3 77 0 200 3 77 0 201 3 77 0 203 3 77 0 204 3 77 0 208 2 241 0 209 3 77 0 210 3 77 0 211 2 253 0 223 3 77 0 242 3 77 0 243 3 77 0 247 3 77 0 248 3 77 1 5 3 77 1 6 3 77 1 7 3 17 1 8 3 77 1 9 3 77 1 12 3 77 1 13 3 77 1 14 3 77 1 15 3 77 1 16 3 77 1 17 3 77 1 18 3 77 1 19 3 77 1 20 3 77 1 21 3 77 1 22 1 101 1 24 3 77 1 25 3 77 1 26 3 77 1 27 3 77 1 28 3 77 1 29 3 77 1 33 3 77 1 36 0 10 1 142] 
#[1 3 105 0 22 3 105 0 44 3 105 0 54 3 105 0 55 3 105 0 57 3 105 0 75 3 105 0 80 3 105 0 82 3 105 0 86 3 105 0 87 3 105 0 94 3 105 0 105 3 105 0 113 3 105 0 114 3 105 0 121 3 105 0 136 3 105 0 137 3 105 0 143 3 105 0 147 3 105 0 150 3 105 0 167 0 237 0 168 3 101 0 192 3 105 0 193 3 105 0 194 3 101 0 196] 
#[1 3 105 0 22 3 105 0 44 3 105 0 54 3 105 0 55 3 105 0 57 3 105 0 75 3 105 0 80 3 105 0 82 3 105 0 86 3 105 0 87 3 105 0 94 3 105 0 105 3 105 0 113 3 105 0 114 3 105 0 121 3 105 0 136 3 105 0 137 3 105 0 143 3 105 0 147 3 105 0 150 3 105 0 167 0 237 0 168 3 117 0 192 3 105 0 193 3 105 0 194 3 117 0 196] 
#[0 0 14 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 121 0 172] 
#[0 3 125 0 172] 
#[0 0 18 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 3 129 0 172] 
#[0 3 133 0 172] 
#[0 0 22 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 137 0 172] 
#[0 3 141 0 172] 
#[0 0 26 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 145 0 172] 
#[1 0 30 0 1 0 30 0 3 0 30 0 5 0 30 0 9 0 30 0 11 0 30 0 80 0 30 0 97 0 30 0 122 0 30 0 162 0 215 0 172 0 30 0 173 0 30 1 142] 
#[0 3 153 0 172] 
#[0 3 157 0 172] 
#[0 0 34 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 0 38 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 0 42 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 161 0 172] 
#[0 0 46 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 0 50 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 165 0 172] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 3 169 0 119 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 219 0 172 0 54 0 173 3 181 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 3 189 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 3 197 0 172] 
#[0 3 201 0 172] 
#[0 3 205 0 172] 
#[0 0 58 0 172] 
#[0 0 62 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 0 66 0 172] 
#[0 3 209 0 172] 
#[0 3 213 0 172] 
#[0 3 217 0 172] 
#[0 0 70 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 0 74 0 1 0 74 0 3 0 74 0 5 0 74 0 9 0 74 0 11 0 74 0 80 0 74 0 97 0 74 0 122 0 74 0 162 0 223 0 172 0 74 0 173 0 74 1 142] 
#[1 0 82 0 1 0 82 0 3 0 82 0 5 0 82 0 9 0 82 0 11 0 82 0 80 0 82 0 97 0 82 0 122 0 82 0 162 0 227 0 172 0 82 0 173 0 82 1 142] 
#[0 3 225 0 172] 
#[0 3 229 0 172] 
#[0 0 86 0 172] 
#[0 0 90 0 172] 
#[0 3 233 0 172] 
#[1 0 94 0 11 0 94 0 80 0 94 0 97 0 94 0 122 0 94 0 162 0 231 0 172 0 94 0 173 0 94 1 142] 
#[0 0 98 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 3 241 0 172] 
#[1 0 102 0 1 0 102 0 3 0 102 0 5 0 102 0 9 0 102 0 11 0 102 0 80 0 102 0 97 0 102 0 122 0 102 0 162 0 235 0 172 0 102 0 173 0 102 1 142] 
#[0 3 245 0 172] 
#[0 0 110 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 249 0 172] 
#[0 0 114 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 253 0 172] 
#[0 4 1 0 172] 
#[1 0 118 0 1 0 118 0 3 0 118 0 5 0 118 0 9 4 5 0 11 0 118 0 80 0 118 0 97 0 118 0 122 0 118 0 162 0 118 0 172 0 118 0 173 0 118 1 142] 
#[0 0 122 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 0 126 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 0 130 0 1 0 134 0 3 4 9 0 5 0 130 0 9 0 138 0 11 0 138 0 80 0 138 0 97 0 138 0 122 0 138 0 162 0 239 0 172 0 138 0 173 4 25 0 228 4 25 0 229 4 25 0 233 0 138 1 142] 
#[0 0 146 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 0 150 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 0 154 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 0 158 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 0 162 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 0 166 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 0 170 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 0 0 1 142] 
#[0 4 29 0 172] 
#[0 0 174 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 4 33 0 172] 
#[0 0 178 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 0 182 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 0 186 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 0 190 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 0 194 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 0 198 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 0 202 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 0 206 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 0 210 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 0 214 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 0 218 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 0 222 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 0 226 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 0 230 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 0 234 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 0 238 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 4 37 0 7 4 41 0 172 4 45 1 34 4 49 1 35] 
#[0 0 242 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 0 246 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 0 250 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 0 254 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 1 2 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 1 6 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 1 10 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 1 14 0 1 0 243 0 3 1 14 0 4 1 14 0 5 1 14 0 7 1 14 0 9 1 14 0 11 1 14 0 13 1 14 0 22 1 14 0 24 1 14 0 26 1 14 0 27 1 14 0 28 1 14 0 29 1 14 0 30 1 14 0 31 1 14 0 32 1 14 0 33 1 14 0 34 1 14 0 35 1 14 0 36 1 14 0 37 1 14 0 38 1 14 0 39 1 14 0 40 1 14 0 41 1 14 0 42 1 14 0 43 1 14 0 44 1 14 0 48 1 14 0 53 1 14 0 54 1 14 0 55 1 14 0 57 1 14 0 58 1 14 0 71 1 14 0 73 1 14 0 74 1 14 0 75 1 14 0 80 1 14 0 82 1 14 0 84 1 14 0 86 1 14 0 87 1 14 0 89 1 14 0 90 1 14 0 91 1 14 0 97 1 14 0 98 1 14 0 100 1 14 0 101 1 14 0 103 1 14 0 104 1 14 0 105 1 14 0 106 1 14 0 107 1 14 0 108 1 14 0 109 1 14 0 110 1 14 0 113 1 14 0 114 1 14 0 119 1 14 0 121 1 14 0 122 1 14 0 124 1 14 0 125 1 14 0 130 1 14 0 131 1 14 0 132 1 14 0 133 1 14 0 134 1 14 0 135 1 14 0 136 1 14 0 137 1 14 0 139 1 14 0 142 1 14 0 143 1 14 0 147 1 14 0 150 1 14 0 151 1 14 0 152 1 14 0 153 1 14 0 162 1 14 0 167 1 14 0 168 1 14 0 171 1 14 0 172 1 14 0 173 1 14 1 142] 
#[0 1 22 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 1 26 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 1 30 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 34 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 38 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 42 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 46 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 50 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 54 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 58 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 62 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 66 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 70 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 74 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 78 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 82 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 86 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 90 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 94 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 98 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 102 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 106 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 110 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 114 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 118 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 0 247 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 130 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 134 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 138 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 142 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 146 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 150 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 154 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 158 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 162 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 166 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 170 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 174 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 178 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 0 251 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 190 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 194 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 198 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 202 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 206 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 210 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 4 53 0 1 4 57 0 9 4 61 0 172] 
#[0 1 214 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 1 218 0 1 1 218 0 3 1 218 0 9 1 222 0 11 1 222 0 80 1 222 0 97 1 222 0 122 1 222 0 162 0 255 0 172 1 222 0 173 1 222 1 142] 
#[1 1 226 0 1 1 3 0 3 1 226 0 4 1 226 0 5 1 226 0 7 1 226 0 9 1 226 0 11 1 226 0 13 1 226 0 22 1 226 0 24 1 226 0 26 1 226 0 27 1 226 0 28 1 226 0 29 1 226 0 30 1 226 0 31 1 226 0 32 1 226 0 33 1 226 0 34 1 226 0 35 1 226 0 36 1 226 0 37 1 226 0 38 1 226 0 39 1 226 0 40 1 226 0 41 1 226 0 42 1 226 0 43 1 226 0 44 1 226 0 48 1 226 0 53 1 226 0 54 1 226 0 55 1 226 0 57 1 226 0 58 1 226 0 71 1 226 0 73 1 226 0 74 1 226 0 75 1 226 0 80 1 226 0 82 1 226 0 84 1 226 0 86 1 226 0 87 1 226 0 89 1 226 0 90 1 226 0 91 1 226 0 97 1 226 0 98 1 226 0 100 1 226 0 101 1 226 0 103 1 226 0 104 1 226 0 105 1 226 0 106 1 226 0 107 1 226 0 108 1 226 0 109 1 226 0 110 1 226 0 113 1 226 0 114 1 226 0 119 1 226 0 121 1 226 0 122 1 226 0 124 1 226 0 125 1 226 0 130 1 226 0 131 1 226 0 132 1 226 0 133 1 226 0 134 1 226 0 135 1 226 0 136 1 226 0 137 1 226 0 139 1 226 0 142 1 226 0 143 1 226 0 147 1 226 0 150 1 226 0 151 1 226 0 152 1 226 0 153 1 226 0 162 1 226 0 167 1 226 0 168 1 226 0 171 1 226 0 172 1 226 0 173 1 226 1 142] 
#[1 1 234 0 11 1 234 0 80 1 234 0 97 1 234 0 122 1 234 0 162 1 7 0 172 1 234 0 173 1 234 1 142] 
#[0 1 238 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 4 69 0 3] 
#[1 1 242 0 1 1 11 0 3 1 242 0 4 1 242 0 5 1 242 0 7 1 242 0 9 1 242 0 11 1 242 0 13 1 242 0 22 1 242 0 24 1 242 0 26 1 242 0 27 1 242 0 28 1 242 0 29 1 242 0 30 1 242 0 31 1 242 0 32 1 242 0 33 1 242 0 34 1 242 0 35 1 242 0 36 1 242 0 37 1 242 0 38 1 242 0 39 1 242 0 40 1 242 0 41 1 242 0 42 1 242 0 43 1 242 0 44 1 242 0 48 1 242 0 53 1 242 0 54 1 242 0 55 1 242 0 57 1 242 0 58 1 242 0 71 1 242 0 73 1 242 0 74 1 242 0 75 1 242 0 80 1 242 0 82 1 242 0 84 1 242 0 86 1 242 0 87 1 242 0 89 1 242 0 90 1 242 0 91 1 242 0 97 1 242 0 98 1 242 0 100 1 242 0 101 1 242 0 103 1 242 0 104 1 242 0 105 1 242 0 106 1 242 0 107 1 242 0 108 1 242 0 109 1 242 0 110 1 242 0 113 1 242 0 114 1 242 0 119 1 242 0 121 1 242 0 122 1 242 0 124 1 242 0 125 1 242 0 130 1 242 0 131 1 242 0 132 1 242 0 133 1 242 0 134 1 242 0 135 1 242 0 136 1 242 0 137 1 242 0 139 1 242 0 142 1 242 0 143 1 242 0 147 1 242 0 150 1 242 0 151 1 242 0 152 1 242 0 153 1 242 0 162 1 242 0 167 1 242 0 168 1 242 0 171 1 242 0 172 1 242 0 173 1 242 1 142] 
#[0 1 250 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 1 254 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 2 2 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 2 6 0 172] 
#[0 2 10 0 172] 
#[0 2 14 0 172] 
#[0 2 18 0 172] 
#[0 2 22 0 172] 
#[0 2 26 0 172] 
#[0 2 30 0 172] 
#[0 2 34 0 172] 
#[0 2 38 0 172] 
#[0 2 42 0 172] 
#[0 2 46 0 172] 
#[0 2 50 0 172] 
#[0 2 54 0 172] 
#[0 2 58 0 172] 
#[0 0 30 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 0 6 0 1 0 6 0 9 0 6 0 22 0 6 0 24 0 6 0 44 0 6 0 53 0 6 0 54 0 6 0 57 0 6 0 75 0 6 0 82 0 6 0 86 0 6 0 87 0 6 0 105 0 6 0 113 0 6 0 114 0 6 0 121 0 6 0 137 0 6 0 143 0 6 0 150 0 6 0 167 0 6 0 168 0 6 0 171 0 6 0 173 4 73 0 177] 
#[0 4 77 0 172] 
#[0 4 81 0 172] 
#[0 4 85 0 172] 
#[0 0 74 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 0 82 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 4 89 0 172] 
#[0 4 93 0 172] 
#[0 0 102 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 1 15 0 172] 
#[0 4 97 0 172] 
#[0 0 118 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 4 9 0 5 1 19 0 172 4 25 0 228 4 25 0 229 4 25 0 233] 
#[0 2 66 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 2 70 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 2 74 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 2 78 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 2 82 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 4 105 0 172] 
#[0 2 86 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 0 0 1 142] 
#[0 4 109 0 172] 
#[0 2 90 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 2 94 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 2 98 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 2 102 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 4 113 0 172] 
#[0 2 106 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 2 110 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 2 114 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 2 118 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 2 122 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 2 126 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 2 130 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 2 62 0 172] 
#[0 4 117 0 172] 
#[0 0 0 1 142] 
#[1 0 114 0 5 1 23 0 172] 
#[0 2 134 0 1 0 9 0 22 0 24 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 53 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[1 0 6 0 22 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 30 0 6 0 31 0 6 0 32 0 6 0 33 0 6 0 34 0 6 0 35 0 6 0 36 0 6 0 37 0 6 0 38 0 6 0 39 0 6 0 40 0 6 0 44 0 6 0 54 0 6 0 57 0 6 0 71 0 6 0 74 0 6 0 75 0 6 0 82 0 6 0 84 0 6 0 86 0 6 0 87 0 6 0 89 0 6 0 90 0 6 0 98 0 6 0 100 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 110 0 6 0 113 0 6 0 114 0 6 0 121 0 6 0 125 0 6 0 130 0 6 0 131 0 6 0 132 0 6 0 133 0 6 0 137 0 6 0 139 0 6 0 142 0 6 0 143 0 6 0 147 0 6 0 150 0 6 0 167 0 6 0 168 0 6 0 171 0 6 0 173 4 125 0 177 4 129 0 178 0 6 1 142] 
#[1 0 6 0 22 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 30 0 6 0 31 0 6 0 32 0 6 0 33 0 6 0 34 0 6 0 35 0 6 0 36 0 6 0 37 0 6 0 38 0 6 0 39 0 6 0 40 0 6 0 44 0 6 0 54 0 6 0 57 0 6 0 71 0 6 0 74 0 6 0 75 0 6 0 82 0 6 0 84 0 6 0 86 0 6 0 87 0 6 0 89 0 6 0 90 0 6 0 98 0 6 0 100 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 110 0 6 0 113 0 6 0 114 0 6 0 121 0 6 0 125 0 6 0 130 0 6 0 131 0 6 0 132 0 6 0 133 0 6 0 137 0 6 0 139 0 6 0 142 0 6 0 143 0 6 0 147 0 6 0 150 0 6 0 167 0 6 0 168 0 6 0 171 0 6 0 173 4 133 0 177 0 6 1 142] 
#[1 0 10 0 22 0 10 0 27 0 10 0 28 0 10 0 29 0 10 0 30 0 10 0 31 0 10 0 32 0 10 0 33 0 10 0 34 0 10 0 35 0 10 0 36 0 10 0 37 0 10 0 38 0 10 0 39 0 10 0 40 0 10 0 44 0 10 0 54 0 10 0 57 0 10 0 71 0 10 0 74 0 10 0 75 0 10 0 82 0 10 0 84 0 10 0 86 0 10 0 87 0 10 0 89 0 10 0 90 0 10 0 98 0 10 0 100 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 110 0 10 0 113 0 10 0 114 0 10 0 121 0 10 0 125 0 10 0 130 0 10 0 131 0 10 0 132 0 10 0 133 0 10 0 137 0 10 0 139 0 10 0 142 0 10 0 143 0 10 0 147 0 10 0 150 0 10 0 167 0 10 0 168 0 10 0 171 0 10 0 173 4 137 0 179 0 10 1 142] 
#[0 2 138 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 2 142 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 2 146 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 2 150 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 2 154 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 2 158 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 2 162 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 2 166 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 2 170 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 2 174 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 4 141 0 191 0 249 0 194 4 141 0 195 4 141 0 196 4 141 0 197] 
#[1 0 29 0 1 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 4 145 0 191 0 249 0 194 4 145 0 195 4 145 0 196 4 145 0 197 1 133 1 55 1 133 1 56 1 133 1 57 4 149 1 122 2 77 1 123 4 153 1 124 2 77 1 125 2 89 1 128 4 157 1 129 4 161 1 136] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 5 5 0 180 5 5 0 181 5 5 0 182 5 5 0 183 5 5 0 184 5 5 0 185 5 5 0 186 5 5 0 187 5 5 0 188 5 5 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 5 5 1 37 5 5 1 38 5 5 1 39 5 5 1 40 5 5 1 41 5 5 1 42 5 5 1 43 5 5 1 44 5 5 1 45 5 5 1 47 5 5 1 49 5 5 1 51 5 5 1 53 5 5 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 5 5 1 139 5 5 1 141] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 5 85 0 93 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 5 89 0 191 0 249 0 194 5 89 0 195 5 89 0 196 5 89 0 197] 
#[0 5 93 0 44] 
#[1 2 178 0 1 2 178 0 3 2 178 0 4 2 178 0 5 2 178 0 7 2 178 0 9 2 178 0 11 2 178 0 13 1 27 0 22 2 178 0 24 2 178 0 26 2 178 0 27 2 178 0 28 2 178 0 29 2 178 0 30 2 178 0 31 2 178 0 32 2 178 0 33 2 178 0 34 2 178 0 35 2 178 0 36 2 178 0 37 2 178 0 38 2 178 0 39 2 178 0 40 2 178 0 41 2 178 0 42 2 178 0 43 1 31 0 44 2 178 0 48 2 178 0 53 1 35 0 54 2 178 0 55 1 39 0 57 2 178 0 58 2 178 0 71 2 178 0 73 2 178 0 74 1 43 0 75 5 173 0 76 5 173 0 78 2 178 0 80 1 47 0 82 2 178 0 84 5 173 0 85 1 51 0 86 1 55 0 87 5 173 0 88 2 178 0 89 2 178 0 90 2 178 0 91 5 173 0 92 2 178 0 97 2 178 0 98 2 178 0 100 2 178 0 101 2 178 0 103 2 178 0 104 1 59 0 105 2 178 0 106 2 178 0 107 2 178 0 108 2 178 0 109 2 178 0 110 5 173 0 112 1 63 0 113 1 67 0 114 5 173 0 116 5 173 0 117 5 173 0 118 2 178 0 119 1 71 0 121 2 178 0 122 2 178 0 124 2 178 0 125 2 178 0 130 2 178 0 131 2 178 0 132 2 178 0 133 2 178 0 134 2 178 0 135 2 178 0 136 1 75 0 137 5 173 0 138 2 178 0 139 5 173 0 141 2 178 0 142 1 79 0 143 2 178 0 147 5 153 0 149 1 83 0 150 2 178 0 151 2 178 0 152 2 178 0 153 2 178 0 162 1 87 0 167 1 91 0 168 1 95 0 171 2 178 0 172 2 178 0 173 5 157 0 191 0 249 0 194 5 157 0 195 5 157 0 196 5 157 0 197 5 173 0 222 5 173 0 224 5 169 0 226 5 173 0 227 2 178 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 5 177 0 180 5 177 0 181 5 177 0 182 5 177 0 183 5 177 0 184 5 177 0 185 5 177 0 186 5 177 0 187 5 177 0 188 5 177 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 5 177 1 37 5 177 1 38 5 177 1 39 5 177 1 40 5 177 1 41 5 177 1 42 5 177 1 43 5 177 1 44 5 177 1 45 5 177 1 47 5 177 1 49 5 177 1 51 5 177 1 53 5 177 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 5 177 1 139 5 177 1 141] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 5 181 0 191 0 249 0 194 5 181 0 195 5 181 0 196 5 181 0 197] 
#[1 0 29 0 1 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 5 185 0 191 0 249 0 194 5 185 0 195 5 185 0 196 5 185 0 197 1 133 1 55 1 133 1 56 1 133 1 57 4 149 1 122 2 77 1 123 2 77 1 124 2 77 1 125 2 89 1 128 5 193 1 129] 
#[1 0 29 0 1 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 5 197 0 191 0 249 0 194 5 197 0 195 5 197 0 196 5 197 0 197 5 201 0 202 1 133 1 55 1 133 1 56 1 133 1 57 4 149 1 122 2 77 1 123 5 205 1 124 2 77 1 125 2 89 1 128 2 93 1 129] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 2 217 0 191 0 249 0 194 2 217 0 195 2 217 0 196 2 217 0 197 5 209 1 24 5 213 1 33] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 5 217 0 64 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 5 221 0 191 0 249 0 194 5 221 0 195 5 221 0 196 5 221 0 197 5 225 1 23 5 229 1 30] 
#[1 2 182 0 11 2 182 0 80 2 182 0 97 2 182 0 122 2 182 0 162 1 99 0 172 2 182 0 173 2 182 1 142] 
#[0 2 186 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 5 237 0 148 5 241 0 152] 
#[0 5 245 0 172] 
#[1 0 54 0 11 0 54 0 172 0 54 0 173 5 249 0 215] 
#[1 5 253 0 119 3 173 0 162 6 1 0 182] 
#[1 6 5 0 11 6 9 0 172 6 13 0 173 6 17 0 207 6 21 0 214 6 25 0 216 6 29 0 217] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 6 33 0 191 0 249 0 194 6 33 0 195 6 33 0 196 6 33 0 197] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 6 37 0 191 0 249 0 194 6 37 0 195 6 37 0 196 6 37 0 197] 
#[1 6 41 0 43 6 45 0 91 6 49 0 104 6 53 0 131 6 57 0 142] 
#[1 4 173 0 8 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 3 173 0 162 0 249 0 167 0 237 0 168 0 241 0 171 6 73 0 182 6 73 0 191 0 249 0 194 6 73 0 195 6 73 0 196 6 73 0 197 6 73 1 42 6 73 1 103 6 77 1 104] 
#[1 4 173 0 8 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 3 173 0 162 0 249 0 167 0 237 0 168 0 241 0 171 6 73 0 182 6 73 0 191 0 249 0 194 6 73 0 195 6 73 0 196 6 73 0 197 6 73 1 42 6 73 1 103 6 81 1 104] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 6 85 0 180 6 85 0 181 6 85 0 182 6 85 0 183 6 85 0 184 6 85 0 185 6 85 0 186 6 85 0 187 6 85 0 188 6 85 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 6 85 1 37 6 85 1 38 6 85 1 39 6 85 1 40 6 85 1 41 6 85 1 42 6 85 1 43 6 85 1 44 6 85 1 45 6 85 1 47 6 85 1 49 6 85 1 51 6 85 1 53 6 85 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 6 85 1 139 6 85 1 141] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 6 89 0 180 6 89 0 181 6 89 0 182 6 89 0 183 6 89 0 184 6 89 0 185 6 89 0 186 6 89 0 187 6 89 0 188 6 89 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 6 89 1 37 6 89 1 38 6 89 1 39 6 89 1 40 6 89 1 41 6 89 1 42 6 89 1 43 6 89 1 44 6 89 1 45 6 89 1 47 6 89 1 49 6 89 1 51 6 89 1 53 6 89 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 6 89 1 139 6 89 1 141] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 6 93 0 42 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 6 97 0 180 6 97 0 181 6 97 0 182 6 97 0 183 6 97 0 184 6 97 0 185 6 97 0 186 6 97 0 187 6 97 0 188 6 97 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 6 97 1 37 6 97 1 38 6 97 1 39 6 97 1 40 6 97 1 41 6 97 1 42 6 97 1 43 6 97 1 44 6 97 1 45 6 97 1 47 6 97 1 49 6 97 1 51 6 97 1 53 6 97 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 6 97 1 139 6 97 1 141] 
#[0 6 101 0 72] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 5 217 0 64 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 6 105 0 129 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 6 121 0 180 6 121 0 181 6 121 0 182 6 121 0 183 6 121 0 184 6 121 0 185 6 121 0 186 6 121 0 187 6 121 0 188 6 121 0 189 6 109 0 191 0 249 0 194 6 109 0 195 6 109 0 196 6 109 0 197 6 113 1 23 6 117 1 30 6 121 1 37 6 121 1 38 6 121 1 39 6 121 1 40 6 121 1 41 6 121 1 42 6 121 1 43 6 121 1 44 6 121 1 45 6 121 1 47 6 121 1 49 6 121 1 51 6 121 1 53 6 121 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 6 121 1 139 6 121 1 141] 
#[1 4 173 0 8 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 6 125 0 122 0 249 0 137 0 249 0 143 0 249 0 150 3 173 0 162 0 249 0 167 0 237 0 168 0 241 0 171 6 73 0 182 6 73 0 191 0 249 0 194 6 73 0 195 6 73 0 196 6 73 0 197 6 73 1 42 6 73 1 103 6 129 1 104] 
#[0 6 133 0 80] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 5 217 0 64 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 5 221 0 191 0 249 0 194 5 221 0 195 5 221 0 196 5 221 0 197 6 137 1 23 6 141 1 30] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 6 145 0 191 0 249 0 194 6 145 0 195 6 145 0 196 6 145 0 197] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 6 149 0 180 6 149 0 181 6 149 0 182 6 149 0 183 6 149 0 184 6 149 0 185 6 149 0 186 6 149 0 187 6 149 0 188 6 149 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 6 149 1 37 6 149 1 38 6 149 1 39 6 149 1 40 6 149 1 41 6 149 1 42 6 149 1 43 6 149 1 44 6 149 1 45 6 149 1 47 6 149 1 49 6 149 1 51 6 149 1 53 6 149 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 6 149 1 139 6 149 1 141] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 6 153 0 180 6 153 0 181 6 153 0 182 6 153 0 183 6 153 0 184 6 153 0 185 6 153 0 186 6 153 0 187 6 153 0 188 6 153 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 6 153 1 37 6 153 1 38 6 153 1 39 6 153 1 40 6 153 1 41 6 153 1 42 6 153 1 43 6 153 1 44 6 153 1 45 6 153 1 47 6 153 1 49 6 153 1 51 6 153 1 53 6 153 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 6 153 1 139 6 153 1 141] 
#[0 2 190 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 6 157 0 172 6 161 0 180 6 161 0 181 6 161 0 182 6 161 0 183 6 161 0 184 6 161 0 185 6 161 0 186 6 161 0 187 6 161 0 188 6 161 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 6 161 1 37 6 161 1 38 6 161 1 39 6 161 1 40 6 161 1 41 6 161 1 42 6 161 1 43 6 161 1 44 6 161 1 45 6 161 1 47 6 161 1 49 6 161 1 51 6 161 1 53 6 161 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 6 161 1 139 6 161 1 141] 
#[1 6 165 0 5 6 169 0 12 6 173 0 18 6 177 0 23] 
#[0 2 194 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 2 198 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 6 181 0 172] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 5 217 0 64 0 249 0 75 0 249 0 82 6 185 0 84 0 249 0 86 0 249 0 87 6 189 0 98 6 193 0 100 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 6 197 0 147 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 5 221 0 191 0 249 0 194 5 221 0 195 5 221 0 196 5 221 0 197 6 201 1 23 6 205 1 30] 
#[1 0 29 0 1 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 6 209 0 191 0 249 0 194 6 209 0 195 6 209 0 196 6 209 0 197 1 133 1 55 1 133 1 56 1 133 1 57 6 213 1 122 2 77 1 123 2 77 1 124 2 77 1 125 2 89 1 128 2 93 1 129] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 6 217 0 172 2 217 0 191 0 249 0 194 2 217 0 195 2 217 0 196 2 217 0 197 6 221 1 24] 
#[0 6 225 0 7] 
#[0 2 202 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 4 37 0 7 2 206 0 11 2 206 0 22 2 206 0 27 2 206 0 28 2 206 0 29 2 206 0 30 2 206 0 31 2 206 0 32 2 206 0 33 2 206 0 34 2 206 0 35 2 206 0 36 2 206 0 37 2 206 0 38 2 206 0 39 2 206 0 40 2 206 0 44 2 206 0 54 2 206 0 57 2 206 0 71 2 206 0 74 2 206 0 75 2 206 0 80 2 206 0 82 2 206 0 84 2 206 0 86 2 206 0 87 2 206 0 89 2 206 0 90 2 206 0 97 2 206 0 98 2 206 0 100 2 206 0 103 2 206 0 104 2 206 0 105 2 206 0 106 2 206 0 110 2 206 0 113 2 206 0 114 2 206 0 121 2 206 0 122 2 206 0 125 2 206 0 130 2 206 0 131 2 206 0 132 2 206 0 133 2 206 0 137 2 206 0 139 2 206 0 142 2 206 0 143 2 206 0 147 2 206 0 150 2 206 0 162 2 206 0 167 2 206 0 168 2 206 0 171 1 103 0 172 2 206 0 173 6 229 1 34 2 206 1 142] 
#[1 3 105 0 22 3 105 0 44 3 105 0 54 3 105 0 55 3 105 0 57 3 105 0 75 3 105 0 80 3 105 0 82 3 105 0 86 3 105 0 87 3 105 0 94 3 105 0 105 3 105 0 113 3 105 0 114 3 105 0 121 3 105 0 136 3 105 0 137 3 105 0 143 3 105 0 147 3 105 0 150 3 105 0 167 0 237 0 168 6 233 0 192 3 105 0 193 3 105 0 194 6 233 0 196] 
#[1 3 105 0 22 3 105 0 44 3 105 0 54 3 105 0 55 3 105 0 57 3 105 0 75 3 105 0 80 3 105 0 82 3 105 0 86 3 105 0 87 3 105 0 94 3 105 0 105 3 105 0 113 3 105 0 114 3 105 0 121 3 105 0 136 3 105 0 137 3 105 0 143 3 105 0 147 3 105 0 150 3 105 0 167 0 237 0 168 6 237 0 192 3 105 0 193 3 105 0 194 6 237 0 196] 
#[1 6 241 0 12 6 245 0 18] 
#[1 2 210 0 1 2 210 0 3 2 210 0 6 2 210 0 7 2 210 0 8 2 210 0 9 2 210 0 11 2 210 0 13 2 210 0 22 2 210 0 24 2 210 0 44 2 210 0 53 2 210 0 54 2 210 0 57 2 210 0 63 2 210 0 75 2 210 0 77 2 210 0 79 2 210 0 80 2 210 0 82 2 210 0 86 2 210 0 87 2 210 0 97 2 210 0 105 2 210 0 113 2 210 0 114 2 210 0 121 2 210 0 122 2 210 0 123 2 210 0 128 2 210 0 137 2 210 0 143 2 210 0 150 2 210 0 155 2 210 0 160 2 210 0 161 2 210 0 162 2 210 0 163 2 210 0 164 2 210 0 165 2 210 0 166 2 210 0 167 2 210 0 168 2 210 0 170 2 210 0 171 2 210 0 172 2 210 0 173 6 249 1 131 6 253 1 133 2 210 1 142] 
#[1 2 210 0 1 2 210 0 3 2 210 0 4 2 210 0 6 2 210 0 7 2 210 0 8 2 210 0 9 2 210 0 13 2 210 0 22 2 210 0 24 2 210 0 44 2 210 0 53 2 210 0 54 2 210 0 57 2 210 0 63 2 210 0 75 2 210 0 77 2 210 0 79 2 210 0 82 2 210 0 86 2 210 0 87 2 210 0 105 2 210 0 113 2 210 0 114 2 210 0 121 2 210 0 123 2 210 0 128 2 210 0 137 2 210 0 143 2 210 0 150 2 210 0 155 2 210 0 160 2 210 0 161 2 210 0 162 2 210 0 163 2 210 0 164 2 210 0 165 2 210 0 166 2 210 0 167 2 210 0 168 2 210 0 170 2 210 0 171 2 210 0 172 7 1 1 131 6 253 1 133] 
#[1 0 29 0 1 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 3 65 0 173 5 197 0 191 0 249 0 194 5 197 0 195 5 197 0 196 5 197 0 197 7 5 0 202 1 133 1 55 1 133 1 56 1 133 1 57 4 149 1 122 2 77 1 123 5 205 1 124 2 77 1 125 2 89 1 128 2 93 1 129] 
#[1 7 9 0 104 7 13 0 142] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 7 17 0 191 0 249 0 194 7 17 0 195 7 17 0 196 7 17 0 197] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 7 21 0 191 0 249 0 194 7 21 0 195 7 21 0 196 7 21 0 197] 
#[1 6 101 0 72 7 25 0 83 7 29 0 102 7 33 0 130 3 173 0 162 7 37 0 182] 
#[1 7 41 0 105 7 45 0 114 7 49 0 137] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 7 53 0 191 0 249 0 194 7 53 0 195 7 53 0 196 7 53 0 197] 
#[1 6 165 0 5 7 57 0 18 6 177 0 23] 
#[0 7 61 0 169] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 5 217 0 64 0 249 0 75 0 249 0 82 6 185 0 84 0 249 0 86 0 249 0 87 7 65 0 89 6 189 0 98 6 193 0 100 7 69 0 104 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 7 73 0 131 0 249 0 137 7 81 0 139 7 77 0 142 0 249 0 143 6 197 0 147 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 5 221 0 191 0 249 0 194 5 221 0 195 5 221 0 196 5 221 0 197 7 81 1 8 6 201 1 23 6 205 1 30] 
#[1 7 85 0 104 7 89 0 131 7 93 0 142] 
#[1 7 69 0 104 7 73 0 131 7 81 0 139 7 77 0 142 7 81 1 8] 
#[1 4 197 0 163 7 97 0 185] 
#[1 0 249 0 22 2 241 0 27 2 241 0 28 2 241 0 29 2 241 0 30 2 241 0 31 2 241 0 32 2 241 0 33 2 241 0 34 2 241 0 35 2 241 0 36 2 241 0 37 2 241 0 38 2 241 0 39 2 241 0 40 0 249 0 44 0 249 0 54 0 249 0 57 0 89 0 71 2 169 0 74 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 2 173 0 89 0 117 0 90 0 125 0 98 0 129 0 100 2 253 0 103 2 177 0 104 0 249 0 105 2 253 0 106 2 181 0 110 0 249 0 113 0 249 0 114 0 249 0 121 2 193 0 125 2 253 0 130 2 197 0 131 2 253 0 132 0 189 0 133 0 249 0 137 2 205 0 139 2 209 0 142 0 249 0 143 0 217 0 147 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 3 65 0 173 2 217 0 191 0 249 0 194 2 217 0 195 2 217 0 196 2 217 0 197 7 101 0 200 7 101 0 201 7 101 0 203 7 101 0 204 7 101 0 208 2 241 0 209 7 101 0 210 7 101 0 211 2 253 0 223 7 101 0 242 7 101 0 243 7 101 0 247 7 101 0 248 7 101 1 5 7 101 1 6 7 101 1 7 3 17 1 8 7 101 1 9 7 101 1 12 7 101 1 13 7 101 1 14 7 101 1 15 7 101 1 16 7 101 1 17 7 101 1 18 7 101 1 19 7 101 1 20 7 101 1 21 7 101 1 22 1 101 1 24 7 101 1 25 7 101 1 26 7 101 1 27 7 101 1 28 7 101 1 29 7 101 1 33 7 101 1 36 2 214 1 142] 
#[0 2 218 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[1 0 7 0 22 0 11 0 27 0 15 0 28 0 19 0 29 0 23 0 30 0 27 0 31 0 31 0 32 0 35 0 33 0 39 0 34 0 43 0 35 0 47 0 36 0 51 0 37 0 55 0 38 0 59 0 39 0 63 0 40 0 67 0 44 0 71 0 54 0 75 0 57 0 79 0 71 0 83 0 74 0 87 0 75 0 91 0 82 0 95 0 84 0 99 0 86 0 103 0 87 0 107 0 89 0 111 0 90 0 115 0 98 0 119 0 100 0 123 0 103 0 127 0 104 0 131 0 105 0 135 0 106 0 139 0 110 0 143 0 113 0 147 0 114 0 151 0 121 0 155 0 125 0 159 0 130 0 163 0 131 0 167 0 132 0 171 0 133 0 175 0 137 0 179 0 139 0 183 0 142 0 187 0 143 0 191 0 147 1 107 0 150 0 199 0 167 0 203 0 168 0 207 0 171 0 211 0 173 7 105 0 179 2 217 0 191 0 249 0 194 2 217 0 195 2 217 0 196 2 217 0 197 7 109 0 200 7 109 0 201 7 109 0 203 7 109 0 204 7 109 0 208 2 241 0 209 7 109 0 210 7 109 0 211 2 253 0 223 7 109 0 242 7 109 0 243 7 109 0 247 7 109 0 248 7 109 1 5 7 109 1 6 7 109 1 7 3 17 1 8 7 109 1 9 7 109 1 12 7 109 1 13 7 109 1 14 7 109 1 15 7 109 1 16 7 109 1 17 7 109 1 18 7 109 1 19 7 109 1 20 7 109 1 21 7 109 1 22 1 101 1 24 7 109 1 25 7 109 1 26 7 109 1 27 7 109 1 28 7 109 1 29 7 109 1 33 7 109 1 36 0 10 1 142] 
#[1 0 6 0 22 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 30 0 6 0 31 0 6 0 32 0 6 0 33 0 6 0 34 0 6 0 35 0 6 0 36 0 6 0 37 0 6 0 38 0 6 0 39 0 6 0 40 0 6 0 44 0 6 0 54 0 6 0 57 0 6 0 71 0 6 0 74 0 6 0 75 0 6 0 82 0 6 0 84 0 6 0 86 0 6 0 87 0 6 0 89 0 6 0 90 0 6 0 98 0 6 0 100 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 110 0 6 0 113 0 6 0 114 0 6 0 121 0 6 0 125 0 6 0 130 0 6 0 131 0 6 0 132 0 6 0 133 0 6 0 137 0 6 0 139 0 6 0 142 0 6 0 143 0 6 0 147 0 6 0 150 0 6 0 167 0 6 0 168 0 6 0 171 0 6 0 173 7 113 0 177 4 129 0 178 0 6 1 142] 
#[0 2 222 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 0 130 0 1 0 134 0 3 0 130 0 9 2 226 0 11 2 226 0 80 2 226 0 97 2 226 0 122 2 226 0 162 2 226 0 172 2 226 0 173 2 226 1 142] 
#[1 4 53 0 1 4 57 0 9] 
#[1 1 218 0 1 1 218 0 3 1 218 0 9 2 230 0 11 2 230 0 80 2 230 0 97 2 230 0 122 2 230 0 162 2 230 0 172 2 230 0 173 2 230 1 142] 
#[1 1 242 0 1 1 246 0 3 1 242 0 9 2 234 0 11 2 234 0 80 2 234 0 97 2 234 0 122 2 234 0 162 2 234 0 172 2 234 0 173 2 234 1 142] 
#[0 2 238 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 7 117 0 172 7 121 0 180 7 121 0 181 7 121 0 182 7 121 0 183 7 121 0 184 7 121 0 185 7 121 0 186 7 121 0 187 7 121 0 188 7 121 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 7 121 1 37 7 121 1 38 7 121 1 39 7 121 1 40 7 121 1 41 7 121 1 42 7 121 1 43 7 121 1 44 7 121 1 45 7 121 1 47 7 121 1 49 7 121 1 51 7 121 1 53 7 121 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 7 121 1 139 7 121 1 141] 
#[0 7 125 0 172] 
#[1 0 29 0 1 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 3 173 0 162 4 197 0 163 0 249 0 167 0 237 0 168 0 241 0 171 7 129 0 182 7 133 0 185 7 137 0 191 0 249 0 194 7 137 0 195 7 137 0 196 7 137 0 197 1 133 1 55 1 133 1 56 1 133 1 57 7 141 1 122 2 77 1 123 2 77 1 124 2 77 1 125 2 89 1 128 2 93 1 129] 
#[0 7 145 0 172] 
#[0 7 149 0 172] 
#[1 7 153 0 159 7 157 0 190] 
#[0 2 242 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 2 246 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 2 250 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 81 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 2 254 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 2 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 69 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 6 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 10 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 14 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 18 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 22 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 26 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 30 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 34 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 38 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 42 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 46 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 50 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 1 111 0 1 1 115 0 3 3 54 0 4 3 54 0 5 3 54 0 7 1 111 0 9 3 54 0 11 3 54 0 13 3 54 0 22 3 54 0 24 3 54 0 26 3 54 0 27 3 54 0 28 3 54 0 29 3 54 0 30 3 54 0 31 3 54 0 32 3 54 0 33 3 54 0 34 3 54 0 35 3 54 0 36 3 54 0 37 3 54 0 38 3 54 0 39 3 54 0 40 3 54 0 41 3 54 0 42 3 54 0 43 3 54 0 44 3 54 0 48 3 54 0 53 3 54 0 54 3 54 0 55 3 54 0 57 3 54 0 58 3 54 0 71 3 54 0 73 3 54 0 74 3 54 0 75 3 54 0 80 3 54 0 82 3 54 0 84 3 54 0 86 3 54 0 87 3 54 0 89 3 54 0 90 3 54 0 91 3 54 0 97 3 54 0 98 3 54 0 100 3 54 0 101 3 54 0 103 3 54 0 104 3 54 0 105 3 54 0 106 3 54 0 107 3 54 0 108 3 54 0 109 3 54 0 110 3 54 0 113 3 54 0 114 3 54 0 119 3 54 0 121 3 54 0 122 3 54 0 124 3 54 0 125 3 54 0 130 3 54 0 131 3 54 0 132 3 54 0 133 3 54 0 134 3 54 0 135 3 54 0 136 3 54 0 137 3 54 0 139 3 54 0 142 3 54 0 143 3 54 0 147 3 54 0 150 3 54 0 151 3 54 0 152 3 54 0 153 3 54 0 162 3 54 0 167 3 54 0 168 3 54 0 171 1 119 0 172 3 54 0 173 3 54 1 142] 
#[1 3 58 0 11 3 58 0 80 3 58 0 97 3 58 0 122 3 58 0 162 1 123 0 172 3 58 0 173 3 58 1 142] 
#[0 3 62 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 66 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 70 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 74 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 78 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 82 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 86 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 90 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 94 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 98 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 102 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 106 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 110 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 1 127 0 1 1 131 0 3 3 114 0 4 3 114 0 5 3 114 0 7 1 127 0 9 3 114 0 11 3 114 0 13 3 114 0 22 3 114 0 24 3 114 0 26 3 114 0 27 3 114 0 28 3 114 0 29 3 114 0 30 3 114 0 31 3 114 0 32 3 114 0 33 3 114 0 34 3 114 0 35 3 114 0 36 3 114 0 37 3 114 0 38 3 114 0 39 3 114 0 40 3 114 0 41 3 114 0 42 3 114 0 43 3 114 0 44 3 114 0 48 3 114 0 53 3 114 0 54 3 114 0 55 3 114 0 57 3 114 0 58 3 114 0 71 3 114 0 73 3 114 0 74 3 114 0 75 3 114 0 80 3 114 0 82 3 114 0 84 3 114 0 86 3 114 0 87 3 114 0 89 3 114 0 90 3 114 0 91 3 114 0 97 3 114 0 98 3 114 0 100 3 114 0 101 3 114 0 103 3 114 0 104 3 114 0 105 3 114 0 106 3 114 0 107 3 114 0 108 3 114 0 109 3 114 0 110 3 114 0 113 3 114 0 114 3 114 0 119 3 114 0 121 3 114 0 122 3 114 0 124 3 114 0 125 3 114 0 130 3 114 0 131 3 114 0 132 3 114 0 133 3 114 0 134 3 114 0 135 3 114 0 136 3 114 0 137 3 114 0 139 3 114 0 142 3 114 0 143 3 114 0 147 3 114 0 150 3 114 0 151 3 114 0 152 3 114 0 153 3 114 0 162 3 114 0 167 3 114 0 168 3 114 0 171 1 127 0 172 3 114 0 173 3 114 1 142] 
#[1 1 218 0 1 1 218 0 3 1 218 0 4 1 218 0 5 1 218 0 7 1 218 0 9 1 218 0 11 1 218 0 13 1 218 0 22 1 218 0 24 1 218 0 26 1 218 0 27 1 218 0 28 1 218 0 29 1 218 0 30 1 218 0 31 1 218 0 32 1 218 0 33 1 218 0 34 1 218 0 35 1 218 0 36 1 218 0 37 1 218 0 38 1 218 0 39 1 218 0 40 1 218 0 41 1 218 0 42 1 218 0 43 1 218 0 44 1 218 0 48 1 218 0 53 1 218 0 54 1 218 0 55 1 218 0 57 1 218 0 58 1 218 0 71 1 218 0 73 1 218 0 74 1 218 0 75 1 218 0 80 1 218 0 82 1 218 0 84 1 218 0 86 1 218 0 87 1 218 0 89 1 218 0 90 1 218 0 91 1 218 0 97 1 218 0 98 1 218 0 100 1 218 0 101 1 218 0 103 1 218 0 104 1 218 0 105 1 218 0 106 1 218 0 107 1 218 0 108 1 218 0 109 1 218 0 110 1 218 0 113 1 218 0 114 1 218 0 119 1 218 0 121 1 218 0 122 1 218 0 124 1 218 0 125 1 218 0 130 1 218 0 131 1 218 0 132 1 218 0 133 1 218 0 134 1 218 0 135 1 218 0 136 1 218 0 137 1 218 0 139 1 218 0 142 1 218 0 143 1 218 0 147 1 218 0 150 1 218 0 151 1 218 0 152 1 218 0 153 1 218 0 162 1 218 0 167 1 218 0 168 1 218 0 171 1 135 0 172 1 218 0 173 1 218 1 142] 
#[1 1 139 0 1 1 143 0 3 3 118 0 4 3 118 0 5 3 118 0 7 1 139 0 9 3 118 0 11 3 118 0 13 3 118 0 22 3 118 0 24 3 118 0 26 3 118 0 27 3 118 0 28 3 118 0 29 3 118 0 30 3 118 0 31 3 118 0 32 3 118 0 33 3 118 0 34 3 118 0 35 3 118 0 36 3 118 0 37 3 118 0 38 3 118 0 39 3 118 0 40 3 118 0 41 3 118 0 42 3 118 0 43 3 118 0 44 3 118 0 48 3 118 0 53 3 118 0 54 3 118 0 55 3 118 0 57 3 118 0 58 3 118 0 71 3 118 0 73 3 118 0 74 3 118 0 75 3 118 0 80 3 118 0 82 3 118 0 84 3 118 0 86 3 118 0 87 3 118 0 89 3 118 0 90 3 118 0 91 3 118 0 97 3 118 0 98 3 118 0 100 3 118 0 101 3 118 0 103 3 118 0 104 3 118 0 105 3 118 0 106 3 118 0 107 3 118 0 108 3 118 0 109 3 118 0 110 3 118 0 113 3 118 0 114 3 118 0 119 3 118 0 121 3 118 0 122 3 118 0 124 3 118 0 125 3 118 0 130 3 118 0 131 3 118 0 132 3 118 0 133 3 118 0 134 3 118 0 135 3 118 0 136 3 118 0 137 3 118 0 139 3 118 0 142 3 118 0 143 3 118 0 147 3 118 0 150 3 118 0 151 3 118 0 152 3 118 0 153 3 118 0 162 3 118 0 167 3 118 0 168 3 118 0 171 1 139 0 172 3 118 0 173 3 118 1 142] 
#[1 1 147 0 1 1 151 0 3 3 122 0 4 3 122 0 5 3 122 0 7 1 147 0 9 3 122 0 11 3 122 0 13 3 122 0 22 3 122 0 24 3 122 0 26 3 122 0 27 3 122 0 28 3 122 0 29 3 122 0 30 3 122 0 31 3 122 0 32 3 122 0 33 3 122 0 34 3 122 0 35 3 122 0 36 3 122 0 37 3 122 0 38 3 122 0 39 3 122 0 40 3 122 0 41 3 122 0 42 3 122 0 43 3 122 0 44 3 122 0 48 3 122 0 53 3 122 0 54 3 122 0 55 3 122 0 57 3 122 0 58 3 122 0 71 3 122 0 73 3 122 0 74 3 122 0 75 3 122 0 80 3 122 0 82 3 122 0 84 3 122 0 86 3 122 0 87 3 122 0 89 3 122 0 90 3 122 0 91 3 122 0 97 3 122 0 98 3 122 0 100 3 122 0 101 3 122 0 103 3 122 0 104 3 122 0 105 3 122 0 106 3 122 0 107 3 122 0 108 3 122 0 109 3 122 0 110 3 122 0 113 3 122 0 114 3 122 0 119 3 122 0 121 3 122 0 122 3 122 0 124 3 122 0 125 3 122 0 130 3 122 0 131 3 122 0 132 3 122 0 133 3 122 0 134 3 122 0 135 3 122 0 136 3 122 0 137 3 122 0 139 3 122 0 142 3 122 0 143 3 122 0 147 3 122 0 150 3 122 0 151 3 122 0 152 3 122 0 153 3 122 0 162 3 122 0 167 3 122 0 168 3 122 0 171 1 147 0 172 3 122 0 173 3 122 1 142] 
#[0 3 126 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 130 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 7 173 0 172] 
#[0 7 177 0 172] 
#[0 7 181 0 172] 
#[0 1 155 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 138 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 142 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 1 159 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 150 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 1 163 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 158 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 162 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 166 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 170 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 174 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 178 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 182 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 186 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 190 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 2 178 0 1 2 178 0 3 2 178 0 4 2 178 0 5 2 178 0 7 2 178 0 9 2 178 0 11 2 178 0 13 2 178 0 22 2 178 0 24 2 178 0 26 2 178 0 27 2 178 0 28 2 178 0 29 2 178 0 30 2 178 0 31 2 178 0 32 2 178 0 33 2 178 0 34 2 178 0 35 2 178 0 36 2 178 0 37 2 178 0 38 2 178 0 39 2 178 0 40 2 178 0 41 2 178 0 42 2 178 0 43 2 178 0 44 2 178 0 48 2 178 0 53 2 178 0 54 2 178 0 55 2 178 0 57 2 178 0 58 2 178 0 71 2 178 0 73 2 178 0 74 2 178 0 75 2 178 0 80 2 178 0 82 2 178 0 84 2 178 0 86 2 178 0 87 2 178 0 89 2 178 0 90 2 178 0 91 2 178 0 97 2 178 0 98 2 178 0 100 2 178 0 101 2 178 0 103 2 178 0 104 2 178 0 105 2 178 0 106 2 178 0 107 2 178 0 108 2 178 0 109 2 178 0 110 2 178 0 113 2 178 0 114 2 178 0 119 2 178 0 121 2 178 0 122 2 178 0 124 2 178 0 125 2 178 0 130 2 178 0 131 2 178 0 132 2 178 0 133 2 178 0 134 2 178 0 135 2 178 0 136 2 178 0 137 2 178 0 139 2 178 0 142 2 178 0 143 2 178 0 147 2 178 0 150 2 178 0 151 2 178 0 152 2 178 0 153 2 178 0 162 2 178 0 167 2 178 0 168 2 178 0 171 2 178 0 172 2 178 0 173 7 185 0 226 2 178 1 142] 
#[0 3 194 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 198 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 3 202 0 1 3 202 0 3 3 202 0 4 3 202 0 5 3 202 0 7 1 167 0 9 3 202 0 11 3 202 0 13 3 202 0 22 3 202 0 24 3 202 0 26 3 202 0 27 3 202 0 28 3 202 0 29 3 202 0 30 3 202 0 31 3 202 0 32 3 202 0 33 3 202 0 34 3 202 0 35 3 202 0 36 3 202 0 37 3 202 0 38 3 202 0 39 3 202 0 40 3 202 0 41 3 202 0 42 3 202 0 43 3 202 0 44 3 202 0 48 3 202 0 53 3 202 0 54 3 202 0 55 3 202 0 57 3 202 0 58 3 202 0 71 3 202 0 73 3 202 0 74 3 202 0 75 3 202 0 80 3 202 0 82 3 202 0 84 3 202 0 86 3 202 0 87 3 202 0 89 3 202 0 90 3 202 0 91 3 202 0 97 3 202 0 98 3 202 0 100 3 202 0 101 3 202 0 103 3 202 0 104 3 202 0 105 3 202 0 106 3 202 0 107 3 202 0 108 3 202 0 109 3 202 0 110 3 202 0 113 3 202 0 114 3 202 0 119 3 202 0 121 3 202 0 122 3 202 0 124 3 202 0 125 3 202 0 130 3 202 0 131 3 202 0 132 3 202 0 133 3 202 0 134 3 202 0 135 3 202 0 136 3 202 0 137 3 202 0 139 3 202 0 142 3 202 0 143 3 202 0 147 3 202 0 150 3 202 0 151 3 202 0 152 3 202 0 153 3 202 0 162 3 202 0 167 3 202 0 168 3 202 0 171 3 202 0 172 3 202 0 173 7 193 0 225 3 202 1 142] 
#[0 3 206 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 7 197 0 172] 
#[1 7 201 0 7 7 205 0 172] 
#[1 0 130 0 1 0 134 0 3 0 130 0 9 3 210 0 11 3 210 0 80 3 210 0 97 3 210 0 122 3 210 0 162 3 210 0 172 3 210 0 173 3 210 1 142] 
#[0 1 218 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 1 242 0 1 1 246 0 3 1 242 0 9 3 214 0 11 3 214 0 80 3 214 0 97 3 214 0 122 3 214 0 162 3 214 0 172 3 214 0 173 3 214 1 142] 
#[1 0 130 0 1 0 134 0 3 0 130 0 9 7 209 0 172] 
#[0 3 218 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 1 218 0 1 1 218 0 3 1 218 0 9 7 213 0 172] 
#[1 4 37 0 7 3 222 0 11 3 222 0 22 3 222 0 27 3 222 0 28 3 222 0 29 3 222 0 30 3 222 0 31 3 222 0 32 3 222 0 33 3 222 0 34 3 222 0 35 3 222 0 36 3 222 0 37 3 222 0 38 3 222 0 39 3 222 0 40 3 222 0 44 3 222 0 54 3 222 0 57 3 222 0 71 3 222 0 74 3 222 0 75 3 222 0 80 3 222 0 82 3 222 0 84 3 222 0 86 3 222 0 87 3 222 0 89 3 222 0 90 3 222 0 97 3 222 0 98 3 222 0 100 3 222 0 103 3 222 0 104 3 222 0 105 3 222 0 106 3 222 0 110 3 222 0 113 3 222 0 114 3 222 0 121 3 222 0 122 3 222 0 125 3 222 0 130 3 222 0 131 3 222 0 132 3 222 0 133 3 222 0 137 3 222 0 139 3 222 0 142 3 222 0 143 3 222 0 147 3 222 0 150 3 222 0 162 3 222 0 167 3 222 0 168 3 222 0 171 1 171 0 172 3 222 0 173 4 45 1 34 4 49 1 35 3 222 1 142] 
#[0 3 226 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 7 217 0 172] 
#[1 7 221 0 3 4 9 0 5 1 175 0 7 1 175 0 11 1 175 0 22 1 175 0 27 1 175 0 28 1 175 0 29 1 175 0 30 1 175 0 31 1 175 0 32 1 175 0 33 1 175 0 34 1 175 0 35 1 175 0 36 1 175 0 37 1 175 0 38 1 175 0 39 1 175 0 40 1 175 0 44 1 175 0 54 1 175 0 57 1 175 0 71 1 175 0 74 1 175 0 75 1 175 0 80 1 175 0 82 1 175 0 84 1 175 0 86 1 175 0 87 1 175 0 89 1 175 0 90 1 175 0 97 1 175 0 98 1 175 0 100 1 175 0 103 1 175 0 104 1 175 0 105 1 175 0 106 1 175 0 110 1 175 0 113 1 175 0 114 1 175 0 121 1 175 0 122 1 175 0 125 1 175 0 130 1 175 0 131 1 175 0 132 1 175 0 133 1 175 0 137 1 175 0 139 1 175 0 142 1 175 0 143 1 175 0 147 1 175 0 150 1 175 0 162 1 175 0 167 1 175 0 168 1 175 0 171 1 179 0 172 1 175 0 173 7 233 0 228 7 233 0 229 7 229 0 230 7 233 0 233 1 175 1 142] 
#[1 7 237 0 7 3 234 0 11 3 234 0 22 3 234 0 27 3 234 0 28 3 234 0 29 3 234 0 30 3 234 0 31 3 234 0 32 3 234 0 33 3 234 0 34 3 234 0 35 3 234 0 36 3 234 0 37 3 234 0 38 3 234 0 39 3 234 0 40 3 234 0 44 3 234 0 54 3 234 0 57 3 234 0 71 3 234 0 74 3 234 0 75 3 234 0 80 3 234 0 82 3 234 0 84 3 234 0 86 3 234 0 87 3 234 0 89 3 234 0 90 3 234 0 97 3 234 0 98 3 234 0 100 3 234 0 103 3 234 0 104 3 234 0 105 3 234 0 106 3 234 0 110 3 234 0 113 3 234 0 114 3 234 0 121 3 234 0 122 3 234 0 125 3 234 0 130 3 234 0 131 3 234 0 132 3 234 0 133 3 234 0 137 3 234 0 139 3 234 0 142 3 234 0 143 3 234 0 147 3 234 0 150 3 234 0 162 3 234 0 167 3 234 0 168 3 234 0 171 1 183 0 172 3 234 0 173 7 245 1 31 7 249 1 32 3 234 1 142] 
#[0 3 238 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 7 253 0 152] 
#[0 8 1 0 172] 
#[0 8 5 0 172] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 8 13 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 8 9 0 119 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 8 13 0 201 8 13 0 203 8 13 0 212 8 17 0 215 1 25 0 223 8 13 0 234 1 33 0 235 8 13 0 236 8 13 0 237 8 13 0 238 8 13 0 239 8 13 0 240 8 13 0 241 8 13 0 242 8 13 0 243 8 13 0 247 8 13 0 248 8 13 1 17 8 13 1 18 8 13 1 19 8 13 1 20 8 13 1 21 8 13 1 22 1 101 1 24 8 13 1 25 8 13 1 26 8 13 1 27 8 13 1 28 8 13 1 29 8 13 1 33 8 13 1 36 1 133 1 55 1 133 1 56 1 133 1 57 8 13 1 61 8 13 1 62 8 13 1 63 8 13 1 66 8 13 1 67 8 13 1 68 8 13 1 69 8 13 1 70 8 13 1 71 8 13 1 72 8 13 1 73 8 13 1 74 8 13 1 75 8 13 1 76 8 13 1 77 8 13 1 78 8 13 1 79 8 13 1 80 8 13 1 81 8 13 1 82 8 13 1 83 8 13 1 88 8 13 1 89 1 237 1 90 8 13 1 95 8 13 1 98 8 13 1 99 8 13 1 100 8 13 1 101 8 13 1 102 8 13 1 107 8 13 1 108 8 13 1 109 8 13 1 110 8 13 1 111 8 13 1 112 8 13 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 8 13 1 127 2 89 1 128 2 93 1 129 8 13 1 137 8 13 1 138 8 13 1 140] 
#[1 6 5 0 11 6 9 0 172 6 13 0 173 8 21 0 207 6 21 0 214 6 25 0 216 6 29 0 217] 
#[1 3 242 0 11 3 242 0 80 3 242 0 97 3 242 0 122 3 242 0 162 1 187 0 172 3 242 0 173 3 242 1 142] 
#[0 8 29 0 172] 
#[1 3 246 0 1 3 246 0 9 3 246 0 11 3 246 0 22 3 246 0 24 3 246 0 26 3 246 0 41 3 246 0 42 3 246 0 43 3 246 0 44 3 246 0 48 3 246 0 53 3 246 0 54 3 246 0 55 3 246 0 57 3 246 0 58 3 246 0 71 3 246 0 73 3 246 0 75 3 246 0 82 3 246 0 84 3 246 0 86 3 246 0 87 3 246 0 90 3 246 0 91 3 246 0 98 3 246 0 100 3 246 0 101 3 246 0 103 3 246 0 105 3 246 0 106 3 246 0 107 3 246 0 108 3 246 0 109 3 246 0 113 3 246 0 114 3 246 0 121 3 246 0 124 3 246 0 125 3 246 0 130 3 246 0 132 3 246 0 133 3 246 0 134 3 246 0 135 3 246 0 136 3 246 0 137 3 246 0 139 3 246 0 143 3 246 0 147 3 246 0 150 3 246 0 152 3 246 0 153 3 246 0 162 3 246 0 167 3 246 0 168 3 246 0 171 1 191 0 172 3 246 0 173] 
#[0 8 37 0 11] 
#[1 3 250 0 1 3 250 0 9 3 250 0 11 3 250 0 22 3 250 0 24 3 250 0 26 3 250 0 41 3 250 0 42 3 250 0 43 3 250 0 44 3 250 0 48 3 250 0 53 3 250 0 54 3 250 0 55 3 250 0 57 3 250 0 58 3 250 0 71 3 250 0 73 3 250 0 75 3 254 0 80 3 250 0 82 3 250 0 84 3 250 0 86 3 250 0 87 3 250 0 90 3 250 0 91 3 254 0 94 3 254 0 96 3 254 0 97 3 250 0 98 3 250 0 100 3 250 0 101 3 250 0 103 3 250 0 105 3 250 0 106 3 250 0 107 3 250 0 108 3 250 0 109 3 250 0 113 3 250 0 114 3 254 0 119 3 250 0 121 3 254 0 122 3 250 0 124 3 250 0 125 3 250 0 130 3 250 0 132 3 250 0 133 3 250 0 134 3 250 0 135 3 250 0 136 3 250 0 137 3 250 0 139 3 250 0 143 3 250 0 147 3 250 0 150 3 254 0 151 3 250 0 152 3 250 0 153 1 195 0 162 3 250 0 167 3 250 0 168 3 250 0 171 3 250 0 172 1 195 0 173] 
#[1 4 2 0 80 4 2 0 94 4 2 0 96 4 2 0 97 4 2 0 119 4 2 0 122 4 2 0 151 4 2 0 162 8 41 0 173] 
#[0 4 6 0 11 0 172 0 173] 
#[0 4 10 0 1 0 9 0 11 0 22 0 24 0 26 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 75 0 82 0 84 0 86 0 87 0 90 0 91 0 98 0 100 0 101 0 103 0 105 0 106 0 107 0 108 0 109 0 113 0 114 0 121 0 124 0 125 0 130 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 143 0 147 0 150 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173] 
#[1 0 29 0 1 0 33 0 9 6 5 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 8 53 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 6 9 0 172 8 45 0 173 8 49 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 8 53 0 201 8 53 0 203 8 53 0 212 8 57 0 216 1 25 0 223 8 53 0 234 1 33 0 235 8 53 0 236 8 53 0 237 8 53 0 238 8 53 0 239 8 53 0 240 8 53 0 241 8 53 0 242 8 53 0 243 8 53 0 247 8 53 0 248 8 53 1 17 8 53 1 18 8 53 1 19 8 53 1 20 8 53 1 21 8 53 1 22 1 101 1 24 8 53 1 25 8 53 1 26 8 53 1 27 8 53 1 28 8 53 1 29 8 53 1 33 8 53 1 36 1 133 1 55 1 133 1 56 1 133 1 57 8 53 1 61 8 53 1 62 8 53 1 63 8 53 1 66 8 53 1 67 8 53 1 68 8 53 1 69 8 53 1 70 8 53 1 71 8 53 1 72 8 53 1 73 8 53 1 74 8 53 1 75 8 53 1 76 8 53 1 77 8 53 1 78 8 53 1 79 8 53 1 80 8 53 1 81 8 53 1 82 8 53 1 83 8 53 1 88 8 53 1 89 1 237 1 90 8 53 1 95 8 53 1 98 8 53 1 99 8 53 1 100 8 53 1 101 8 53 1 102 8 53 1 107 8 53 1 108 8 53 1 109 8 53 1 110 8 53 1 111 8 53 1 112 8 53 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 8 53 1 127 2 89 1 128 2 93 1 129 8 53 1 137 8 53 1 138 8 53 1 140] 
#[1 4 14 0 22 4 14 0 44 4 14 0 54 4 14 0 57 4 14 0 75 4 14 0 82 4 14 0 86 4 14 0 87 4 14 0 97 4 14 0 105 4 14 0 113 4 14 0 114 4 14 0 121 4 14 0 137 4 14 0 143 4 14 0 150 4 14 0 167 4 14 0 168 4 14 0 171 4 14 0 173 8 61 0 250] 
#[1 8 65 0 3 8 69 0 172 8 73 0 253] 
#[0 4 18 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 4 22 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 4 26 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 4 30 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 4 34 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 4 38 0 7 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 4 42 0 7 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 4 46 0 7 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 4 50 0 7 4 50 0 11 4 50 0 80 4 50 0 97 4 50 0 122 4 50 0 162 4 50 0 172 4 50 0 173 8 77 1 106 4 50 1 142] 
#[0 4 54 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 4 58 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 8 81 0 172] 
#[0 8 85 0 172] 
#[0 8 89 0 172] 
#[0 8 93 0 172] 
#[0 8 97 0 172] 
#[0 8 101 0 172] 
#[1 0 130 0 1 7 221 0 3 4 9 0 5 1 175 0 7 0 130 0 9 1 199 0 11 1 199 0 22 1 199 0 27 1 199 0 28 1 199 0 29 1 199 0 30 1 199 0 31 1 199 0 32 1 199 0 33 1 199 0 34 1 199 0 35 1 199 0 36 1 199 0 37 1 199 0 38 1 199 0 39 1 199 0 40 1 199 0 44 1 199 0 54 1 199 0 57 1 199 0 71 1 199 0 74 1 199 0 75 1 199 0 80 1 199 0 82 1 199 0 84 1 199 0 86 1 199 0 87 1 199 0 89 1 199 0 90 1 199 0 97 1 199 0 98 1 199 0 100 1 199 0 103 1 199 0 104 1 199 0 105 1 199 0 106 1 199 0 110 1 199 0 113 1 199 0 114 1 199 0 121 1 199 0 122 1 199 0 125 1 199 0 130 1 199 0 131 1 199 0 132 1 199 0 133 1 199 0 137 1 199 0 139 1 199 0 142 1 199 0 143 1 199 0 147 1 199 0 150 1 199 0 162 1 199 0 167 1 199 0 168 1 199 0 171 1 203 0 172 1 199 0 173 7 233 0 228 7 233 0 229 7 229 0 230 7 233 0 233 1 199 1 142] 
#[1 7 237 0 7 4 62 0 11 4 62 0 22 4 62 0 27 4 62 0 28 4 62 0 29 4 62 0 30 4 62 0 31 4 62 0 32 4 62 0 33 4 62 0 34 4 62 0 35 4 62 0 36 4 62 0 37 4 62 0 38 4 62 0 39 4 62 0 40 4 62 0 44 4 62 0 54 4 62 0 57 4 62 0 71 4 62 0 74 4 62 0 75 4 62 0 80 4 62 0 82 4 62 0 84 4 62 0 86 4 62 0 87 4 62 0 89 4 62 0 90 4 62 0 97 4 62 0 98 4 62 0 100 4 62 0 103 4 62 0 104 4 62 0 105 4 62 0 106 4 62 0 110 4 62 0 113 4 62 0 114 4 62 0 121 4 62 0 122 4 62 0 125 4 62 0 130 4 62 0 131 4 62 0 132 4 62 0 133 4 62 0 137 4 62 0 139 4 62 0 142 4 62 0 143 4 62 0 147 4 62 0 150 4 62 0 162 4 62 0 167 4 62 0 168 4 62 0 171 1 207 0 172 4 62 0 173 7 245 1 31 7 249 1 32 4 62 1 142] 
#[0 4 66 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 4 70 0 11 4 70 0 22 4 70 0 27 4 70 0 28 4 70 0 29 4 70 0 30 4 70 0 31 4 70 0 32 4 70 0 33 4 70 0 34 4 70 0 35 4 70 0 36 4 70 0 37 4 70 0 38 4 70 0 39 4 70 0 40 4 70 0 44 4 70 0 54 4 70 0 57 4 70 0 71 4 70 0 74 4 70 0 75 4 70 0 80 4 70 0 82 4 70 0 84 4 70 0 86 4 70 0 87 4 70 0 89 4 70 0 90 4 70 0 97 4 70 0 98 4 70 0 100 4 70 0 103 4 70 0 104 4 70 0 105 4 70 0 106 4 70 0 110 4 70 0 113 4 70 0 114 4 70 0 121 4 70 0 122 4 70 0 125 4 70 0 130 4 70 0 131 4 70 0 132 4 70 0 133 4 70 0 137 4 70 0 139 4 70 0 142 4 70 0 143 4 70 0 147 4 70 0 150 4 70 0 162 4 70 0 167 4 70 0 168 4 70 0 171 1 211 0 172 4 70 0 173 4 70 1 142] 
#[0 4 74 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 4 78 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 8 109 0 172] 
#[1 7 237 0 7 4 82 0 11 4 82 0 22 4 82 0 27 4 82 0 28 4 82 0 29 4 82 0 30 4 82 0 31 4 82 0 32 4 82 0 33 4 82 0 34 4 82 0 35 4 82 0 36 4 82 0 37 4 82 0 38 4 82 0 39 4 82 0 40 4 82 0 44 4 82 0 54 4 82 0 57 4 82 0 71 4 82 0 74 4 82 0 75 4 82 0 80 4 82 0 82 4 82 0 84 4 82 0 86 4 82 0 87 4 82 0 89 4 82 0 90 4 82 0 97 4 82 0 98 4 82 0 100 4 82 0 103 4 82 0 104 4 82 0 105 4 82 0 106 4 82 0 110 4 82 0 113 4 82 0 114 4 82 0 121 4 82 0 122 4 82 0 125 4 82 0 130 4 82 0 131 4 82 0 132 4 82 0 133 4 82 0 137 4 82 0 139 4 82 0 142 4 82 0 143 4 82 0 147 4 82 0 150 4 82 0 162 4 82 0 167 4 82 0 168 4 82 0 171 1 215 0 172 4 82 0 173 7 245 1 31 7 249 1 32 4 82 1 142] 
#[0 4 86 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 4 90 0 22 4 90 0 44 4 90 0 54 4 90 0 57 4 90 0 75 4 90 0 82 4 90 0 86 4 90 0 87 4 90 0 97 4 90 0 105 4 90 0 113 4 90 0 114 4 90 0 121 4 90 0 137 4 90 0 143 4 90 0 150 4 90 0 167 4 90 0 168 4 90 0 171 4 90 0 173 8 113 0 245] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 8 117 0 151 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 1 219 0 172 0 54 0 173 8 121 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 8 125 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 1 219 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 8 133 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 8 137 0 180 8 137 0 181 8 137 0 182 8 137 0 183 8 137 0 184 8 137 0 185 8 137 0 186 8 137 0 187 8 137 0 188 8 137 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 8 137 1 37 8 137 1 38 8 137 1 39 8 137 1 40 8 137 1 41 8 137 1 42 8 137 1 43 8 137 1 44 8 137 1 45 8 137 1 47 8 137 1 49 8 137 1 51 8 137 1 53 8 137 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 8 137 1 139 8 137 1 141] 
#[1 4 94 0 1 4 94 0 3 4 94 0 4 4 94 0 5 4 94 0 7 4 94 0 9 4 94 0 11 4 94 0 22 4 94 0 24 4 94 0 26 4 94 0 27 4 94 0 28 4 94 0 29 4 94 0 30 4 94 0 31 4 94 0 32 4 94 0 33 4 94 0 34 4 94 0 35 4 94 0 36 4 94 0 37 4 94 0 38 4 94 0 39 4 94 0 40 4 94 0 41 4 94 0 42 4 94 0 43 4 94 0 44 4 94 0 48 4 94 0 53 4 94 0 54 4 94 0 55 4 94 0 57 4 94 0 58 4 94 0 71 4 94 0 73 4 94 0 74 4 94 0 75 4 94 0 80 4 94 0 82 4 94 0 84 4 94 0 86 4 94 0 87 4 94 0 89 4 94 0 90 4 94 0 91 4 94 0 97 4 94 0 98 4 94 0 100 4 94 0 101 4 94 0 103 4 94 0 104 4 94 0 105 4 94 0 106 4 94 0 107 4 94 0 108 4 94 0 109 4 94 0 110 4 94 0 113 4 94 0 114 4 94 0 121 4 94 0 122 4 94 0 124 4 94 0 125 4 94 0 130 4 94 0 131 4 94 0 132 4 94 0 133 4 94 0 134 4 94 0 135 4 94 0 136 4 94 0 137 4 94 0 139 4 94 0 142 4 94 0 143 4 94 0 147 4 94 0 150 4 94 0 152 4 94 0 153 4 94 0 162 4 94 0 167 4 94 0 168 4 94 0 171 1 223 0 172 4 94 0 173 4 94 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 8 141 0 172 8 145 0 180 8 145 0 181 8 145 0 182 8 145 0 183 8 145 0 184 8 145 0 185 8 145 0 186 8 145 0 187 8 145 0 188 8 145 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 8 145 1 37 8 145 1 38 8 145 1 39 8 145 1 40 8 145 1 41 8 145 1 42 8 145 1 43 8 145 1 44 8 145 1 45 8 145 1 47 8 145 1 49 8 145 1 51 8 145 1 53 8 145 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 8 145 1 139 8 145 1 141] 
#[0 8 149 0 172] 
#[0 8 153 0 172] 
#[0 8 157 0 172] 
#[0 8 161 0 18] 
#[0 8 165 0 172] 
#[0 8 169 0 172] 
#[0 8 173 0 172] 
#[0 8 177 0 172] 
#[1 7 237 0 7 4 98 0 11 4 98 0 22 4 98 0 27 4 98 0 28 4 98 0 29 4 98 0 30 4 98 0 31 4 98 0 32 4 98 0 33 4 98 0 34 4 98 0 35 4 98 0 36 4 98 0 37 4 98 0 38 4 98 0 39 4 98 0 40 4 98 0 44 4 98 0 54 4 98 0 57 4 98 0 71 4 98 0 74 4 98 0 75 4 98 0 80 4 98 0 82 4 98 0 84 4 98 0 86 4 98 0 87 4 98 0 89 4 98 0 90 4 98 0 97 4 98 0 98 4 98 0 100 4 98 0 103 4 98 0 104 4 98 0 105 4 98 0 106 4 98 0 110 4 98 0 113 4 98 0 114 4 98 0 121 4 98 0 122 4 98 0 125 4 98 0 130 4 98 0 131 4 98 0 132 4 98 0 133 4 98 0 137 4 98 0 139 4 98 0 142 4 98 0 143 4 98 0 147 4 98 0 150 4 98 0 162 4 98 0 167 4 98 0 168 4 98 0 171 1 227 0 172 4 98 0 173 7 245 1 31 7 249 1 32 4 98 1 142] 
#[0 4 102 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 0 130 0 1 0 134 0 3 0 130 0 9 1 231 0 172] 
#[1 4 53 0 1 4 57 0 9 8 185 0 172] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 2 217 0 191 0 249 0 194 2 217 0 195 2 217 0 196 2 217 0 197 8 189 1 24] 
#[0 4 106 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 8 193 0 172 2 217 0 191 0 249 0 194 2 217 0 195 2 217 0 196 2 217 0 197 8 197 1 24] 
#[0 4 110 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 4 114 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 4 118 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 8 201 0 172] 
#[0 8 205 0 172] 
#[0 4 122 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 0 29 0 1 4 165 0 3 4 126 0 4 4 169 0 6 8 209 0 7 4 173 0 8 0 33 0 9 4 126 0 11 1 235 0 13 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 8 217 0 77 8 237 0 79 4 126 0 80 0 249 0 82 0 249 0 86 0 249 0 87 4 126 0 97 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 126 0 122 4 181 0 123 8 225 0 128 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 1 239 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 4 126 0 172 4 126 0 173 8 241 0 180 8 241 0 181 8 241 0 182 8 241 0 183 8 241 0 184 8 241 0 185 8 241 0 186 8 241 0 187 8 241 0 188 8 241 0 189 8 229 0 191 0 249 0 194 8 229 0 195 8 229 0 196 8 229 0 197 8 233 0 236 8 237 0 252 8 241 1 37 8 241 1 38 8 241 1 39 8 241 1 40 8 241 1 41 8 241 1 42 8 241 1 43 8 241 1 44 8 241 1 45 8 241 1 47 8 241 1 49 8 241 1 51 8 241 1 53 8 241 1 54 5 61 1 55 5 61 1 56 5 61 1 57 2 65 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 8 245 1 130 8 249 1 132 8 253 1 135 8 241 1 139 8 241 1 141 4 126 1 142] 
#[1 9 1 0 4 9 5 0 172] 
#[1 4 130 0 97 4 130 0 173 9 9 0 206] 
#[0 9 13 0 172] 
#[0 9 17 0 172] 
#[1 8 65 0 3 9 21 0 172 9 25 0 253] 
#[0 4 134 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 9 29 0 172] 
#[0 4 138 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 9 33 0 172] 
#[0 4 142 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 9 37 0 172] 
#[0 9 41 0 172] 
#[0 9 45 0 172] 
#[1 4 146 0 1 8 65 0 3 4 146 0 9 4 146 0 11 4 146 0 22 4 146 0 24 4 146 0 26 4 146 0 41 4 146 0 42 4 146 0 43 4 146 0 44 4 146 0 48 4 146 0 53 4 146 0 54 4 146 0 55 4 146 0 57 4 146 0 58 4 146 0 71 4 146 0 73 4 146 0 75 4 146 0 82 4 146 0 84 4 146 0 86 4 146 0 87 4 146 0 90 4 146 0 91 4 146 0 98 4 146 0 100 4 146 0 101 4 146 0 103 4 146 0 105 4 146 0 106 4 146 0 107 4 146 0 108 4 146 0 109 4 146 0 113 4 146 0 114 4 146 0 121 4 146 0 124 4 146 0 125 4 146 0 130 4 146 0 132 4 146 0 133 4 146 0 134 4 146 0 135 4 146 0 136 4 146 0 137 4 146 0 139 4 146 0 143 4 146 0 147 4 146 0 150 4 146 0 152 4 146 0 153 4 146 0 162 4 146 0 167 4 146 0 168 4 146 0 171 1 243 0 172 4 146 0 173 9 53 0 221 9 57 0 253] 
#[0 9 61 0 172] 
#[0 4 150 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 9 65 0 172] 
#[0 9 69 0 172] 
#[0 9 73 0 172] 
#[0 9 77 0 172] 
#[0 9 81 0 172] 
#[0 9 85 0 172] 
#[0 9 89 0 172] 
#[0 9 93 0 172] 
#[1 4 154 0 22 4 154 0 27 4 154 0 28 4 154 0 29 4 154 0 30 4 154 0 31 4 154 0 32 4 154 0 33 4 154 0 34 4 154 0 35 4 154 0 36 4 154 0 37 4 154 0 38 4 154 0 39 4 154 0 40 4 154 0 44 4 154 0 54 4 154 0 57 4 154 0 71 4 154 0 74 4 154 0 75 9 97 0 81 4 154 0 82 4 154 0 84 4 154 0 86 4 154 0 87 4 154 0 89 4 154 0 90 4 154 0 98 4 154 0 100 4 154 0 103 4 154 0 104 4 154 0 105 4 154 0 106 4 154 0 110 4 154 0 113 4 154 0 114 4 154 0 121 4 154 0 125 4 154 0 130 4 154 0 131 4 154 0 132 4 154 0 133 4 154 0 137 4 154 0 139 4 154 0 142 4 154 0 143 4 154 0 147 4 154 0 150 4 154 0 167 4 154 0 168 4 154 0 171 4 154 0 173 4 154 1 142] 
#[0 4 158 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[1 0 6 0 22 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 30 0 6 0 31 0 6 0 32 0 6 0 33 0 6 0 34 0 6 0 35 0 6 0 36 0 6 0 37 0 6 0 38 0 6 0 39 0 6 0 40 0 6 0 44 0 6 0 54 0 6 0 57 0 6 0 71 0 6 0 74 0 6 0 75 0 6 0 82 0 6 0 84 0 6 0 86 0 6 0 87 0 6 0 89 0 6 0 90 0 6 0 98 0 6 0 100 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 110 0 6 0 113 0 6 0 114 0 6 0 121 0 6 0 125 0 6 0 130 0 6 0 131 0 6 0 132 0 6 0 133 0 6 0 137 0 6 0 139 0 6 0 142 0 6 0 143 0 6 0 147 0 6 0 150 0 6 0 167 0 6 0 168 0 6 0 171 0 6 0 173 9 101 0 177 4 129 0 178 0 6 1 142] 
#[1 0 10 0 22 0 10 0 27 0 10 0 28 0 10 0 29 0 10 0 30 0 10 0 31 0 10 0 32 0 10 0 33 0 10 0 34 0 10 0 35 0 10 0 36 0 10 0 37 0 10 0 38 0 10 0 39 0 10 0 40 0 10 0 44 0 10 0 54 0 10 0 57 0 10 0 71 0 10 0 74 0 10 0 75 0 10 0 82 0 10 0 84 0 10 0 86 0 10 0 87 0 10 0 89 0 10 0 90 0 10 0 98 0 10 0 100 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 110 0 10 0 113 0 10 0 114 0 10 0 121 0 10 0 125 0 10 0 130 0 10 0 131 0 10 0 132 0 10 0 133 0 10 0 137 0 10 0 139 0 10 0 142 0 10 0 143 0 10 0 147 0 10 0 150 0 10 0 167 0 10 0 168 0 10 0 171 0 10 0 173 9 105 0 179 0 10 1 142] 
#[1 0 249 0 22 2 241 0 27 2 241 0 28 2 241 0 29 2 241 0 30 2 241 0 31 2 241 0 32 2 241 0 33 2 241 0 34 2 241 0 35 2 241 0 36 2 241 0 37 2 241 0 38 2 241 0 39 2 241 0 40 0 249 0 44 0 249 0 54 0 249 0 57 0 89 0 71 2 169 0 74 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 2 173 0 89 0 117 0 90 0 125 0 98 0 129 0 100 2 253 0 103 2 177 0 104 0 249 0 105 2 253 0 106 2 181 0 110 0 249 0 113 0 249 0 114 0 249 0 121 2 193 0 125 2 253 0 130 2 197 0 131 2 253 0 132 0 189 0 133 0 249 0 137 2 205 0 139 2 209 0 142 0 249 0 143 0 217 0 147 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 3 65 0 173 2 217 0 191 0 249 0 194 2 217 0 195 2 217 0 196 2 217 0 197 7 101 0 200 7 101 0 201 7 101 0 203 7 101 0 204 7 101 0 208 2 241 0 209 7 101 0 210 7 101 0 211 2 253 0 223 7 101 0 242 7 101 0 243 7 101 0 247 7 101 0 248 7 101 1 5 7 101 1 6 7 101 1 7 3 17 1 8 7 101 1 9 7 101 1 12 7 101 1 13 7 101 1 14 7 101 1 15 7 101 1 16 7 101 1 17 7 101 1 18 7 101 1 19 7 101 1 20 7 101 1 21 7 101 1 22 1 101 1 24 7 101 1 25 7 101 1 26 7 101 1 27 7 101 1 28 7 101 1 29 7 101 1 33 7 101 1 36 4 162 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 9 109 0 180 9 109 0 181 9 109 0 182 9 109 0 183 9 109 0 184 9 109 0 185 9 109 0 186 9 109 0 187 9 109 0 188 9 109 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 9 109 1 37 9 109 1 38 9 109 1 39 9 109 1 40 9 109 1 41 9 109 1 42 9 109 1 43 9 109 1 44 9 109 1 45 9 109 1 47 9 109 1 49 9 109 1 51 9 109 1 53 9 109 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 9 109 1 139 9 109 1 141] 
#[1 9 113 0 4 9 117 0 172] 
#[1 0 29 0 1 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 3 173 0 162 4 197 0 163 0 249 0 167 0 237 0 168 0 241 0 171 9 121 0 182 9 125 0 185 7 137 0 191 0 249 0 194 7 137 0 195 7 137 0 196 7 137 0 197 1 133 1 55 1 133 1 56 1 133 1 57 9 129 1 122 2 77 1 123 2 77 1 124 2 77 1 125 2 89 1 128 2 93 1 129] 
#[0 4 166 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 4 170 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 0 130 0 1 1 247 0 3 0 130 0 4 0 130 0 5 0 130 0 7 0 130 0 9 0 130 0 11 0 130 0 13 0 130 0 22 0 130 0 24 0 130 0 26 0 130 0 27 0 130 0 28 0 130 0 29 0 130 0 30 0 130 0 31 0 130 0 32 0 130 0 33 0 130 0 34 0 130 0 35 0 130 0 36 0 130 0 37 0 130 0 38 0 130 0 39 0 130 0 40 0 130 0 41 0 130 0 42 0 130 0 43 0 130 0 44 0 130 0 48 0 130 0 53 0 130 0 54 0 130 0 55 0 130 0 57 0 130 0 58 0 130 0 71 0 130 0 73 0 130 0 74 0 130 0 75 0 130 0 80 0 130 0 82 0 130 0 84 0 130 0 86 0 130 0 87 0 130 0 89 0 130 0 90 0 130 0 91 0 130 0 97 0 130 0 98 0 130 0 100 0 130 0 101 0 130 0 103 0 130 0 104 0 130 0 105 0 130 0 106 0 130 0 107 0 130 0 108 0 130 0 109 0 130 0 110 0 130 0 113 0 130 0 114 0 130 0 119 0 130 0 121 0 130 0 122 0 130 0 124 0 130 0 125 0 130 0 130 0 130 0 131 0 130 0 132 0 130 0 133 0 130 0 134 0 130 0 135 0 130 0 136 0 130 0 137 0 130 0 139 0 130 0 142 0 130 0 143 0 130 0 147 0 130 0 150 0 130 0 151 0 130 0 152 0 130 0 153 0 130 0 162 0 130 0 167 0 130 0 168 0 130 0 171 0 130 0 172 0 130 0 173 0 130 1 142] 
#[1 4 53 0 1 4 174 0 3 4 174 0 4 4 174 0 5 4 174 0 7 1 251 0 9 4 174 0 11 4 174 0 13 4 174 0 22 4 174 0 24 4 174 0 26 4 174 0 27 4 174 0 28 4 174 0 29 4 174 0 30 4 174 0 31 4 174 0 32 4 174 0 33 4 174 0 34 4 174 0 35 4 174 0 36 4 174 0 37 4 174 0 38 4 174 0 39 4 174 0 40 4 174 0 41 4 174 0 42 4 174 0 43 4 174 0 44 4 174 0 48 4 174 0 53 4 174 0 54 4 174 0 55 4 174 0 57 4 174 0 58 4 174 0 71 4 174 0 73 4 174 0 74 4 174 0 75 4 174 0 80 4 174 0 82 4 174 0 84 4 174 0 86 4 174 0 87 4 174 0 89 4 174 0 90 4 174 0 91 4 174 0 97 4 174 0 98 4 174 0 100 4 174 0 101 4 174 0 103 4 174 0 104 4 174 0 105 4 174 0 106 4 174 0 107 4 174 0 108 4 174 0 109 4 174 0 110 4 174 0 113 4 174 0 114 4 174 0 119 4 174 0 121 4 174 0 122 4 174 0 124 4 174 0 125 4 174 0 130 4 174 0 131 4 174 0 132 4 174 0 133 4 174 0 134 4 174 0 135 4 174 0 136 4 174 0 137 4 174 0 139 4 174 0 142 4 174 0 143 4 174 0 147 4 174 0 150 4 174 0 151 4 174 0 152 4 174 0 153 4 174 0 162 4 174 0 167 4 174 0 168 4 174 0 171 4 174 0 172 4 174 0 173 4 174 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 8 217 0 77 8 237 0 79 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 8 225 0 128 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 8 241 0 180 8 241 0 181 8 241 0 182 8 241 0 183 8 241 0 184 8 241 0 185 8 241 0 186 8 241 0 187 8 241 0 188 8 241 0 189 8 229 0 191 0 249 0 194 8 229 0 195 8 229 0 196 8 229 0 197 8 233 0 236 8 237 0 252 8 241 1 37 8 241 1 38 8 241 1 39 8 241 1 40 8 241 1 41 8 241 1 42 8 241 1 43 8 241 1 44 8 241 1 45 8 241 1 47 8 241 1 49 8 241 1 51 8 241 1 53 8 241 1 54 5 61 1 55 5 61 1 56 5 61 1 57 2 65 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 9 133 1 130 8 241 1 139 8 241 1 141] 
#[1 0 29 0 1 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 4 201 0 164 0 249 0 167 0 237 0 168 0 241 0 171 9 137 0 186 7 137 0 191 0 249 0 194 7 137 0 195 7 137 0 196 7 137 0 197 1 133 1 55 1 133 1 56 1 133 1 57 9 141 1 122 2 77 1 123 2 77 1 124 2 77 1 125 2 89 1 128 2 93 1 129] 
#[0 4 178 0 8 0 156 0 159] 
#[1 9 145 0 8 9 149 0 159] 
#[0 9 153 0 18] 
#[1 9 157 0 2 9 161 0 5 9 165 0 6 9 169 0 8 9 173 0 10 9 177 0 14 9 181 0 16 9 185 0 17 9 189 0 18 9 193 0 19 9 197 0 20 9 201 0 45 9 205 0 47 9 209 0 52 9 213 0 67 9 217 0 68 9 221 0 70 9 225 0 99 9 229 0 127 9 233 0 146 9 237 0 154 9 241 1 46 9 245 1 48 9 249 1 50] 
#[0 9 253 0 18] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 10 1 0 191 0 249 0 194 10 1 0 195 10 1 0 196 10 1 0 197] 
#[0 10 5 0 18] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 10 9 0 181 10 13 0 191 0 249 0 194 10 13 0 195 10 13 0 196 10 13 0 197] 
#[1 4 182 0 1 4 182 0 3 4 182 0 4 4 182 0 5 4 182 0 7 1 255 0 9 4 182 0 11 4 182 0 13 4 182 0 22 4 182 0 24 4 182 0 26 4 182 0 27 4 182 0 28 4 182 0 29 4 182 0 30 4 182 0 31 4 182 0 32 4 182 0 33 4 182 0 34 4 182 0 35 4 182 0 36 4 182 0 37 4 182 0 38 4 182 0 39 4 182 0 40 4 182 0 41 4 182 0 42 4 182 0 43 4 182 0 44 4 182 0 48 4 182 0 53 4 182 0 54 4 182 0 55 4 182 0 57 4 182 0 58 4 182 0 71 4 182 0 73 4 182 0 74 4 182 0 75 4 182 0 80 4 182 0 82 4 182 0 84 4 182 0 86 4 182 0 87 4 182 0 89 4 182 0 90 4 182 0 91 4 182 0 97 4 182 0 98 4 182 0 100 4 182 0 101 4 182 0 103 4 182 0 104 4 182 0 105 4 182 0 106 4 182 0 107 4 182 0 108 4 182 0 109 4 182 0 110 4 182 0 113 4 182 0 114 4 182 0 119 4 182 0 121 4 182 0 122 4 182 0 124 4 182 0 125 4 182 0 130 4 182 0 131 4 182 0 132 4 182 0 133 4 182 0 134 4 182 0 135 4 182 0 136 4 182 0 137 4 182 0 139 4 182 0 142 4 182 0 143 4 182 0 147 4 182 0 150 4 182 0 151 4 182 0 152 4 182 0 153 4 182 0 162 4 182 0 167 4 182 0 168 4 182 0 171 4 182 0 172 4 182 0 173 7 193 0 225 4 182 1 142] 
#[0 10 17 0 22 0 44 0 54 0 55 0 57 0 75 0 80 0 82 0 86 0 87 0 94 0 105 0 113 0 114 0 121 0 136 0 137 0 143 0 147 0 150 0 167 0 193 0 194] 
#[0 4 186 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 9 157 0 2 9 161 0 5 9 165 0 6 9 169 0 8 9 173 0 10 9 177 0 14 9 181 0 16 9 185 0 17 9 189 0 18 9 193 0 19 9 197 0 20 10 21 0 43 9 201 0 45 9 205 0 47 9 209 0 52 9 213 0 67 9 217 0 68 9 221 0 70 9 225 0 99 9 229 0 127 9 233 0 146 9 237 0 154 9 241 1 46 9 245 1 48 9 249 1 50] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 4 190 0 11 4 190 0 13 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 4 190 0 80 0 249 0 82 0 249 0 86 0 249 0 87 4 190 0 97 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 190 0 122 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 2 3 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 2 7 0 172 4 190 0 173 10 29 0 180 10 29 0 181 10 29 0 182 10 29 0 183 10 29 0 184 10 29 0 185 10 29 0 186 10 29 0 187 10 29 0 188 10 29 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 10 29 1 37 10 29 1 38 10 29 1 39 10 29 1 40 10 29 1 41 10 29 1 42 10 29 1 43 10 29 1 44 10 29 1 45 10 29 1 47 10 29 1 49 10 29 1 51 10 29 1 53 10 29 1 54 5 61 1 55 5 61 1 56 5 61 1 57 10 33 1 65 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 10 29 1 139 10 29 1 141 4 190 1 142] 
#[0 10 37 0 7] 
#[0 10 41 0 18] 
#[0 10 45 0 18] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 10 49 0 191 0 249 0 194 10 49 0 195 10 49 0 196 10 49 0 197] 
#[1 0 29 0 1 4 165 0 3 4 194 0 4 4 169 0 6 4 194 0 7 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 10 57 0 180 10 57 0 181 10 57 0 182 10 57 0 183 10 57 0 184 10 57 0 185 10 57 0 186 10 57 0 187 10 57 0 188 10 57 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 10 53 0 232 10 57 1 37 10 57 1 38 10 57 1 39 10 57 1 40 10 57 1 41 10 57 1 42 10 57 1 43 10 57 1 44 10 57 1 45 10 57 1 47 10 57 1 49 10 57 1 51 10 57 1 53 10 57 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 10 57 1 139 10 57 1 141] 
#[1 6 165 0 5 6 177 0 23] 
#[1 4 9 0 5 2 11 0 7 2 11 0 11 2 11 0 22 2 11 0 27 2 11 0 28 2 11 0 29 2 11 0 30 2 11 0 31 2 11 0 32 2 11 0 33 2 11 0 34 2 11 0 35 2 11 0 36 2 11 0 37 2 11 0 38 2 11 0 39 2 11 0 40 2 11 0 44 2 11 0 54 2 11 0 57 2 11 0 71 2 11 0 74 2 11 0 75 2 11 0 80 2 11 0 82 2 11 0 84 2 11 0 86 2 11 0 87 2 11 0 89 2 11 0 90 2 11 0 97 2 11 0 98 2 11 0 100 2 11 0 103 2 11 0 104 2 11 0 105 2 11 0 106 2 11 0 110 2 11 0 113 2 11 0 114 2 11 0 121 2 11 0 122 2 11 0 125 2 11 0 130 2 11 0 131 2 11 0 132 2 11 0 133 2 11 0 137 2 11 0 139 2 11 0 142 2 11 0 143 2 11 0 147 2 11 0 150 2 11 0 162 2 11 0 167 2 11 0 168 2 11 0 171 2 15 0 172 2 11 0 173 10 61 0 228 10 61 0 229 10 61 0 233 2 11 1 142] 
#[0 4 202 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 5 217 0 64 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 10 65 0 172 5 221 0 191 0 249 0 194 5 221 0 195 5 221 0 196 5 221 0 197 10 69 1 23] 
#[0 10 73 0 7] 
#[0 4 206 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 7 237 0 7 4 210 0 11 4 210 0 22 4 210 0 27 4 210 0 28 4 210 0 29 4 210 0 30 4 210 0 31 4 210 0 32 4 210 0 33 4 210 0 34 4 210 0 35 4 210 0 36 4 210 0 37 4 210 0 38 4 210 0 39 4 210 0 40 4 210 0 44 4 210 0 54 4 210 0 57 4 210 0 71 4 210 0 74 4 210 0 75 4 210 0 80 4 210 0 82 4 210 0 84 4 210 0 86 4 210 0 87 4 210 0 89 4 210 0 90 4 210 0 97 4 210 0 98 4 210 0 100 4 210 0 103 4 210 0 104 4 210 0 105 4 210 0 106 4 210 0 110 4 210 0 113 4 210 0 114 4 210 0 121 4 210 0 122 4 210 0 125 4 210 0 130 4 210 0 131 4 210 0 132 4 210 0 133 4 210 0 137 4 210 0 139 4 210 0 142 4 210 0 143 4 210 0 147 4 210 0 150 4 210 0 162 4 210 0 167 4 210 0 168 4 210 0 171 2 19 0 172 4 210 0 173 10 77 1 31 4 210 1 142] 
#[0 10 81 0 172] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 10 85 0 180 10 85 0 181 10 85 0 182 10 85 0 183 10 85 0 184 10 85 0 185 10 85 0 186 10 85 0 187 10 85 0 188 10 85 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 10 85 1 37 10 85 1 38 10 85 1 39 10 85 1 40 10 85 1 41 10 85 1 42 10 85 1 43 10 85 1 44 10 85 1 45 10 85 1 47 10 85 1 49 10 85 1 51 10 85 1 53 10 85 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 10 85 1 139 10 85 1 141] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 10 89 0 180 10 89 0 181 10 89 0 182 10 89 0 183 10 89 0 184 10 89 0 185 10 89 0 186 10 89 0 187 10 89 0 188 10 89 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 10 89 1 37 10 89 1 38 10 89 1 39 10 89 1 40 10 89 1 41 10 89 1 42 10 89 1 43 10 89 1 44 10 89 1 45 10 89 1 47 10 89 1 49 10 89 1 51 10 89 1 53 10 89 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 10 89 1 139 10 89 1 141] 
#[1 4 214 0 11 4 214 0 80 4 214 0 97 4 214 0 122 4 214 0 162 2 23 0 172 4 214 0 173 4 214 1 142] 
#[1 0 54 0 11 0 54 0 172 0 54 0 173 10 97 0 215] 
#[1 6 5 0 11 6 9 0 172 6 13 0 173 10 101 0 207 6 21 0 214 6 25 0 216 6 29 0 217] 
#[1 4 218 0 80 4 218 0 94 4 218 0 96 4 218 0 97 4 218 0 119 4 218 0 122 4 218 0 151 4 218 0 162 8 41 0 173] 
#[1 10 105 0 148 10 109 0 152] 
#[0 10 113 0 119] 
#[0 4 222 0 1 0 9 0 11 0 22 0 24 0 26 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 75 0 82 0 84 0 86 0 87 0 90 0 91 0 98 0 100 0 101 0 103 0 105 0 106 0 107 0 108 0 109 0 113 0 114 0 121 0 124 0 125 0 130 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 143 0 147 0 150 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173] 
#[1 4 226 0 1 4 226 0 9 4 226 0 11 4 226 0 22 4 226 0 24 4 226 0 26 4 226 0 41 4 226 0 42 4 226 0 43 4 226 0 44 4 226 0 48 4 226 0 53 4 226 0 54 4 226 0 55 4 226 0 57 4 226 0 58 4 226 0 71 4 226 0 73 4 226 0 75 4 226 0 82 4 226 0 84 4 226 0 86 4 226 0 87 4 226 0 90 4 226 0 91 4 226 0 98 4 226 0 100 4 226 0 101 4 226 0 103 4 226 0 105 4 226 0 106 4 226 0 107 4 226 0 108 4 226 0 109 4 226 0 113 4 226 0 114 4 226 0 121 4 226 0 124 4 226 0 125 4 226 0 130 4 226 0 132 4 226 0 133 4 226 0 134 4 226 0 135 4 226 0 136 4 226 0 137 4 226 0 139 4 226 0 143 4 226 0 147 4 226 0 150 4 226 0 152 4 226 0 153 4 226 0 162 4 226 0 167 4 226 0 168 4 226 0 171 2 27 0 172 4 226 0 173] 
#[0 4 230 0 1 0 9 0 22 0 24 0 44 0 53 0 54 0 57 0 75 0 80 0 82 0 86 0 87 0 94 0 96 0 97 0 105 0 113 0 114 0 119 0 121 0 122 0 137 0 143 0 150 0 151 0 162 0 167 0 168 0 171 0 173] 
#[0 3 250 0 1 0 9 0 11 0 22 0 24 0 26 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 75 0 82 0 84 0 86 0 87 0 90 0 91 0 98 0 100 0 101 0 103 0 105 0 106 0 107 0 108 0 109 0 113 0 114 0 121 0 124 0 125 0 130 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 143 0 147 0 150 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173] 
#[0 10 121 0 172] 
#[0 4 234 0 11 0 172 0 173] 
#[0 4 238 0 1 0 9 0 11 0 22 0 24 0 26 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 75 0 82 0 84 0 86 0 87 0 90 0 91 0 98 0 100 0 101 0 103 0 105 0 106 0 107 0 108 0 109 0 113 0 114 0 121 0 124 0 125 0 130 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 143 0 147 0 150 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173] 
#[1 0 6 0 22 0 6 0 44 0 6 0 54 0 6 0 57 0 6 0 75 0 6 0 82 0 6 0 86 0 6 0 87 0 6 0 97 0 6 0 105 0 6 0 113 0 6 0 114 0 6 0 121 0 6 0 137 0 6 0 143 0 6 0 150 0 6 0 167 0 6 0 168 0 6 0 171 0 6 0 173 10 125 0 177 10 129 0 249] 
#[1 10 133 0 4 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 8 217 0 77 10 153 0 79 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 10 137 0 126 10 141 0 128 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 10 145 0 172 10 149 0 191 0 249 0 194 10 149 0 195 10 149 0 196 10 149 0 197 10 153 0 252 10 157 1 0] 
#[1 8 65 0 3 10 161 0 253] 
#[0 4 242 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 10 165 0 7 4 246 0 11 4 246 0 80 4 246 0 97 4 246 0 122 4 246 0 162 2 31 0 172 4 246 0 173 10 173 1 105 4 246 1 142] 
#[1 9 157 0 2 9 161 0 5 9 165 0 6 9 169 0 8 9 173 0 10 9 177 0 14 9 181 0 16 9 185 0 17 9 189 0 18 9 193 0 19 9 197 0 20 9 201 0 45 9 205 0 47 9 209 0 52 9 213 0 67 9 217 0 68 9 221 0 70 9 225 0 99 9 229 0 127 10 177 0 144 10 181 0 145 9 233 0 146 9 237 0 154 9 241 1 46 9 245 1 48 9 249 1 50] 
#[1 9 157 0 2 9 161 0 5 9 165 0 6 9 169 0 8 9 173 0 10 9 177 0 14 9 181 0 16 9 185 0 17 9 189 0 18 9 193 0 19 9 197 0 20 10 185 0 23 9 201 0 45 9 205 0 47 9 209 0 52 9 213 0 67 9 217 0 68 9 221 0 70 9 225 0 99 9 229 0 127 9 233 0 146 9 237 0 154 9 241 1 46 9 245 1 48 9 249 1 50] 
#[1 0 153 0 108 10 189 0 134 10 193 1 107] 
#[1 9 157 0 2 9 161 0 5 9 165 0 6 9 169 0 8 9 173 0 10 9 177 0 14 9 181 0 16 9 185 0 17 9 189 0 18 9 193 0 19 9 197 0 20 9 201 0 45 9 205 0 47 9 209 0 52 9 213 0 67 9 217 0 68 9 221 0 70 9 225 0 99 0 149 0 107 0 153 0 108 9 229 0 127 9 233 0 146 9 237 0 154 9 241 1 46 9 245 1 48 9 249 1 50 10 197 1 102 10 197 1 107 10 197 1 108] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 10 201 0 180 10 201 0 181 10 201 0 182 10 201 0 183 10 201 0 184 10 201 0 185 10 201 0 186 10 201 0 187 10 201 0 188 10 201 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 10 201 1 37 10 201 1 38 10 201 1 39 10 201 1 40 10 201 1 41 10 201 1 42 10 201 1 43 10 201 1 44 10 201 1 45 10 201 1 47 10 201 1 49 10 201 1 51 10 201 1 53 10 201 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 10 201 1 139 10 201 1 141] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 5 217 0 64 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 10 213 0 180 10 213 0 181 10 213 0 182 10 213 0 183 10 213 0 184 10 213 0 185 10 213 0 186 10 213 0 187 10 213 0 188 10 213 0 189 6 109 0 191 0 249 0 194 6 109 0 195 6 109 0 196 6 109 0 197 10 205 1 23 10 209 1 30 10 213 1 37 10 213 1 38 10 213 1 39 10 213 1 40 10 213 1 41 10 213 1 42 10 213 1 43 10 213 1 44 10 213 1 45 10 213 1 47 10 213 1 49 10 213 1 51 10 213 1 53 10 213 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 10 213 1 139 10 213 1 141] 
#[1 6 165 0 5 9 153 0 18 6 177 0 23] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 10 217 0 180 10 217 0 181 10 217 0 182 10 217 0 183 10 217 0 184 10 217 0 185 10 217 0 186 10 217 0 187 10 217 0 188 10 217 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 10 217 1 37 10 217 1 38 10 217 1 39 10 217 1 40 10 217 1 41 10 217 1 42 10 217 1 43 10 217 1 44 10 217 1 45 10 217 1 47 10 217 1 49 10 217 1 51 10 217 1 53 10 217 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 10 217 1 139 10 217 1 141] 
#[1 0 6 0 22 0 6 0 44 0 6 0 54 0 6 0 57 0 6 0 75 0 6 0 82 0 6 0 86 0 6 0 87 0 6 0 97 0 6 0 105 0 6 0 113 0 6 0 114 0 6 0 121 0 6 0 137 0 6 0 143 0 6 0 150 0 6 0 167 0 6 0 168 0 6 0 171 0 6 0 173 10 221 0 177 10 225 0 244] 
#[0 4 250 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 10 229 0 172] 
#[1 10 233 0 151 3 173 0 162 10 237 0 182] 
#[0 10 241 0 172] 
#[1 10 245 0 97 3 173 0 162 10 249 0 182] 
#[1 4 254 0 1 4 254 0 3 4 254 0 4 4 254 0 5 4 254 0 7 4 254 0 9 4 254 0 11 4 254 0 22 4 254 0 24 4 254 0 26 4 254 0 27 4 254 0 28 4 254 0 29 4 254 0 30 4 254 0 31 4 254 0 32 4 254 0 33 4 254 0 34 4 254 0 35 4 254 0 36 4 254 0 37 4 254 0 38 4 254 0 39 4 254 0 40 4 254 0 41 4 254 0 42 4 254 0 43 4 254 0 44 4 254 0 48 4 254 0 53 4 254 0 54 4 254 0 55 4 254 0 57 4 254 0 58 4 254 0 71 4 254 0 73 4 254 0 74 4 254 0 75 4 254 0 80 4 254 0 82 4 254 0 84 4 254 0 86 4 254 0 87 4 254 0 89 4 254 0 90 4 254 0 91 4 254 0 97 4 254 0 98 4 254 0 100 4 254 0 101 4 254 0 103 4 254 0 104 4 254 0 105 4 254 0 106 4 254 0 107 4 254 0 108 4 254 0 109 4 254 0 110 4 254 0 113 4 254 0 114 4 254 0 121 4 254 0 122 4 254 0 124 4 254 0 125 4 254 0 130 4 254 0 131 4 254 0 132 4 254 0 133 4 254 0 134 4 254 0 135 4 254 0 136 4 254 0 137 4 254 0 139 4 254 0 142 4 254 0 143 4 254 0 147 4 254 0 150 4 254 0 152 4 254 0 153 4 254 0 162 4 254 0 167 4 254 0 168 4 254 0 171 2 35 0 172 4 254 0 173 4 254 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 10 253 0 180 10 253 0 181 10 253 0 182 10 253 0 183 10 253 0 184 10 253 0 185 10 253 0 186 10 253 0 187 10 253 0 188 10 253 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 10 253 1 37 10 253 1 38 10 253 1 39 10 253 1 40 10 253 1 41 10 253 1 42 10 253 1 43 10 253 1 44 10 253 1 45 10 253 1 47 10 253 1 49 10 253 1 51 10 253 1 53 10 253 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 10 253 1 139 10 253 1 141] 
#[1 5 2 0 1 5 2 0 3 5 2 0 4 5 2 0 5 5 2 0 7 5 2 0 9 5 2 0 11 5 2 0 22 5 2 0 24 5 2 0 26 5 2 0 27 5 2 0 28 5 2 0 29 5 2 0 30 5 2 0 31 5 2 0 32 5 2 0 33 5 2 0 34 5 2 0 35 5 2 0 36 5 2 0 37 5 2 0 38 5 2 0 39 5 2 0 40 5 2 0 41 5 2 0 42 5 2 0 43 5 2 0 44 5 2 0 48 5 2 0 53 5 2 0 54 5 2 0 55 5 2 0 57 5 2 0 58 5 2 0 71 5 2 0 73 5 2 0 74 5 2 0 75 5 2 0 80 5 2 0 82 5 2 0 84 5 2 0 86 5 2 0 87 5 2 0 89 5 2 0 90 5 2 0 91 5 2 0 97 5 2 0 98 5 2 0 100 5 2 0 101 5 2 0 103 5 2 0 104 5 2 0 105 5 2 0 106 5 2 0 107 5 2 0 108 5 2 0 109 5 2 0 110 5 2 0 113 5 2 0 114 5 2 0 121 5 2 0 122 5 2 0 124 5 2 0 125 5 2 0 130 5 2 0 131 5 2 0 132 5 2 0 133 5 2 0 134 5 2 0 135 5 2 0 136 5 2 0 137 5 2 0 139 5 2 0 142 5 2 0 143 5 2 0 147 5 2 0 150 5 2 0 152 5 2 0 153 5 2 0 162 5 2 0 167 5 2 0 168 5 2 0 171 2 39 0 172 5 2 0 173 5 2 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 11 1 0 180 11 1 0 181 11 1 0 182 11 1 0 183 11 1 0 184 11 1 0 185 11 1 0 186 11 1 0 187 11 1 0 188 11 1 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 11 1 1 37 11 1 1 38 11 1 1 39 11 1 1 40 11 1 1 41 11 1 1 42 11 1 1 43 11 1 1 44 11 1 1 45 11 1 1 47 11 1 1 49 11 1 1 51 11 1 1 53 11 1 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 11 1 1 139 11 1 1 141] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 11 5 0 180 11 5 0 181 11 5 0 182 11 5 0 183 11 5 0 184 11 5 0 185 11 5 0 186 11 5 0 187 11 5 0 188 11 5 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 11 5 1 37 11 5 1 38 11 5 1 39 11 5 1 40 11 5 1 41 11 5 1 42 11 5 1 43 11 5 1 44 11 5 1 45 11 5 1 47 11 5 1 49 11 5 1 51 11 5 1 53 11 5 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 11 5 1 139 11 5 1 141] 
#[1 2 178 0 1 2 178 0 3 2 178 0 4 2 178 0 5 2 178 0 7 2 178 0 9 2 178 0 11 1 27 0 22 2 178 0 24 2 178 0 26 2 178 0 27 2 178 0 28 2 178 0 29 2 178 0 30 2 178 0 31 2 178 0 32 2 178 0 33 2 178 0 34 2 178 0 35 2 178 0 36 2 178 0 37 2 178 0 38 2 178 0 39 2 178 0 40 2 178 0 41 2 178 0 42 2 178 0 43 1 31 0 44 2 178 0 48 2 43 0 53 1 35 0 54 2 178 0 55 1 39 0 57 2 178 0 58 2 178 0 71 2 178 0 73 2 178 0 74 1 43 0 75 11 13 0 76 11 13 0 78 2 178 0 80 1 47 0 82 2 178 0 84 11 13 0 85 1 51 0 86 1 55 0 87 11 13 0 88 2 178 0 89 2 178 0 90 2 178 0 91 11 13 0 92 2 178 0 97 2 178 0 98 2 178 0 100 2 178 0 101 2 178 0 103 2 178 0 104 1 59 0 105 2 178 0 106 2 178 0 107 2 178 0 108 2 178 0 109 2 178 0 110 11 13 0 112 1 63 0 113 1 67 0 114 11 13 0 116 11 13 0 117 11 13 0 118 1 71 0 121 2 178 0 122 2 178 0 124 2 178 0 125 2 178 0 130 2 178 0 131 2 178 0 132 2 178 0 133 2 178 0 134 2 178 0 135 2 178 0 136 1 75 0 137 11 13 0 138 2 178 0 139 11 13 0 141 2 178 0 142 1 79 0 143 2 178 0 147 5 153 0 149 1 83 0 150 2 178 0 152 2 178 0 153 2 178 0 162 1 87 0 167 1 91 0 168 1 95 0 171 2 178 0 172 2 178 0 173 5 157 0 191 0 249 0 194 5 157 0 195 5 157 0 196 5 157 0 197 11 13 0 222 11 13 0 224 5 169 0 226 11 13 0 227 2 178 1 142] 
#[0 11 17 0 172] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 2 217 0 191 0 249 0 194 2 217 0 195 2 217 0 196 2 217 0 197 11 21 1 24 11 25 1 33] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 11 29 0 191 0 249 0 194 11 29 0 195 11 29 0 196 11 29 0 197] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 11 33 0 191 0 249 0 194 11 33 0 195 11 33 0 196 11 33 0 197] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 11 37 0 191 0 249 0 194 11 37 0 195 11 37 0 196 11 37 0 197] 
#[1 11 41 0 12 11 45 0 18] 
#[1 11 49 0 12 11 53 0 18] 
#[0 5 6 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 2 217 0 191 0 249 0 194 2 217 0 195 2 217 0 196 2 217 0 197 11 57 1 24] 
#[0 5 10 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 11 61 0 180 11 61 0 181 11 61 0 182 11 61 0 183 11 61 0 184 11 61 0 185 11 61 0 186 11 61 0 187 11 61 0 188 11 61 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 11 61 1 37 11 61 1 38 11 61 1 39 11 61 1 40 11 61 1 41 11 61 1 42 11 61 1 43 11 61 1 44 11 61 1 45 11 61 1 47 11 61 1 49 11 61 1 51 11 61 1 53 11 61 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 11 61 1 139 11 61 1 141] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 11 65 0 180 11 65 0 181 11 65 0 182 11 65 0 183 11 65 0 184 11 65 0 185 11 65 0 186 11 65 0 187 11 65 0 188 11 65 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 11 65 1 37 11 65 1 38 11 65 1 39 11 65 1 40 11 65 1 41 11 65 1 42 11 65 1 43 11 65 1 44 11 65 1 45 11 65 1 47 11 65 1 49 11 65 1 51 11 65 1 53 11 65 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 11 65 1 139 11 65 1 141] 
#[1 5 14 0 1 5 14 0 3 5 14 0 4 5 14 0 6 5 14 0 7 5 14 0 8 5 14 0 9 5 14 0 11 5 14 0 13 5 14 0 22 5 14 0 24 5 14 0 44 5 14 0 53 5 14 0 54 5 14 0 57 5 14 0 63 5 14 0 75 5 14 0 77 5 14 0 79 5 14 0 80 5 14 0 82 5 14 0 86 5 14 0 87 5 14 0 97 5 14 0 105 5 14 0 113 5 14 0 114 5 14 0 121 5 14 0 122 5 14 0 123 5 14 0 128 5 14 0 137 5 14 0 143 5 14 0 150 5 14 0 155 5 14 0 160 5 14 0 161 5 14 0 162 5 14 0 163 5 14 0 164 5 14 0 165 5 14 0 166 5 14 0 167 5 14 0 168 5 14 0 170 5 14 0 171 2 47 0 172 5 14 0 173 5 14 1 142] 
#[1 5 18 0 1 5 18 0 3 5 18 0 4 5 18 0 6 5 18 0 7 5 18 0 8 5 18 0 9 5 18 0 11 5 18 0 13 5 18 0 22 5 18 0 24 5 18 0 44 5 18 0 53 5 18 0 54 5 18 0 57 5 18 0 63 5 18 0 75 5 18 0 77 5 18 0 79 5 18 0 80 5 18 0 82 5 18 0 86 5 18 0 87 5 18 0 97 5 18 0 105 5 18 0 113 5 18 0 114 5 18 0 121 5 18 0 122 5 18 0 123 5 18 0 128 5 18 0 137 5 18 0 143 5 18 0 150 5 18 0 155 5 18 0 160 5 18 0 161 5 18 0 162 5 18 0 163 5 18 0 164 5 18 0 165 5 18 0 166 5 18 0 167 5 18 0 168 5 18 0 170 5 18 0 171 2 51 0 172 5 18 0 173 5 18 1 142] 
#[0 5 22 0 172] 
#[0 5 26 0 172] 
#[0 11 77 0 172] 
#[1 1 111 0 1 1 115 0 3 3 54 0 4 3 54 0 5 3 54 0 7 1 111 0 9 3 54 0 11 3 54 0 13 3 54 0 22 3 54 0 24 3 54 0 26 3 54 0 27 3 54 0 28 3 54 0 29 3 54 0 30 3 54 0 31 3 54 0 32 3 54 0 33 3 54 0 34 3 54 0 35 3 54 0 36 3 54 0 37 3 54 0 38 3 54 0 39 3 54 0 40 3 54 0 41 3 54 0 42 3 54 0 43 3 54 0 44 3 54 0 48 3 54 0 53 3 54 0 54 3 54 0 55 3 54 0 57 3 54 0 58 3 54 0 71 3 54 0 73 3 54 0 74 3 54 0 75 3 54 0 80 3 54 0 82 3 54 0 84 3 54 0 86 3 54 0 87 3 54 0 89 3 54 0 90 3 54 0 91 3 54 0 97 3 54 0 98 3 54 0 100 3 54 0 101 3 54 0 103 3 54 0 104 3 54 0 105 3 54 0 106 3 54 0 107 3 54 0 108 3 54 0 109 3 54 0 110 3 54 0 113 3 54 0 114 3 54 0 119 3 54 0 121 3 54 0 122 3 54 0 124 3 54 0 125 3 54 0 130 3 54 0 131 3 54 0 132 3 54 0 133 3 54 0 134 3 54 0 135 3 54 0 136 3 54 0 137 3 54 0 139 3 54 0 142 3 54 0 143 3 54 0 147 3 54 0 150 3 54 0 151 3 54 0 152 3 54 0 153 3 54 0 162 3 54 0 167 3 54 0 168 3 54 0 171 2 55 0 172 3 54 0 173 3 54 1 142] 
#[0 5 30 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 11 85 0 172] 
#[1 5 34 0 1 5 34 0 3 5 34 0 4 5 34 0 5 5 34 0 7 5 34 0 9 5 34 0 11 5 34 0 13 5 34 0 22 5 34 0 24 5 34 0 26 5 34 0 27 5 34 0 28 5 34 0 29 5 34 0 30 5 34 0 31 5 34 0 32 5 34 0 33 5 34 0 34 5 34 0 35 5 34 0 36 5 34 0 37 5 34 0 38 5 34 0 39 5 34 0 40 5 34 0 41 5 34 0 42 5 34 0 43 5 34 0 44 5 34 0 48 5 34 0 53 5 34 0 54 5 34 0 55 5 34 0 57 5 34 0 58 5 34 0 71 5 34 0 73 5 34 0 74 5 34 0 75 5 34 0 80 5 34 0 82 5 34 0 84 5 34 0 86 5 34 0 87 5 34 0 89 5 34 0 90 5 34 0 91 5 34 0 97 5 34 0 98 5 34 0 100 5 34 0 101 5 34 0 103 5 34 0 104 5 34 0 105 5 34 0 106 5 34 0 107 5 34 0 108 5 34 0 109 5 34 0 110 5 34 0 113 5 34 0 114 5 34 0 119 5 34 0 121 5 34 0 122 5 34 0 124 5 34 0 125 5 34 0 130 5 34 0 131 5 34 0 132 5 34 0 133 5 34 0 134 5 34 0 135 5 34 0 136 5 34 0 137 5 34 0 139 5 34 0 142 5 34 0 143 5 34 0 147 5 34 0 150 5 34 0 151 5 34 0 152 5 34 0 153 5 34 0 162 5 34 0 167 5 34 0 168 5 34 0 171 2 59 0 172 5 34 0 173 5 34 1 142] 
#[1 4 126 0 4 11 89 0 7 4 126 0 11 2 63 0 13 4 126 0 80 4 126 0 97 4 126 0 122 4 126 0 162 4 126 0 172 4 126 0 173 11 97 1 135 4 126 1 142] 
#[0 5 38 0 1 0 3 0 4 0 6 0 7 0 8 0 9 0 11 0 13 0 22 0 24 0 44 0 53 0 54 0 57 0 63 0 75 0 77 0 79 0 80 0 82 0 86 0 87 0 97 0 105 0 113 0 114 0 121 0 122 0 123 0 128 0 137 0 143 0 150 0 155 0 160 0 161 0 162 0 163 0 164 0 165 0 166 0 167 0 168 0 170 0 171 0 172 0 173 1 142] 
#[1 5 42 0 4 11 101 0 7 5 42 0 11 11 105 0 13 5 42 0 80 5 42 0 97 5 42 0 122 5 42 0 162 5 42 0 172 5 42 0 173 11 109 1 134 5 42 1 142] 
#[0 5 46 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 11 113 0 4] 
#[1 0 6 0 97 2 67 0 173 11 121 0 177 11 125 0 205 11 129 0 207] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 11 133 0 191 0 249 0 194 11 133 0 195 11 133 0 196 11 133 0 197] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 11 137 0 191 0 249 0 194 11 137 0 195 11 137 0 196 11 137 0 197] 
#[1 8 65 0 3 11 141 0 253] 
#[1 2 71 0 1 0 142 0 3 4 9 0 5 2 71 0 9 2 71 0 11 2 71 0 22 2 71 0 24 2 71 0 26 2 71 0 41 2 71 0 42 2 71 0 43 2 71 0 44 2 71 0 48 2 71 0 53 2 71 0 54 2 71 0 55 2 71 0 57 2 71 0 58 2 71 0 71 2 71 0 73 2 71 0 75 2 71 0 82 2 71 0 84 2 71 0 86 2 71 0 87 2 71 0 90 2 71 0 91 2 71 0 98 2 71 0 100 2 71 0 101 2 71 0 103 2 71 0 105 2 71 0 106 2 71 0 107 2 71 0 108 2 71 0 109 2 71 0 113 2 71 0 114 2 71 0 121 2 71 0 124 2 71 0 125 2 71 0 130 2 71 0 132 2 71 0 133 2 71 0 134 2 71 0 135 2 71 0 136 2 71 0 137 2 71 0 139 2 71 0 143 2 71 0 147 2 71 0 150 2 71 0 152 2 71 0 153 2 71 0 162 2 71 0 167 2 71 0 168 2 71 0 171 2 75 0 172 2 71 0 173 11 149 0 228 11 149 0 229 11 149 0 233 11 153 1 10 11 157 1 11] 
#[1 11 161 0 25 11 165 0 86 11 169 0 143] 
#[0 11 173 0 120] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 11 177 0 191 0 249 0 194 11 177 0 195 11 177 0 196 11 177 0 197] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 11 181 0 191 0 249 0 194 11 181 0 195 11 181 0 196 11 181 0 197] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 11 185 0 191 0 249 0 194 11 185 0 195 11 185 0 196 11 185 0 197] 
#[1 2 79 0 1 8 65 0 3 2 79 0 9 2 79 0 11 2 79 0 22 2 79 0 24 2 79 0 26 2 79 0 41 2 79 0 42 2 79 0 43 2 79 0 44 2 79 0 48 2 79 0 53 2 79 0 54 2 79 0 55 2 79 0 57 2 79 0 58 2 79 0 71 2 79 0 73 2 79 0 75 2 79 0 82 2 79 0 84 2 79 0 86 2 79 0 87 2 79 0 90 2 79 0 91 2 79 0 98 2 79 0 100 2 79 0 101 2 79 0 103 2 79 0 105 2 79 0 106 2 79 0 107 2 79 0 108 2 79 0 109 2 79 0 113 2 79 0 114 2 79 0 121 2 79 0 124 2 79 0 125 2 79 0 130 2 79 0 132 2 79 0 133 2 79 0 134 2 79 0 135 2 79 0 136 2 79 0 137 2 79 0 139 2 79 0 143 2 79 0 147 2 79 0 150 2 79 0 152 2 79 0 153 2 79 0 162 2 79 0 167 2 79 0 168 2 79 0 171 2 83 0 172 2 79 0 173 11 193 0 221 11 197 0 253] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 11 201 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 4 146 0 1 4 146 0 9 4 146 0 11 4 146 0 22 4 146 0 24 4 146 0 26 4 146 0 41 4 146 0 42 4 146 0 43 4 146 0 44 4 146 0 48 4 146 0 53 4 146 0 54 4 146 0 55 4 146 0 57 4 146 0 58 4 146 0 71 4 146 0 73 4 146 0 75 4 146 0 82 4 146 0 84 4 146 0 86 4 146 0 87 4 146 0 90 4 146 0 91 4 146 0 98 4 146 0 100 4 146 0 101 4 146 0 103 4 146 0 105 4 146 0 106 4 146 0 107 4 146 0 108 4 146 0 109 4 146 0 113 4 146 0 114 4 146 0 121 4 146 0 124 4 146 0 125 4 146 0 130 4 146 0 132 4 146 0 133 4 146 0 134 4 146 0 135 4 146 0 136 4 146 0 137 4 146 0 139 4 146 0 143 4 146 0 147 4 146 0 150 4 146 0 152 4 146 0 153 4 146 0 162 4 146 0 167 4 146 0 168 4 146 0 171 2 87 0 172 4 146 0 173 11 205 0 221] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 11 209 0 180 11 209 0 181 11 209 0 182 11 209 0 183 11 209 0 184 11 209 0 185 11 209 0 186 11 209 0 187 11 209 0 188 11 209 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 11 209 1 37 11 209 1 38 11 209 1 39 11 209 1 40 11 209 1 41 11 209 1 42 11 209 1 43 11 209 1 44 11 209 1 45 11 209 1 47 11 209 1 49 11 209 1 51 11 209 1 53 11 209 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 11 209 1 139 11 209 1 141] 
#[1 11 213 0 104 11 217 0 142] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 11 221 0 191 0 249 0 194 11 221 0 195 11 221 0 196 11 221 0 197] 
#[1 11 225 0 105 11 229 0 114 11 233 0 137] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 11 237 0 191 0 249 0 194 11 237 0 195 11 237 0 196 11 237 0 197] 
#[1 11 241 0 104 11 245 0 131 11 249 0 142] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 11 253 0 191 0 249 0 194 11 253 0 195 11 253 0 196 11 253 0 197] 
#[1 12 1 0 105 12 5 0 114 12 9 0 137] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 12 13 0 191 0 249 0 194 12 13 0 195 12 13 0 196 12 13 0 197] 
#[0 5 58 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[1 0 249 0 22 2 241 0 27 2 241 0 28 2 241 0 29 2 241 0 30 2 241 0 31 2 241 0 32 2 241 0 33 2 241 0 34 2 241 0 35 2 241 0 36 2 241 0 37 2 241 0 38 2 241 0 39 2 241 0 40 0 249 0 44 0 249 0 54 0 249 0 57 0 89 0 71 2 169 0 74 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 2 173 0 89 0 117 0 90 0 125 0 98 0 129 0 100 2 253 0 103 2 177 0 104 0 249 0 105 2 253 0 106 2 181 0 110 0 249 0 113 0 249 0 114 0 249 0 121 2 193 0 125 2 253 0 130 2 197 0 131 2 253 0 132 0 189 0 133 0 249 0 137 2 205 0 139 2 209 0 142 0 249 0 143 0 217 0 147 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 3 65 0 173 2 217 0 191 0 249 0 194 2 217 0 195 2 217 0 196 2 217 0 197 7 101 0 200 7 101 0 201 7 101 0 203 7 101 0 204 7 101 0 208 2 241 0 209 7 101 0 210 7 101 0 211 2 253 0 223 7 101 0 242 7 101 0 243 7 101 0 247 7 101 0 248 7 101 1 5 7 101 1 6 7 101 1 7 3 17 1 8 7 101 1 9 7 101 1 12 7 101 1 13 7 101 1 14 7 101 1 15 7 101 1 16 7 101 1 17 7 101 1 18 7 101 1 19 7 101 1 20 7 101 1 21 7 101 1 22 1 101 1 24 7 101 1 25 7 101 1 26 7 101 1 27 7 101 1 28 7 101 1 29 7 101 1 33 7 101 1 36 5 62 1 142] 
#[1 0 6 0 22 0 6 0 27 0 6 0 28 0 6 0 29 0 6 0 30 0 6 0 31 0 6 0 32 0 6 0 33 0 6 0 34 0 6 0 35 0 6 0 36 0 6 0 37 0 6 0 38 0 6 0 39 0 6 0 40 0 6 0 44 0 6 0 54 0 6 0 57 0 6 0 71 0 6 0 74 0 6 0 75 0 6 0 82 0 6 0 84 0 6 0 86 0 6 0 87 0 6 0 89 0 6 0 90 0 6 0 98 0 6 0 100 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 110 0 6 0 113 0 6 0 114 0 6 0 121 0 6 0 125 0 6 0 130 0 6 0 131 0 6 0 132 0 6 0 133 0 6 0 137 0 6 0 139 0 6 0 142 0 6 0 143 0 6 0 147 0 6 0 150 0 6 0 167 0 6 0 168 0 6 0 171 0 6 0 173 12 17 0 177 4 129 0 178 0 6 1 142] 
#[1 12 21 0 4 12 25 0 172] 
#[0 5 66 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 9 157 0 2 12 29 0 4 9 161 0 5 9 165 0 6 9 169 0 8 9 173 0 10 9 177 0 14 9 181 0 16 9 185 0 17 9 189 0 18 9 193 0 19 9 197 0 20 9 201 0 45 9 205 0 47 9 209 0 52 9 213 0 67 9 217 0 68 9 221 0 70 9 225 0 99 9 229 0 127 9 233 0 146 9 237 0 154 9 241 1 46 9 245 1 48 9 249 1 50] 
#[0 5 70 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 5 74 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 4 53 0 1 5 78 0 3 5 78 0 4 5 78 0 5 5 78 0 7 2 91 0 9 5 78 0 11 5 78 0 13 5 78 0 22 5 78 0 24 5 78 0 26 5 78 0 27 5 78 0 28 5 78 0 29 5 78 0 30 5 78 0 31 5 78 0 32 5 78 0 33 5 78 0 34 5 78 0 35 5 78 0 36 5 78 0 37 5 78 0 38 5 78 0 39 5 78 0 40 5 78 0 41 5 78 0 42 5 78 0 43 5 78 0 44 5 78 0 48 5 78 0 53 5 78 0 54 5 78 0 55 5 78 0 57 5 78 0 58 5 78 0 71 5 78 0 73 5 78 0 74 5 78 0 75 5 78 0 80 5 78 0 82 5 78 0 84 5 78 0 86 5 78 0 87 5 78 0 89 5 78 0 90 5 78 0 91 5 78 0 97 5 78 0 98 5 78 0 100 5 78 0 101 5 78 0 103 5 78 0 104 5 78 0 105 5 78 0 106 5 78 0 107 5 78 0 108 5 78 0 109 5 78 0 110 5 78 0 113 5 78 0 114 5 78 0 119 5 78 0 121 5 78 0 122 5 78 0 124 5 78 0 125 5 78 0 130 5 78 0 131 5 78 0 132 5 78 0 133 5 78 0 134 5 78 0 135 5 78 0 136 5 78 0 137 5 78 0 139 5 78 0 142 5 78 0 143 5 78 0 147 5 78 0 150 5 78 0 151 5 78 0 152 5 78 0 153 5 78 0 162 5 78 0 167 5 78 0 168 5 78 0 171 5 78 0 172 5 78 0 173 5 78 1 142] 
#[0 12 33 0 172] 
#[0 5 82 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 4 53 0 1 5 86 0 3 5 86 0 4 5 86 0 5 5 86 0 7 2 95 0 9 5 86 0 11 5 86 0 13 5 86 0 22 5 86 0 24 5 86 0 26 5 86 0 27 5 86 0 28 5 86 0 29 5 86 0 30 5 86 0 31 5 86 0 32 5 86 0 33 5 86 0 34 5 86 0 35 5 86 0 36 5 86 0 37 5 86 0 38 5 86 0 39 5 86 0 40 5 86 0 41 5 86 0 42 5 86 0 43 5 86 0 44 5 86 0 48 5 86 0 53 5 86 0 54 5 86 0 55 5 86 0 57 5 86 0 58 5 86 0 71 5 86 0 73 5 86 0 74 5 86 0 75 5 86 0 80 5 86 0 82 5 86 0 84 5 86 0 86 5 86 0 87 5 86 0 89 5 86 0 90 5 86 0 91 5 86 0 97 5 86 0 98 5 86 0 100 5 86 0 101 5 86 0 103 5 86 0 104 5 86 0 105 5 86 0 106 5 86 0 107 5 86 0 108 5 86 0 109 5 86 0 110 5 86 0 113 5 86 0 114 5 86 0 119 5 86 0 121 5 86 0 122 5 86 0 124 5 86 0 125 5 86 0 130 5 86 0 131 5 86 0 132 5 86 0 133 5 86 0 134 5 86 0 135 5 86 0 136 5 86 0 137 5 86 0 139 5 86 0 142 5 86 0 143 5 86 0 147 5 86 0 150 5 86 0 151 5 86 0 152 5 86 0 153 5 86 0 162 5 86 0 167 5 86 0 168 5 86 0 171 5 86 0 172 5 86 0 173 5 86 1 142] 
#[1 7 153 0 159 12 37 0 190] 
#[0 5 90 0 8 0 156 0 159] 
#[0 12 41 0 172] 
#[0 12 45 0 172] 
#[0 5 94 0 172] 
#[0 5 98 0 172] 
#[0 5 102 0 172] 
#[0 5 106 0 172] 
#[0 5 110 0 172] 
#[0 5 114 0 172] 
#[0 5 118 0 172] 
#[0 12 49 0 172] 
#[0 5 122 0 172] 
#[0 5 126 0 172] 
#[0 5 130 0 172] 
#[0 5 134 0 172] 
#[0 5 138 0 172] 
#[0 5 142 0 172] 
#[0 5 146 0 172] 
#[0 5 150 0 172] 
#[0 5 154 0 172] 
#[0 5 158 0 172] 
#[0 12 53 0 172] 
#[0 5 162 0 172] 
#[0 12 57 0 172] 
#[0 12 61 0 172] 
#[0 12 65 0 172] 
#[0 12 69 0 172] 
#[0 12 73 0 172] 
#[0 12 77 0 172] 
#[1 12 81 0 7 12 85 0 172] 
#[1 12 89 0 7 12 93 0 172] 
#[0 5 166 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 12 97 0 172] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 4 190 0 11 4 190 0 13 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 4 190 0 80 0 249 0 82 0 249 0 86 0 249 0 87 4 190 0 97 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 190 0 122 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 2 3 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 4 190 0 172 4 190 0 173 12 101 0 180 12 101 0 181 12 101 0 182 12 101 0 183 12 101 0 184 12 101 0 185 12 101 0 186 12 101 0 187 12 101 0 188 12 101 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 12 101 1 37 12 101 1 38 12 101 1 39 12 101 1 40 12 101 1 41 12 101 1 42 12 101 1 43 12 101 1 44 12 101 1 45 12 101 1 47 12 101 1 49 12 101 1 51 12 101 1 53 12 101 1 54 5 61 1 55 5 61 1 56 5 61 1 57 12 105 1 65 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 12 101 1 139 12 101 1 141 4 190 1 142] 
#[1 4 190 0 11 4 190 0 13 4 190 0 80 4 190 0 97 4 190 0 122 4 190 0 162 2 99 0 172 4 190 0 173 12 113 1 65 4 190 1 142] 
#[1 5 170 0 11 12 117 0 13 5 170 0 80 5 170 0 97 5 170 0 122 5 170 0 162 5 170 0 172 5 170 0 173 12 121 1 64 5 170 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 4 190 0 11 4 190 0 13 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 4 190 0 80 0 249 0 82 0 249 0 86 0 249 0 87 4 190 0 97 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 190 0 122 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 2 3 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 2 103 0 172 4 190 0 173 12 129 0 180 12 129 0 181 12 129 0 182 12 129 0 183 12 129 0 184 12 129 0 185 12 129 0 186 12 129 0 187 12 129 0 188 12 129 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 12 129 1 37 12 129 1 38 12 129 1 39 12 129 1 40 12 129 1 41 12 129 1 42 12 129 1 43 12 129 1 44 12 129 1 45 12 129 1 47 12 129 1 49 12 129 1 51 12 129 1 53 12 129 1 54 5 61 1 55 5 61 1 56 5 61 1 57 12 133 1 65 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 12 129 1 139 12 129 1 141 4 190 1 142] 
#[0 12 137 0 172] 
#[0 12 141 0 172] 
#[1 7 221 0 3 4 9 0 5 2 107 0 7 2 107 0 11 2 107 0 22 2 107 0 27 2 107 0 28 2 107 0 29 2 107 0 30 2 107 0 31 2 107 0 32 2 107 0 33 2 107 0 34 2 107 0 35 2 107 0 36 2 107 0 37 2 107 0 38 2 107 0 39 2 107 0 40 2 107 0 44 2 107 0 54 2 107 0 57 2 107 0 71 2 107 0 74 2 107 0 75 2 107 0 80 2 107 0 82 2 107 0 84 2 107 0 86 2 107 0 87 2 107 0 89 2 107 0 90 2 107 0 97 2 107 0 98 2 107 0 100 2 107 0 103 2 107 0 104 2 107 0 105 2 107 0 106 2 107 0 110 2 107 0 113 2 107 0 114 2 107 0 121 2 107 0 122 2 107 0 125 2 107 0 130 2 107 0 131 2 107 0 132 2 107 0 133 2 107 0 137 2 107 0 139 2 107 0 142 2 107 0 143 2 107 0 147 2 107 0 150 2 107 0 162 2 107 0 167 2 107 0 168 2 107 0 171 2 111 0 172 2 107 0 173 12 149 0 228 12 149 0 229 12 145 0 230 12 149 0 233 2 107 1 142] 
#[1 12 153 0 4 12 157 0 7 12 161 0 231] 
#[1 4 194 0 4 4 194 0 7 7 165 0 172 12 165 0 232] 
#[0 5 178 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 5 217 0 64 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 5 221 0 191 0 249 0 194 5 221 0 195 5 221 0 196 5 221 0 197 12 169 1 23] 
#[0 5 182 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 5 217 0 64 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 12 173 0 172 5 221 0 191 0 249 0 194 5 221 0 195 5 221 0 196 5 221 0 197 12 177 1 23] 
#[0 5 186 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 12 181 0 180 12 181 0 181 12 181 0 182 12 181 0 183 12 181 0 184 12 181 0 185 12 181 0 186 12 181 0 187 12 181 0 188 12 181 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 12 181 1 37 12 181 1 38 12 181 1 39 12 181 1 40 12 181 1 41 12 181 1 42 12 181 1 43 12 181 1 44 12 181 1 45 12 181 1 47 12 181 1 49 12 181 1 51 12 181 1 53 12 181 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 12 181 1 139 12 181 1 141] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 1 219 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 12 185 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 12 189 0 119 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 1 219 0 172 0 54 0 173 12 193 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 12 197 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 12 201 0 152] 
#[1 6 5 0 11 6 9 0 172 6 13 0 173 12 205 0 207 6 21 0 214 6 25 0 216 6 29 0 217] 
#[1 5 190 0 80 5 190 0 94 5 190 0 96 5 190 0 97 5 190 0 119 5 190 0 122 5 190 0 151 5 190 0 162 8 41 0 173] 
#[0 12 209 0 172] 
#[0 12 213 0 172] 
#[1 5 194 0 11 5 194 0 80 5 194 0 97 5 194 0 122 5 194 0 162 2 115 0 172 5 194 0 173 5 194 1 142] 
#[0 5 198 0 1 0 9 0 11 0 22 0 24 0 26 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 75 0 82 0 84 0 86 0 87 0 90 0 91 0 98 0 100 0 101 0 103 0 105 0 106 0 107 0 108 0 109 0 113 0 114 0 121 0 124 0 125 0 130 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 143 0 147 0 150 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173] 
#[1 0 29 0 1 0 33 0 9 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 12 221 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 0 233 0 167 0 237 0 168 0 241 0 171 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 12 221 0 201 12 221 0 203 12 221 0 212 1 25 0 223 12 221 0 234 1 33 0 235 12 221 0 236 12 221 0 237 12 221 0 238 12 221 0 239 12 221 0 240 12 221 0 241 12 221 0 242 12 221 0 243 12 221 0 247 12 221 0 248 12 221 1 17 12 221 1 18 12 221 1 19 12 221 1 20 12 221 1 21 12 221 1 22 1 101 1 24 12 221 1 25 12 221 1 26 12 221 1 27 12 221 1 28 12 221 1 29 12 221 1 33 12 221 1 36 1 133 1 55 1 133 1 56 1 133 1 57 12 221 1 61 12 221 1 62 12 221 1 63 12 221 1 66 12 221 1 67 12 221 1 68 12 221 1 69 12 221 1 70 12 221 1 71 12 221 1 72 12 221 1 73 12 221 1 74 12 221 1 75 12 221 1 76 12 221 1 77 12 221 1 78 12 221 1 79 12 221 1 80 12 221 1 81 12 221 1 82 12 221 1 83 12 221 1 88 12 221 1 89 1 237 1 90 12 221 1 95 12 221 1 98 12 221 1 99 12 221 1 100 12 221 1 101 12 221 1 102 12 221 1 107 12 221 1 108 12 221 1 109 12 221 1 110 12 221 1 111 12 221 1 112 12 221 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 12 221 1 127 2 89 1 128 2 93 1 129 12 221 1 137 12 221 1 138 12 221 1 140] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 12 225 0 97 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 3 65 0 173 12 229 0 191 0 249 0 194 12 229 0 195 12 229 0 196 12 229 0 197 12 233 0 251] 
#[0 5 202 0 22 0 44 0 54 0 57 0 75 0 82 0 86 0 87 0 97 0 105 0 113 0 114 0 121 0 137 0 143 0 150 0 167 0 168 0 171 0 173] 
#[0 5 206 0 1 0 3 0 5 0 9 0 11 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 12 237 0 172] 
#[0 12 241 0 172] 
#[0 12 245 0 4] 
#[1 7 221 0 3 2 119 0 4 4 9 0 5 2 119 0 7 2 123 0 172 13 5 0 228 13 5 0 229 12 249 0 230 13 5 0 233 13 5 1 1 13 5 1 2] 
#[0 13 9 0 172] 
#[1 5 214 0 4 5 214 0 7 5 214 0 172 13 13 0 255] 
#[0 5 218 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 4 173 0 8 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 3 173 0 162 0 249 0 167 0 237 0 168 0 241 0 171 13 17 0 172 13 21 0 182 13 21 0 191 0 249 0 194 13 21 0 195 13 21 0 196 13 21 0 197 13 21 1 42 13 21 1 103] 
#[0 13 25 0 7] 
#[0 5 222 0 7 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 0 29 0 1 0 33 0 9 2 127 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 13 33 0 73 0 249 0 75 5 226 0 80 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 5 226 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 5 226 0 122 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 2 131 0 162 0 233 0 167 0 237 0 168 0 241 0 171 2 135 0 172 2 127 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 13 33 0 201 13 33 0 203 13 33 0 212 13 37 0 213 3 193 0 215 13 41 0 218 13 45 0 220 1 25 0 223 13 33 0 234 1 33 0 235 13 33 0 236 13 33 0 237 13 33 0 238 13 33 0 239 13 33 0 240 13 33 0 241 13 33 0 242 13 33 0 243 13 33 0 247 13 33 0 248 13 33 1 17 13 33 1 18 13 33 1 19 13 33 1 20 13 33 1 21 13 33 1 22 1 101 1 24 13 33 1 25 13 33 1 26 13 33 1 27 13 33 1 28 13 33 1 29 13 33 1 33 13 33 1 36 1 133 1 55 1 133 1 56 1 133 1 57 13 33 1 61 13 33 1 62 13 33 1 63 13 33 1 66 13 33 1 67 13 33 1 68 13 33 1 69 13 33 1 70 13 33 1 71 13 33 1 72 13 33 1 73 13 33 1 74 13 33 1 75 13 33 1 76 13 33 1 77 13 33 1 78 13 33 1 79 13 33 1 80 13 33 1 81 13 33 1 82 13 33 1 83 13 33 1 88 13 33 1 89 1 237 1 90 13 33 1 95 13 33 1 98 13 33 1 99 13 33 1 100 13 33 1 101 13 33 1 102 13 33 1 107 13 33 1 108 13 33 1 109 13 33 1 110 13 33 1 111 13 33 1 112 13 33 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 13 33 1 127 2 89 1 128 2 93 1 129 13 33 1 137 13 33 1 138 13 33 1 140 5 226 1 142] 
#[1 0 29 0 1 0 33 0 9 5 226 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 13 49 0 73 0 249 0 75 5 226 0 80 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 5 226 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 5 226 0 122 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 5 226 0 162 0 233 0 167 0 237 0 168 0 241 0 171 2 139 0 172 5 226 0 173 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 13 49 0 201 13 49 0 203 13 49 0 212 13 53 0 218 13 45 0 220 1 25 0 223 13 49 0 234 1 33 0 235 13 49 0 236 13 49 0 237 13 49 0 238 13 49 0 239 13 49 0 240 13 49 0 241 13 49 0 242 13 49 0 243 13 49 0 247 13 49 0 248 13 49 1 17 13 49 1 18 13 49 1 19 13 49 1 20 13 49 1 21 13 49 1 22 1 101 1 24 13 49 1 25 13 49 1 26 13 49 1 27 13 49 1 28 13 49 1 29 13 49 1 33 13 49 1 36 1 133 1 55 1 133 1 56 1 133 1 57 13 49 1 61 13 49 1 62 13 49 1 63 13 49 1 66 13 49 1 67 13 49 1 68 13 49 1 69 13 49 1 70 13 49 1 71 13 49 1 72 13 49 1 73 13 49 1 74 13 49 1 75 13 49 1 76 13 49 1 77 13 49 1 78 13 49 1 79 13 49 1 80 13 49 1 81 13 49 1 82 13 49 1 83 13 49 1 88 13 49 1 89 1 237 1 90 13 49 1 95 13 49 1 98 13 49 1 99 13 49 1 100 13 49 1 101 13 49 1 102 13 49 1 107 13 49 1 108 13 49 1 109 13 49 1 110 13 49 1 111 13 49 1 112 13 49 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 13 49 1 127 2 89 1 128 2 93 1 129 13 49 1 137 13 49 1 138 13 49 1 140 5 226 1 142] 
#[0 13 57 0 172] 
#[0 13 61 0 172] 
#[0 5 230 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 5 234 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 5 238 0 11 5 238 0 22 5 238 0 27 5 238 0 28 5 238 0 29 5 238 0 30 5 238 0 31 5 238 0 32 5 238 0 33 5 238 0 34 5 238 0 35 5 238 0 36 5 238 0 37 5 238 0 38 5 238 0 39 5 238 0 40 5 238 0 44 5 238 0 54 5 238 0 57 5 238 0 71 5 238 0 74 5 238 0 75 5 238 0 80 5 238 0 82 5 238 0 84 5 238 0 86 5 238 0 87 5 238 0 89 5 238 0 90 5 238 0 97 5 238 0 98 5 238 0 100 5 238 0 103 5 238 0 104 5 238 0 105 5 238 0 106 5 238 0 110 5 238 0 113 5 238 0 114 5 238 0 121 5 238 0 122 5 238 0 125 5 238 0 130 5 238 0 131 5 238 0 132 5 238 0 133 5 238 0 137 5 238 0 139 5 238 0 142 5 238 0 143 5 238 0 147 5 238 0 150 5 238 0 162 5 238 0 167 5 238 0 168 5 238 0 171 2 143 0 172 5 238 0 173 5 238 1 142] 
#[1 7 237 0 7 5 242 0 11 5 242 0 22 5 242 0 27 5 242 0 28 5 242 0 29 5 242 0 30 5 242 0 31 5 242 0 32 5 242 0 33 5 242 0 34 5 242 0 35 5 242 0 36 5 242 0 37 5 242 0 38 5 242 0 39 5 242 0 40 5 242 0 44 5 242 0 54 5 242 0 57 5 242 0 71 5 242 0 74 5 242 0 75 5 242 0 80 5 242 0 82 5 242 0 84 5 242 0 86 5 242 0 87 5 242 0 89 5 242 0 90 5 242 0 97 5 242 0 98 5 242 0 100 5 242 0 103 5 242 0 104 5 242 0 105 5 242 0 106 5 242 0 110 5 242 0 113 5 242 0 114 5 242 0 121 5 242 0 122 5 242 0 125 5 242 0 130 5 242 0 131 5 242 0 132 5 242 0 133 5 242 0 137 5 242 0 139 5 242 0 142 5 242 0 143 5 242 0 147 5 242 0 150 5 242 0 162 5 242 0 167 5 242 0 168 5 242 0 171 2 147 0 172 5 242 0 173 7 245 1 31 7 249 1 32 5 242 1 142] 
#[0 5 246 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 5 250 0 11 5 250 0 22 5 250 0 27 5 250 0 28 5 250 0 29 5 250 0 30 5 250 0 31 5 250 0 32 5 250 0 33 5 250 0 34 5 250 0 35 5 250 0 36 5 250 0 37 5 250 0 38 5 250 0 39 5 250 0 40 5 250 0 44 5 250 0 54 5 250 0 57 5 250 0 71 5 250 0 74 5 250 0 75 5 250 0 80 5 250 0 82 5 250 0 84 5 250 0 86 5 250 0 87 5 250 0 89 5 250 0 90 5 250 0 97 5 250 0 98 5 250 0 100 5 250 0 103 5 250 0 104 5 250 0 105 5 250 0 106 5 250 0 110 5 250 0 113 5 250 0 114 5 250 0 121 5 250 0 122 5 250 0 125 5 250 0 130 5 250 0 131 5 250 0 132 5 250 0 133 5 250 0 137 5 250 0 139 5 250 0 142 5 250 0 143 5 250 0 147 5 250 0 150 5 250 0 162 5 250 0 167 5 250 0 168 5 250 0 171 2 151 0 172 5 250 0 173 5 250 1 142] 
#[1 7 165 0 172 11 117 0 173 13 65 0 207] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 13 69 0 97 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 3 65 0 173 13 73 0 191 0 249 0 194 13 73 0 195 13 73 0 196 13 73 0 197 13 77 0 246] 
#[0 5 254 0 22 0 44 0 54 0 57 0 75 0 82 0 86 0 87 0 97 0 105 0 113 0 114 0 121 0 137 0 143 0 150 0 167 0 168 0 171 0 173] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 8 13 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 13 81 0 151 0 225 0 152 0 229 0 153 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 8 13 0 201 8 13 0 203 8 13 0 212 8 17 0 215 1 25 0 223 8 13 0 234 1 33 0 235 8 13 0 236 8 13 0 237 8 13 0 238 8 13 0 239 8 13 0 240 8 13 0 241 8 13 0 242 8 13 0 243 8 13 0 247 8 13 0 248 8 13 1 17 8 13 1 18 8 13 1 19 8 13 1 20 8 13 1 21 8 13 1 22 1 101 1 24 8 13 1 25 8 13 1 26 8 13 1 27 8 13 1 28 8 13 1 29 8 13 1 33 8 13 1 36 1 133 1 55 1 133 1 56 1 133 1 57 8 13 1 61 8 13 1 62 8 13 1 63 8 13 1 66 8 13 1 67 8 13 1 68 8 13 1 69 8 13 1 70 8 13 1 71 8 13 1 72 8 13 1 73 8 13 1 74 8 13 1 75 8 13 1 76 8 13 1 77 8 13 1 78 8 13 1 79 8 13 1 80 8 13 1 81 8 13 1 82 8 13 1 83 8 13 1 88 8 13 1 89 1 237 1 90 8 13 1 95 8 13 1 98 8 13 1 99 8 13 1 100 8 13 1 101 8 13 1 102 8 13 1 107 8 13 1 108 8 13 1 109 8 13 1 110 8 13 1 111 8 13 1 112 8 13 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 8 13 1 127 2 89 1 128 2 93 1 129 8 13 1 137 8 13 1 138 8 13 1 140] 
#[0 6 2 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 13 85 0 172] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 8 13 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 8 13 0 201 8 13 0 203 8 13 0 212 8 17 0 215 1 25 0 223 8 13 0 234 1 33 0 235 8 13 0 236 8 13 0 237 8 13 0 238 8 13 0 239 8 13 0 240 8 13 0 241 8 13 0 242 8 13 0 243 8 13 0 247 8 13 0 248 8 13 1 17 8 13 1 18 8 13 1 19 8 13 1 20 8 13 1 21 8 13 1 22 1 101 1 24 8 13 1 25 8 13 1 26 8 13 1 27 8 13 1 28 8 13 1 29 8 13 1 33 8 13 1 36 1 133 1 55 1 133 1 56 1 133 1 57 8 13 1 61 8 13 1 62 8 13 1 63 8 13 1 66 8 13 1 67 8 13 1 68 8 13 1 69 8 13 1 70 8 13 1 71 8 13 1 72 8 13 1 73 8 13 1 74 8 13 1 75 8 13 1 76 8 13 1 77 8 13 1 78 8 13 1 79 8 13 1 80 8 13 1 81 8 13 1 82 8 13 1 83 8 13 1 88 8 13 1 89 1 237 1 90 8 13 1 95 8 13 1 98 8 13 1 99 8 13 1 100 8 13 1 101 8 13 1 102 8 13 1 107 8 13 1 108 8 13 1 109 8 13 1 110 8 13 1 111 8 13 1 112 8 13 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 8 13 1 127 2 89 1 128 2 93 1 129 8 13 1 137 8 13 1 138 8 13 1 140] 
#[0 13 89 0 172] 
#[0 13 93 0 172] 
#[1 6 6 0 1 6 6 0 3 6 6 0 4 6 6 0 5 6 6 0 7 6 6 0 9 6 6 0 11 6 6 0 22 6 6 0 24 6 6 0 26 6 6 0 27 6 6 0 28 6 6 0 29 6 6 0 30 6 6 0 31 6 6 0 32 6 6 0 33 6 6 0 34 6 6 0 35 6 6 0 36 6 6 0 37 6 6 0 38 6 6 0 39 6 6 0 40 6 6 0 41 6 6 0 42 6 6 0 43 6 6 0 44 6 6 0 48 6 6 0 53 6 6 0 54 6 6 0 55 6 6 0 57 6 6 0 58 6 6 0 71 6 6 0 73 6 6 0 74 6 6 0 75 6 6 0 80 6 6 0 82 6 6 0 84 6 6 0 86 6 6 0 87 6 6 0 89 6 6 0 90 6 6 0 91 6 6 0 97 6 6 0 98 6 6 0 100 6 6 0 101 6 6 0 103 6 6 0 104 6 6 0 105 6 6 0 106 6 6 0 107 6 6 0 108 6 6 0 109 6 6 0 110 6 6 0 113 6 6 0 114 6 6 0 121 6 6 0 122 6 6 0 124 6 6 0 125 6 6 0 130 6 6 0 131 6 6 0 132 6 6 0 133 6 6 0 134 6 6 0 135 6 6 0 136 6 6 0 137 6 6 0 139 6 6 0 142 6 6 0 143 6 6 0 147 6 6 0 150 6 6 0 152 6 6 0 153 6 6 0 162 6 6 0 167 6 6 0 168 6 6 0 171 2 155 0 172 6 6 0 173 6 6 1 142] 
#[1 6 10 0 1 6 10 0 3 6 10 0 4 6 10 0 5 6 10 0 7 6 10 0 9 6 10 0 11 6 10 0 13 6 10 0 22 6 10 0 24 6 10 0 26 6 10 0 27 6 10 0 28 6 10 0 29 6 10 0 30 6 10 0 31 6 10 0 32 6 10 0 33 6 10 0 34 6 10 0 35 6 10 0 36 6 10 0 37 6 10 0 38 6 10 0 39 6 10 0 40 6 10 0 41 6 10 0 42 6 10 0 43 6 10 0 44 6 10 0 48 6 10 0 53 6 10 0 54 6 10 0 55 6 10 0 57 6 10 0 58 6 10 0 71 6 10 0 73 6 10 0 74 6 10 0 75 6 10 0 80 6 10 0 82 6 10 0 84 6 10 0 86 6 10 0 87 6 10 0 89 6 10 0 90 6 10 0 91 6 10 0 97 6 10 0 98 6 10 0 100 6 10 0 101 6 10 0 103 6 10 0 104 6 10 0 105 6 10 0 106 6 10 0 107 6 10 0 108 6 10 0 109 6 10 0 110 6 10 0 113 6 10 0 114 6 10 0 119 6 10 0 121 6 10 0 122 6 10 0 124 6 10 0 125 6 10 0 130 6 10 0 131 6 10 0 132 6 10 0 133 6 10 0 134 6 10 0 135 6 10 0 136 6 10 0 137 6 10 0 139 6 10 0 142 6 10 0 143 6 10 0 147 6 10 0 150 6 10 0 151 6 10 0 152 6 10 0 153 6 10 0 162 6 10 0 167 6 10 0 168 6 10 0 171 2 159 0 172 6 10 0 173 6 10 1 142] 
#[1 6 14 0 7 6 18 0 11 6 18 0 80 6 18 0 97 6 18 0 122 6 18 0 162 2 163 0 172 6 18 0 173 6 18 1 142] 
#[0 13 97 0 172] 
#[1 6 22 0 1 6 22 0 3 6 22 0 4 13 101 0 5 6 22 0 7 6 22 0 9 6 22 0 11 6 22 0 22 6 22 0 24 6 22 0 26 6 22 0 27 6 22 0 28 6 22 0 29 6 22 0 30 6 22 0 31 6 22 0 32 6 22 0 33 6 22 0 34 6 22 0 35 6 22 0 36 6 22 0 37 6 22 0 38 6 22 0 39 6 22 0 40 6 22 0 41 6 22 0 42 6 22 0 43 6 22 0 44 6 22 0 48 6 22 0 53 6 22 0 54 6 22 0 55 6 22 0 57 6 22 0 58 6 22 0 71 6 22 0 73 6 22 0 74 6 22 0 75 6 22 0 80 6 22 0 82 6 22 0 84 6 22 0 86 6 22 0 87 6 22 0 89 6 22 0 90 6 22 0 91 6 22 0 97 6 22 0 98 6 22 0 100 6 22 0 101 6 22 0 103 6 22 0 104 6 22 0 105 6 22 0 106 6 22 0 107 6 22 0 108 6 22 0 109 6 22 0 110 6 22 0 113 6 22 0 114 6 22 0 121 6 22 0 122 6 22 0 124 6 22 0 125 6 22 0 130 6 22 0 131 6 22 0 132 6 22 0 133 6 22 0 134 6 22 0 135 6 22 0 136 6 22 0 137 6 22 0 139 6 22 0 142 6 22 0 143 6 22 0 147 6 22 0 150 6 22 0 152 6 22 0 153 6 22 0 162 6 22 0 167 6 22 0 168 6 22 0 171 2 167 0 172 6 22 0 173 6 22 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 13 109 0 180 13 109 0 181 13 109 0 182 13 109 0 183 13 109 0 184 13 109 0 185 13 109 0 186 13 109 0 187 13 109 0 188 13 109 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 13 109 1 37 13 109 1 38 13 109 1 39 13 109 1 40 13 109 1 41 13 109 1 42 13 109 1 43 13 109 1 44 13 109 1 45 13 109 1 47 13 109 1 49 13 109 1 51 13 109 1 53 13 109 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 13 109 1 139 13 109 1 141] 
#[1 4 37 0 7 6 26 0 11 6 26 0 22 6 26 0 27 6 26 0 28 6 26 0 29 6 26 0 30 6 26 0 31 6 26 0 32 6 26 0 33 6 26 0 34 6 26 0 35 6 26 0 36 6 26 0 37 6 26 0 38 6 26 0 39 6 26 0 40 6 26 0 44 6 26 0 54 6 26 0 57 6 26 0 71 6 26 0 74 6 26 0 75 6 26 0 80 6 26 0 82 6 26 0 84 6 26 0 86 6 26 0 87 6 26 0 89 6 26 0 90 6 26 0 97 6 26 0 98 6 26 0 100 6 26 0 103 6 26 0 104 6 26 0 105 6 26 0 106 6 26 0 110 6 26 0 113 6 26 0 114 6 26 0 121 6 26 0 122 6 26 0 125 6 26 0 130 6 26 0 131 6 26 0 132 6 26 0 133 6 26 0 137 6 26 0 139 6 26 0 142 6 26 0 143 6 26 0 147 6 26 0 150 6 26 0 162 6 26 0 167 6 26 0 168 6 26 0 171 2 171 0 172 6 26 0 173 4 45 1 34 4 49 1 35 6 26 1 142] 
#[0 6 30 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 4 14 0 22 4 14 0 44 4 14 0 54 4 14 0 57 4 14 0 75 4 14 0 82 4 14 0 86 4 14 0 87 4 14 0 97 4 14 0 105 4 14 0 113 4 14 0 114 4 14 0 121 4 14 0 137 4 14 0 143 4 14 0 150 4 14 0 167 4 14 0 168 4 14 0 171 4 14 0 173 13 113 0 250] 
#[1 8 65 0 3 13 117 0 172 13 121 0 253] 
#[1 4 90 0 22 4 90 0 44 4 90 0 54 4 90 0 57 4 90 0 75 4 90 0 82 4 90 0 86 4 90 0 87 4 90 0 97 4 90 0 105 4 90 0 113 4 90 0 114 4 90 0 121 4 90 0 137 4 90 0 143 4 90 0 150 4 90 0 167 4 90 0 168 4 90 0 171 4 90 0 173 13 125 0 245] 
#[0 13 129 0 172] 
#[0 13 133 0 172] 
#[0 13 137 0 172] 
#[0 13 141 0 172] 
#[0 6 34 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 6 38 0 1 6 38 0 3 6 38 0 4 6 38 0 5 6 38 0 7 6 38 0 9 6 38 0 11 6 38 0 13 6 38 0 22 6 38 0 24 6 38 0 26 6 38 0 27 6 38 0 28 6 38 0 29 6 38 0 30 6 38 0 31 6 38 0 32 6 38 0 33 6 38 0 34 6 38 0 35 6 38 0 36 6 38 0 37 6 38 0 38 6 38 0 39 6 38 0 40 6 38 0 41 6 38 0 42 6 38 0 43 6 38 0 44 6 38 0 48 6 38 0 53 6 38 0 54 6 38 0 55 6 38 0 57 6 38 0 58 6 38 0 71 6 38 0 73 6 38 0 74 6 38 0 75 6 38 0 80 6 38 0 82 6 38 0 84 6 38 0 86 6 38 0 87 6 38 0 89 6 38 0 90 6 38 0 91 6 38 0 97 6 38 0 98 6 38 0 100 6 38 0 101 6 38 0 103 6 38 0 104 6 38 0 105 6 38 0 106 6 38 0 107 6 38 0 108 6 38 0 109 6 38 0 110 6 38 0 113 6 38 0 114 6 38 0 119 6 38 0 121 6 38 0 122 6 38 0 124 6 38 0 125 6 38 0 130 6 38 0 131 6 38 0 132 6 38 0 133 6 38 0 134 6 38 0 135 6 38 0 136 6 38 0 137 6 38 0 139 6 38 0 142 6 38 0 143 6 38 0 147 6 38 0 150 6 38 0 151 6 38 0 152 6 38 0 153 6 38 0 162 6 38 0 167 6 38 0 168 6 38 0 171 2 175 0 172 6 38 0 173 6 38 1 142] 
#[1 6 42 0 1 6 42 0 3 6 42 0 4 6 42 0 5 6 42 0 7 6 42 0 9 6 42 0 11 6 42 0 13 6 42 0 22 6 42 0 24 6 42 0 26 6 42 0 27 6 42 0 28 6 42 0 29 6 42 0 30 6 42 0 31 6 42 0 32 6 42 0 33 6 42 0 34 6 42 0 35 6 42 0 36 6 42 0 37 6 42 0 38 6 42 0 39 6 42 0 40 6 42 0 41 6 42 0 42 6 42 0 43 6 42 0 44 6 42 0 48 6 42 0 53 6 42 0 54 6 42 0 55 6 42 0 57 6 42 0 58 6 42 0 71 6 42 0 73 6 42 0 74 6 42 0 75 6 42 0 80 6 42 0 82 6 42 0 84 6 42 0 86 6 42 0 87 6 42 0 89 6 42 0 90 6 42 0 91 6 42 0 97 6 42 0 98 6 42 0 100 6 42 0 101 6 42 0 103 6 42 0 104 6 42 0 105 6 42 0 106 6 42 0 107 6 42 0 108 6 42 0 109 6 42 0 110 6 42 0 113 6 42 0 114 6 42 0 119 6 42 0 121 6 42 0 122 6 42 0 124 6 42 0 125 6 42 0 130 6 42 0 131 6 42 0 132 6 42 0 133 6 42 0 134 6 42 0 135 6 42 0 136 6 42 0 137 6 42 0 139 6 42 0 142 6 42 0 143 6 42 0 147 6 42 0 150 6 42 0 151 6 42 0 152 6 42 0 153 6 42 0 162 6 42 0 167 6 42 0 168 6 42 0 171 2 179 0 172 6 42 0 173 6 42 1 142] 
#[0 6 46 0 1 0 3 0 4 0 6 0 7 0 8 0 9 0 11 0 13 0 22 0 24 0 44 0 53 0 54 0 57 0 63 0 75 0 77 0 79 0 80 0 82 0 86 0 87 0 97 0 105 0 113 0 114 0 121 0 122 0 123 0 128 0 137 0 143 0 150 0 155 0 160 0 161 0 162 0 163 0 164 0 165 0 166 0 167 0 168 0 170 0 171 0 172 0 173 1 142] 
#[0 6 50 0 1 0 3 0 4 0 6 0 7 0 8 0 9 0 11 0 13 0 22 0 24 0 44 0 53 0 54 0 57 0 63 0 75 0 77 0 79 0 80 0 82 0 86 0 87 0 97 0 105 0 113 0 114 0 121 0 122 0 123 0 128 0 137 0 143 0 150 0 155 0 160 0 161 0 162 0 163 0 164 0 165 0 166 0 167 0 168 0 170 0 171 0 172 0 173 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 13 149 0 180 13 149 0 181 13 149 0 182 13 149 0 183 13 149 0 184 13 149 0 185 13 149 0 186 13 149 0 187 13 149 0 188 13 149 0 189 8 229 0 191 0 249 0 194 8 229 0 195 8 229 0 196 8 229 0 197 13 145 0 236 13 149 1 37 13 149 1 38 13 149 1 39 13 149 1 40 13 149 1 41 13 149 1 42 13 149 1 43 13 149 1 44 13 149 1 45 13 149 1 47 13 149 1 49 13 149 1 51 13 149 1 53 13 149 1 54 5 61 1 55 5 61 1 56 5 61 1 57 2 65 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 13 149 1 139 13 149 1 141] 
#[1 6 169 0 12 13 153 0 18] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 13 157 0 128 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 13 165 0 180 13 165 0 181 13 165 0 182 13 165 0 183 13 165 0 184 13 165 0 185 13 165 0 186 13 165 0 187 13 165 0 188 13 165 0 189 8 229 0 191 0 249 0 194 8 229 0 195 8 229 0 196 8 229 0 197 13 161 0 236 13 165 1 37 13 165 1 38 13 165 1 39 13 165 1 40 13 165 1 41 13 165 1 42 13 165 1 43 13 165 1 44 13 165 1 45 13 165 1 47 13 165 1 49 13 165 1 51 13 165 1 53 13 165 1 54 5 61 1 55 5 61 1 56 5 61 1 57 2 65 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 13 165 1 139 13 165 1 141] 
#[1 6 54 0 1 6 54 0 3 6 54 0 4 6 54 0 6 6 54 0 7 6 54 0 8 6 54 0 9 6 54 0 11 6 54 0 13 6 54 0 22 6 54 0 24 6 54 0 44 6 54 0 53 6 54 0 54 6 54 0 57 6 54 0 63 6 54 0 75 6 54 0 77 6 54 0 79 6 54 0 80 6 54 0 82 6 54 0 86 6 54 0 87 6 54 0 97 6 54 0 105 6 54 0 113 6 54 0 114 6 54 0 121 6 54 0 122 6 54 0 123 6 54 0 128 6 54 0 137 6 54 0 143 6 54 0 150 6 54 0 155 6 54 0 160 6 54 0 161 6 54 0 162 6 54 0 163 6 54 0 164 6 54 0 165 6 54 0 166 6 54 0 167 6 54 0 168 6 54 0 170 6 54 0 171 2 183 0 172 6 54 0 173 6 54 1 142] 
#[1 6 58 0 1 6 58 0 3 6 58 0 4 6 58 0 6 6 58 0 7 6 58 0 8 6 58 0 9 6 58 0 11 6 58 0 13 6 58 0 22 6 58 0 24 6 58 0 44 6 58 0 53 6 58 0 54 6 58 0 57 6 58 0 63 6 58 0 75 6 58 0 77 6 58 0 79 6 58 0 80 6 58 0 82 6 58 0 86 6 58 0 87 6 58 0 97 6 58 0 105 6 58 0 113 6 58 0 114 6 58 0 121 6 58 0 122 6 58 0 123 6 58 0 128 6 58 0 137 6 58 0 143 6 58 0 150 6 58 0 155 6 58 0 160 6 58 0 161 6 58 0 162 6 58 0 163 6 58 0 164 6 58 0 165 6 58 0 166 6 58 0 167 6 58 0 168 6 58 0 170 6 58 0 171 2 187 0 172 6 58 0 173 6 58 1 142] 
#[1 6 62 0 4 11 101 0 7 6 62 0 11 11 105 0 13 6 62 0 80 6 62 0 97 6 62 0 122 6 62 0 162 6 62 0 172 6 62 0 173 11 109 1 134 6 62 1 142] 
#[1 0 29 0 1 4 165 0 3 6 66 0 4 4 169 0 6 6 66 0 7 4 173 0 8 0 33 0 9 6 66 0 11 6 66 0 13 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 8 217 0 77 8 237 0 79 6 66 0 80 0 249 0 82 0 249 0 86 0 249 0 87 6 66 0 97 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 6 66 0 122 4 181 0 123 8 225 0 128 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 2 191 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 2 195 0 172 6 66 0 173 8 241 0 180 8 241 0 181 8 241 0 182 8 241 0 183 8 241 0 184 8 241 0 185 8 241 0 186 8 241 0 187 8 241 0 188 8 241 0 189 8 229 0 191 0 249 0 194 8 229 0 195 8 229 0 196 8 229 0 197 8 233 0 236 8 237 0 252 8 241 1 37 8 241 1 38 8 241 1 39 8 241 1 40 8 241 1 41 8 241 1 42 8 241 1 43 8 241 1 44 8 241 1 45 8 241 1 47 8 241 1 49 8 241 1 51 8 241 1 53 8 241 1 54 5 61 1 55 5 61 1 56 5 61 1 57 2 65 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 13 181 1 130 8 241 1 139 8 241 1 141 6 66 1 142] 
#[1 0 29 0 1 4 165 0 3 6 70 0 4 4 169 0 6 6 70 0 7 4 173 0 8 0 33 0 9 6 70 0 11 6 70 0 13 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 8 217 0 77 8 237 0 79 6 70 0 80 0 249 0 82 0 249 0 86 0 249 0 87 6 70 0 97 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 6 70 0 122 4 181 0 123 8 225 0 128 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 2 199 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 2 203 0 172 6 70 0 173 8 241 0 180 8 241 0 181 8 241 0 182 8 241 0 183 8 241 0 184 8 241 0 185 8 241 0 186 8 241 0 187 8 241 0 188 8 241 0 189 8 229 0 191 0 249 0 194 8 229 0 195 8 229 0 196 8 229 0 197 8 233 0 236 8 237 0 252 8 241 1 37 8 241 1 38 8 241 1 39 8 241 1 40 8 241 1 41 8 241 1 42 8 241 1 43 8 241 1 44 8 241 1 45 8 241 1 47 8 241 1 49 8 241 1 51 8 241 1 53 8 241 1 54 5 61 1 55 5 61 1 56 5 61 1 57 2 65 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 13 189 1 130 8 241 1 139 8 241 1 141 6 70 1 142] 
#[0 6 74 0 4 0 7 0 11 0 13 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 6 78 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 3 254 0 1 0 9 0 22 0 24 0 44 0 53 0 54 0 57 0 75 0 80 0 82 0 86 0 87 0 105 0 113 0 114 0 121 0 137 0 143 0 150 0 162 0 167 0 168 0 171 0 173] 
#[1 13 193 0 97 3 65 0 173] 
#[0 6 82 0 97 0 173] 
#[1 0 29 0 1 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 8 41 0 173 5 197 0 191 0 249 0 194 5 197 0 195 5 197 0 196 5 197 0 197 13 197 0 202 1 133 1 55 1 133 1 56 1 133 1 57 4 149 1 122 2 77 1 123 5 205 1 124 2 77 1 125 2 89 1 128 2 93 1 129] 
#[0 13 201 0 172] 
#[0 13 205 0 172] 
#[1 2 71 0 1 0 142 0 3 4 9 0 5 2 71 0 9 2 71 0 11 2 71 0 22 2 71 0 24 2 71 0 26 2 71 0 41 2 71 0 42 2 71 0 43 2 71 0 44 2 71 0 48 2 71 0 53 2 71 0 54 2 71 0 55 2 71 0 57 2 71 0 58 2 71 0 71 2 71 0 73 2 71 0 75 2 71 0 82 2 71 0 84 2 71 0 86 2 71 0 87 2 71 0 90 2 71 0 91 2 71 0 98 2 71 0 100 2 71 0 101 2 71 0 103 2 71 0 105 2 71 0 106 2 71 0 107 2 71 0 108 2 71 0 109 2 71 0 113 2 71 0 114 2 71 0 121 2 71 0 124 2 71 0 125 2 71 0 130 2 71 0 132 2 71 0 133 2 71 0 134 2 71 0 135 2 71 0 136 2 71 0 137 2 71 0 139 2 71 0 143 2 71 0 147 2 71 0 150 2 71 0 152 2 71 0 153 2 71 0 162 2 71 0 167 2 71 0 168 2 71 0 171 2 207 0 172 2 71 0 173 11 149 0 228 11 149 0 229 11 149 0 233 11 153 1 10 13 213 1 11] 
#[1 2 71 0 1 0 142 0 3 13 217 0 5 2 71 0 9 2 71 0 11 2 71 0 22 6 177 0 23 2 71 0 24 2 71 0 26 2 71 0 41 2 71 0 42 2 71 0 43 2 71 0 44 2 71 0 48 2 71 0 53 2 71 0 54 2 71 0 55 2 71 0 57 2 71 0 58 2 71 0 71 2 71 0 73 2 71 0 75 2 71 0 82 2 71 0 84 2 71 0 86 2 71 0 87 2 71 0 90 2 71 0 91 2 71 0 98 2 71 0 100 2 71 0 101 2 71 0 103 2 71 0 105 2 71 0 106 2 71 0 107 2 71 0 108 2 71 0 109 2 71 0 113 2 71 0 114 2 71 0 121 2 71 0 124 2 71 0 125 2 71 0 130 2 71 0 132 2 71 0 133 2 71 0 134 2 71 0 135 2 71 0 136 2 71 0 137 2 71 0 139 2 71 0 143 2 71 0 147 2 71 0 150 2 71 0 152 2 71 0 153 2 71 0 162 2 71 0 167 2 71 0 168 2 71 0 171 2 211 0 172 2 71 0 173 11 149 0 228 11 149 0 229 11 149 0 233 11 153 1 10 13 221 1 11] 
#[1 6 86 0 1 7 221 0 3 6 86 0 9 6 86 0 11 6 86 0 22 6 86 0 24 6 86 0 26 6 86 0 41 6 86 0 42 6 86 0 43 6 86 0 44 6 86 0 48 6 86 0 53 6 86 0 54 6 86 0 55 6 86 0 57 6 86 0 58 6 86 0 71 6 86 0 73 6 86 0 75 6 86 0 82 6 86 0 84 6 86 0 86 6 86 0 87 6 86 0 90 6 86 0 91 6 86 0 98 6 86 0 100 6 86 0 101 6 86 0 103 6 86 0 105 6 86 0 106 6 86 0 107 6 86 0 108 6 86 0 109 6 86 0 113 6 86 0 114 6 86 0 121 6 86 0 124 6 86 0 125 6 86 0 130 6 86 0 132 6 86 0 133 6 86 0 134 6 86 0 135 6 86 0 136 6 86 0 137 6 86 0 139 6 86 0 143 6 86 0 147 6 86 0 150 6 86 0 152 6 86 0 153 6 86 0 162 6 86 0 167 6 86 0 168 6 86 0 171 6 86 0 172 6 86 0 173 13 225 0 230] 
#[0 6 90 0 1 0 9 0 11 0 22 0 24 0 26 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 75 0 82 0 84 0 86 0 87 0 90 0 91 0 98 0 100 0 101 0 103 0 105 0 106 0 107 0 108 0 109 0 113 0 114 0 121 0 124 0 125 0 130 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 143 0 147 0 150 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 13 229 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 6 94 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 6 98 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 6 102 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 6 106 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[1 8 65 0 3 13 233 0 253] 
#[1 8 65 0 3 13 237 0 253] 
#[1 8 65 0 3 13 241 0 253] 
#[0 5 54 0 1 0 9 0 11 0 22 0 24 0 26 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 75 0 82 0 84 0 86 0 87 0 90 0 91 0 98 0 100 0 101 0 103 0 105 0 106 0 107 0 108 0 109 0 113 0 114 0 121 0 124 0 125 0 130 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 143 0 147 0 150 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 13 245 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 4 146 0 1 4 146 0 9 4 146 0 11 4 146 0 22 4 146 0 24 4 146 0 26 4 146 0 41 4 146 0 42 4 146 0 43 4 146 0 44 4 146 0 48 4 146 0 53 4 146 0 54 4 146 0 55 4 146 0 57 4 146 0 58 4 146 0 71 4 146 0 73 4 146 0 75 4 146 0 82 4 146 0 84 4 146 0 86 4 146 0 87 4 146 0 90 4 146 0 91 4 146 0 98 4 146 0 100 4 146 0 101 4 146 0 103 4 146 0 105 4 146 0 106 4 146 0 107 4 146 0 108 4 146 0 109 4 146 0 113 4 146 0 114 4 146 0 121 4 146 0 124 4 146 0 125 4 146 0 130 4 146 0 132 4 146 0 133 4 146 0 134 4 146 0 135 4 146 0 136 4 146 0 137 4 146 0 139 4 146 0 143 4 146 0 147 4 146 0 150 4 146 0 152 4 146 0 153 4 146 0 162 4 146 0 167 4 146 0 168 4 146 0 171 2 87 0 172 4 146 0 173 13 249 0 221] 
#[0 13 253 0 97] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 14 1 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 6 14 0 7 6 14 0 11 6 14 0 22 6 14 0 27 6 14 0 28 6 14 0 29 6 14 0 30 6 14 0 31 6 14 0 32 6 14 0 33 6 14 0 34 6 14 0 35 6 14 0 36 6 14 0 37 6 14 0 38 6 14 0 39 6 14 0 40 6 14 0 44 6 14 0 54 6 14 0 57 6 14 0 71 6 14 0 74 6 14 0 75 6 14 0 80 6 14 0 82 6 14 0 84 6 14 0 86 6 14 0 87 6 14 0 89 6 14 0 90 6 14 0 97 6 14 0 98 6 14 0 100 6 14 0 103 6 14 0 104 6 14 0 105 6 14 0 106 6 14 0 110 6 14 0 113 6 14 0 114 6 14 0 121 6 14 0 122 6 14 0 125 6 14 0 130 6 14 0 131 6 14 0 132 6 14 0 133 6 14 0 137 6 14 0 139 6 14 0 142 6 14 0 143 6 14 0 147 6 14 0 150 6 14 0 162 6 14 0 167 6 14 0 168 6 14 0 171 2 215 0 172 6 14 0 173 6 14 1 142] 
#[0 14 5 0 172] 
#[0 14 9 0 172] 
#[1 8 65 0 3 14 13 0 172 14 17 0 253] 
#[0 14 21 0 172] 
#[0 14 25 0 172] 
#[0 14 29 0 172] 
#[1 4 146 0 1 8 65 0 3 4 146 0 9 4 146 0 11 4 146 0 22 4 146 0 24 4 146 0 26 4 146 0 41 4 146 0 42 4 146 0 43 4 146 0 44 4 146 0 48 4 146 0 53 4 146 0 54 4 146 0 55 4 146 0 57 4 146 0 58 4 146 0 71 4 146 0 73 4 146 0 75 4 146 0 82 4 146 0 84 4 146 0 86 4 146 0 87 4 146 0 90 4 146 0 91 4 146 0 98 4 146 0 100 4 146 0 101 4 146 0 103 4 146 0 105 4 146 0 106 4 146 0 107 4 146 0 108 4 146 0 109 4 146 0 113 4 146 0 114 4 146 0 121 4 146 0 124 4 146 0 125 4 146 0 130 4 146 0 132 4 146 0 133 4 146 0 134 4 146 0 135 4 146 0 136 4 146 0 137 4 146 0 139 4 146 0 143 4 146 0 147 4 146 0 150 4 146 0 152 4 146 0 153 4 146 0 162 4 146 0 167 4 146 0 168 4 146 0 171 2 219 0 172 4 146 0 173 14 37 0 221 14 41 0 253] 
#[0 14 45 0 172] 
#[0 14 49 0 172] 
#[0 14 53 0 172] 
#[1 8 65 0 3 14 57 0 172 14 61 0 253] 
#[0 14 65 0 172] 
#[0 14 69 0 172] 
#[0 14 73 0 172] 
#[1 4 146 0 1 8 65 0 3 4 146 0 9 4 146 0 11 4 146 0 22 4 146 0 24 4 146 0 26 4 146 0 41 4 146 0 42 4 146 0 43 4 146 0 44 4 146 0 48 4 146 0 53 4 146 0 54 4 146 0 55 4 146 0 57 4 146 0 58 4 146 0 71 4 146 0 73 4 146 0 75 4 146 0 82 4 146 0 84 4 146 0 86 4 146 0 87 4 146 0 90 4 146 0 91 4 146 0 98 4 146 0 100 4 146 0 101 4 146 0 103 4 146 0 105 4 146 0 106 4 146 0 107 4 146 0 108 4 146 0 109 4 146 0 113 4 146 0 114 4 146 0 121 4 146 0 124 4 146 0 125 4 146 0 130 4 146 0 132 4 146 0 133 4 146 0 134 4 146 0 135 4 146 0 136 4 146 0 137 4 146 0 139 4 146 0 143 4 146 0 147 4 146 0 150 4 146 0 152 4 146 0 153 4 146 0 162 4 146 0 167 4 146 0 168 4 146 0 171 2 223 0 172 4 146 0 173 14 81 0 221 14 85 0 253] 
#[1 0 249 0 22 2 241 0 27 2 241 0 28 2 241 0 29 2 241 0 30 2 241 0 31 2 241 0 32 2 241 0 33 2 241 0 34 2 241 0 35 2 241 0 36 2 241 0 37 2 241 0 38 2 241 0 39 2 241 0 40 0 249 0 44 0 249 0 54 0 249 0 57 0 89 0 71 2 169 0 74 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 2 173 0 89 0 117 0 90 0 125 0 98 0 129 0 100 2 253 0 103 2 177 0 104 0 249 0 105 2 253 0 106 2 181 0 110 0 249 0 113 0 249 0 114 0 249 0 121 2 193 0 125 2 253 0 130 2 197 0 131 2 253 0 132 0 189 0 133 0 249 0 137 2 205 0 139 2 209 0 142 0 249 0 143 0 217 0 147 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 3 65 0 173 2 217 0 191 0 249 0 194 2 217 0 195 2 217 0 196 2 217 0 197 7 101 0 200 7 101 0 201 7 101 0 203 7 101 0 204 7 101 0 208 2 241 0 209 7 101 0 210 7 101 0 211 2 253 0 223 7 101 0 242 7 101 0 243 7 101 0 247 7 101 0 248 7 101 1 5 7 101 1 6 7 101 1 7 3 17 1 8 7 101 1 9 7 101 1 12 7 101 1 13 7 101 1 14 7 101 1 15 7 101 1 16 7 101 1 17 7 101 1 18 7 101 1 19 7 101 1 20 7 101 1 21 7 101 1 22 1 101 1 24 7 101 1 25 7 101 1 26 7 101 1 27 7 101 1 28 7 101 1 29 7 101 1 33 7 101 1 36 6 110 1 142] 
#[0 6 114 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 9 157 0 2 14 89 0 4 9 161 0 5 9 165 0 6 9 169 0 8 9 173 0 10 9 177 0 14 9 181 0 16 9 185 0 17 9 189 0 18 9 193 0 19 9 197 0 20 9 201 0 45 9 205 0 47 9 209 0 52 9 213 0 67 9 217 0 68 9 221 0 70 9 225 0 99 9 229 0 127 9 233 0 146 9 237 0 154 9 241 1 46 9 245 1 48 9 249 1 50] 
#[0 6 118 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 14 93 0 45 14 97 0 46] 
#[1 14 101 0 8 9 149 0 159] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 14 105 0 180 14 105 0 181 14 105 0 182 14 105 0 183 14 105 0 184 14 105 0 185 14 105 0 186 14 105 0 187 14 105 0 188 14 105 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 14 105 1 37 14 105 1 38 14 105 1 39 14 105 1 40 14 105 1 41 14 105 1 42 14 105 1 43 14 105 1 44 14 105 1 45 14 105 1 47 14 105 1 49 14 105 1 51 14 105 1 53 14 105 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 14 105 1 139 14 105 1 141] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 14 109 0 180 14 109 0 181 14 109 0 182 14 109 0 183 14 109 0 184 14 109 0 185 14 109 0 186 14 109 0 187 14 109 0 188 14 109 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 14 109 1 37 14 109 1 38 14 109 1 39 14 109 1 40 14 109 1 41 14 109 1 42 14 109 1 43 14 109 1 44 14 109 1 45 14 109 1 47 14 109 1 49 14 109 1 51 14 109 1 53 14 109 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 14 109 1 139 14 109 1 141] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 14 113 0 180 14 113 0 181 14 113 0 182 14 113 0 183 14 113 0 184 14 113 0 185 14 113 0 186 14 113 0 187 14 113 0 188 14 113 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 14 113 1 37 14 113 1 38 14 113 1 39 14 113 1 40 14 113 1 41 14 113 1 42 14 113 1 43 14 113 1 44 14 113 1 45 14 113 1 47 14 113 1 49 14 113 1 51 14 113 1 53 14 113 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 14 113 1 139 14 113 1 141] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 14 117 0 180 14 117 0 181 14 117 0 182 14 117 0 183 14 117 0 184 14 117 0 185 14 117 0 186 14 117 0 187 14 117 0 188 14 117 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 14 117 1 37 14 117 1 38 14 117 1 39 14 117 1 40 14 117 1 41 14 117 1 42 14 117 1 43 14 117 1 44 14 117 1 45 14 117 1 47 14 117 1 49 14 117 1 51 14 117 1 53 14 117 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 14 117 1 139 14 117 1 141] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 14 121 0 180 14 121 0 181 14 121 0 182 14 121 0 183 14 121 0 184 14 121 0 185 14 121 0 186 14 121 0 187 14 121 0 188 14 121 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 14 121 1 37 14 121 1 38 14 121 1 39 14 121 1 40 14 121 1 41 14 121 1 42 14 121 1 43 14 121 1 44 14 121 1 45 14 121 1 47 14 121 1 49 14 121 1 51 14 121 1 53 14 121 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 14 121 1 139 14 121 1 141] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 14 125 0 180 14 125 0 181 14 125 0 182 14 125 0 183 14 125 0 184 14 125 0 185 14 125 0 186 14 125 0 187 14 125 0 188 14 125 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 14 125 1 37 14 125 1 38 14 125 1 39 14 125 1 40 14 125 1 41 14 125 1 42 14 125 1 43 14 125 1 44 14 125 1 45 14 125 1 47 14 125 1 49 14 125 1 51 14 125 1 53 14 125 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 14 125 1 139 14 125 1 141] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 14 129 0 180 14 129 0 181 14 129 0 182 14 129 0 183 14 129 0 184 14 129 0 185 14 129 0 186 14 129 0 187 14 129 0 188 14 129 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 14 129 1 37 14 129 1 38 14 129 1 39 14 129 1 40 14 129 1 41 14 129 1 42 14 129 1 43 14 129 1 44 14 129 1 45 14 129 1 47 14 129 1 49 14 129 1 51 14 129 1 53 14 129 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 14 129 1 139 14 129 1 141] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 14 133 0 180 14 133 0 181 14 133 0 182 14 133 0 183 14 133 0 184 14 133 0 185 14 133 0 186 14 133 0 187 14 133 0 188 14 133 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 14 133 1 37 14 133 1 38 14 133 1 39 14 133 1 40 14 133 1 41 14 133 1 42 14 133 1 43 14 133 1 44 14 133 1 45 14 133 1 47 14 133 1 49 14 133 1 51 14 133 1 53 14 133 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 14 133 1 139 14 133 1 141] 
#[0 14 137 0 111] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 14 141 0 180 14 141 0 181 14 141 0 182 14 141 0 183 14 141 0 184 14 141 0 185 14 141 0 186 14 141 0 187 14 141 0 188 14 141 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 14 141 1 37 14 141 1 38 14 141 1 39 14 141 1 40 14 141 1 41 14 141 1 42 14 141 1 43 14 141 1 44 14 141 1 45 14 141 1 47 14 141 1 49 14 141 1 51 14 141 1 53 14 141 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 14 141 1 139 14 141 1 141] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 14 145 0 172 14 149 0 180 14 149 0 181 14 149 0 182 14 149 0 183 14 149 0 184 14 149 0 185 14 149 0 186 14 149 0 187 14 149 0 188 14 149 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 14 149 1 37 14 149 1 38 14 149 1 39 14 149 1 40 14 149 1 41 14 149 1 42 14 149 1 43 14 149 1 44 14 149 1 45 14 149 1 47 14 149 1 49 14 149 1 51 14 149 1 53 14 149 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 14 149 1 139 14 149 1 141] 
#[0 14 153 0 7] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 14 157 0 172 14 161 0 180 14 161 0 181 14 161 0 182 14 161 0 183 14 161 0 184 14 161 0 185 14 161 0 186 14 161 0 187 14 161 0 188 14 161 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 14 161 1 37 14 161 1 38 14 161 1 39 14 161 1 40 14 161 1 41 14 161 1 42 14 161 1 43 14 161 1 44 14 161 1 45 14 161 1 47 14 161 1 49 14 161 1 51 14 161 1 53 14 161 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 14 161 1 139 14 161 1 141] 
#[0 14 165 0 7] 
#[0 14 189 0 22 0 25 0 44 0 56 0 59 1 58] 
#[1 4 190 0 11 4 190 0 13 4 190 0 80 4 190 0 97 4 190 0 122 4 190 0 162 2 227 0 172 4 190 0 173 14 197 1 65 4 190 1 142] 
#[1 6 122 0 11 12 117 0 13 6 122 0 80 6 122 0 97 6 122 0 122 6 122 0 162 6 122 0 172 6 122 0 173 12 121 1 64 6 122 1 142] 
#[1 9 157 0 2 9 161 0 5 9 165 0 6 9 169 0 8 9 173 0 10 4 190 0 11 4 190 0 13 9 177 0 14 9 181 0 16 9 185 0 17 9 189 0 18 9 193 0 19 9 197 0 20 9 201 0 45 9 205 0 47 9 209 0 52 9 213 0 67 9 217 0 68 9 221 0 70 4 190 0 80 4 190 0 97 9 225 0 99 4 190 0 122 9 229 0 127 9 233 0 146 9 237 0 154 4 190 0 162 4 190 0 172 4 190 0 173 9 241 1 46 9 245 1 48 9 249 1 50 14 201 1 65 4 190 1 142] 
#[1 6 126 0 11 12 117 0 13 6 126 0 80 6 126 0 97 6 126 0 122 6 126 0 162 6 126 0 172 6 126 0 173 12 121 1 64 6 126 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 14 205 0 172 14 209 0 180 14 209 0 181 14 209 0 182 14 209 0 183 14 209 0 184 14 209 0 185 14 209 0 186 14 209 0 187 14 209 0 188 14 209 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 14 209 1 37 14 209 1 38 14 209 1 39 14 209 1 40 14 209 1 41 14 209 1 42 14 209 1 43 14 209 1 44 14 209 1 45 14 209 1 47 14 209 1 49 14 209 1 51 14 209 1 53 14 209 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 14 209 1 139 14 209 1 141] 
#[0 6 130 0 11 0 13 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 4 190 0 11 4 190 0 13 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 4 190 0 80 0 249 0 82 0 249 0 86 0 249 0 87 4 190 0 97 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 190 0 122 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 2 3 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 4 190 0 172 4 190 0 173 14 213 0 180 14 213 0 181 14 213 0 182 14 213 0 183 14 213 0 184 14 213 0 185 14 213 0 186 14 213 0 187 14 213 0 188 14 213 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 14 213 1 37 14 213 1 38 14 213 1 39 14 213 1 40 14 213 1 41 14 213 1 42 14 213 1 43 14 213 1 44 14 213 1 45 14 213 1 47 14 213 1 49 14 213 1 51 14 213 1 53 14 213 1 54 5 61 1 55 5 61 1 56 5 61 1 57 14 217 1 65 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 14 213 1 139 14 213 1 141 4 190 1 142] 
#[1 4 190 0 11 4 190 0 13 4 190 0 80 4 190 0 97 4 190 0 122 4 190 0 162 2 231 0 172 4 190 0 173 14 225 1 65 4 190 1 142] 
#[1 6 134 0 11 12 117 0 13 6 134 0 80 6 134 0 97 6 134 0 122 6 134 0 162 6 134 0 172 6 134 0 173 12 121 1 64 6 134 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 14 229 0 180 14 229 0 181 14 229 0 182 14 229 0 183 14 229 0 184 14 229 0 185 14 229 0 186 14 229 0 187 14 229 0 188 14 229 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 14 229 1 37 14 229 1 38 14 229 1 39 14 229 1 40 14 229 1 41 14 229 1 42 14 229 1 43 14 229 1 44 14 229 1 45 14 229 1 47 14 229 1 49 14 229 1 51 14 229 1 53 14 229 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 14 229 1 139 14 229 1 141] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 14 233 0 180 14 233 0 181 14 233 0 182 14 233 0 183 14 233 0 184 14 233 0 185 14 233 0 186 14 233 0 187 14 233 0 188 14 233 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 14 233 1 37 14 233 1 38 14 233 1 39 14 233 1 40 14 233 1 41 14 233 1 42 14 233 1 43 14 233 1 44 14 233 1 45 14 233 1 47 14 233 1 49 14 233 1 51 14 233 1 53 14 233 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 14 233 1 139 14 233 1 141] 
#[1 4 9 0 5 2 235 0 7 2 235 0 11 2 235 0 22 2 235 0 27 2 235 0 28 2 235 0 29 2 235 0 30 2 235 0 31 2 235 0 32 2 235 0 33 2 235 0 34 2 235 0 35 2 235 0 36 2 235 0 37 2 235 0 38 2 235 0 39 2 235 0 40 2 235 0 44 2 235 0 54 2 235 0 57 2 235 0 71 2 235 0 74 2 235 0 75 2 235 0 80 2 235 0 82 2 235 0 84 2 235 0 86 2 235 0 87 2 235 0 89 2 235 0 90 2 235 0 97 2 235 0 98 2 235 0 100 2 235 0 103 2 235 0 104 2 235 0 105 2 235 0 106 2 235 0 110 2 235 0 113 2 235 0 114 2 235 0 121 2 235 0 122 2 235 0 125 2 235 0 130 2 235 0 131 2 235 0 132 2 235 0 133 2 235 0 137 2 235 0 139 2 235 0 142 2 235 0 143 2 235 0 147 2 235 0 150 2 235 0 162 2 235 0 167 2 235 0 168 2 235 0 171 2 239 0 172 2 235 0 173 14 237 0 228 14 237 0 229 14 237 0 233 2 235 1 142] 
#[0 6 142 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 6 146 0 1 0 4 0 5 0 7 0 9 0 11 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 14 241 0 172 14 245 0 180 14 245 0 181 14 245 0 182 14 245 0 183 14 245 0 184 14 245 0 185 14 245 0 186 14 245 0 187 14 245 0 188 14 245 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 14 245 1 37 14 245 1 38 14 245 1 39 14 245 1 40 14 245 1 41 14 245 1 42 14 245 1 43 14 245 1 44 14 245 1 45 14 245 1 47 14 245 1 49 14 245 1 51 14 245 1 53 14 245 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 14 245 1 139 14 245 1 141] 
#[0 6 150 0 4 0 7] 
#[1 14 249 0 4 12 157 0 7 12 161 0 231] 
#[0 6 154 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 5 217 0 64 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 5 221 0 191 0 249 0 194 5 221 0 195 5 221 0 196 5 221 0 197 14 253 1 23] 
#[0 6 158 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 6 162 0 11 6 162 0 80 6 162 0 97 6 162 0 122 6 162 0 162 2 243 0 172 6 162 0 173 6 162 1 142] 
#[1 15 1 0 119 3 173 0 162 15 5 0 182] 
#[0 6 166 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 15 9 0 172] 
#[1 15 13 0 119 3 173 0 162 15 17 0 182] 
#[0 15 21 0 172] 
#[1 6 170 0 80 6 170 0 94 6 170 0 96 6 170 0 97 6 170 0 119 6 170 0 122 6 170 0 151 6 170 0 162 8 41 0 173] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 15 25 0 180 15 25 0 181 15 25 0 182 15 25 0 183 15 25 0 184 15 25 0 185 15 25 0 186 15 25 0 187 15 25 0 188 15 25 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 15 25 1 37 15 25 1 38 15 25 1 39 15 25 1 40 15 25 1 41 15 25 1 42 15 25 1 43 15 25 1 44 15 25 1 45 15 25 1 47 15 25 1 49 15 25 1 51 15 25 1 53 15 25 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 15 25 1 139 15 25 1 141] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 15 29 0 180 15 29 0 181 15 29 0 182 15 29 0 183 15 29 0 184 15 29 0 185 15 29 0 186 15 29 0 187 15 29 0 188 15 29 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 15 29 1 37 15 29 1 38 15 29 1 39 15 29 1 40 15 29 1 41 15 29 1 42 15 29 1 43 15 29 1 44 15 29 1 45 15 29 1 47 15 29 1 49 15 29 1 51 15 29 1 53 15 29 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 15 29 1 139 15 29 1 141] 
#[1 15 33 0 148 15 37 0 152] 
#[0 6 174 0 11 0 172 0 173] 
#[0 15 41 0 172] 
#[1 6 178 0 22 6 178 0 44 6 178 0 54 6 178 0 57 6 178 0 75 6 178 0 82 6 178 0 86 6 178 0 87 6 178 0 97 6 178 0 105 6 178 0 113 6 178 0 114 6 178 0 121 6 178 0 137 6 178 0 143 6 178 0 150 6 178 0 167 6 178 0 168 6 178 0 171 15 45 0 172 6 178 0 173] 
#[0 6 182 0 22 0 44 0 54 0 57 0 75 0 82 0 86 0 87 0 97 0 105 0 113 0 114 0 121 0 137 0 143 0 150 0 167 0 168 0 171 0 173] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 8 217 0 77 15 57 0 79 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 15 49 0 128 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 15 53 0 191 0 249 0 194 15 53 0 195 15 53 0 196 15 53 0 197 15 57 0 252] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 15 61 0 191 0 249 0 194 15 61 0 195 15 61 0 196 15 61 0 197] 
#[0 6 186 0 1 0 3 0 5 0 9 0 11 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 2 119 0 4 4 9 0 5 2 119 0 7 2 123 0 172 15 65 0 228 15 65 0 229 15 65 0 233 15 65 1 1 15 65 1 2] 
#[0 6 190 0 4 0 7 0 172] 
#[0 6 194 0 4 0 7 0 172] 
#[1 6 198 0 4 6 198 0 7 2 247 0 172 15 73 1 3 15 77 1 4] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 15 81 0 128 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 15 85 0 191 0 249 0 194 15 85 0 195 15 85 0 196 15 85 0 197] 
#[1 15 89 0 4 15 93 0 7 15 97 0 172 15 101 0 254] 
#[1 4 173 0 8 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 3 173 0 162 0 249 0 167 0 237 0 168 0 241 0 171 15 105 0 182 15 105 0 191 0 249 0 194 15 105 0 195 15 105 0 196 15 105 0 197 15 105 1 42 15 105 1 103] 
#[0 6 202 0 7 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 4 173 0 8 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 3 173 0 162 0 249 0 167 0 237 0 168 0 241 0 171 15 109 0 172 15 113 0 182 15 113 0 191 0 249 0 194 15 113 0 195 15 113 0 196 15 113 0 197 15 113 1 42 15 113 1 103] 
#[1 0 29 0 1 0 33 0 9 5 226 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 15 117 0 73 0 249 0 75 5 226 0 80 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 5 226 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 5 226 0 122 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 5 226 0 162 0 233 0 167 0 237 0 168 0 241 0 171 5 226 0 172 5 226 0 173 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 15 117 0 201 15 117 0 203 15 117 0 212 15 121 0 220 1 25 0 223 15 117 0 234 1 33 0 235 15 117 0 236 15 117 0 237 15 117 0 238 15 117 0 239 15 117 0 240 15 117 0 241 15 117 0 242 15 117 0 243 15 117 0 247 15 117 0 248 15 117 1 17 15 117 1 18 15 117 1 19 15 117 1 20 15 117 1 21 15 117 1 22 1 101 1 24 15 117 1 25 15 117 1 26 15 117 1 27 15 117 1 28 15 117 1 29 15 117 1 33 15 117 1 36 1 133 1 55 1 133 1 56 1 133 1 57 15 117 1 61 15 117 1 62 15 117 1 63 15 117 1 66 15 117 1 67 15 117 1 68 15 117 1 69 15 117 1 70 15 117 1 71 15 117 1 72 15 117 1 73 15 117 1 74 15 117 1 75 15 117 1 76 15 117 1 77 15 117 1 78 15 117 1 79 15 117 1 80 15 117 1 81 15 117 1 82 15 117 1 83 15 117 1 88 15 117 1 89 1 237 1 90 15 117 1 95 15 117 1 98 15 117 1 99 15 117 1 100 15 117 1 101 15 117 1 102 15 117 1 107 15 117 1 108 15 117 1 109 15 117 1 110 15 117 1 111 15 117 1 112 15 117 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 15 117 1 127 2 89 1 128 2 93 1 129 15 117 1 137 15 117 1 138 15 117 1 140 5 226 1 142] 
#[1 2 127 0 11 5 226 0 80 5 226 0 97 5 226 0 122 5 226 0 162 2 127 0 172 2 127 0 173 5 249 0 215 15 125 0 220 5 226 1 142] 
#[1 6 206 0 94 6 206 0 96 6 206 0 97 6 206 0 162 15 129 1 85] 
#[1 6 210 0 11 6 210 0 80 6 210 0 97 6 210 0 122 6 210 0 162 2 251 0 172 6 210 0 173 6 210 1 142] 
#[1 15 137 0 11 6 214 0 80 6 214 0 97 6 214 0 122 6 214 0 162 2 255 0 172 6 214 0 173 15 145 0 219 6 214 1 142] 
#[1 5 226 0 11 5 226 0 80 5 226 0 97 5 226 0 122 5 226 0 162 5 226 0 172 5 226 0 173 15 125 0 220 5 226 1 142] 
#[1 6 218 0 11 6 218 0 80 6 218 0 97 6 218 0 122 6 218 0 162 3 3 0 172 6 218 0 173 6 218 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 15 153 0 180 15 153 0 181 15 153 0 182 15 153 0 183 15 153 0 184 15 153 0 185 15 153 0 186 15 153 0 187 15 153 0 188 15 153 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 15 153 1 37 15 153 1 38 15 153 1 39 15 153 1 40 15 153 1 41 15 153 1 42 15 153 1 43 15 153 1 44 15 153 1 45 15 153 1 47 15 153 1 49 15 153 1 51 15 153 1 53 15 153 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 15 153 1 139 15 153 1 141] 
#[0 15 157 0 122] 
#[1 15 161 0 80 3 173 0 162 8 41 0 173 15 165 0 182 15 173 1 92 15 173 1 96 15 177 1 97] 
#[0 15 181 0 172] 
#[1 4 9 0 5 0 142 0 22 0 142 0 44 0 142 0 54 0 142 0 57 0 142 0 75 0 142 0 82 0 142 0 86 0 142 0 87 0 142 0 97 0 142 0 105 0 142 0 113 0 142 0 114 0 142 0 121 0 142 0 137 0 142 0 143 0 142 0 150 0 142 0 167 0 142 0 168 0 142 0 171 3 7 0 172 0 142 0 173 15 185 0 228 15 185 0 229 15 185 0 233] 
#[0 6 222 0 22 0 44 0 54 0 57 0 75 0 82 0 86 0 87 0 97 0 105 0 113 0 114 0 121 0 137 0 143 0 150 0 167 0 168 0 171 0 173] 
#[0 6 226 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 15 189 0 151] 
#[0 15 193 0 153] 
#[0 15 197 0 97] 
#[1 2 178 0 1 2 178 0 3 2 178 0 4 2 178 0 5 2 178 0 7 2 178 0 9 2 178 0 11 1 27 0 22 2 178 0 24 2 178 0 26 2 178 0 27 2 178 0 28 2 178 0 29 2 178 0 30 2 178 0 31 2 178 0 32 2 178 0 33 2 178 0 34 2 178 0 35 2 178 0 36 2 178 0 37 2 178 0 38 2 178 0 39 2 178 0 40 2 178 0 41 2 178 0 42 2 178 0 43 1 31 0 44 2 178 0 48 2 178 0 53 1 35 0 54 2 178 0 55 1 39 0 57 2 178 0 58 2 178 0 71 2 178 0 73 2 178 0 74 1 43 0 75 15 201 0 76 15 201 0 78 2 178 0 80 1 47 0 82 2 178 0 84 15 201 0 85 1 51 0 86 1 55 0 87 15 201 0 88 2 178 0 89 2 178 0 90 2 178 0 91 15 201 0 92 2 178 0 97 2 178 0 98 2 178 0 100 2 178 0 101 2 178 0 103 2 178 0 104 1 59 0 105 2 178 0 106 2 178 0 107 2 178 0 108 2 178 0 109 2 178 0 110 15 201 0 112 1 63 0 113 1 67 0 114 15 201 0 116 15 201 0 117 15 201 0 118 1 71 0 121 2 178 0 122 2 178 0 124 2 178 0 125 2 178 0 130 2 178 0 131 2 178 0 132 2 178 0 133 2 178 0 134 2 178 0 135 2 178 0 136 1 75 0 137 15 201 0 138 2 178 0 139 15 201 0 141 2 178 0 142 1 79 0 143 2 178 0 147 5 153 0 149 1 83 0 150 2 178 0 152 2 178 0 153 2 178 0 162 1 87 0 167 1 91 0 168 1 95 0 171 2 178 0 172 2 178 0 173 5 157 0 191 0 249 0 194 5 157 0 195 5 157 0 196 5 157 0 197 15 201 0 222 15 201 0 224 5 169 0 226 15 201 0 227 2 178 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 15 205 0 172 15 209 0 180 15 209 0 181 15 209 0 182 15 209 0 183 15 209 0 184 15 209 0 185 15 209 0 186 15 209 0 187 15 209 0 188 15 209 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 15 209 1 37 15 209 1 38 15 209 1 39 15 209 1 40 15 209 1 41 15 209 1 42 15 209 1 43 15 209 1 44 15 209 1 45 15 209 1 47 15 209 1 49 15 209 1 51 15 209 1 53 15 209 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 15 209 1 139 15 209 1 141] 
#[0 15 213 0 5] 
#[1 6 230 0 7 6 230 0 11 6 230 0 22 6 230 0 27 6 230 0 28 6 230 0 29 6 230 0 30 6 230 0 31 6 230 0 32 6 230 0 33 6 230 0 34 6 230 0 35 6 230 0 36 6 230 0 37 6 230 0 38 6 230 0 39 6 230 0 40 6 230 0 44 6 230 0 54 6 230 0 57 6 230 0 71 6 230 0 74 6 230 0 75 6 230 0 80 6 230 0 82 6 230 0 84 6 230 0 86 6 230 0 87 6 230 0 89 6 230 0 90 6 230 0 97 6 230 0 98 6 230 0 100 6 230 0 103 6 230 0 104 6 230 0 105 6 230 0 106 6 230 0 110 6 230 0 113 6 230 0 114 6 230 0 121 6 230 0 122 6 230 0 125 6 230 0 130 6 230 0 131 6 230 0 132 6 230 0 133 6 230 0 137 6 230 0 139 6 230 0 142 6 230 0 143 6 230 0 147 6 230 0 150 6 230 0 162 6 230 0 167 6 230 0 168 6 230 0 171 3 11 0 172 6 230 0 173 6 230 1 142] 
#[1 0 6 0 22 0 6 0 44 0 6 0 54 0 6 0 57 0 6 0 75 0 6 0 82 0 6 0 86 0 6 0 87 0 6 0 97 0 6 0 105 0 6 0 113 0 6 0 114 0 6 0 121 0 6 0 137 0 6 0 143 0 6 0 150 0 6 0 167 0 6 0 168 0 6 0 171 0 6 0 173 15 217 0 177 10 129 0 249] 
#[1 8 65 0 3 15 221 0 253] 
#[0 6 234 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 0 6 0 22 0 6 0 44 0 6 0 54 0 6 0 57 0 6 0 75 0 6 0 82 0 6 0 86 0 6 0 87 0 6 0 97 0 6 0 105 0 6 0 113 0 6 0 114 0 6 0 121 0 6 0 137 0 6 0 143 0 6 0 150 0 6 0 167 0 6 0 168 0 6 0 171 0 6 0 173 15 225 0 177 10 225 0 244] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 15 229 0 180 15 229 0 181 15 229 0 182 15 229 0 183 15 229 0 184 15 229 0 185 15 229 0 186 15 229 0 187 15 229 0 188 15 229 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 15 229 1 37 15 229 1 38 15 229 1 39 15 229 1 40 15 229 1 41 15 229 1 42 15 229 1 43 15 229 1 44 15 229 1 45 15 229 1 47 15 229 1 49 15 229 1 51 15 229 1 53 15 229 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 15 229 1 139 15 229 1 141] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 15 233 0 180 15 233 0 181 15 233 0 182 15 233 0 183 15 233 0 184 15 233 0 185 15 233 0 186 15 233 0 187 15 233 0 188 15 233 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 15 233 1 37 15 233 1 38 15 233 1 39 15 233 1 40 15 233 1 41 15 233 1 42 15 233 1 43 15 233 1 44 15 233 1 45 15 233 1 47 15 233 1 49 15 233 1 51 15 233 1 53 15 233 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 15 233 1 139 15 233 1 141] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 15 237 0 180 15 237 0 181 15 237 0 182 15 237 0 183 15 237 0 184 15 237 0 185 15 237 0 186 15 237 0 187 15 237 0 188 15 237 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 15 237 1 37 15 237 1 38 15 237 1 39 15 237 1 40 15 237 1 41 15 237 1 42 15 237 1 43 15 237 1 44 15 237 1 45 15 237 1 47 15 237 1 49 15 237 1 51 15 237 1 53 15 237 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 15 237 1 139 15 237 1 141] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 15 241 0 180 15 241 0 181 15 241 0 182 15 241 0 183 15 241 0 184 15 241 0 185 15 241 0 186 15 241 0 187 15 241 0 188 15 241 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 15 241 1 37 15 241 1 38 15 241 1 39 15 241 1 40 15 241 1 41 15 241 1 42 15 241 1 43 15 241 1 44 15 241 1 45 15 241 1 47 15 241 1 49 15 241 1 51 15 241 1 53 15 241 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 15 241 1 139 15 241 1 141] 
#[0 6 238 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 6 242 0 1 6 242 0 3 6 242 0 4 6 242 0 5 6 242 0 7 6 242 0 9 6 242 0 11 6 242 0 13 6 242 0 22 6 242 0 24 6 242 0 26 6 242 0 27 6 242 0 28 6 242 0 29 6 242 0 30 6 242 0 31 6 242 0 32 6 242 0 33 6 242 0 34 6 242 0 35 6 242 0 36 6 242 0 37 6 242 0 38 6 242 0 39 6 242 0 40 6 242 0 41 6 242 0 42 6 242 0 43 6 242 0 44 6 242 0 48 6 242 0 53 6 242 0 54 6 242 0 55 6 242 0 57 6 242 0 58 6 242 0 71 6 242 0 73 6 242 0 74 6 242 0 75 6 242 0 80 6 242 0 82 6 242 0 84 6 242 0 86 6 242 0 87 6 242 0 89 6 242 0 90 6 242 0 91 6 242 0 97 6 242 0 98 6 242 0 100 6 242 0 101 6 242 0 103 6 242 0 104 6 242 0 105 6 242 0 106 6 242 0 107 6 242 0 108 6 242 0 109 6 242 0 110 6 242 0 113 6 242 0 114 6 242 0 119 6 242 0 121 6 242 0 122 6 242 0 124 6 242 0 125 6 242 0 130 6 242 0 131 6 242 0 132 6 242 0 133 6 242 0 134 6 242 0 135 6 242 0 136 6 242 0 137 6 242 0 139 6 242 0 142 6 242 0 143 6 242 0 147 6 242 0 150 6 242 0 151 6 242 0 152 6 242 0 153 6 242 0 162 6 242 0 167 6 242 0 168 6 242 0 171 3 15 0 172 6 242 0 173 6 242 1 142] 
#[0 15 245 0 172] 
#[0 15 249 0 172] 
#[0 6 246 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 6 250 0 1 6 250 0 3 6 250 0 4 6 250 0 5 6 250 0 7 6 250 0 9 6 250 0 11 6 250 0 13 6 250 0 22 6 250 0 24 6 250 0 26 6 250 0 27 6 250 0 28 6 250 0 29 6 250 0 30 6 250 0 31 6 250 0 32 6 250 0 33 6 250 0 34 6 250 0 35 6 250 0 36 6 250 0 37 6 250 0 38 6 250 0 39 6 250 0 40 6 250 0 41 6 250 0 42 6 250 0 43 6 250 0 44 6 250 0 48 6 250 0 53 6 250 0 54 6 250 0 55 6 250 0 57 6 250 0 58 6 250 0 71 6 250 0 73 6 250 0 74 6 250 0 75 6 250 0 80 6 250 0 82 6 250 0 84 6 250 0 86 6 250 0 87 6 250 0 89 6 250 0 90 6 250 0 91 6 250 0 97 6 250 0 98 6 250 0 100 6 250 0 101 6 250 0 103 6 250 0 104 6 250 0 105 6 250 0 106 6 250 0 107 6 250 0 108 6 250 0 109 6 250 0 110 6 250 0 113 6 250 0 114 6 250 0 119 6 250 0 121 6 250 0 122 6 250 0 124 6 250 0 125 6 250 0 130 6 250 0 131 6 250 0 132 6 250 0 133 6 250 0 134 6 250 0 135 6 250 0 136 6 250 0 137 6 250 0 139 6 250 0 142 6 250 0 143 6 250 0 147 6 250 0 150 6 250 0 151 6 250 0 152 6 250 0 153 6 250 0 162 6 250 0 167 6 250 0 168 6 250 0 171 3 19 0 172 6 250 0 173 6 250 1 142] 
#[0 6 254 0 1 0 3 0 4 0 6 0 7 0 8 0 9 0 11 0 13 0 22 0 24 0 44 0 53 0 54 0 57 0 63 0 75 0 77 0 79 0 80 0 82 0 86 0 87 0 97 0 105 0 113 0 114 0 121 0 122 0 123 0 128 0 137 0 143 0 150 0 155 0 160 0 161 0 162 0 163 0 164 0 165 0 166 0 167 0 168 0 170 0 171 0 172 0 173 1 142] 
#[0 7 2 0 1 0 3 0 4 0 6 0 7 0 8 0 9 0 11 0 13 0 22 0 24 0 44 0 53 0 54 0 57 0 63 0 75 0 77 0 79 0 80 0 82 0 86 0 87 0 97 0 105 0 113 0 114 0 121 0 122 0 123 0 128 0 137 0 143 0 150 0 155 0 160 0 161 0 162 0 163 0 164 0 165 0 166 0 167 0 168 0 170 0 171 0 172 0 173 1 142] 
#[1 0 29 0 1 4 165 0 3 7 6 0 4 4 169 0 6 7 6 0 7 4 173 0 8 0 33 0 9 7 6 0 11 7 6 0 13 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 8 217 0 77 8 237 0 79 7 6 0 80 0 249 0 82 0 249 0 86 0 249 0 87 7 6 0 97 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 7 6 0 122 4 181 0 123 8 225 0 128 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 23 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 7 6 0 172 7 6 0 173 8 241 0 180 8 241 0 181 8 241 0 182 8 241 0 183 8 241 0 184 8 241 0 185 8 241 0 186 8 241 0 187 8 241 0 188 8 241 0 189 8 229 0 191 0 249 0 194 8 229 0 195 8 229 0 196 8 229 0 197 8 233 0 236 8 237 0 252 8 241 1 37 8 241 1 38 8 241 1 39 8 241 1 40 8 241 1 41 8 241 1 42 8 241 1 43 8 241 1 44 8 241 1 45 8 241 1 47 8 241 1 49 8 241 1 51 8 241 1 53 8 241 1 54 5 61 1 55 5 61 1 56 5 61 1 57 2 65 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 15 253 1 130 8 241 1 139 8 241 1 141 7 6 1 142] 
#[0 7 10 0 4 0 7 0 11 0 13 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 0 29 0 1 4 165 0 3 7 14 0 4 4 169 0 6 7 14 0 7 4 173 0 8 0 33 0 9 7 14 0 11 7 14 0 13 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 8 217 0 77 8 237 0 79 7 14 0 80 0 249 0 82 0 249 0 86 0 249 0 87 7 14 0 97 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 7 14 0 122 4 181 0 123 8 225 0 128 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 27 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 7 14 0 172 7 14 0 173 8 241 0 180 8 241 0 181 8 241 0 182 8 241 0 183 8 241 0 184 8 241 0 185 8 241 0 186 8 241 0 187 8 241 0 188 8 241 0 189 8 229 0 191 0 249 0 194 8 229 0 195 8 229 0 196 8 229 0 197 8 233 0 236 8 237 0 252 8 241 1 37 8 241 1 38 8 241 1 39 8 241 1 40 8 241 1 41 8 241 1 42 8 241 1 43 8 241 1 44 8 241 1 45 8 241 1 47 8 241 1 49 8 241 1 51 8 241 1 53 8 241 1 54 5 61 1 55 5 61 1 56 5 61 1 57 2 65 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 16 1 1 130 8 241 1 139 8 241 1 141 7 14 1 142] 
#[0 7 18 0 4 0 7 0 11 0 13 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 7 22 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 7 26 0 97 0 173] 
#[0 16 5 0 115] 
#[0 16 9 0 115] 
#[1 2 71 0 1 0 142 0 3 13 217 0 5 2 71 0 9 2 71 0 11 2 71 0 22 6 177 0 23 2 71 0 24 2 71 0 26 2 71 0 41 2 71 0 42 2 71 0 43 2 71 0 44 2 71 0 48 2 71 0 53 2 71 0 54 2 71 0 55 2 71 0 57 2 71 0 58 2 71 0 71 2 71 0 73 2 71 0 75 2 71 0 82 2 71 0 84 2 71 0 86 2 71 0 87 2 71 0 90 2 71 0 91 2 71 0 98 2 71 0 100 2 71 0 101 2 71 0 103 2 71 0 105 2 71 0 106 2 71 0 107 2 71 0 108 2 71 0 109 2 71 0 113 2 71 0 114 2 71 0 121 2 71 0 124 2 71 0 125 2 71 0 130 2 71 0 132 2 71 0 133 2 71 0 134 2 71 0 135 2 71 0 136 2 71 0 137 2 71 0 139 2 71 0 143 2 71 0 147 2 71 0 150 2 71 0 152 2 71 0 153 2 71 0 162 2 71 0 167 2 71 0 168 2 71 0 171 2 211 0 172 2 71 0 173 11 149 0 228 11 149 0 229 11 149 0 233 11 153 1 10 16 13 1 11] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 16 17 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 16 21 0 172 16 25 0 180 16 25 0 181 16 25 0 182 16 25 0 183 16 25 0 184 16 25 0 185 16 25 0 186 16 25 0 187 16 25 0 188 16 25 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 16 25 1 37 16 25 1 38 16 25 1 39 16 25 1 40 16 25 1 41 16 25 1 42 16 25 1 43 16 25 1 44 16 25 1 45 16 25 1 47 16 25 1 49 16 25 1 51 16 25 1 53 16 25 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 16 25 1 139 16 25 1 141] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 16 29 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 7 30 0 1 0 9 0 11 0 22 0 24 0 26 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 75 0 82 0 84 0 86 0 87 0 90 0 91 0 98 0 100 0 101 0 103 0 105 0 106 0 107 0 108 0 109 0 113 0 114 0 121 0 124 0 125 0 130 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 143 0 147 0 150 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173] 
#[0 16 33 0 97] 
#[1 0 29 0 1 0 142 0 3 4 9 0 5 3 31 0 9 3 35 0 11 3 39 0 22 3 43 0 24 3 47 0 26 3 51 0 41 3 55 0 42 3 59 0 43 3 63 0 44 3 67 0 48 3 71 0 53 3 75 0 54 3 79 0 55 3 83 0 57 3 87 0 58 3 91 0 71 3 95 0 73 3 99 0 75 3 103 0 82 3 107 0 84 3 111 0 86 3 115 0 87 3 119 0 90 3 123 0 91 3 127 0 98 3 131 0 100 3 135 0 101 3 139 0 103 3 143 0 105 3 147 0 106 3 151 0 107 3 155 0 108 3 159 0 109 3 163 0 113 3 167 0 114 3 171 0 121 3 175 0 124 3 179 0 125 3 183 0 130 3 187 0 132 3 191 0 133 3 195 0 134 3 199 0 135 3 203 0 136 3 207 0 137 3 211 0 139 3 215 0 143 3 219 0 147 3 223 0 150 3 227 0 152 3 231 0 153 3 235 0 162 3 239 0 167 3 243 0 168 3 247 0 171 3 251 0 172 3 35 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 16 37 0 213 3 193 0 215 1 25 0 223 16 41 0 228 16 41 0 229 16 41 0 233 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 16 45 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 16 49 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 16 53 0 97] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 16 57 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 16 61 0 172] 
#[0 16 65 0 97] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 16 69 0 191 0 249 0 194 16 69 0 195 16 69 0 196 16 69 0 197] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 16 73 0 191 0 249 0 194 16 73 0 195 16 73 0 196 16 73 0 197] 
#[1 8 65 0 3 16 77 0 253] 
#[1 2 71 0 1 0 142 0 3 4 9 0 5 2 71 0 9 2 71 0 11 2 71 0 22 2 71 0 24 2 71 0 26 2 71 0 41 2 71 0 42 2 71 0 43 2 71 0 44 2 71 0 48 2 71 0 53 2 71 0 54 2 71 0 55 2 71 0 57 2 71 0 58 2 71 0 71 2 71 0 73 2 71 0 75 2 71 0 82 2 71 0 84 2 71 0 86 2 71 0 87 2 71 0 90 2 71 0 91 2 71 0 98 2 71 0 100 2 71 0 101 2 71 0 103 2 71 0 105 2 71 0 106 2 71 0 107 2 71 0 108 2 71 0 109 2 71 0 113 2 71 0 114 2 71 0 121 2 71 0 124 2 71 0 125 2 71 0 130 2 71 0 132 2 71 0 133 2 71 0 134 2 71 0 135 2 71 0 136 2 71 0 137 2 71 0 139 2 71 0 143 2 71 0 147 2 71 0 150 2 71 0 152 2 71 0 153 2 71 0 162 2 71 0 167 2 71 0 168 2 71 0 171 3 255 0 172 2 71 0 173 11 149 0 228 11 149 0 229 11 149 0 233 11 153 1 10 16 85 1 11] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 16 89 0 191 0 249 0 194 16 89 0 195 16 89 0 196 16 89 0 197] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 16 93 0 191 0 249 0 194 16 93 0 195 16 93 0 196 16 93 0 197] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 16 97 0 191 0 249 0 194 16 97 0 195 16 97 0 196 16 97 0 197] 
#[1 2 79 0 1 8 65 0 3 2 79 0 9 2 79 0 11 2 79 0 22 2 79 0 24 2 79 0 26 2 79 0 41 2 79 0 42 2 79 0 43 2 79 0 44 2 79 0 48 2 79 0 53 2 79 0 54 2 79 0 55 2 79 0 57 2 79 0 58 2 79 0 71 2 79 0 73 2 79 0 75 2 79 0 82 2 79 0 84 2 79 0 86 2 79 0 87 2 79 0 90 2 79 0 91 2 79 0 98 2 79 0 100 2 79 0 101 2 79 0 103 2 79 0 105 2 79 0 106 2 79 0 107 2 79 0 108 2 79 0 109 2 79 0 113 2 79 0 114 2 79 0 121 2 79 0 124 2 79 0 125 2 79 0 130 2 79 0 132 2 79 0 133 2 79 0 134 2 79 0 135 2 79 0 136 2 79 0 137 2 79 0 139 2 79 0 143 2 79 0 147 2 79 0 150 2 79 0 152 2 79 0 153 2 79 0 162 2 79 0 167 2 79 0 168 2 79 0 171 2 83 0 172 2 79 0 173 16 101 0 221 16 105 0 253] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 16 109 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 4 146 0 1 4 146 0 9 4 146 0 11 4 146 0 22 4 146 0 24 4 146 0 26 4 146 0 41 4 146 0 42 4 146 0 43 4 146 0 44 4 146 0 48 4 146 0 53 4 146 0 54 4 146 0 55 4 146 0 57 4 146 0 58 4 146 0 71 4 146 0 73 4 146 0 75 4 146 0 82 4 146 0 84 4 146 0 86 4 146 0 87 4 146 0 90 4 146 0 91 4 146 0 98 4 146 0 100 4 146 0 101 4 146 0 103 4 146 0 105 4 146 0 106 4 146 0 107 4 146 0 108 4 146 0 109 4 146 0 113 4 146 0 114 4 146 0 121 4 146 0 124 4 146 0 125 4 146 0 130 4 146 0 132 4 146 0 133 4 146 0 134 4 146 0 135 4 146 0 136 4 146 0 137 4 146 0 139 4 146 0 143 4 146 0 147 4 146 0 150 4 146 0 152 4 146 0 153 4 146 0 162 4 146 0 167 4 146 0 168 4 146 0 171 2 87 0 172 4 146 0 173 16 113 0 221] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 16 117 0 191 0 249 0 194 16 117 0 195 16 117 0 196 16 117 0 197] 
#[1 16 121 0 105 16 125 0 114 16 129 0 137] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 16 133 0 191 0 249 0 194 16 133 0 195 16 133 0 196 16 133 0 197] 
#[1 8 65 0 3 16 137 0 253] 
#[1 2 71 0 1 0 142 0 3 4 9 0 5 2 71 0 9 2 71 0 11 2 71 0 22 2 71 0 24 2 71 0 26 2 71 0 41 2 71 0 42 2 71 0 43 2 71 0 44 2 71 0 48 2 71 0 53 2 71 0 54 2 71 0 55 2 71 0 57 2 71 0 58 2 71 0 71 2 71 0 73 2 71 0 75 2 71 0 82 2 71 0 84 2 71 0 86 2 71 0 87 2 71 0 90 2 71 0 91 2 71 0 98 2 71 0 100 2 71 0 101 2 71 0 103 2 71 0 105 2 71 0 106 2 71 0 107 2 71 0 108 2 71 0 109 2 71 0 113 2 71 0 114 2 71 0 121 2 71 0 124 2 71 0 125 2 71 0 130 2 71 0 132 2 71 0 133 2 71 0 134 2 71 0 135 2 71 0 136 2 71 0 137 2 71 0 139 2 71 0 143 2 71 0 147 2 71 0 150 2 71 0 152 2 71 0 153 2 71 0 162 2 71 0 167 2 71 0 168 2 71 0 171 4 3 0 172 2 71 0 173 11 149 0 228 11 149 0 229 11 149 0 233 11 153 1 10 16 145 1 11] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 16 149 0 191 0 249 0 194 16 149 0 195 16 149 0 196 16 149 0 197] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 16 153 0 191 0 249 0 194 16 153 0 195 16 153 0 196 16 153 0 197] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 16 157 0 191 0 249 0 194 16 157 0 195 16 157 0 196 16 157 0 197] 
#[1 2 79 0 1 8 65 0 3 2 79 0 9 2 79 0 11 2 79 0 22 2 79 0 24 2 79 0 26 2 79 0 41 2 79 0 42 2 79 0 43 2 79 0 44 2 79 0 48 2 79 0 53 2 79 0 54 2 79 0 55 2 79 0 57 2 79 0 58 2 79 0 71 2 79 0 73 2 79 0 75 2 79 0 82 2 79 0 84 2 79 0 86 2 79 0 87 2 79 0 90 2 79 0 91 2 79 0 98 2 79 0 100 2 79 0 101 2 79 0 103 2 79 0 105 2 79 0 106 2 79 0 107 2 79 0 108 2 79 0 109 2 79 0 113 2 79 0 114 2 79 0 121 2 79 0 124 2 79 0 125 2 79 0 130 2 79 0 132 2 79 0 133 2 79 0 134 2 79 0 135 2 79 0 136 2 79 0 137 2 79 0 139 2 79 0 143 2 79 0 147 2 79 0 150 2 79 0 152 2 79 0 153 2 79 0 162 2 79 0 167 2 79 0 168 2 79 0 171 2 83 0 172 2 79 0 173 16 161 0 221 16 165 0 253] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 16 169 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 4 146 0 1 4 146 0 9 4 146 0 11 4 146 0 22 4 146 0 24 4 146 0 26 4 146 0 41 4 146 0 42 4 146 0 43 4 146 0 44 4 146 0 48 4 146 0 53 4 146 0 54 4 146 0 55 4 146 0 57 4 146 0 58 4 146 0 71 4 146 0 73 4 146 0 75 4 146 0 82 4 146 0 84 4 146 0 86 4 146 0 87 4 146 0 90 4 146 0 91 4 146 0 98 4 146 0 100 4 146 0 101 4 146 0 103 4 146 0 105 4 146 0 106 4 146 0 107 4 146 0 108 4 146 0 109 4 146 0 113 4 146 0 114 4 146 0 121 4 146 0 124 4 146 0 125 4 146 0 130 4 146 0 132 4 146 0 133 4 146 0 134 4 146 0 135 4 146 0 136 4 146 0 137 4 146 0 139 4 146 0 143 4 146 0 147 4 146 0 150 4 146 0 152 4 146 0 153 4 146 0 162 4 146 0 167 4 146 0 168 4 146 0 171 2 87 0 172 4 146 0 173 16 173 0 221] 
#[0 7 34 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 16 177 0 172] 
#[0 16 181 0 172] 
#[1 7 153 0 159 16 185 0 190] 
#[1 7 38 0 1 7 38 0 3 7 38 0 4 7 38 0 5 7 38 0 7 7 38 0 9 7 38 0 11 7 38 0 13 7 38 0 22 7 38 0 24 7 38 0 26 7 38 0 27 7 38 0 28 7 38 0 29 7 38 0 30 7 38 0 31 7 38 0 32 7 38 0 33 7 38 0 34 7 38 0 35 7 38 0 36 7 38 0 37 7 38 0 38 7 38 0 39 7 38 0 40 7 38 0 41 7 38 0 42 7 38 0 43 7 38 0 44 7 38 0 48 7 38 0 53 7 38 0 54 7 38 0 55 7 38 0 57 7 38 0 58 7 38 0 71 7 38 0 73 7 38 0 74 7 38 0 75 7 38 0 80 7 38 0 82 7 38 0 84 7 38 0 86 7 38 0 87 7 38 0 89 7 38 0 90 7 38 0 91 7 38 0 97 7 38 0 98 7 38 0 100 7 38 0 101 7 38 0 103 7 38 0 104 7 38 0 105 7 38 0 106 7 38 0 107 7 38 0 108 7 38 0 109 7 38 0 110 7 38 0 113 7 38 0 114 7 38 0 119 7 38 0 121 7 38 0 122 7 38 0 124 7 38 0 125 7 38 0 130 7 38 0 131 7 38 0 132 7 38 0 133 7 38 0 134 7 38 0 135 7 38 0 136 7 38 0 137 7 38 0 139 7 38 0 142 7 38 0 143 7 38 0 147 7 38 0 150 7 38 0 151 7 38 0 152 7 38 0 153 7 38 0 162 7 38 0 167 7 38 0 168 7 38 0 171 4 7 0 172 7 38 0 173 7 38 1 142] 
#[1 7 42 0 1 7 42 0 3 7 42 0 4 7 42 0 5 7 42 0 7 7 42 0 9 7 42 0 11 7 42 0 13 7 42 0 22 7 42 0 24 7 42 0 26 7 42 0 27 7 42 0 28 7 42 0 29 7 42 0 30 7 42 0 31 7 42 0 32 7 42 0 33 7 42 0 34 7 42 0 35 7 42 0 36 7 42 0 37 7 42 0 38 7 42 0 39 7 42 0 40 7 42 0 41 7 42 0 42 7 42 0 43 7 42 0 44 7 42 0 48 7 42 0 53 7 42 0 54 7 42 0 55 7 42 0 57 7 42 0 58 7 42 0 71 7 42 0 73 7 42 0 74 7 42 0 75 7 42 0 80 7 42 0 82 7 42 0 84 7 42 0 86 7 42 0 87 7 42 0 89 7 42 0 90 7 42 0 91 7 42 0 97 7 42 0 98 7 42 0 100 7 42 0 101 7 42 0 103 7 42 0 104 7 42 0 105 7 42 0 106 7 42 0 107 7 42 0 108 7 42 0 109 7 42 0 110 7 42 0 113 7 42 0 114 7 42 0 119 7 42 0 121 7 42 0 122 7 42 0 124 7 42 0 125 7 42 0 130 7 42 0 131 7 42 0 132 7 42 0 133 7 42 0 134 7 42 0 135 7 42 0 136 7 42 0 137 7 42 0 139 7 42 0 142 7 42 0 143 7 42 0 147 7 42 0 150 7 42 0 151 7 42 0 152 7 42 0 153 7 42 0 162 7 42 0 167 7 42 0 168 7 42 0 171 4 11 0 172 7 42 0 173 7 42 1 142] 
#[1 7 46 0 1 7 46 0 3 7 46 0 4 7 46 0 5 7 46 0 7 7 46 0 9 7 46 0 11 7 46 0 13 7 46 0 22 7 46 0 24 7 46 0 26 7 46 0 27 7 46 0 28 7 46 0 29 7 46 0 30 7 46 0 31 7 46 0 32 7 46 0 33 7 46 0 34 7 46 0 35 7 46 0 36 7 46 0 37 7 46 0 38 7 46 0 39 7 46 0 40 7 46 0 41 7 46 0 42 7 46 0 43 7 46 0 44 7 46 0 48 7 46 0 53 7 46 0 54 7 46 0 55 7 46 0 57 7 46 0 58 7 46 0 71 7 46 0 73 7 46 0 74 7 46 0 75 7 46 0 80 7 46 0 82 7 46 0 84 7 46 0 86 7 46 0 87 7 46 0 89 7 46 0 90 7 46 0 91 7 46 0 97 7 46 0 98 7 46 0 100 7 46 0 101 7 46 0 103 7 46 0 104 7 46 0 105 7 46 0 106 7 46 0 107 7 46 0 108 7 46 0 109 7 46 0 110 7 46 0 113 7 46 0 114 7 46 0 119 7 46 0 121 7 46 0 122 7 46 0 124 7 46 0 125 7 46 0 130 7 46 0 131 7 46 0 132 7 46 0 133 7 46 0 134 7 46 0 135 7 46 0 136 7 46 0 137 7 46 0 139 7 46 0 142 7 46 0 143 7 46 0 147 7 46 0 150 7 46 0 151 7 46 0 152 7 46 0 153 7 46 0 162 7 46 0 167 7 46 0 168 7 46 0 171 4 15 0 172 7 46 0 173 7 46 1 142] 
#[1 7 50 0 1 7 50 0 3 7 50 0 4 7 50 0 5 7 50 0 7 7 50 0 9 7 50 0 11 7 50 0 13 7 50 0 22 7 50 0 24 7 50 0 26 7 50 0 27 7 50 0 28 7 50 0 29 7 50 0 30 7 50 0 31 7 50 0 32 7 50 0 33 7 50 0 34 7 50 0 35 7 50 0 36 7 50 0 37 7 50 0 38 7 50 0 39 7 50 0 40 7 50 0 41 7 50 0 42 7 50 0 43 7 50 0 44 7 50 0 48 7 50 0 53 7 50 0 54 7 50 0 55 7 50 0 57 7 50 0 58 7 50 0 71 7 50 0 73 7 50 0 74 7 50 0 75 7 50 0 80 7 50 0 82 7 50 0 84 7 50 0 86 7 50 0 87 7 50 0 89 7 50 0 90 7 50 0 91 7 50 0 97 7 50 0 98 7 50 0 100 7 50 0 101 7 50 0 103 7 50 0 104 7 50 0 105 7 50 0 106 7 50 0 107 7 50 0 108 7 50 0 109 7 50 0 110 7 50 0 113 7 50 0 114 7 50 0 119 7 50 0 121 7 50 0 122 7 50 0 124 7 50 0 125 7 50 0 130 7 50 0 131 7 50 0 132 7 50 0 133 7 50 0 134 7 50 0 135 7 50 0 136 7 50 0 137 7 50 0 139 7 50 0 142 7 50 0 143 7 50 0 147 7 50 0 150 7 50 0 151 7 50 0 152 7 50 0 153 7 50 0 162 7 50 0 167 7 50 0 168 7 50 0 171 4 19 0 172 7 50 0 173 7 50 1 142] 
#[1 7 54 0 1 7 54 0 3 7 54 0 4 7 54 0 5 7 54 0 7 7 54 0 9 7 54 0 11 7 54 0 13 7 54 0 22 7 54 0 24 7 54 0 26 7 54 0 27 7 54 0 28 7 54 0 29 7 54 0 30 7 54 0 31 7 54 0 32 7 54 0 33 7 54 0 34 7 54 0 35 7 54 0 36 7 54 0 37 7 54 0 38 7 54 0 39 7 54 0 40 7 54 0 41 7 54 0 42 7 54 0 43 7 54 0 44 7 54 0 48 7 54 0 53 7 54 0 54 7 54 0 55 7 54 0 57 7 54 0 58 7 54 0 71 7 54 0 73 7 54 0 74 7 54 0 75 7 54 0 80 7 54 0 82 7 54 0 84 7 54 0 86 7 54 0 87 7 54 0 89 7 54 0 90 7 54 0 91 7 54 0 97 7 54 0 98 7 54 0 100 7 54 0 101 7 54 0 103 7 54 0 104 7 54 0 105 7 54 0 106 7 54 0 107 7 54 0 108 7 54 0 109 7 54 0 110 7 54 0 113 7 54 0 114 7 54 0 119 7 54 0 121 7 54 0 122 7 54 0 124 7 54 0 125 7 54 0 130 7 54 0 131 7 54 0 132 7 54 0 133 7 54 0 134 7 54 0 135 7 54 0 136 7 54 0 137 7 54 0 139 7 54 0 142 7 54 0 143 7 54 0 147 7 54 0 150 7 54 0 151 7 54 0 152 7 54 0 153 7 54 0 162 7 54 0 167 7 54 0 168 7 54 0 171 4 23 0 172 7 54 0 173 7 54 1 142] 
#[1 7 58 0 1 7 58 0 3 7 58 0 4 7 58 0 5 7 58 0 7 7 58 0 9 7 58 0 11 7 58 0 13 7 58 0 22 7 58 0 24 7 58 0 26 7 58 0 27 7 58 0 28 7 58 0 29 7 58 0 30 7 58 0 31 7 58 0 32 7 58 0 33 7 58 0 34 7 58 0 35 7 58 0 36 7 58 0 37 7 58 0 38 7 58 0 39 7 58 0 40 7 58 0 41 7 58 0 42 7 58 0 43 7 58 0 44 7 58 0 48 7 58 0 53 7 58 0 54 7 58 0 55 7 58 0 57 7 58 0 58 7 58 0 71 7 58 0 73 7 58 0 74 7 58 0 75 7 58 0 80 7 58 0 82 7 58 0 84 7 58 0 86 7 58 0 87 7 58 0 89 7 58 0 90 7 58 0 91 7 58 0 97 7 58 0 98 7 58 0 100 7 58 0 101 7 58 0 103 7 58 0 104 7 58 0 105 7 58 0 106 7 58 0 107 7 58 0 108 7 58 0 109 7 58 0 110 7 58 0 113 7 58 0 114 7 58 0 119 7 58 0 121 7 58 0 122 7 58 0 124 7 58 0 125 7 58 0 130 7 58 0 131 7 58 0 132 7 58 0 133 7 58 0 134 7 58 0 135 7 58 0 136 7 58 0 137 7 58 0 139 7 58 0 142 7 58 0 143 7 58 0 147 7 58 0 150 7 58 0 151 7 58 0 152 7 58 0 153 7 58 0 162 7 58 0 167 7 58 0 168 7 58 0 171 4 27 0 172 7 58 0 173 7 58 1 142] 
#[1 7 62 0 1 7 62 0 3 7 62 0 4 7 62 0 5 7 62 0 7 7 62 0 9 7 62 0 11 7 62 0 13 7 62 0 22 7 62 0 24 7 62 0 26 7 62 0 27 7 62 0 28 7 62 0 29 7 62 0 30 7 62 0 31 7 62 0 32 7 62 0 33 7 62 0 34 7 62 0 35 7 62 0 36 7 62 0 37 7 62 0 38 7 62 0 39 7 62 0 40 7 62 0 41 7 62 0 42 7 62 0 43 7 62 0 44 7 62 0 48 7 62 0 53 7 62 0 54 7 62 0 55 7 62 0 57 7 62 0 58 7 62 0 71 7 62 0 73 7 62 0 74 7 62 0 75 7 62 0 80 7 62 0 82 7 62 0 84 7 62 0 86 7 62 0 87 7 62 0 89 7 62 0 90 7 62 0 91 7 62 0 97 7 62 0 98 7 62 0 100 7 62 0 101 7 62 0 103 7 62 0 104 7 62 0 105 7 62 0 106 7 62 0 107 7 62 0 108 7 62 0 109 7 62 0 110 7 62 0 113 7 62 0 114 7 62 0 119 7 62 0 121 7 62 0 122 7 62 0 124 7 62 0 125 7 62 0 130 7 62 0 131 7 62 0 132 7 62 0 133 7 62 0 134 7 62 0 135 7 62 0 136 7 62 0 137 7 62 0 139 7 62 0 142 7 62 0 143 7 62 0 147 7 62 0 150 7 62 0 151 7 62 0 152 7 62 0 153 7 62 0 162 7 62 0 167 7 62 0 168 7 62 0 171 4 31 0 172 7 62 0 173 7 62 1 142] 
#[1 7 66 0 1 7 66 0 3 7 66 0 4 7 66 0 5 7 66 0 7 7 66 0 9 7 66 0 11 7 66 0 13 7 66 0 22 7 66 0 24 7 66 0 26 7 66 0 27 7 66 0 28 7 66 0 29 7 66 0 30 7 66 0 31 7 66 0 32 7 66 0 33 7 66 0 34 7 66 0 35 7 66 0 36 7 66 0 37 7 66 0 38 7 66 0 39 7 66 0 40 7 66 0 41 7 66 0 42 7 66 0 43 7 66 0 44 7 66 0 48 7 66 0 53 7 66 0 54 7 66 0 55 7 66 0 57 7 66 0 58 7 66 0 71 7 66 0 73 7 66 0 74 7 66 0 75 7 66 0 80 7 66 0 82 7 66 0 84 7 66 0 86 7 66 0 87 7 66 0 89 7 66 0 90 7 66 0 91 7 66 0 97 7 66 0 98 7 66 0 100 7 66 0 101 7 66 0 103 7 66 0 104 7 66 0 105 7 66 0 106 7 66 0 107 7 66 0 108 7 66 0 109 7 66 0 110 7 66 0 113 7 66 0 114 7 66 0 119 7 66 0 121 7 66 0 122 7 66 0 124 7 66 0 125 7 66 0 130 7 66 0 131 7 66 0 132 7 66 0 133 7 66 0 134 7 66 0 135 7 66 0 136 7 66 0 137 7 66 0 139 7 66 0 142 7 66 0 143 7 66 0 147 7 66 0 150 7 66 0 151 7 66 0 152 7 66 0 153 7 66 0 162 7 66 0 167 7 66 0 168 7 66 0 171 4 35 0 172 7 66 0 173 7 66 1 142] 
#[0 16 189 0 172] 
#[0 16 193 0 172] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 16 197 0 180 16 197 0 181 16 197 0 182 16 197 0 183 16 197 0 184 16 197 0 185 16 197 0 186 16 197 0 187 16 197 0 188 16 197 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 16 197 1 37 16 197 1 38 16 197 1 39 16 197 1 40 16 197 1 41 16 197 1 42 16 197 1 43 16 197 1 44 16 197 1 45 16 197 1 47 16 197 1 49 16 197 1 51 16 197 1 53 16 197 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 16 197 1 139 16 197 1 141] 
#[1 7 70 0 11 7 70 0 80 7 70 0 97 7 70 0 122 7 70 0 162 4 39 0 172 7 70 0 173 7 70 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 16 201 0 172 16 205 0 180 16 205 0 181 16 205 0 182 16 205 0 183 16 205 0 184 16 205 0 185 16 205 0 186 16 205 0 187 16 205 0 188 16 205 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 16 205 1 37 16 205 1 38 16 205 1 39 16 205 1 40 16 205 1 41 16 205 1 42 16 205 1 43 16 205 1 44 16 205 1 45 16 205 1 47 16 205 1 49 16 205 1 51 16 205 1 53 16 205 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 16 205 1 139 16 205 1 141] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 16 209 0 180 16 209 0 181 16 209 0 182 16 209 0 183 16 209 0 184 16 209 0 185 16 209 0 186 16 209 0 187 16 209 0 188 16 209 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 16 209 1 37 16 209 1 38 16 209 1 39 16 209 1 40 16 209 1 41 16 209 1 42 16 209 1 43 16 209 1 44 16 209 1 45 16 209 1 47 16 209 1 49 16 209 1 51 16 209 1 53 16 209 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 16 209 1 139 16 209 1 141] 
#[1 7 74 0 11 7 74 0 80 7 74 0 97 7 74 0 122 7 74 0 162 4 43 0 172 7 74 0 173 7 74 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 16 213 0 172 16 217 0 180 16 217 0 181 16 217 0 182 16 217 0 183 16 217 0 184 16 217 0 185 16 217 0 186 16 217 0 187 16 217 0 188 16 217 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 16 217 1 37 16 217 1 38 16 217 1 39 16 217 1 40 16 217 1 41 16 217 1 42 16 217 1 43 16 217 1 44 16 217 1 45 16 217 1 47 16 217 1 49 16 217 1 51 16 217 1 53 16 217 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 16 217 1 139 16 217 1 141] 
#[0 7 78 0 172] 
#[0 7 82 0 172] 
#[0 7 86 0 172] 
#[0 7 90 0 172] 
#[0 7 94 0 172] 
#[0 16 221 0 172] 
#[1 9 157 0 2 9 161 0 5 9 165 0 6 9 169 0 8 9 173 0 10 4 190 0 11 4 190 0 13 9 177 0 14 9 181 0 16 9 185 0 17 9 189 0 18 9 193 0 19 9 197 0 20 9 201 0 45 9 205 0 47 9 209 0 52 9 213 0 67 9 217 0 68 9 221 0 70 4 190 0 80 4 190 0 97 9 225 0 99 4 190 0 122 9 229 0 127 9 233 0 146 9 237 0 154 4 190 0 162 4 190 0 172 4 190 0 173 9 241 1 46 9 245 1 48 9 249 1 50 16 225 1 65 4 190 1 142] 
#[1 7 98 0 11 12 117 0 13 7 98 0 80 7 98 0 97 7 98 0 122 7 98 0 162 7 98 0 172 7 98 0 173 12 121 1 64 7 98 1 142] 
#[1 7 102 0 11 12 117 0 13 7 102 0 80 7 102 0 97 7 102 0 122 7 102 0 162 7 102 0 172 7 102 0 173 12 121 1 64 7 102 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 16 229 0 180 16 229 0 181 16 229 0 182 16 229 0 183 16 229 0 184 16 229 0 185 16 229 0 186 16 229 0 187 16 229 0 188 16 229 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 16 229 1 37 16 229 1 38 16 229 1 39 16 229 1 40 16 229 1 41 16 229 1 42 16 229 1 43 16 229 1 44 16 229 1 45 16 229 1 47 16 229 1 49 16 229 1 51 16 229 1 53 16 229 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 16 229 1 139 16 229 1 141] 
#[1 7 106 0 11 7 106 0 13 7 106 0 80 7 106 0 97 7 106 0 122 7 106 0 162 4 47 0 172 7 106 0 173 7 106 1 142] 
#[1 4 190 0 11 4 190 0 13 4 190 0 80 4 190 0 97 4 190 0 122 4 190 0 162 4 51 0 172 4 190 0 173 16 237 1 65 4 190 1 142] 
#[1 7 110 0 11 12 117 0 13 7 110 0 80 7 110 0 97 7 110 0 122 7 110 0 162 7 110 0 172 7 110 0 173 12 121 1 64 7 110 1 142] 
#[1 9 157 0 2 9 161 0 5 9 165 0 6 9 169 0 8 9 173 0 10 4 190 0 11 4 190 0 13 9 177 0 14 9 181 0 16 9 185 0 17 9 189 0 18 9 193 0 19 9 197 0 20 9 201 0 45 9 205 0 47 9 209 0 52 9 213 0 67 9 217 0 68 9 221 0 70 4 190 0 80 4 190 0 97 9 225 0 99 4 190 0 122 9 229 0 127 9 233 0 146 9 237 0 154 4 190 0 162 4 190 0 172 4 190 0 173 9 241 1 46 9 245 1 48 9 249 1 50 16 241 1 65 4 190 1 142] 
#[1 7 114 0 11 12 117 0 13 7 114 0 80 7 114 0 97 7 114 0 122 7 114 0 162 7 114 0 172 7 114 0 173 12 121 1 64 7 114 1 142] 
#[1 7 118 0 11 7 118 0 22 7 118 0 27 7 118 0 28 7 118 0 29 7 118 0 30 7 118 0 31 7 118 0 32 7 118 0 33 7 118 0 34 7 118 0 35 7 118 0 36 7 118 0 37 7 118 0 38 7 118 0 39 7 118 0 40 7 118 0 44 7 118 0 54 7 118 0 57 7 118 0 71 7 118 0 74 7 118 0 75 7 118 0 80 7 118 0 82 7 118 0 84 7 118 0 86 7 118 0 87 7 118 0 89 7 118 0 90 7 118 0 97 7 118 0 98 7 118 0 100 7 118 0 103 7 118 0 104 7 118 0 105 7 118 0 106 7 118 0 110 7 118 0 113 7 118 0 114 7 118 0 121 7 118 0 122 7 118 0 125 7 118 0 130 7 118 0 131 7 118 0 132 7 118 0 133 7 118 0 137 7 118 0 139 7 118 0 142 7 118 0 143 7 118 0 147 7 118 0 150 7 118 0 162 7 118 0 167 7 118 0 168 7 118 0 171 4 55 0 172 7 118 0 173 7 118 1 142] 
#[1 7 122 0 11 7 122 0 22 7 122 0 27 7 122 0 28 7 122 0 29 7 122 0 30 7 122 0 31 7 122 0 32 7 122 0 33 7 122 0 34 7 122 0 35 7 122 0 36 7 122 0 37 7 122 0 38 7 122 0 39 7 122 0 40 7 122 0 44 7 122 0 54 7 122 0 57 7 122 0 71 7 122 0 74 7 122 0 75 7 122 0 80 7 122 0 82 7 122 0 84 7 122 0 86 7 122 0 87 7 122 0 89 7 122 0 90 7 122 0 97 7 122 0 98 7 122 0 100 7 122 0 103 7 122 0 104 7 122 0 105 7 122 0 106 7 122 0 110 7 122 0 113 7 122 0 114 7 122 0 121 7 122 0 122 7 122 0 125 7 122 0 130 7 122 0 131 7 122 0 132 7 122 0 133 7 122 0 137 7 122 0 139 7 122 0 142 7 122 0 143 7 122 0 147 7 122 0 150 7 122 0 162 7 122 0 167 7 122 0 168 7 122 0 171 4 59 0 172 7 122 0 173 7 122 1 142] 
#[0 7 126 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 16 245 0 180 16 245 0 181 16 245 0 182 16 245 0 183 16 245 0 184 16 245 0 185 16 245 0 186 16 245 0 187 16 245 0 188 16 245 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 16 245 1 37 16 245 1 38 16 245 1 39 16 245 1 40 16 245 1 41 16 245 1 42 16 245 1 43 16 245 1 44 16 245 1 45 16 245 1 47 16 245 1 49 16 245 1 51 16 245 1 53 16 245 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 16 245 1 139 16 245 1 141] 
#[1 7 130 0 4 7 130 0 7 7 165 0 172] 
#[0 7 134 0 1 0 4 0 5 0 7 0 9 0 11 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 7 138 0 7 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 7 142 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 16 249 0 172] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 8 13 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 16 253 0 119 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 8 13 0 201 8 13 0 203 8 13 0 212 8 17 0 215 1 25 0 223 8 13 0 234 1 33 0 235 8 13 0 236 8 13 0 237 8 13 0 238 8 13 0 239 8 13 0 240 8 13 0 241 8 13 0 242 8 13 0 243 8 13 0 247 8 13 0 248 8 13 1 17 8 13 1 18 8 13 1 19 8 13 1 20 8 13 1 21 8 13 1 22 1 101 1 24 8 13 1 25 8 13 1 26 8 13 1 27 8 13 1 28 8 13 1 29 8 13 1 33 8 13 1 36 1 133 1 55 1 133 1 56 1 133 1 57 8 13 1 61 8 13 1 62 8 13 1 63 8 13 1 66 8 13 1 67 8 13 1 68 8 13 1 69 8 13 1 70 8 13 1 71 8 13 1 72 8 13 1 73 8 13 1 74 8 13 1 75 8 13 1 76 8 13 1 77 8 13 1 78 8 13 1 79 8 13 1 80 8 13 1 81 8 13 1 82 8 13 1 83 8 13 1 88 8 13 1 89 1 237 1 90 8 13 1 95 8 13 1 98 8 13 1 99 8 13 1 100 8 13 1 101 8 13 1 102 8 13 1 107 8 13 1 108 8 13 1 109 8 13 1 110 8 13 1 111 8 13 1 112 8 13 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 8 13 1 127 2 89 1 128 2 93 1 129 8 13 1 137 8 13 1 138 8 13 1 140] 
#[0 7 146 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 17 1 0 172] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 17 5 0 180 17 5 0 181 17 5 0 182 17 5 0 183 17 5 0 184 17 5 0 185 17 5 0 186 17 5 0 187 17 5 0 188 17 5 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 17 5 1 37 17 5 1 38 17 5 1 39 17 5 1 40 17 5 1 41 17 5 1 42 17 5 1 43 17 5 1 44 17 5 1 45 17 5 1 47 17 5 1 49 17 5 1 51 17 5 1 53 17 5 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 17 5 1 139 17 5 1 141] 
#[1 7 150 0 11 7 150 0 80 7 150 0 97 7 150 0 122 7 150 0 162 4 63 0 172 7 150 0 173 7 150 1 142] 
#[1 7 154 0 11 7 154 0 80 7 154 0 97 7 154 0 122 7 154 0 162 4 67 0 172 7 154 0 173 7 154 1 142] 
#[0 17 9 0 172] 
#[0 17 13 0 172] 
#[0 17 17 0 98] 
#[0 17 21 0 18] 
#[0 17 25 0 172] 
#[1 7 221 0 3 2 119 0 4 4 9 0 5 2 119 0 7 2 123 0 172 17 33 0 228 17 33 0 229 17 29 0 230 17 33 0 233 17 33 1 1 17 33 1 2] 
#[0 17 37 0 172] 
#[1 7 221 0 3 2 119 0 4 4 9 0 5 2 119 0 7 2 123 0 172 17 45 0 228 17 45 0 229 17 41 0 230 17 45 0 233 17 45 1 1 17 45 1 2] 
#[1 6 198 0 4 6 198 0 7 2 247 0 172 15 73 1 3 17 49 1 4] 
#[0 17 53 0 18] 
#[0 7 158 0 4 0 7 0 172] 
#[0 7 162 0 4 0 7 0 172] 
#[0 17 57 0 172] 
#[1 7 221 0 3 2 119 0 4 4 9 0 5 2 119 0 7 2 123 0 172 17 65 0 228 17 65 0 229 17 61 0 230 17 65 0 233 17 65 1 1 17 65 1 2] 
#[0 7 166 0 1 0 3 0 5 0 9 0 11 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 17 69 0 172] 
#[0 17 73 0 4] 
#[0 7 170 0 4 0 7 0 172] 
#[0 7 174 0 7 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 4 173 0 8 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 3 173 0 162 0 249 0 167 0 237 0 168 0 241 0 171 17 77 0 182 17 77 0 191 0 249 0 194 17 77 0 195 17 77 0 196 17 77 0 197 17 77 1 42 17 77 1 103] 
#[0 7 178 0 7 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 5 226 0 11 5 226 0 80 5 226 0 97 5 226 0 122 5 226 0 162 5 226 0 172 5 226 0 173 17 81 0 220 5 226 1 142] 
#[1 17 85 0 11 7 182 0 80 7 182 0 97 7 182 0 122 7 182 0 162 4 71 0 172 7 182 0 173 15 145 0 219 7 182 1 142] 
#[1 17 93 0 11 7 186 0 80 7 186 0 97 7 186 0 122 7 186 0 162 4 75 0 172 7 186 0 173 15 145 0 219 7 186 1 142] 
#[1 17 101 0 94 17 105 0 96 17 109 0 97 3 173 0 162 17 113 0 182 17 117 1 84 17 121 1 86 17 117 1 87] 
#[1 17 129 0 94 17 133 0 95] 
#[1 0 29 0 1 0 33 0 9 4 146 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 17 141 0 73 0 249 0 75 4 146 0 80 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 4 146 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 4 146 0 122 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 4 146 0 162 0 233 0 167 0 237 0 168 0 241 0 171 4 79 0 172 4 146 0 173 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 17 141 0 201 17 141 0 203 17 141 0 212 17 145 0 221 1 25 0 223 17 141 0 234 1 33 0 235 17 141 0 236 17 141 0 237 17 141 0 238 17 141 0 239 17 141 0 240 17 141 0 241 17 141 0 242 17 141 0 243 17 141 0 247 17 141 0 248 17 141 1 17 17 141 1 18 17 141 1 19 17 141 1 20 17 141 1 21 17 141 1 22 1 101 1 24 17 141 1 25 17 141 1 26 17 141 1 27 17 141 1 28 17 141 1 29 17 141 1 33 17 141 1 36 1 133 1 55 1 133 1 56 1 133 1 57 17 141 1 61 17 141 1 62 17 141 1 63 17 141 1 66 17 141 1 67 17 141 1 68 17 141 1 69 17 141 1 70 17 141 1 71 17 141 1 72 17 141 1 73 17 141 1 74 17 141 1 75 17 141 1 76 17 141 1 77 17 141 1 78 17 141 1 79 17 141 1 80 17 141 1 81 17 141 1 82 17 141 1 83 17 141 1 88 17 141 1 89 1 237 1 90 17 141 1 95 17 141 1 98 17 141 1 99 17 141 1 100 17 141 1 101 17 141 1 102 17 141 1 107 17 141 1 108 17 141 1 109 17 141 1 110 17 141 1 111 17 141 1 112 17 141 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 17 141 1 127 2 89 1 128 2 93 1 129 17 141 1 137 17 141 1 138 17 141 1 140 4 146 1 142] 
#[0 17 149 0 11] 
#[0 7 190 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 17 153 0 94 17 157 0 95] 
#[1 7 194 0 11 7 194 0 80 7 194 0 97 7 194 0 122 7 194 0 162 4 83 0 172 7 194 0 173 7 194 1 142] 
#[0 7 198 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 17 161 0 172] 
#[0 17 165 0 172] 
#[0 7 202 0 80 0 97 0 162] 
#[0 7 206 0 80 0 97 0 162] 
#[1 15 161 0 80 17 169 0 97 3 173 0 162 17 173 0 182 17 177 1 92 17 177 1 96] 
#[0 17 181 0 147] 
#[1 17 185 0 5 7 210 0 22 7 210 0 44 7 210 0 54 7 210 0 57 7 210 0 75 7 210 0 82 7 210 0 86 7 210 0 87 7 210 0 97 7 210 0 105 7 210 0 113 7 210 0 114 7 210 0 121 7 210 0 137 7 210 0 143 7 210 0 150 7 210 0 167 7 210 0 168 7 210 0 171 17 189 0 172 7 210 0 173] 
#[0 7 214 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 7 218 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 17 193 0 172] 
#[0 7 222 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 17 197 0 180 17 197 0 181 17 197 0 182 17 197 0 183 17 197 0 184 17 197 0 185 17 197 0 186 17 197 0 187 17 197 0 188 17 197 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 17 197 1 37 17 197 1 38 17 197 1 39 17 197 1 40 17 197 1 41 17 197 1 42 17 197 1 43 17 197 1 44 17 197 1 45 17 197 1 47 17 197 1 49 17 197 1 51 17 197 1 53 17 197 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 17 197 1 139 17 197 1 141] 
#[1 7 226 0 1 7 226 0 3 7 226 0 4 7 226 0 5 7 226 0 7 7 226 0 9 7 226 0 11 7 226 0 22 7 226 0 24 7 226 0 26 7 226 0 27 7 226 0 28 7 226 0 29 7 226 0 30 7 226 0 31 7 226 0 32 7 226 0 33 7 226 0 34 7 226 0 35 7 226 0 36 7 226 0 37 7 226 0 38 7 226 0 39 7 226 0 40 7 226 0 41 7 226 0 42 7 226 0 43 7 226 0 44 7 226 0 48 7 226 0 53 7 226 0 54 7 226 0 55 7 226 0 57 7 226 0 58 7 226 0 71 7 226 0 73 7 226 0 74 7 226 0 75 7 226 0 80 7 226 0 82 7 226 0 84 7 226 0 86 7 226 0 87 7 226 0 89 7 226 0 90 7 226 0 91 7 226 0 97 7 226 0 98 7 226 0 100 7 226 0 101 7 226 0 103 7 226 0 104 7 226 0 105 7 226 0 106 7 226 0 107 7 226 0 108 7 226 0 109 7 226 0 110 7 226 0 113 7 226 0 114 7 226 0 121 7 226 0 122 7 226 0 124 7 226 0 125 7 226 0 130 7 226 0 131 7 226 0 132 7 226 0 133 7 226 0 134 7 226 0 135 7 226 0 136 7 226 0 137 7 226 0 139 7 226 0 142 7 226 0 143 7 226 0 147 7 226 0 150 7 226 0 152 7 226 0 153 7 226 0 162 7 226 0 167 7 226 0 168 7 226 0 171 4 87 0 172 7 226 0 173 7 226 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 17 201 0 172 17 205 0 180 17 205 0 181 17 205 0 182 17 205 0 183 17 205 0 184 17 205 0 185 17 205 0 186 17 205 0 187 17 205 0 188 17 205 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 17 205 1 37 17 205 1 38 17 205 1 39 17 205 1 40 17 205 1 41 17 205 1 42 17 205 1 43 17 205 1 44 17 205 1 45 17 205 1 47 17 205 1 49 17 205 1 51 17 205 1 53 17 205 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 17 205 1 139 17 205 1 141] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 17 209 0 97 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 3 65 0 173 12 229 0 191 0 249 0 194 12 229 0 195 12 229 0 196 12 229 0 197 12 233 0 251] 
#[0 7 230 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 17 213 0 97 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 3 65 0 173 13 73 0 191 0 249 0 194 13 73 0 195 13 73 0 196 13 73 0 197 13 77 0 246] 
#[1 7 234 0 11 7 234 0 80 7 234 0 97 7 234 0 122 7 234 0 162 4 91 0 172 7 234 0 173 7 234 1 142] 
#[1 7 238 0 11 7 238 0 80 7 238 0 97 7 238 0 122 7 238 0 162 4 95 0 172 7 238 0 173 7 238 1 142] 
#[1 7 242 0 11 7 242 0 80 7 242 0 97 7 242 0 122 7 242 0 162 4 99 0 172 7 242 0 173 7 242 1 142] 
#[1 7 246 0 11 7 246 0 80 7 246 0 97 7 246 0 122 7 246 0 162 4 103 0 172 7 246 0 173 7 246 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 17 217 0 180 17 217 0 181 17 217 0 182 17 217 0 183 17 217 0 184 17 217 0 185 17 217 0 186 17 217 0 187 17 217 0 188 17 217 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 17 217 1 37 17 217 1 38 17 217 1 39 17 217 1 40 17 217 1 41 17 217 1 42 17 217 1 43 17 217 1 44 17 217 1 45 17 217 1 47 17 217 1 49 17 217 1 51 17 217 1 53 17 217 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 17 217 1 139 17 217 1 141] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 17 225 0 180 17 225 0 181 17 225 0 182 17 225 0 183 17 225 0 184 17 225 0 185 17 225 0 186 17 225 0 187 17 225 0 188 17 225 0 189 8 229 0 191 0 249 0 194 8 229 0 195 8 229 0 196 8 229 0 197 17 221 0 236 17 225 1 37 17 225 1 38 17 225 1 39 17 225 1 40 17 225 1 41 17 225 1 42 17 225 1 43 17 225 1 44 17 225 1 45 17 225 1 47 17 225 1 49 17 225 1 51 17 225 1 53 17 225 1 54 5 61 1 55 5 61 1 56 5 61 1 57 2 65 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 17 225 1 139 17 225 1 141] 
#[0 7 250 0 4 0 7 0 11 0 13 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 7 254 0 4 0 7 0 11 0 13 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 17 229 0 172] 
#[0 17 233 0 172] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 17 237 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 17 241 0 97] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 17 245 0 180 17 245 0 181 17 245 0 182 17 245 0 183 17 245 0 184 17 245 0 185 17 245 0 186 17 245 0 187 17 245 0 188 17 245 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 17 245 1 37 17 245 1 38 17 245 1 39 17 245 1 40 17 245 1 41 17 245 1 42 17 245 1 43 17 245 1 44 17 245 1 45 17 245 1 47 17 245 1 49 17 245 1 51 17 245 1 53 17 245 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 17 245 1 139 17 245 1 141] 
#[1 4 107 0 1 4 107 0 3 4 107 0 9 4 107 0 11 4 107 0 22 4 107 0 24 4 107 0 26 4 107 0 41 4 107 0 42 4 107 0 43 4 107 0 44 4 107 0 48 4 107 0 53 4 107 0 54 4 107 0 55 4 107 0 57 4 107 0 58 4 107 0 71 4 107 0 73 4 107 0 75 4 107 0 82 4 107 0 84 4 107 0 86 4 107 0 87 4 107 0 90 4 107 0 91 4 107 0 98 4 107 0 100 4 107 0 101 4 107 0 103 4 107 0 105 4 107 0 106 4 107 0 107 4 107 0 108 4 107 0 109 4 107 0 113 4 107 0 114 4 107 0 121 4 107 0 124 4 107 0 125 4 107 0 130 4 107 0 132 4 107 0 133 4 107 0 134 4 107 0 135 4 107 0 136 4 107 0 137 4 107 0 139 4 107 0 143 4 107 0 147 4 107 0 150 4 107 0 152 4 107 0 153 4 107 0 162 4 107 0 167 4 107 0 168 4 107 0 171 4 111 0 172 4 107 0 173] 
#[0 17 249 0 97] 
#[0 17 253 0 172] 
#[0 18 1 0 97] 
#[1 0 29 0 1 7 221 0 3 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 18 5 0 213 3 193 0 215 1 25 0 223 18 9 0 230 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 18 13 0 97] 
#[0 18 17 0 97] 
#[0 18 21 0 172] 
#[0 18 25 0 97] 
#[0 18 29 0 142] 
#[0 18 33 0 172] 
#[0 18 37 0 172] 
#[0 18 41 0 172] 
#[1 2 71 0 1 0 142 0 3 4 9 0 5 2 71 0 9 2 71 0 11 2 71 0 22 2 71 0 24 2 71 0 26 2 71 0 41 2 71 0 42 2 71 0 43 2 71 0 44 2 71 0 48 2 71 0 53 2 71 0 54 2 71 0 55 2 71 0 57 2 71 0 58 2 71 0 71 2 71 0 73 2 71 0 75 2 71 0 82 2 71 0 84 2 71 0 86 2 71 0 87 2 71 0 90 2 71 0 91 2 71 0 98 2 71 0 100 2 71 0 101 2 71 0 103 2 71 0 105 2 71 0 106 2 71 0 107 2 71 0 108 2 71 0 109 2 71 0 113 2 71 0 114 2 71 0 121 2 71 0 124 2 71 0 125 2 71 0 130 2 71 0 132 2 71 0 133 2 71 0 134 2 71 0 135 2 71 0 136 2 71 0 137 2 71 0 139 2 71 0 143 2 71 0 147 2 71 0 150 2 71 0 152 2 71 0 153 2 71 0 162 2 71 0 167 2 71 0 168 2 71 0 171 4 115 0 172 2 71 0 173 11 149 0 228 11 149 0 229 11 149 0 233 11 153 1 10 18 49 1 11] 
#[1 2 71 0 1 0 142 0 3 13 217 0 5 2 71 0 9 2 71 0 11 2 71 0 22 6 177 0 23 2 71 0 24 2 71 0 26 2 71 0 41 2 71 0 42 2 71 0 43 2 71 0 44 2 71 0 48 2 71 0 53 2 71 0 54 2 71 0 55 2 71 0 57 2 71 0 58 2 71 0 71 2 71 0 73 2 71 0 75 2 71 0 82 2 71 0 84 2 71 0 86 2 71 0 87 2 71 0 90 2 71 0 91 2 71 0 98 2 71 0 100 2 71 0 101 2 71 0 103 2 71 0 105 2 71 0 106 2 71 0 107 2 71 0 108 2 71 0 109 2 71 0 113 2 71 0 114 2 71 0 121 2 71 0 124 2 71 0 125 2 71 0 130 2 71 0 132 2 71 0 133 2 71 0 134 2 71 0 135 2 71 0 136 2 71 0 137 2 71 0 139 2 71 0 143 2 71 0 147 2 71 0 150 2 71 0 152 2 71 0 153 2 71 0 162 2 71 0 167 2 71 0 168 2 71 0 171 2 211 0 172 2 71 0 173 11 149 0 228 11 149 0 229 11 149 0 233 11 153 1 10 18 53 1 11] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 18 57 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 8 65 0 3 18 61 0 253] 
#[1 8 65 0 3 18 65 0 253] 
#[1 8 65 0 3 18 69 0 253] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 18 73 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 4 146 0 1 4 146 0 9 4 146 0 11 4 146 0 22 4 146 0 24 4 146 0 26 4 146 0 41 4 146 0 42 4 146 0 43 4 146 0 44 4 146 0 48 4 146 0 53 4 146 0 54 4 146 0 55 4 146 0 57 4 146 0 58 4 146 0 71 4 146 0 73 4 146 0 75 4 146 0 82 4 146 0 84 4 146 0 86 4 146 0 87 4 146 0 90 4 146 0 91 4 146 0 98 4 146 0 100 4 146 0 101 4 146 0 103 4 146 0 105 4 146 0 106 4 146 0 107 4 146 0 108 4 146 0 109 4 146 0 113 4 146 0 114 4 146 0 121 4 146 0 124 4 146 0 125 4 146 0 130 4 146 0 132 4 146 0 133 4 146 0 134 4 146 0 135 4 146 0 136 4 146 0 137 4 146 0 139 4 146 0 143 4 146 0 147 4 146 0 150 4 146 0 152 4 146 0 153 4 146 0 162 4 146 0 167 4 146 0 168 4 146 0 171 2 87 0 172 4 146 0 173 18 77 0 221] 
#[0 18 81 0 97] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 18 85 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 8 65 0 3 18 89 0 172 18 93 0 253] 
#[0 18 97 0 172] 
#[0 18 101 0 172] 
#[0 18 105 0 172] 
#[1 4 146 0 1 8 65 0 3 4 146 0 9 4 146 0 11 4 146 0 22 4 146 0 24 4 146 0 26 4 146 0 41 4 146 0 42 4 146 0 43 4 146 0 44 4 146 0 48 4 146 0 53 4 146 0 54 4 146 0 55 4 146 0 57 4 146 0 58 4 146 0 71 4 146 0 73 4 146 0 75 4 146 0 82 4 146 0 84 4 146 0 86 4 146 0 87 4 146 0 90 4 146 0 91 4 146 0 98 4 146 0 100 4 146 0 101 4 146 0 103 4 146 0 105 4 146 0 106 4 146 0 107 4 146 0 108 4 146 0 109 4 146 0 113 4 146 0 114 4 146 0 121 4 146 0 124 4 146 0 125 4 146 0 130 4 146 0 132 4 146 0 133 4 146 0 134 4 146 0 135 4 146 0 136 4 146 0 137 4 146 0 139 4 146 0 143 4 146 0 147 4 146 0 150 4 146 0 152 4 146 0 153 4 146 0 162 4 146 0 167 4 146 0 168 4 146 0 171 4 119 0 172 4 146 0 173 18 113 0 221 18 117 0 253] 
#[1 2 71 0 1 0 142 0 3 4 9 0 5 2 71 0 9 2 71 0 11 2 71 0 22 2 71 0 24 2 71 0 26 2 71 0 41 2 71 0 42 2 71 0 43 2 71 0 44 2 71 0 48 2 71 0 53 2 71 0 54 2 71 0 55 2 71 0 57 2 71 0 58 2 71 0 71 2 71 0 73 2 71 0 75 2 71 0 82 2 71 0 84 2 71 0 86 2 71 0 87 2 71 0 90 2 71 0 91 2 71 0 98 2 71 0 100 2 71 0 101 2 71 0 103 2 71 0 105 2 71 0 106 2 71 0 107 2 71 0 108 2 71 0 109 2 71 0 113 2 71 0 114 2 71 0 121 2 71 0 124 2 71 0 125 2 71 0 130 2 71 0 132 2 71 0 133 2 71 0 134 2 71 0 135 2 71 0 136 2 71 0 137 2 71 0 139 2 71 0 143 2 71 0 147 2 71 0 150 2 71 0 152 2 71 0 153 2 71 0 162 2 71 0 167 2 71 0 168 2 71 0 171 4 123 0 172 2 71 0 173 11 149 0 228 11 149 0 229 11 149 0 233 11 153 1 10 18 125 1 11] 
#[1 2 71 0 1 0 142 0 3 13 217 0 5 2 71 0 9 2 71 0 11 2 71 0 22 6 177 0 23 2 71 0 24 2 71 0 26 2 71 0 41 2 71 0 42 2 71 0 43 2 71 0 44 2 71 0 48 2 71 0 53 2 71 0 54 2 71 0 55 2 71 0 57 2 71 0 58 2 71 0 71 2 71 0 73 2 71 0 75 2 71 0 82 2 71 0 84 2 71 0 86 2 71 0 87 2 71 0 90 2 71 0 91 2 71 0 98 2 71 0 100 2 71 0 101 2 71 0 103 2 71 0 105 2 71 0 106 2 71 0 107 2 71 0 108 2 71 0 109 2 71 0 113 2 71 0 114 2 71 0 121 2 71 0 124 2 71 0 125 2 71 0 130 2 71 0 132 2 71 0 133 2 71 0 134 2 71 0 135 2 71 0 136 2 71 0 137 2 71 0 139 2 71 0 143 2 71 0 147 2 71 0 150 2 71 0 152 2 71 0 153 2 71 0 162 2 71 0 167 2 71 0 168 2 71 0 171 2 211 0 172 2 71 0 173 11 149 0 228 11 149 0 229 11 149 0 233 11 153 1 10 18 129 1 11] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 18 133 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 8 65 0 3 18 137 0 253] 
#[1 8 65 0 3 18 141 0 253] 
#[1 8 65 0 3 18 145 0 253] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 18 149 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 4 146 0 1 4 146 0 9 4 146 0 11 4 146 0 22 4 146 0 24 4 146 0 26 4 146 0 41 4 146 0 42 4 146 0 43 4 146 0 44 4 146 0 48 4 146 0 53 4 146 0 54 4 146 0 55 4 146 0 57 4 146 0 58 4 146 0 71 4 146 0 73 4 146 0 75 4 146 0 82 4 146 0 84 4 146 0 86 4 146 0 87 4 146 0 90 4 146 0 91 4 146 0 98 4 146 0 100 4 146 0 101 4 146 0 103 4 146 0 105 4 146 0 106 4 146 0 107 4 146 0 108 4 146 0 109 4 146 0 113 4 146 0 114 4 146 0 121 4 146 0 124 4 146 0 125 4 146 0 130 4 146 0 132 4 146 0 133 4 146 0 134 4 146 0 135 4 146 0 136 4 146 0 137 4 146 0 139 4 146 0 143 4 146 0 147 4 146 0 150 4 146 0 152 4 146 0 153 4 146 0 162 4 146 0 167 4 146 0 168 4 146 0 171 2 87 0 172 4 146 0 173 18 153 0 221] 
#[0 18 157 0 97] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 18 161 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 8 217 0 77 8 237 0 79 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 8 225 0 128 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 8 241 0 180 8 241 0 181 8 241 0 182 8 241 0 183 8 241 0 184 8 241 0 185 8 241 0 186 8 241 0 187 8 241 0 188 8 241 0 189 8 229 0 191 0 249 0 194 8 229 0 195 8 229 0 196 8 229 0 197 8 233 0 236 8 237 0 252 8 241 1 37 8 241 1 38 8 241 1 39 8 241 1 40 8 241 1 41 8 241 1 42 8 241 1 43 8 241 1 44 8 241 1 45 8 241 1 47 8 241 1 49 8 241 1 51 8 241 1 53 8 241 1 54 5 61 1 55 5 61 1 56 5 61 1 57 2 65 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 18 165 1 130 8 241 1 139 8 241 1 141] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 8 217 0 77 8 237 0 79 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 8 225 0 128 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 8 241 0 180 8 241 0 181 8 241 0 182 8 241 0 183 8 241 0 184 8 241 0 185 8 241 0 186 8 241 0 187 8 241 0 188 8 241 0 189 8 229 0 191 0 249 0 194 8 229 0 195 8 229 0 196 8 229 0 197 8 233 0 236 8 237 0 252 8 241 1 37 8 241 1 38 8 241 1 39 8 241 1 40 8 241 1 41 8 241 1 42 8 241 1 43 8 241 1 44 8 241 1 45 8 241 1 47 8 241 1 49 8 241 1 51 8 241 1 53 8 241 1 54 5 61 1 55 5 61 1 56 5 61 1 57 2 65 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 18 169 1 130 8 241 1 139 8 241 1 141] 
#[1 18 173 0 8 9 149 0 159] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 18 177 0 180 18 177 0 181 18 177 0 182 18 177 0 183 18 177 0 184 18 177 0 185 18 177 0 186 18 177 0 187 18 177 0 188 18 177 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 18 177 1 37 18 177 1 38 18 177 1 39 18 177 1 40 18 177 1 41 18 177 1 42 18 177 1 43 18 177 1 44 18 177 1 45 18 177 1 47 18 177 1 49 18 177 1 51 18 177 1 53 18 177 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 18 177 1 139 18 177 1 141] 
#[1 9 157 0 2 9 161 0 5 9 165 0 6 9 169 0 8 9 173 0 10 9 177 0 14 9 181 0 16 9 185 0 17 9 189 0 18 9 193 0 19 9 197 0 20 9 201 0 45 9 205 0 47 9 209 0 52 9 213 0 67 9 217 0 68 9 221 0 70 9 225 0 99 9 229 0 127 18 181 0 146 9 237 0 154 9 241 1 46 9 245 1 48 9 249 1 50] 
#[1 8 2 0 11 8 2 0 80 8 2 0 97 8 2 0 122 8 2 0 162 4 127 0 172 8 2 0 173 8 2 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 18 185 0 180 18 185 0 181 18 185 0 182 18 185 0 183 18 185 0 184 18 185 0 185 18 185 0 186 18 185 0 187 18 185 0 188 18 185 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 18 185 1 37 18 185 1 38 18 185 1 39 18 185 1 40 18 185 1 41 18 185 1 42 18 185 1 43 18 185 1 44 18 185 1 45 18 185 1 47 18 185 1 49 18 185 1 51 18 185 1 53 18 185 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 18 185 1 139 18 185 1 141] 
#[1 8 6 0 11 8 6 0 80 8 6 0 97 8 6 0 122 8 6 0 162 4 131 0 172 8 6 0 173 8 6 1 142] 
#[1 8 10 0 11 8 10 0 80 8 10 0 97 8 10 0 122 8 10 0 162 4 135 0 172 8 10 0 173 8 10 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 18 189 0 180 18 189 0 181 18 189 0 182 18 189 0 183 18 189 0 184 18 189 0 185 18 189 0 186 18 189 0 187 18 189 0 188 18 189 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 18 189 1 37 18 189 1 38 18 189 1 39 18 189 1 40 18 189 1 41 18 189 1 42 18 189 1 43 18 189 1 44 18 189 1 45 18 189 1 47 18 189 1 49 18 189 1 51 18 189 1 53 18 189 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 18 189 1 139 18 189 1 141] 
#[1 8 14 0 11 8 14 0 80 8 14 0 97 8 14 0 122 8 14 0 162 4 139 0 172 8 14 0 173 8 14 1 142] 
#[1 18 193 0 23 18 229 0 49 18 229 0 50 18 229 0 51 18 225 0 60 18 225 0 61 18 229 0 62 18 225 0 65 18 225 1 59 18 229 1 60] 
#[1 8 18 0 11 12 117 0 13 8 18 0 80 8 18 0 97 8 18 0 122 8 18 0 162 8 18 0 172 8 18 0 173 12 121 1 64 8 18 1 142] 
#[1 8 22 0 11 8 22 0 13 8 22 0 80 8 22 0 97 8 22 0 122 8 22 0 162 4 143 0 172 8 22 0 173 8 22 1 142] 
#[1 9 157 0 2 9 161 0 5 9 165 0 6 9 169 0 8 9 173 0 10 4 190 0 11 4 190 0 13 9 177 0 14 9 181 0 16 9 185 0 17 9 189 0 18 9 193 0 19 9 197 0 20 9 201 0 45 9 205 0 47 9 209 0 52 9 213 0 67 9 217 0 68 9 221 0 70 4 190 0 80 4 190 0 97 9 225 0 99 4 190 0 122 9 229 0 127 9 233 0 146 9 237 0 154 4 190 0 162 4 190 0 172 4 190 0 173 9 241 1 46 9 245 1 48 9 249 1 50 18 233 1 65 4 190 1 142] 
#[1 8 26 0 11 12 117 0 13 8 26 0 80 8 26 0 97 8 26 0 122 8 26 0 162 8 26 0 172 8 26 0 173 12 121 1 64 8 26 1 142] 
#[1 8 30 0 11 12 117 0 13 8 30 0 80 8 30 0 97 8 30 0 122 8 30 0 162 8 30 0 172 8 30 0 173 12 121 1 64 8 30 1 142] 
#[1 8 34 0 4 8 34 0 7 7 165 0 172] 
#[0 18 237 0 119] 
#[0 8 38 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 18 241 0 119] 
#[1 8 42 0 11 8 42 0 80 8 42 0 97 8 42 0 122 8 42 0 162 4 147 0 172 8 42 0 173 8 42 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 18 245 0 180 18 245 0 181 18 245 0 182 18 245 0 183 18 245 0 184 18 245 0 185 18 245 0 186 18 245 0 187 18 245 0 188 18 245 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 18 245 1 37 18 245 1 38 18 245 1 39 18 245 1 40 18 245 1 41 18 245 1 42 18 245 1 43 18 245 1 44 18 245 1 45 18 245 1 47 18 245 1 49 18 245 1 51 18 245 1 53 18 245 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 18 245 1 139 18 245 1 141] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 18 249 0 180 18 249 0 181 18 249 0 182 18 249 0 183 18 249 0 184 18 249 0 185 18 249 0 186 18 249 0 187 18 249 0 188 18 249 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 18 249 1 37 18 249 1 38 18 249 1 39 18 249 1 40 18 249 1 41 18 249 1 42 18 249 1 43 18 249 1 44 18 249 1 45 18 249 1 47 18 249 1 49 18 249 1 51 18 249 1 53 18 249 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 18 249 1 139 18 249 1 141] 
#[0 8 46 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 18 253 0 172] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 19 1 0 191 0 249 0 194 19 1 0 195 19 1 0 196 19 1 0 197] 
#[1 2 119 0 4 4 9 0 5 2 119 0 7 2 123 0 172 19 5 0 228 19 5 0 229 19 5 0 233 19 5 1 1 19 5 1 2] 
#[1 6 198 0 4 6 198 0 7 2 247 0 172 15 73 1 3 19 9 1 4] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 19 13 0 128 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 19 17 0 191 0 249 0 194 19 17 0 195 19 17 0 196 19 17 0 197] 
#[1 2 119 0 4 4 9 0 5 2 119 0 7 2 123 0 172 19 21 0 228 19 21 0 229 19 21 0 233 19 21 1 1 19 21 1 2] 
#[1 6 198 0 4 6 198 0 7 2 247 0 172 15 73 1 3 19 25 1 4] 
#[0 8 50 0 4 0 7 0 172] 
#[0 19 29 0 172] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 19 33 0 191 0 249 0 194 19 33 0 195 19 33 0 196 19 33 0 197] 
#[1 2 119 0 4 4 9 0 5 2 119 0 7 2 123 0 172 19 37 0 228 19 37 0 229 19 37 0 233 19 37 1 1 19 37 1 2] 
#[1 6 198 0 4 6 198 0 7 2 247 0 172 15 73 1 3 19 41 1 4] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 8 217 0 77 10 153 0 79 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 10 137 0 126 10 141 0 128 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 10 149 0 191 0 249 0 194 10 149 0 195 10 149 0 196 10 149 0 197 10 153 0 252 19 45 1 0] 
#[0 8 54 0 1 0 3 0 5 0 9 0 11 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 8 58 0 7 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 19 49 0 11 8 62 0 80 8 62 0 97 8 62 0 122 8 62 0 162 4 151 0 172 8 62 0 173 15 145 0 219 8 62 1 142] 
#[1 0 29 0 1 0 33 0 9 4 146 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 17 141 0 73 0 249 0 75 4 146 0 80 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 4 146 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 4 146 0 122 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 4 146 0 162 0 233 0 167 0 237 0 168 0 241 0 171 4 79 0 172 4 146 0 173 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 17 141 0 201 17 141 0 203 17 141 0 212 19 57 0 221 1 25 0 223 17 141 0 234 1 33 0 235 17 141 0 236 17 141 0 237 17 141 0 238 17 141 0 239 17 141 0 240 17 141 0 241 17 141 0 242 17 141 0 243 17 141 0 247 17 141 0 248 17 141 1 17 17 141 1 18 17 141 1 19 17 141 1 20 17 141 1 21 17 141 1 22 1 101 1 24 17 141 1 25 17 141 1 26 17 141 1 27 17 141 1 28 17 141 1 29 17 141 1 33 17 141 1 36 1 133 1 55 1 133 1 56 1 133 1 57 17 141 1 61 17 141 1 62 17 141 1 63 17 141 1 66 17 141 1 67 17 141 1 68 17 141 1 69 17 141 1 70 17 141 1 71 17 141 1 72 17 141 1 73 17 141 1 74 17 141 1 75 17 141 1 76 17 141 1 77 17 141 1 78 17 141 1 79 17 141 1 80 17 141 1 81 17 141 1 82 17 141 1 83 17 141 1 88 17 141 1 89 1 237 1 90 17 141 1 95 17 141 1 98 17 141 1 99 17 141 1 100 17 141 1 101 17 141 1 102 17 141 1 107 17 141 1 108 17 141 1 109 17 141 1 110 17 141 1 111 17 141 1 112 17 141 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 17 141 1 127 2 89 1 128 2 93 1 129 17 141 1 137 17 141 1 138 17 141 1 140 4 146 1 142] 
#[0 19 61 0 11] 
#[1 0 29 0 1 0 33 0 9 4 146 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 17 141 0 73 0 249 0 75 4 146 0 80 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 4 146 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 4 146 0 122 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 4 146 0 162 0 233 0 167 0 237 0 168 0 241 0 171 4 79 0 172 4 146 0 173 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 17 141 0 201 17 141 0 203 17 141 0 212 19 65 0 221 1 25 0 223 17 141 0 234 1 33 0 235 17 141 0 236 17 141 0 237 17 141 0 238 17 141 0 239 17 141 0 240 17 141 0 241 17 141 0 242 17 141 0 243 17 141 0 247 17 141 0 248 17 141 1 17 17 141 1 18 17 141 1 19 17 141 1 20 17 141 1 21 17 141 1 22 1 101 1 24 17 141 1 25 17 141 1 26 17 141 1 27 17 141 1 28 17 141 1 29 17 141 1 33 17 141 1 36 1 133 1 55 1 133 1 56 1 133 1 57 17 141 1 61 17 141 1 62 17 141 1 63 17 141 1 66 17 141 1 67 17 141 1 68 17 141 1 69 17 141 1 70 17 141 1 71 17 141 1 72 17 141 1 73 17 141 1 74 17 141 1 75 17 141 1 76 17 141 1 77 17 141 1 78 17 141 1 79 17 141 1 80 17 141 1 81 17 141 1 82 17 141 1 83 17 141 1 88 17 141 1 89 1 237 1 90 17 141 1 95 17 141 1 98 17 141 1 99 17 141 1 100 17 141 1 101 17 141 1 102 17 141 1 107 17 141 1 108 17 141 1 109 17 141 1 110 17 141 1 111 17 141 1 112 17 141 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 17 141 1 127 2 89 1 128 2 93 1 129 17 141 1 137 17 141 1 138 17 141 1 140 4 146 1 142] 
#[0 19 69 0 11] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 8 66 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 4 155 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 19 73 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 19 77 0 172] 
#[0 19 81 0 172] 
#[0 19 85 0 172] 
#[0 8 70 0 94 0 96 0 97 0 162] 
#[1 19 89 0 97 3 173 0 162 19 93 0 182] 
#[0 8 74 0 94 0 96 0 97 0 162] 
#[1 0 29 0 1 0 33 0 9 5 226 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 13 49 0 73 0 249 0 75 5 226 0 80 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 5 226 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 5 226 0 122 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 5 226 0 162 0 233 0 167 0 237 0 168 0 241 0 171 2 139 0 172 5 226 0 173 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 13 49 0 201 13 49 0 203 13 49 0 212 19 97 0 218 13 45 0 220 1 25 0 223 13 49 0 234 1 33 0 235 13 49 0 236 13 49 0 237 13 49 0 238 13 49 0 239 13 49 0 240 13 49 0 241 13 49 0 242 13 49 0 243 13 49 0 247 13 49 0 248 13 49 1 17 13 49 1 18 13 49 1 19 13 49 1 20 13 49 1 21 13 49 1 22 1 101 1 24 13 49 1 25 13 49 1 26 13 49 1 27 13 49 1 28 13 49 1 29 13 49 1 33 13 49 1 36 1 133 1 55 1 133 1 56 1 133 1 57 13 49 1 61 13 49 1 62 13 49 1 63 13 49 1 66 13 49 1 67 13 49 1 68 13 49 1 69 13 49 1 70 13 49 1 71 13 49 1 72 13 49 1 73 13 49 1 74 13 49 1 75 13 49 1 76 13 49 1 77 13 49 1 78 13 49 1 79 13 49 1 80 13 49 1 81 13 49 1 82 13 49 1 83 13 49 1 88 13 49 1 89 1 237 1 90 13 49 1 95 13 49 1 98 13 49 1 99 13 49 1 100 13 49 1 101 13 49 1 102 13 49 1 107 13 49 1 108 13 49 1 109 13 49 1 110 13 49 1 111 13 49 1 112 13 49 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 13 49 1 127 2 89 1 128 2 93 1 129 13 49 1 137 13 49 1 138 13 49 1 140 5 226 1 142] 
#[1 0 29 0 1 0 33 0 9 5 226 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 13 49 0 73 0 249 0 75 5 226 0 80 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 5 226 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 5 226 0 122 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 5 226 0 162 0 233 0 167 0 237 0 168 0 241 0 171 2 139 0 172 5 226 0 173 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 13 49 0 201 13 49 0 203 13 49 0 212 19 101 0 218 13 45 0 220 1 25 0 223 13 49 0 234 1 33 0 235 13 49 0 236 13 49 0 237 13 49 0 238 13 49 0 239 13 49 0 240 13 49 0 241 13 49 0 242 13 49 0 243 13 49 0 247 13 49 0 248 13 49 1 17 13 49 1 18 13 49 1 19 13 49 1 20 13 49 1 21 13 49 1 22 1 101 1 24 13 49 1 25 13 49 1 26 13 49 1 27 13 49 1 28 13 49 1 29 13 49 1 33 13 49 1 36 1 133 1 55 1 133 1 56 1 133 1 57 13 49 1 61 13 49 1 62 13 49 1 63 13 49 1 66 13 49 1 67 13 49 1 68 13 49 1 69 13 49 1 70 13 49 1 71 13 49 1 72 13 49 1 73 13 49 1 74 13 49 1 75 13 49 1 76 13 49 1 77 13 49 1 78 13 49 1 79 13 49 1 80 13 49 1 81 13 49 1 82 13 49 1 83 13 49 1 88 13 49 1 89 1 237 1 90 13 49 1 95 13 49 1 98 13 49 1 99 13 49 1 100 13 49 1 101 13 49 1 102 13 49 1 107 13 49 1 108 13 49 1 109 13 49 1 110 13 49 1 111 13 49 1 112 13 49 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 13 49 1 127 2 89 1 128 2 93 1 129 13 49 1 137 13 49 1 138 13 49 1 140 5 226 1 142] 
#[1 0 29 0 1 0 33 0 9 5 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 19 105 0 73 0 249 0 75 5 54 0 80 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 5 54 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 5 54 0 122 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 5 54 0 162 0 233 0 167 0 237 0 168 0 241 0 171 5 54 0 172 5 54 0 173 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 19 105 0 201 19 105 0 203 19 105 0 212 1 25 0 223 19 105 0 234 1 33 0 235 19 105 0 236 19 105 0 237 19 105 0 238 19 105 0 239 19 105 0 240 19 105 0 241 19 105 0 242 19 105 0 243 19 105 0 247 19 105 0 248 19 105 1 17 19 105 1 18 19 105 1 19 19 105 1 20 19 105 1 21 19 105 1 22 1 101 1 24 19 105 1 25 19 105 1 26 19 105 1 27 19 105 1 28 19 105 1 29 19 105 1 33 19 105 1 36 1 133 1 55 1 133 1 56 1 133 1 57 19 105 1 61 19 105 1 62 19 105 1 63 19 105 1 66 19 105 1 67 19 105 1 68 19 105 1 69 19 105 1 70 19 105 1 71 19 105 1 72 19 105 1 73 19 105 1 74 19 105 1 75 19 105 1 76 19 105 1 77 19 105 1 78 19 105 1 79 19 105 1 80 19 105 1 81 19 105 1 82 19 105 1 83 19 105 1 88 19 105 1 89 1 237 1 90 19 105 1 95 19 105 1 98 19 105 1 99 19 105 1 100 19 105 1 101 19 105 1 102 19 105 1 107 19 105 1 108 19 105 1 109 19 105 1 110 19 105 1 111 19 105 1 112 19 105 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 19 105 1 127 2 89 1 128 2 93 1 129 19 105 1 137 19 105 1 138 19 105 1 140 5 54 1 142] 
#[0 8 78 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 8 82 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 0 29 0 1 0 33 0 9 4 146 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 19 113 0 73 0 249 0 75 4 146 0 80 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 4 146 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 4 146 0 122 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 4 146 0 162 0 233 0 167 0 237 0 168 0 241 0 171 4 159 0 172 4 146 0 173 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 19 113 0 201 19 113 0 203 19 113 0 212 19 117 0 221 1 25 0 223 19 113 0 234 1 33 0 235 19 113 0 236 19 113 0 237 19 113 0 238 19 113 0 239 19 113 0 240 19 113 0 241 19 113 0 242 19 113 0 243 19 113 0 247 19 113 0 248 19 113 1 17 19 113 1 18 19 113 1 19 19 113 1 20 19 113 1 21 19 113 1 22 1 101 1 24 19 113 1 25 19 113 1 26 19 113 1 27 19 113 1 28 19 113 1 29 19 113 1 33 19 113 1 36 1 133 1 55 1 133 1 56 1 133 1 57 19 113 1 61 19 113 1 62 19 113 1 63 19 113 1 66 19 113 1 67 19 113 1 68 19 113 1 69 19 113 1 70 19 113 1 71 19 113 1 72 19 113 1 73 19 113 1 74 19 113 1 75 19 113 1 76 19 113 1 77 19 113 1 78 19 113 1 79 19 113 1 80 19 113 1 81 19 113 1 82 19 113 1 83 19 113 1 88 19 113 1 89 1 237 1 90 19 113 1 95 19 113 1 98 19 113 1 99 19 113 1 100 19 113 1 101 19 113 1 102 19 113 1 107 19 113 1 108 19 113 1 109 19 113 1 110 19 113 1 111 19 113 1 112 19 113 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 19 113 1 127 2 89 1 128 2 93 1 129 19 113 1 137 19 113 1 138 19 113 1 140 4 146 1 142] 
#[1 0 29 0 1 0 33 0 9 5 226 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 13 49 0 73 0 249 0 75 5 226 0 80 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 5 226 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 5 226 0 122 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 5 226 0 162 0 233 0 167 0 237 0 168 0 241 0 171 2 139 0 172 5 226 0 173 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 13 49 0 201 13 49 0 203 13 49 0 212 19 121 0 218 13 45 0 220 1 25 0 223 13 49 0 234 1 33 0 235 13 49 0 236 13 49 0 237 13 49 0 238 13 49 0 239 13 49 0 240 13 49 0 241 13 49 0 242 13 49 0 243 13 49 0 247 13 49 0 248 13 49 1 17 13 49 1 18 13 49 1 19 13 49 1 20 13 49 1 21 13 49 1 22 1 101 1 24 13 49 1 25 13 49 1 26 13 49 1 27 13 49 1 28 13 49 1 29 13 49 1 33 13 49 1 36 1 133 1 55 1 133 1 56 1 133 1 57 13 49 1 61 13 49 1 62 13 49 1 63 13 49 1 66 13 49 1 67 13 49 1 68 13 49 1 69 13 49 1 70 13 49 1 71 13 49 1 72 13 49 1 73 13 49 1 74 13 49 1 75 13 49 1 76 13 49 1 77 13 49 1 78 13 49 1 79 13 49 1 80 13 49 1 81 13 49 1 82 13 49 1 83 13 49 1 88 13 49 1 89 1 237 1 90 13 49 1 95 13 49 1 98 13 49 1 99 13 49 1 100 13 49 1 101 13 49 1 102 13 49 1 107 13 49 1 108 13 49 1 109 13 49 1 110 13 49 1 111 13 49 1 112 13 49 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 13 49 1 127 2 89 1 128 2 93 1 129 13 49 1 137 13 49 1 138 13 49 1 140 5 226 1 142] 
#[1 0 29 0 1 0 33 0 9 5 226 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 13 49 0 73 0 249 0 75 5 226 0 80 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 5 226 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 5 226 0 122 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 5 226 0 162 0 233 0 167 0 237 0 168 0 241 0 171 2 139 0 172 5 226 0 173 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 13 49 0 201 13 49 0 203 13 49 0 212 19 125 0 218 13 45 0 220 1 25 0 223 13 49 0 234 1 33 0 235 13 49 0 236 13 49 0 237 13 49 0 238 13 49 0 239 13 49 0 240 13 49 0 241 13 49 0 242 13 49 0 243 13 49 0 247 13 49 0 248 13 49 1 17 13 49 1 18 13 49 1 19 13 49 1 20 13 49 1 21 13 49 1 22 1 101 1 24 13 49 1 25 13 49 1 26 13 49 1 27 13 49 1 28 13 49 1 29 13 49 1 33 13 49 1 36 1 133 1 55 1 133 1 56 1 133 1 57 13 49 1 61 13 49 1 62 13 49 1 63 13 49 1 66 13 49 1 67 13 49 1 68 13 49 1 69 13 49 1 70 13 49 1 71 13 49 1 72 13 49 1 73 13 49 1 74 13 49 1 75 13 49 1 76 13 49 1 77 13 49 1 78 13 49 1 79 13 49 1 80 13 49 1 81 13 49 1 82 13 49 1 83 13 49 1 88 13 49 1 89 1 237 1 90 13 49 1 95 13 49 1 98 13 49 1 99 13 49 1 100 13 49 1 101 13 49 1 102 13 49 1 107 13 49 1 108 13 49 1 109 13 49 1 110 13 49 1 111 13 49 1 112 13 49 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 13 49 1 127 2 89 1 128 2 93 1 129 13 49 1 137 13 49 1 138 13 49 1 140 5 226 1 142] 
#[1 0 29 0 1 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 19 129 0 94 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 19 141 0 180 19 141 0 181 19 141 0 182 19 141 0 183 19 141 0 184 19 141 0 185 19 141 0 186 19 141 0 187 19 141 0 188 19 141 0 189 19 137 0 191 0 249 0 194 19 137 0 195 19 137 0 196 19 137 0 197 1 133 1 55 1 133 1 56 1 133 1 57 19 141 1 91 4 149 1 122 2 77 1 123 19 145 1 124 2 77 1 125 2 89 1 128 5 73 1 129 19 141 1 139 19 141 1 141] 
#[0 19 153 0 80] 
#[0 19 157 0 172] 
#[0 19 161 0 172] 
#[0 8 86 0 80 0 97 0 162] 
#[0 8 90 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 3 173 0 162 19 165 0 172 19 169 0 182] 
#[0 19 173 0 5] 
#[0 19 177 0 153] 
#[1 8 94 0 1 8 94 0 3 8 94 0 4 8 94 0 5 8 94 0 7 8 94 0 9 8 94 0 11 8 94 0 22 8 94 0 24 8 94 0 26 8 94 0 27 8 94 0 28 8 94 0 29 8 94 0 30 8 94 0 31 8 94 0 32 8 94 0 33 8 94 0 34 8 94 0 35 8 94 0 36 8 94 0 37 8 94 0 38 8 94 0 39 8 94 0 40 8 94 0 41 8 94 0 42 8 94 0 43 8 94 0 44 8 94 0 48 8 94 0 53 8 94 0 54 8 94 0 55 8 94 0 57 8 94 0 58 8 94 0 71 8 94 0 73 8 94 0 74 8 94 0 75 8 94 0 80 8 94 0 82 8 94 0 84 8 94 0 86 8 94 0 87 8 94 0 89 8 94 0 90 8 94 0 91 8 94 0 97 8 94 0 98 8 94 0 100 8 94 0 101 8 94 0 103 8 94 0 104 8 94 0 105 8 94 0 106 8 94 0 107 8 94 0 108 8 94 0 109 8 94 0 110 8 94 0 113 8 94 0 114 8 94 0 121 8 94 0 122 8 94 0 124 8 94 0 125 8 94 0 130 8 94 0 131 8 94 0 132 8 94 0 133 8 94 0 134 8 94 0 135 8 94 0 136 8 94 0 137 8 94 0 139 8 94 0 142 8 94 0 143 8 94 0 147 8 94 0 150 8 94 0 152 8 94 0 153 8 94 0 162 8 94 0 167 8 94 0 168 8 94 0 171 4 163 0 172 8 94 0 173 8 94 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 19 181 0 180 19 181 0 181 19 181 0 182 19 181 0 183 19 181 0 184 19 181 0 185 19 181 0 186 19 181 0 187 19 181 0 188 19 181 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 19 181 1 37 19 181 1 38 19 181 1 39 19 181 1 40 19 181 1 41 19 181 1 42 19 181 1 43 19 181 1 44 19 181 1 45 19 181 1 47 19 181 1 49 19 181 1 51 19 181 1 53 19 181 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 19 181 1 139 19 181 1 141] 
#[1 8 98 0 1 8 98 0 3 8 98 0 4 8 98 0 5 8 98 0 7 8 98 0 9 8 98 0 11 8 98 0 22 8 98 0 24 8 98 0 26 8 98 0 27 8 98 0 28 8 98 0 29 8 98 0 30 8 98 0 31 8 98 0 32 8 98 0 33 8 98 0 34 8 98 0 35 8 98 0 36 8 98 0 37 8 98 0 38 8 98 0 39 8 98 0 40 8 98 0 41 8 98 0 42 8 98 0 43 8 98 0 44 8 98 0 48 8 98 0 53 8 98 0 54 8 98 0 55 8 98 0 57 8 98 0 58 8 98 0 71 8 98 0 73 8 98 0 74 8 98 0 75 8 98 0 80 8 98 0 82 8 98 0 84 8 98 0 86 8 98 0 87 8 98 0 89 8 98 0 90 8 98 0 91 8 98 0 97 8 98 0 98 8 98 0 100 8 98 0 101 8 98 0 103 8 98 0 104 8 98 0 105 8 98 0 106 8 98 0 107 8 98 0 108 8 98 0 109 8 98 0 110 8 98 0 113 8 98 0 114 8 98 0 121 8 98 0 122 8 98 0 124 8 98 0 125 8 98 0 130 8 98 0 131 8 98 0 132 8 98 0 133 8 98 0 134 8 98 0 135 8 98 0 136 8 98 0 137 8 98 0 139 8 98 0 142 8 98 0 143 8 98 0 147 8 98 0 150 8 98 0 152 8 98 0 153 8 98 0 162 8 98 0 167 8 98 0 168 8 98 0 171 4 167 0 172 8 98 0 173 8 98 1 142] 
#[0 19 185 0 172] 
#[0 19 189 0 172] 
#[1 4 171 0 1 4 171 0 3 4 171 0 4 4 171 0 5 4 171 0 7 4 171 0 9 4 171 0 11 4 171 0 13 4 171 0 22 4 171 0 24 4 171 0 26 4 171 0 27 4 171 0 28 4 171 0 29 4 171 0 30 4 171 0 31 4 171 0 32 4 171 0 33 4 171 0 34 4 171 0 35 4 171 0 36 4 171 0 37 4 171 0 38 4 171 0 39 4 171 0 40 4 171 0 41 4 171 0 42 4 171 0 43 4 171 0 44 4 171 0 48 4 171 0 53 4 171 0 54 4 171 0 55 4 171 0 57 4 171 0 58 4 171 0 71 4 171 0 73 4 171 0 74 4 171 0 75 4 171 0 80 4 171 0 82 4 171 0 84 4 171 0 86 4 171 0 87 4 171 0 89 4 171 0 90 4 171 0 91 4 171 0 97 4 171 0 98 4 171 0 100 4 171 0 101 4 171 0 103 4 171 0 104 4 171 0 105 4 171 0 106 4 171 0 107 4 171 0 108 4 171 0 109 4 171 0 110 4 171 0 113 4 171 0 114 4 171 0 119 4 171 0 121 4 171 0 122 4 171 0 124 4 171 0 125 4 171 0 130 4 171 0 131 4 171 0 132 4 171 0 133 4 171 0 134 4 171 0 135 4 171 0 136 4 171 0 137 4 171 0 139 4 171 0 142 4 171 0 143 4 171 0 147 4 171 0 150 4 171 0 151 4 171 0 152 4 171 0 153 4 171 0 162 4 171 0 167 4 171 0 168 4 171 0 171 4 175 0 172 4 171 0 173 4 171 1 142] 
#[0 8 102 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 8 106 0 1 8 106 0 3 8 106 0 4 8 106 0 5 8 106 0 7 8 106 0 9 8 106 0 11 8 106 0 13 8 106 0 22 8 106 0 24 8 106 0 26 8 106 0 27 8 106 0 28 8 106 0 29 8 106 0 30 8 106 0 31 8 106 0 32 8 106 0 33 8 106 0 34 8 106 0 35 8 106 0 36 8 106 0 37 8 106 0 38 8 106 0 39 8 106 0 40 8 106 0 41 8 106 0 42 8 106 0 43 8 106 0 44 8 106 0 48 8 106 0 53 8 106 0 54 8 106 0 55 8 106 0 57 8 106 0 58 8 106 0 71 8 106 0 73 8 106 0 74 8 106 0 75 8 106 0 80 8 106 0 82 8 106 0 84 8 106 0 86 8 106 0 87 8 106 0 89 8 106 0 90 8 106 0 91 8 106 0 97 8 106 0 98 8 106 0 100 8 106 0 101 8 106 0 103 8 106 0 104 8 106 0 105 8 106 0 106 8 106 0 107 8 106 0 108 8 106 0 109 8 106 0 110 8 106 0 113 8 106 0 114 8 106 0 119 8 106 0 121 8 106 0 122 8 106 0 124 8 106 0 125 8 106 0 130 8 106 0 131 8 106 0 132 8 106 0 133 8 106 0 134 8 106 0 135 8 106 0 136 8 106 0 137 8 106 0 139 8 106 0 142 8 106 0 143 8 106 0 147 8 106 0 150 8 106 0 151 8 106 0 152 8 106 0 153 8 106 0 162 8 106 0 167 8 106 0 168 8 106 0 171 4 179 0 172 8 106 0 173 8 106 1 142] 
#[1 4 205 0 165 19 193 0 187] 
#[1 4 205 0 165 19 197 0 187] 
#[0 19 201 0 97] 
#[0 19 205 0 172] 
#[1 4 183 0 1 4 183 0 3 4 183 0 9 4 183 0 11 4 183 0 22 4 183 0 24 4 183 0 26 4 183 0 41 4 183 0 42 4 183 0 43 4 183 0 44 4 183 0 48 4 183 0 53 4 183 0 54 4 183 0 55 4 183 0 57 4 183 0 58 4 183 0 71 4 183 0 73 4 183 0 75 4 183 0 82 4 183 0 84 4 183 0 86 4 183 0 87 4 183 0 90 4 183 0 91 4 183 0 98 4 183 0 100 4 183 0 101 4 183 0 103 4 183 0 105 4 183 0 106 4 183 0 107 4 183 0 108 4 183 0 109 4 183 0 113 4 183 0 114 4 183 0 121 4 183 0 124 4 183 0 125 4 183 0 130 4 183 0 132 4 183 0 133 4 183 0 134 4 183 0 135 4 183 0 136 4 183 0 137 4 183 0 139 4 183 0 143 4 183 0 147 4 183 0 150 4 183 0 152 4 183 0 153 4 183 0 162 4 183 0 167 4 183 0 168 4 183 0 171 4 187 0 172 4 183 0 173] 
#[0 19 209 0 172] 
#[0 19 213 0 104] 
#[0 19 217 0 172] 
#[0 19 221 0 97] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 19 225 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 19 229 0 172] 
#[0 19 233 0 172] 
#[0 19 237 0 142] 
#[0 19 241 0 172] 
#[0 8 110 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 19 245 0 142] 
#[0 19 249 0 115] 
#[0 19 253 0 115] 
#[1 2 71 0 1 0 142 0 3 13 217 0 5 2 71 0 9 2 71 0 11 2 71 0 22 6 177 0 23 2 71 0 24 2 71 0 26 2 71 0 41 2 71 0 42 2 71 0 43 2 71 0 44 2 71 0 48 2 71 0 53 2 71 0 54 2 71 0 55 2 71 0 57 2 71 0 58 2 71 0 71 2 71 0 73 2 71 0 75 2 71 0 82 2 71 0 84 2 71 0 86 2 71 0 87 2 71 0 90 2 71 0 91 2 71 0 98 2 71 0 100 2 71 0 101 2 71 0 103 2 71 0 105 2 71 0 106 2 71 0 107 2 71 0 108 2 71 0 109 2 71 0 113 2 71 0 114 2 71 0 121 2 71 0 124 2 71 0 125 2 71 0 130 2 71 0 132 2 71 0 133 2 71 0 134 2 71 0 135 2 71 0 136 2 71 0 137 2 71 0 139 2 71 0 143 2 71 0 147 2 71 0 150 2 71 0 152 2 71 0 153 2 71 0 162 2 71 0 167 2 71 0 168 2 71 0 171 2 211 0 172 2 71 0 173 11 149 0 228 11 149 0 229 11 149 0 233 11 153 1 10 20 1 1 11] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 20 5 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 20 9 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 20 13 0 97] 
#[1 0 29 0 1 0 142 0 3 4 9 0 5 3 31 0 9 3 35 0 11 3 39 0 22 3 43 0 24 3 47 0 26 3 51 0 41 3 55 0 42 3 59 0 43 3 63 0 44 3 67 0 48 3 71 0 53 3 75 0 54 3 79 0 55 3 83 0 57 3 87 0 58 3 91 0 71 3 95 0 73 3 99 0 75 3 103 0 82 3 107 0 84 3 111 0 86 3 115 0 87 3 119 0 90 3 123 0 91 3 127 0 98 3 131 0 100 3 135 0 101 3 139 0 103 3 143 0 105 3 147 0 106 3 151 0 107 3 155 0 108 3 159 0 109 3 163 0 113 3 167 0 114 3 171 0 121 3 175 0 124 3 179 0 125 3 183 0 130 3 187 0 132 3 191 0 133 3 195 0 134 3 199 0 135 3 203 0 136 3 207 0 137 3 211 0 139 3 215 0 143 3 219 0 147 3 223 0 150 3 227 0 152 3 231 0 153 3 235 0 162 3 239 0 167 3 243 0 168 3 247 0 171 3 251 0 172 3 35 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 20 17 0 213 3 193 0 215 1 25 0 223 20 21 0 228 20 21 0 229 20 21 0 233 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 20 25 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 20 29 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 20 33 0 97] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 20 37 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 20 41 0 172] 
#[0 20 45 0 97] 
#[1 8 65 0 3 20 49 0 253] 
#[1 2 71 0 1 0 142 0 3 4 9 0 5 2 71 0 9 2 71 0 11 2 71 0 22 2 71 0 24 2 71 0 26 2 71 0 41 2 71 0 42 2 71 0 43 2 71 0 44 2 71 0 48 2 71 0 53 2 71 0 54 2 71 0 55 2 71 0 57 2 71 0 58 2 71 0 71 2 71 0 73 2 71 0 75 2 71 0 82 2 71 0 84 2 71 0 86 2 71 0 87 2 71 0 90 2 71 0 91 2 71 0 98 2 71 0 100 2 71 0 101 2 71 0 103 2 71 0 105 2 71 0 106 2 71 0 107 2 71 0 108 2 71 0 109 2 71 0 113 2 71 0 114 2 71 0 121 2 71 0 124 2 71 0 125 2 71 0 130 2 71 0 132 2 71 0 133 2 71 0 134 2 71 0 135 2 71 0 136 2 71 0 137 2 71 0 139 2 71 0 143 2 71 0 147 2 71 0 150 2 71 0 152 2 71 0 153 2 71 0 162 2 71 0 167 2 71 0 168 2 71 0 171 4 191 0 172 2 71 0 173 11 149 0 228 11 149 0 229 11 149 0 233 11 153 1 10 20 57 1 11] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 20 61 0 191 0 249 0 194 20 61 0 195 20 61 0 196 20 61 0 197] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 20 65 0 191 0 249 0 194 20 65 0 195 20 65 0 196 20 65 0 197] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 20 69 0 191 0 249 0 194 20 69 0 195 20 69 0 196 20 69 0 197] 
#[1 2 79 0 1 8 65 0 3 2 79 0 9 2 79 0 11 2 79 0 22 2 79 0 24 2 79 0 26 2 79 0 41 2 79 0 42 2 79 0 43 2 79 0 44 2 79 0 48 2 79 0 53 2 79 0 54 2 79 0 55 2 79 0 57 2 79 0 58 2 79 0 71 2 79 0 73 2 79 0 75 2 79 0 82 2 79 0 84 2 79 0 86 2 79 0 87 2 79 0 90 2 79 0 91 2 79 0 98 2 79 0 100 2 79 0 101 2 79 0 103 2 79 0 105 2 79 0 106 2 79 0 107 2 79 0 108 2 79 0 109 2 79 0 113 2 79 0 114 2 79 0 121 2 79 0 124 2 79 0 125 2 79 0 130 2 79 0 132 2 79 0 133 2 79 0 134 2 79 0 135 2 79 0 136 2 79 0 137 2 79 0 139 2 79 0 143 2 79 0 147 2 79 0 150 2 79 0 152 2 79 0 153 2 79 0 162 2 79 0 167 2 79 0 168 2 79 0 171 2 83 0 172 2 79 0 173 20 73 0 221 20 77 0 253] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 20 81 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 4 146 0 1 4 146 0 9 4 146 0 11 4 146 0 22 4 146 0 24 4 146 0 26 4 146 0 41 4 146 0 42 4 146 0 43 4 146 0 44 4 146 0 48 4 146 0 53 4 146 0 54 4 146 0 55 4 146 0 57 4 146 0 58 4 146 0 71 4 146 0 73 4 146 0 75 4 146 0 82 4 146 0 84 4 146 0 86 4 146 0 87 4 146 0 90 4 146 0 91 4 146 0 98 4 146 0 100 4 146 0 101 4 146 0 103 4 146 0 105 4 146 0 106 4 146 0 107 4 146 0 108 4 146 0 109 4 146 0 113 4 146 0 114 4 146 0 121 4 146 0 124 4 146 0 125 4 146 0 130 4 146 0 132 4 146 0 133 4 146 0 134 4 146 0 135 4 146 0 136 4 146 0 137 4 146 0 139 4 146 0 143 4 146 0 147 4 146 0 150 4 146 0 152 4 146 0 153 4 146 0 162 4 146 0 167 4 146 0 168 4 146 0 171 2 87 0 172 4 146 0 173 20 85 0 221] 
#[1 2 71 0 1 0 142 0 3 13 217 0 5 2 71 0 9 2 71 0 11 2 71 0 22 6 177 0 23 2 71 0 24 2 71 0 26 2 71 0 41 2 71 0 42 2 71 0 43 2 71 0 44 2 71 0 48 2 71 0 53 2 71 0 54 2 71 0 55 2 71 0 57 2 71 0 58 2 71 0 71 2 71 0 73 2 71 0 75 2 71 0 82 2 71 0 84 2 71 0 86 2 71 0 87 2 71 0 90 2 71 0 91 2 71 0 98 2 71 0 100 2 71 0 101 2 71 0 103 2 71 0 105 2 71 0 106 2 71 0 107 2 71 0 108 2 71 0 109 2 71 0 113 2 71 0 114 2 71 0 121 2 71 0 124 2 71 0 125 2 71 0 130 2 71 0 132 2 71 0 133 2 71 0 134 2 71 0 135 2 71 0 136 2 71 0 137 2 71 0 139 2 71 0 143 2 71 0 147 2 71 0 150 2 71 0 152 2 71 0 153 2 71 0 162 2 71 0 167 2 71 0 168 2 71 0 171 2 211 0 172 2 71 0 173 11 149 0 228 11 149 0 229 11 149 0 233 11 153 1 10 20 89 1 11] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 20 93 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 20 97 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 20 101 0 97] 
#[1 0 29 0 1 0 142 0 3 4 9 0 5 3 31 0 9 3 35 0 11 3 39 0 22 3 43 0 24 3 47 0 26 3 51 0 41 3 55 0 42 3 59 0 43 3 63 0 44 3 67 0 48 3 71 0 53 3 75 0 54 3 79 0 55 3 83 0 57 3 87 0 58 3 91 0 71 3 95 0 73 3 99 0 75 3 103 0 82 3 107 0 84 3 111 0 86 3 115 0 87 3 119 0 90 3 123 0 91 3 127 0 98 3 131 0 100 3 135 0 101 3 139 0 103 3 143 0 105 3 147 0 106 3 151 0 107 3 155 0 108 3 159 0 109 3 163 0 113 3 167 0 114 3 171 0 121 3 175 0 124 3 179 0 125 3 183 0 130 3 187 0 132 3 191 0 133 3 195 0 134 3 199 0 135 3 203 0 136 3 207 0 137 3 211 0 139 3 215 0 143 3 219 0 147 3 223 0 150 3 227 0 152 3 231 0 153 3 235 0 162 3 239 0 167 3 243 0 168 3 247 0 171 3 251 0 172 3 35 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 20 105 0 213 3 193 0 215 1 25 0 223 20 109 0 228 20 109 0 229 20 109 0 233 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 20 113 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 20 117 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 20 121 0 97] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 20 125 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 20 129 0 172] 
#[0 20 133 0 97] 
#[0 8 114 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 8 118 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[1 7 153 0 159 20 137 0 190] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 20 141 0 122 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 4 195 0 172 0 54 0 173 20 149 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 20 153 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 20 157 0 172] 
#[1 8 122 0 11 8 122 0 80 8 122 0 97 8 122 0 122 8 122 0 162 4 199 0 172 8 122 0 173 8 122 1 142] 
#[1 8 126 0 11 8 126 0 80 8 126 0 97 8 126 0 122 8 126 0 162 4 203 0 172 8 126 0 173 8 126 1 142] 
#[0 20 161 0 172] 
#[0 8 130 0 172] 
#[0 8 134 0 172] 
#[0 8 138 0 172] 
#[0 8 142 0 172] 
#[0 8 146 0 172] 
#[0 8 150 0 172] 
#[0 8 154 0 172] 
#[0 20 165 0 172] 
#[0 20 169 0 172] 
#[1 8 158 0 11 12 117 0 13 8 158 0 80 8 158 0 97 8 158 0 122 8 158 0 162 8 158 0 172 8 158 0 173 12 121 1 64 8 158 1 142] 
#[0 8 162 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 8 166 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 8 170 0 11 8 170 0 80 8 170 0 97 8 170 0 122 8 170 0 162 4 207 0 172 8 170 0 173 8 170 1 142] 
#[1 8 174 0 11 8 174 0 80 8 174 0 97 8 174 0 122 8 174 0 162 4 211 0 172 8 174 0 173 8 174 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 20 173 0 180 20 173 0 181 20 173 0 182 20 173 0 183 20 173 0 184 20 173 0 185 20 173 0 186 20 173 0 187 20 173 0 188 20 173 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 20 173 1 37 20 173 1 38 20 173 1 39 20 173 1 40 20 173 1 41 20 173 1 42 20 173 1 43 20 173 1 44 20 173 1 45 20 173 1 47 20 173 1 49 20 173 1 51 20 173 1 53 20 173 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 20 173 1 139 20 173 1 141] 
#[1 7 221 0 3 2 119 0 4 4 9 0 5 2 119 0 7 2 123 0 172 20 181 0 228 20 181 0 229 20 177 0 230 20 181 0 233 20 181 1 1 20 181 1 2] 
#[1 6 198 0 4 6 198 0 7 2 247 0 172 15 73 1 3 20 185 1 4] 
#[0 8 178 0 4 0 7 0 172] 
#[0 20 189 0 172] 
#[1 7 221 0 3 2 119 0 4 4 9 0 5 2 119 0 7 2 123 0 172 20 197 0 228 20 197 0 229 20 193 0 230 20 197 0 233 20 197 1 1 20 197 1 2] 
#[1 6 198 0 4 6 198 0 7 2 247 0 172 15 73 1 3 20 201 1 4] 
#[0 8 182 0 4 0 7 0 172] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 20 205 0 180 20 205 0 181 20 205 0 182 20 205 0 183 20 205 0 184 20 205 0 185 20 205 0 186 20 205 0 187 20 205 0 188 20 205 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 20 205 1 37 20 205 1 38 20 205 1 39 20 205 1 40 20 205 1 41 20 205 1 42 20 205 1 43 20 205 1 44 20 205 1 45 20 205 1 47 20 205 1 49 20 205 1 51 20 205 1 53 20 205 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 20 205 1 139 20 205 1 141] 
#[1 7 221 0 3 2 119 0 4 4 9 0 5 2 119 0 7 2 123 0 172 20 213 0 228 20 213 0 229 20 209 0 230 20 213 0 233 20 213 1 1 20 213 1 2] 
#[1 6 198 0 4 6 198 0 7 2 247 0 172 15 73 1 3 20 217 1 4] 
#[0 8 186 0 4 0 7 0 172] 
#[0 8 190 0 4 0 7 0 172] 
#[1 0 29 0 1 0 33 0 9 4 146 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 17 141 0 73 0 249 0 75 4 146 0 80 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 4 146 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 4 146 0 122 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 4 146 0 162 0 233 0 167 0 237 0 168 0 241 0 171 4 79 0 172 4 146 0 173 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 17 141 0 201 17 141 0 203 17 141 0 212 20 221 0 221 1 25 0 223 17 141 0 234 1 33 0 235 17 141 0 236 17 141 0 237 17 141 0 238 17 141 0 239 17 141 0 240 17 141 0 241 17 141 0 242 17 141 0 243 17 141 0 247 17 141 0 248 17 141 1 17 17 141 1 18 17 141 1 19 17 141 1 20 17 141 1 21 17 141 1 22 1 101 1 24 17 141 1 25 17 141 1 26 17 141 1 27 17 141 1 28 17 141 1 29 17 141 1 33 17 141 1 36 1 133 1 55 1 133 1 56 1 133 1 57 17 141 1 61 17 141 1 62 17 141 1 63 17 141 1 66 17 141 1 67 17 141 1 68 17 141 1 69 17 141 1 70 17 141 1 71 17 141 1 72 17 141 1 73 17 141 1 74 17 141 1 75 17 141 1 76 17 141 1 77 17 141 1 78 17 141 1 79 17 141 1 80 17 141 1 81 17 141 1 82 17 141 1 83 17 141 1 88 17 141 1 89 1 237 1 90 17 141 1 95 17 141 1 98 17 141 1 99 17 141 1 100 17 141 1 101 17 141 1 102 17 141 1 107 17 141 1 108 17 141 1 109 17 141 1 110 17 141 1 111 17 141 1 112 17 141 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 17 141 1 127 2 89 1 128 2 93 1 129 17 141 1 137 17 141 1 138 17 141 1 140 4 146 1 142] 
#[0 20 225 0 11] 
#[0 8 194 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 0 29 0 1 0 33 0 9 4 146 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 19 113 0 73 0 249 0 75 4 146 0 80 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 4 146 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 4 146 0 122 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 4 146 0 162 0 233 0 167 0 237 0 168 0 241 0 171 4 159 0 172 4 146 0 173 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 19 113 0 201 19 113 0 203 19 113 0 212 20 229 0 221 1 25 0 223 19 113 0 234 1 33 0 235 19 113 0 236 19 113 0 237 19 113 0 238 19 113 0 239 19 113 0 240 19 113 0 241 19 113 0 242 19 113 0 243 19 113 0 247 19 113 0 248 19 113 1 17 19 113 1 18 19 113 1 19 19 113 1 20 19 113 1 21 19 113 1 22 1 101 1 24 19 113 1 25 19 113 1 26 19 113 1 27 19 113 1 28 19 113 1 29 19 113 1 33 19 113 1 36 1 133 1 55 1 133 1 56 1 133 1 57 19 113 1 61 19 113 1 62 19 113 1 63 19 113 1 66 19 113 1 67 19 113 1 68 19 113 1 69 19 113 1 70 19 113 1 71 19 113 1 72 19 113 1 73 19 113 1 74 19 113 1 75 19 113 1 76 19 113 1 77 19 113 1 78 19 113 1 79 19 113 1 80 19 113 1 81 19 113 1 82 19 113 1 83 19 113 1 88 19 113 1 89 1 237 1 90 19 113 1 95 19 113 1 98 19 113 1 99 19 113 1 100 19 113 1 101 19 113 1 102 19 113 1 107 19 113 1 108 19 113 1 109 19 113 1 110 19 113 1 111 19 113 1 112 19 113 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 19 113 1 127 2 89 1 128 2 93 1 129 19 113 1 137 19 113 1 138 19 113 1 140 4 146 1 142] 
#[0 8 198 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 0 29 0 1 0 33 0 9 4 146 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 19 113 0 73 0 249 0 75 4 146 0 80 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 4 146 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 4 146 0 122 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 4 146 0 162 0 233 0 167 0 237 0 168 0 241 0 171 4 159 0 172 4 146 0 173 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 19 113 0 201 19 113 0 203 19 113 0 212 20 233 0 221 1 25 0 223 19 113 0 234 1 33 0 235 19 113 0 236 19 113 0 237 19 113 0 238 19 113 0 239 19 113 0 240 19 113 0 241 19 113 0 242 19 113 0 243 19 113 0 247 19 113 0 248 19 113 1 17 19 113 1 18 19 113 1 19 19 113 1 20 19 113 1 21 19 113 1 22 1 101 1 24 19 113 1 25 19 113 1 26 19 113 1 27 19 113 1 28 19 113 1 29 19 113 1 33 19 113 1 36 1 133 1 55 1 133 1 56 1 133 1 57 19 113 1 61 19 113 1 62 19 113 1 63 19 113 1 66 19 113 1 67 19 113 1 68 19 113 1 69 19 113 1 70 19 113 1 71 19 113 1 72 19 113 1 73 19 113 1 74 19 113 1 75 19 113 1 76 19 113 1 77 19 113 1 78 19 113 1 79 19 113 1 80 19 113 1 81 19 113 1 82 19 113 1 83 19 113 1 88 19 113 1 89 1 237 1 90 19 113 1 95 19 113 1 98 19 113 1 99 19 113 1 100 19 113 1 101 19 113 1 102 19 113 1 107 19 113 1 108 19 113 1 109 19 113 1 110 19 113 1 111 19 113 1 112 19 113 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 19 113 1 127 2 89 1 128 2 93 1 129 19 113 1 137 19 113 1 138 19 113 1 140 4 146 1 142] 
#[0 8 202 0 97 0 162] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 20 237 0 180 20 237 0 181 20 237 0 182 20 237 0 183 20 237 0 184 20 237 0 185 20 237 0 186 20 237 0 187 20 237 0 188 20 237 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 20 237 1 37 20 237 1 38 20 237 1 39 20 237 1 40 20 237 1 41 20 237 1 42 20 237 1 43 20 237 1 44 20 237 1 45 20 237 1 47 20 237 1 49 20 237 1 51 20 237 1 53 20 237 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 20 237 1 139 20 237 1 141] 
#[0 20 241 0 109] 
#[1 20 245 0 94 20 249 0 96 20 253 0 97] 
#[0 21 1 0 172] 
#[0 21 5 0 172] 
#[0 8 206 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 8 210 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 8 214 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 0 29 0 1 0 33 0 9 5 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 21 9 0 73 0 249 0 75 5 54 0 80 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 5 54 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 5 54 0 122 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 5 54 0 162 0 233 0 167 0 237 0 168 0 241 0 171 5 54 0 172 5 54 0 173 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 21 9 0 201 21 9 0 203 21 9 0 212 1 25 0 223 21 9 0 234 1 33 0 235 21 9 0 236 21 9 0 237 21 9 0 238 21 9 0 239 21 9 0 240 21 9 0 241 21 9 0 242 21 9 0 243 21 9 0 247 21 9 0 248 21 9 1 17 21 9 1 18 21 9 1 19 21 9 1 20 21 9 1 21 21 9 1 22 1 101 1 24 21 9 1 25 21 9 1 26 21 9 1 27 21 9 1 28 21 9 1 29 21 9 1 33 21 9 1 36 1 133 1 55 1 133 1 56 1 133 1 57 21 9 1 61 21 9 1 62 21 9 1 63 21 9 1 66 21 9 1 67 21 9 1 68 21 9 1 69 21 9 1 70 21 9 1 71 21 9 1 72 21 9 1 73 21 9 1 74 21 9 1 75 21 9 1 76 21 9 1 77 21 9 1 78 21 9 1 79 21 9 1 80 21 9 1 81 21 9 1 82 21 9 1 83 21 9 1 88 21 9 1 89 1 237 1 90 21 9 1 95 21 9 1 98 21 9 1 99 21 9 1 100 21 9 1 101 21 9 1 102 21 9 1 107 21 9 1 108 21 9 1 109 21 9 1 110 21 9 1 111 21 9 1 112 21 9 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 21 9 1 127 2 89 1 128 2 93 1 129 21 9 1 137 21 9 1 138 21 9 1 140 5 54 1 142] 
#[0 8 218 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 8 222 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 8 226 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 8 230 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 8 234 0 1 8 234 0 7 8 234 0 9 8 234 0 11 8 234 0 22 8 234 0 24 8 234 0 26 8 234 0 41 8 234 0 42 8 234 0 43 8 234 0 44 8 234 0 48 8 234 0 53 8 234 0 54 8 234 0 55 8 234 0 57 8 234 0 58 8 234 0 71 8 234 0 73 8 234 0 75 8 234 0 80 8 234 0 82 8 234 0 84 8 234 0 86 8 234 0 87 8 234 0 90 8 234 0 91 8 234 0 97 8 234 0 98 8 234 0 100 8 234 0 101 8 234 0 103 8 234 0 105 8 234 0 106 8 234 0 107 8 234 0 108 8 234 0 109 8 234 0 113 8 234 0 114 8 234 0 121 8 234 0 124 8 234 0 125 8 234 0 130 8 234 0 132 8 234 0 133 8 234 0 134 8 234 0 135 8 234 0 136 8 234 0 137 8 234 0 139 8 234 0 143 8 234 0 147 8 234 0 150 8 234 0 152 8 234 0 153 8 234 0 162 8 234 0 167 8 234 0 168 8 234 0 171 8 234 0 172 8 234 0 173 21 13 1 94] 
#[0 8 238 0 1 0 7 0 9 0 11 0 22 0 24 0 26 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 75 0 80 0 82 0 84 0 86 0 87 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 105 0 106 0 107 0 108 0 109 0 113 0 114 0 121 0 124 0 125 0 130 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 143 0 147 0 150 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173] 
#[1 4 215 0 1 0 134 0 3 8 242 0 7 4 215 0 9 8 242 0 11 8 242 0 22 8 242 0 24 8 242 0 26 8 242 0 41 8 242 0 42 8 242 0 43 8 242 0 44 8 242 0 48 8 242 0 53 8 242 0 54 8 242 0 55 8 242 0 57 8 242 0 58 8 242 0 71 8 242 0 73 8 242 0 75 8 242 0 80 8 242 0 82 8 242 0 84 8 242 0 86 8 242 0 87 8 242 0 90 8 242 0 91 8 242 0 97 8 242 0 98 8 242 0 100 8 242 0 101 8 242 0 103 8 242 0 105 8 242 0 106 8 242 0 107 8 242 0 108 8 242 0 109 8 242 0 113 8 242 0 114 8 242 0 121 8 242 0 124 8 242 0 125 8 242 0 130 8 242 0 132 8 242 0 133 8 242 0 134 8 242 0 135 8 242 0 136 8 242 0 137 8 242 0 139 8 242 0 143 8 242 0 147 8 242 0 150 8 242 0 152 8 242 0 153 8 242 0 162 8 242 0 167 8 242 0 168 8 242 0 171 8 242 0 172 8 242 0 173] 
#[1 8 234 0 1 8 234 0 7 8 234 0 9 8 234 0 11 8 234 0 22 8 234 0 24 8 234 0 26 8 234 0 41 8 234 0 42 8 234 0 43 8 234 0 44 8 234 0 48 8 234 0 53 8 234 0 54 8 234 0 55 8 234 0 57 8 234 0 58 8 234 0 71 8 234 0 73 8 234 0 75 8 234 0 80 8 234 0 82 8 234 0 84 8 234 0 86 8 234 0 87 8 234 0 90 8 234 0 91 8 234 0 97 8 234 0 98 8 234 0 100 8 234 0 101 8 234 0 103 8 234 0 105 8 234 0 106 8 234 0 107 8 234 0 108 8 234 0 109 8 234 0 113 8 234 0 114 8 234 0 121 8 234 0 124 8 234 0 125 8 234 0 130 8 234 0 132 8 234 0 133 8 234 0 134 8 234 0 135 8 234 0 136 8 234 0 137 8 234 0 139 8 234 0 143 8 234 0 147 8 234 0 150 8 234 0 152 8 234 0 153 8 234 0 162 8 234 0 167 8 234 0 168 8 234 0 171 8 234 0 172 8 234 0 173 21 17 1 94] 
#[1 4 219 0 1 1 218 0 3 8 246 0 7 4 219 0 9 8 246 0 11 8 246 0 22 8 246 0 24 8 246 0 26 8 246 0 41 8 246 0 42 8 246 0 43 8 246 0 44 8 246 0 48 8 246 0 53 8 246 0 54 8 246 0 55 8 246 0 57 8 246 0 58 8 246 0 71 8 246 0 73 8 246 0 75 8 246 0 80 8 246 0 82 8 246 0 84 8 246 0 86 8 246 0 87 8 246 0 90 8 246 0 91 8 246 0 97 8 246 0 98 8 246 0 100 8 246 0 101 8 246 0 103 8 246 0 105 8 246 0 106 8 246 0 107 8 246 0 108 8 246 0 109 8 246 0 113 8 246 0 114 8 246 0 121 8 246 0 124 8 246 0 125 8 246 0 130 8 246 0 132 8 246 0 133 8 246 0 134 8 246 0 135 8 246 0 136 8 246 0 137 8 246 0 139 8 246 0 143 8 246 0 147 8 246 0 150 8 246 0 152 8 246 0 153 8 246 0 162 8 246 0 167 8 246 0 168 8 246 0 171 8 246 0 172 8 246 0 173] 
#[0 8 250 0 1 0 7 0 9 0 11 0 22 0 24 0 26 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 75 0 80 0 82 0 84 0 86 0 87 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 105 0 106 0 107 0 108 0 109 0 113 0 114 0 121 0 124 0 125 0 130 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 143 0 147 0 150 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173] 
#[0 21 21 0 172] 
#[0 21 25 0 136] 
#[1 19 153 0 80 21 29 0 97] 
#[1 3 173 0 162 21 33 0 182] 
#[0 8 254 0 22 0 44 0 54 0 57 0 75 0 82 0 86 0 87 0 97 0 105 0 113 0 114 0 121 0 137 0 143 0 150 0 167 0 168 0 171 0 173] 
#[1 3 173 0 162 21 37 0 172 21 41 0 182] 
#[0 9 2 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 9 6 0 1 9 6 0 3 9 6 0 4 9 6 0 5 9 6 0 7 9 6 0 9 9 6 0 11 9 6 0 22 9 6 0 24 9 6 0 26 9 6 0 27 9 6 0 28 9 6 0 29 9 6 0 30 9 6 0 31 9 6 0 32 9 6 0 33 9 6 0 34 9 6 0 35 9 6 0 36 9 6 0 37 9 6 0 38 9 6 0 39 9 6 0 40 9 6 0 41 9 6 0 42 9 6 0 43 9 6 0 44 9 6 0 48 9 6 0 53 9 6 0 54 9 6 0 55 9 6 0 57 9 6 0 58 9 6 0 71 9 6 0 73 9 6 0 74 9 6 0 75 9 6 0 80 9 6 0 82 9 6 0 84 9 6 0 86 9 6 0 87 9 6 0 89 9 6 0 90 9 6 0 91 9 6 0 97 9 6 0 98 9 6 0 100 9 6 0 101 9 6 0 103 9 6 0 104 9 6 0 105 9 6 0 106 9 6 0 107 9 6 0 108 9 6 0 109 9 6 0 110 9 6 0 113 9 6 0 114 9 6 0 121 9 6 0 122 9 6 0 124 9 6 0 125 9 6 0 130 9 6 0 131 9 6 0 132 9 6 0 133 9 6 0 134 9 6 0 135 9 6 0 136 9 6 0 137 9 6 0 139 9 6 0 142 9 6 0 143 9 6 0 147 9 6 0 150 9 6 0 152 9 6 0 153 9 6 0 162 9 6 0 167 9 6 0 168 9 6 0 171 4 223 0 172 9 6 0 173 9 6 1 142] 
#[0 21 45 0 98] 
#[0 21 49 0 147] 
#[1 8 65 0 3 21 53 0 69 21 57 0 172 21 61 0 253] 
#[1 8 65 0 3 21 65 0 69 21 69 0 172 21 73 0 253] 
#[0 21 77 0 172] 
#[0 21 81 0 104] 
#[0 21 85 0 104] 
#[0 9 10 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 21 89 0 131] 
#[0 21 93 0 172] 
#[0 21 97 0 97] 
#[0 21 101 0 131] 
#[0 21 105 0 131] 
#[0 9 14 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 21 109 0 142] 
#[0 9 18 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 21 113 0 172] 
#[0 21 117 0 172] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 21 121 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 21 125 0 97] 
#[0 21 129 0 97] 
#[0 21 133 0 172] 
#[0 21 137 0 97] 
#[1 0 29 0 1 7 221 0 3 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 21 141 0 213 3 193 0 215 1 25 0 223 21 145 0 230 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 21 149 0 97] 
#[0 21 153 0 97] 
#[0 21 157 0 172] 
#[0 21 161 0 97] 
#[0 21 165 0 142] 
#[0 21 169 0 172] 
#[1 2 71 0 1 0 142 0 3 4 9 0 5 2 71 0 9 2 71 0 11 2 71 0 22 2 71 0 24 2 71 0 26 2 71 0 41 2 71 0 42 2 71 0 43 2 71 0 44 2 71 0 48 2 71 0 53 2 71 0 54 2 71 0 55 2 71 0 57 2 71 0 58 2 71 0 71 2 71 0 73 2 71 0 75 2 71 0 82 2 71 0 84 2 71 0 86 2 71 0 87 2 71 0 90 2 71 0 91 2 71 0 98 2 71 0 100 2 71 0 101 2 71 0 103 2 71 0 105 2 71 0 106 2 71 0 107 2 71 0 108 2 71 0 109 2 71 0 113 2 71 0 114 2 71 0 121 2 71 0 124 2 71 0 125 2 71 0 130 2 71 0 132 2 71 0 133 2 71 0 134 2 71 0 135 2 71 0 136 2 71 0 137 2 71 0 139 2 71 0 143 2 71 0 147 2 71 0 150 2 71 0 152 2 71 0 153 2 71 0 162 2 71 0 167 2 71 0 168 2 71 0 171 4 227 0 172 2 71 0 173 11 149 0 228 11 149 0 229 11 149 0 233 11 153 1 10 21 177 1 11] 
#[1 2 71 0 1 0 142 0 3 13 217 0 5 2 71 0 9 2 71 0 11 2 71 0 22 6 177 0 23 2 71 0 24 2 71 0 26 2 71 0 41 2 71 0 42 2 71 0 43 2 71 0 44 2 71 0 48 2 71 0 53 2 71 0 54 2 71 0 55 2 71 0 57 2 71 0 58 2 71 0 71 2 71 0 73 2 71 0 75 2 71 0 82 2 71 0 84 2 71 0 86 2 71 0 87 2 71 0 90 2 71 0 91 2 71 0 98 2 71 0 100 2 71 0 101 2 71 0 103 2 71 0 105 2 71 0 106 2 71 0 107 2 71 0 108 2 71 0 109 2 71 0 113 2 71 0 114 2 71 0 121 2 71 0 124 2 71 0 125 2 71 0 130 2 71 0 132 2 71 0 133 2 71 0 134 2 71 0 135 2 71 0 136 2 71 0 137 2 71 0 139 2 71 0 143 2 71 0 147 2 71 0 150 2 71 0 152 2 71 0 153 2 71 0 162 2 71 0 167 2 71 0 168 2 71 0 171 2 211 0 172 2 71 0 173 11 149 0 228 11 149 0 229 11 149 0 233 11 153 1 10 21 181 1 11] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 21 185 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 8 65 0 3 21 189 0 253] 
#[1 8 65 0 3 21 193 0 253] 
#[1 8 65 0 3 21 197 0 253] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 21 201 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 4 146 0 1 4 146 0 9 4 146 0 11 4 146 0 22 4 146 0 24 4 146 0 26 4 146 0 41 4 146 0 42 4 146 0 43 4 146 0 44 4 146 0 48 4 146 0 53 4 146 0 54 4 146 0 55 4 146 0 57 4 146 0 58 4 146 0 71 4 146 0 73 4 146 0 75 4 146 0 82 4 146 0 84 4 146 0 86 4 146 0 87 4 146 0 90 4 146 0 91 4 146 0 98 4 146 0 100 4 146 0 101 4 146 0 103 4 146 0 105 4 146 0 106 4 146 0 107 4 146 0 108 4 146 0 109 4 146 0 113 4 146 0 114 4 146 0 121 4 146 0 124 4 146 0 125 4 146 0 130 4 146 0 132 4 146 0 133 4 146 0 134 4 146 0 135 4 146 0 136 4 146 0 137 4 146 0 139 4 146 0 143 4 146 0 147 4 146 0 150 4 146 0 152 4 146 0 153 4 146 0 162 4 146 0 167 4 146 0 168 4 146 0 171 2 87 0 172 4 146 0 173 21 205 0 221] 
#[0 21 209 0 97] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 21 213 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 21 217 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 21 221 0 97] 
#[0 21 225 0 97] 
#[0 21 229 0 172] 
#[0 21 233 0 97] 
#[1 0 29 0 1 7 221 0 3 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 21 237 0 213 3 193 0 215 1 25 0 223 21 241 0 230 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 21 245 0 97] 
#[0 21 249 0 97] 
#[0 21 253 0 172] 
#[0 22 1 0 97] 
#[0 22 5 0 142] 
#[0 22 9 0 172] 
#[1 22 13 0 8 9 149 0 159] 
#[1 9 22 0 11 9 22 0 80 9 22 0 97 9 22 0 122 9 22 0 162 4 231 0 172 9 22 0 173 9 22 1 142] 
#[1 0 29 0 1 9 157 0 2 9 161 0 5 9 165 0 6 9 169 0 8 0 33 0 9 9 173 0 10 0 54 0 11 9 177 0 14 9 181 0 16 9 185 0 17 9 189 0 18 9 193 0 19 9 197 0 20 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 9 201 0 45 9 205 0 47 0 65 0 48 9 209 0 52 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 9 213 0 67 9 217 0 68 9 221 0 70 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 9 225 0 99 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 22 21 0 122 0 173 0 124 0 177 0 125 9 229 0 127 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 9 233 0 146 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 9 237 0 154 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 22 25 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 22 29 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 9 241 1 46 9 245 1 48 9 249 1 50 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 22 33 0 172] 
#[1 22 37 0 122 3 173 0 162 22 41 0 182] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 22 45 0 180 22 45 0 181 22 45 0 182 22 45 0 183 22 45 0 184 22 45 0 185 22 45 0 186 22 45 0 187 22 45 0 188 22 45 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 22 45 1 37 22 45 1 38 22 45 1 39 22 45 1 40 22 45 1 41 22 45 1 42 22 45 1 43 22 45 1 44 22 45 1 45 22 45 1 47 22 45 1 49 22 45 1 51 22 45 1 53 22 45 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 22 45 1 139 22 45 1 141] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 22 49 0 180 22 49 0 181 22 49 0 182 22 49 0 183 22 49 0 184 22 49 0 185 22 49 0 186 22 49 0 187 22 49 0 188 22 49 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 22 49 1 37 22 49 1 38 22 49 1 39 22 49 1 40 22 49 1 41 22 49 1 42 22 49 1 43 22 49 1 44 22 49 1 45 22 49 1 47 22 49 1 49 22 49 1 51 22 49 1 53 22 49 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 22 49 1 139 22 49 1 141] 
#[1 22 53 0 23 22 57 0 49 22 57 0 50 22 57 0 51 22 57 0 62 22 57 1 60] 
#[0 22 61 0 23] 
#[1 9 26 0 22 9 26 0 44 9 26 0 54 9 26 0 57 9 26 0 75 9 26 0 82 9 26 0 86 9 26 0 87 9 26 0 97 9 26 0 105 9 26 0 113 9 26 0 114 9 26 0 121 9 26 0 137 9 26 0 143 9 26 0 150 9 26 0 167 9 26 0 168 9 26 0 171 7 165 0 172 9 26 0 173] 
#[1 2 119 0 4 4 9 0 5 2 119 0 7 2 123 0 172 22 65 0 228 22 65 0 229 22 65 0 233 22 65 1 1 22 65 1 2] 
#[1 6 198 0 4 6 198 0 7 2 247 0 172 15 73 1 3 22 69 1 4] 
#[0 9 30 0 4 0 7 0 172] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 22 73 0 191 0 249 0 194 22 73 0 195 22 73 0 196 22 73 0 197] 
#[1 2 119 0 4 4 9 0 5 2 119 0 7 2 123 0 172 22 77 0 228 22 77 0 229 22 77 0 233 22 77 1 1 22 77 1 2] 
#[1 6 198 0 4 6 198 0 7 2 247 0 172 15 73 1 3 22 81 1 4] 
#[0 9 34 0 4 0 7 0 172] 
#[1 9 38 0 4 9 38 0 7 4 235 0 172] 
#[1 2 119 0 4 4 9 0 5 2 119 0 7 2 123 0 172 22 85 0 228 22 85 0 229 22 85 0 233 22 85 1 1 22 85 1 2] 
#[1 6 198 0 4 6 198 0 7 2 247 0 172 15 73 1 3 22 89 1 4] 
#[0 9 42 0 4 0 7 0 172] 
#[0 9 46 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 0 29 0 1 0 33 0 9 4 146 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 19 113 0 73 0 249 0 75 4 146 0 80 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 4 146 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 4 146 0 122 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 4 146 0 162 0 233 0 167 0 237 0 168 0 241 0 171 4 159 0 172 4 146 0 173 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 19 113 0 201 19 113 0 203 19 113 0 212 22 93 0 221 1 25 0 223 19 113 0 234 1 33 0 235 19 113 0 236 19 113 0 237 19 113 0 238 19 113 0 239 19 113 0 240 19 113 0 241 19 113 0 242 19 113 0 243 19 113 0 247 19 113 0 248 19 113 1 17 19 113 1 18 19 113 1 19 19 113 1 20 19 113 1 21 19 113 1 22 1 101 1 24 19 113 1 25 19 113 1 26 19 113 1 27 19 113 1 28 19 113 1 29 19 113 1 33 19 113 1 36 1 133 1 55 1 133 1 56 1 133 1 57 19 113 1 61 19 113 1 62 19 113 1 63 19 113 1 66 19 113 1 67 19 113 1 68 19 113 1 69 19 113 1 70 19 113 1 71 19 113 1 72 19 113 1 73 19 113 1 74 19 113 1 75 19 113 1 76 19 113 1 77 19 113 1 78 19 113 1 79 19 113 1 80 19 113 1 81 19 113 1 82 19 113 1 83 19 113 1 88 19 113 1 89 1 237 1 90 19 113 1 95 19 113 1 98 19 113 1 99 19 113 1 100 19 113 1 101 19 113 1 102 19 113 1 107 19 113 1 108 19 113 1 109 19 113 1 110 19 113 1 111 19 113 1 112 19 113 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 19 113 1 127 2 89 1 128 2 93 1 129 19 113 1 137 19 113 1 138 19 113 1 140 4 146 1 142] 
#[0 9 50 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 9 54 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 22 97 0 172] 
#[0 9 58 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 9 62 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 4 239 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 22 101 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 22 105 0 172] 
#[0 22 109 0 172] 
#[0 22 113 0 109] 
#[0 22 117 0 97] 
#[0 9 66 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 0 29 0 1 22 121 0 7 0 33 0 9 4 243 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 13 33 0 73 0 249 0 75 4 247 0 80 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 4 247 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 4 251 0 162 0 233 0 167 0 237 0 168 0 241 0 171 2 135 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 13 33 0 201 13 33 0 203 13 33 0 212 22 129 0 213 3 193 0 215 22 133 0 218 13 45 0 220 1 25 0 223 13 33 0 234 1 33 0 235 13 33 0 236 13 33 0 237 13 33 0 238 13 33 0 239 13 33 0 240 13 33 0 241 13 33 0 242 13 33 0 243 13 33 0 247 13 33 0 248 13 33 1 17 13 33 1 18 13 33 1 19 13 33 1 20 13 33 1 21 13 33 1 22 1 101 1 24 13 33 1 25 13 33 1 26 13 33 1 27 13 33 1 28 13 33 1 29 13 33 1 33 13 33 1 36 1 133 1 55 1 133 1 56 1 133 1 57 13 33 1 61 13 33 1 62 13 33 1 63 13 33 1 66 13 33 1 67 13 33 1 68 13 33 1 69 13 33 1 70 13 33 1 71 13 33 1 72 13 33 1 73 13 33 1 74 13 33 1 75 13 33 1 76 13 33 1 77 13 33 1 78 13 33 1 79 13 33 1 80 13 33 1 81 13 33 1 82 13 33 1 83 13 33 1 88 13 33 1 89 1 237 1 90 22 137 1 93 13 33 1 95 13 33 1 98 13 33 1 99 13 33 1 100 13 33 1 101 13 33 1 102 13 33 1 107 13 33 1 108 13 33 1 109 13 33 1 110 13 33 1 111 13 33 1 112 13 33 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 13 33 1 127 2 89 1 128 2 93 1 129 13 33 1 137 13 33 1 138 13 33 1 140] 
#[1 0 29 0 1 22 121 0 7 0 33 0 9 4 255 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 13 33 0 73 0 249 0 75 5 3 0 80 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 5 3 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 5 7 0 162 0 233 0 167 0 237 0 168 0 241 0 171 2 135 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 13 33 0 201 13 33 0 203 13 33 0 212 22 145 0 213 3 193 0 215 22 149 0 218 13 45 0 220 1 25 0 223 13 33 0 234 1 33 0 235 13 33 0 236 13 33 0 237 13 33 0 238 13 33 0 239 13 33 0 240 13 33 0 241 13 33 0 242 13 33 0 243 13 33 0 247 13 33 0 248 13 33 1 17 13 33 1 18 13 33 1 19 13 33 1 20 13 33 1 21 13 33 1 22 1 101 1 24 13 33 1 25 13 33 1 26 13 33 1 27 13 33 1 28 13 33 1 29 13 33 1 33 13 33 1 36 1 133 1 55 1 133 1 56 1 133 1 57 13 33 1 61 13 33 1 62 13 33 1 63 13 33 1 66 13 33 1 67 13 33 1 68 13 33 1 69 13 33 1 70 13 33 1 71 13 33 1 72 13 33 1 73 13 33 1 74 13 33 1 75 13 33 1 76 13 33 1 77 13 33 1 78 13 33 1 79 13 33 1 80 13 33 1 81 13 33 1 82 13 33 1 83 13 33 1 88 13 33 1 89 1 237 1 90 22 137 1 93 13 33 1 95 13 33 1 98 13 33 1 99 13 33 1 100 13 33 1 101 13 33 1 102 13 33 1 107 13 33 1 108 13 33 1 109 13 33 1 110 13 33 1 111 13 33 1 112 13 33 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 13 33 1 127 2 89 1 128 2 93 1 129 13 33 1 137 13 33 1 138 13 33 1 140] 
#[1 0 29 0 1 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 22 153 0 94 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 22 157 0 180 22 157 0 181 22 157 0 182 22 157 0 183 22 157 0 184 22 157 0 185 22 157 0 186 22 157 0 187 22 157 0 188 22 157 0 189 19 137 0 191 0 249 0 194 19 137 0 195 19 137 0 196 19 137 0 197 1 133 1 55 1 133 1 56 1 133 1 57 22 157 1 91 4 149 1 122 2 77 1 123 19 145 1 124 2 77 1 125 2 89 1 128 5 73 1 129 22 157 1 139 22 157 1 141] 
#[0 9 78 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 22 161 0 172] 
#[0 9 82 0 22 0 44 0 54 0 57 0 75 0 82 0 86 0 87 0 97 0 105 0 113 0 114 0 121 0 137 0 143 0 150 0 167 0 168 0 171 0 173] 
#[1 3 173 0 162 22 165 0 182] 
#[0 9 86 0 22 0 44 0 54 0 57 0 75 0 82 0 86 0 87 0 97 0 105 0 113 0 114 0 121 0 137 0 143 0 150 0 167 0 168 0 171 0 173] 
#[0 9 90 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 9 94 0 11 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 97 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 122 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 22 169 0 172] 
#[1 8 65 0 3 22 173 0 69 22 177 0 253] 
#[1 4 9 0 5 0 142 0 22 0 142 0 27 0 142 0 28 0 142 0 29 0 142 0 30 0 142 0 31 0 142 0 32 0 142 0 33 0 142 0 34 0 142 0 35 0 142 0 36 0 142 0 37 0 142 0 38 0 142 0 39 0 142 0 40 0 142 0 44 0 142 0 54 0 142 0 57 0 142 0 71 0 142 0 74 0 142 0 75 0 142 0 82 0 142 0 84 0 142 0 86 0 142 0 87 0 142 0 89 0 142 0 90 0 142 0 98 0 142 0 100 0 142 0 103 0 142 0 104 0 142 0 105 0 142 0 106 0 142 0 110 0 142 0 113 0 142 0 114 0 142 0 121 0 142 0 125 0 142 0 130 0 142 0 131 0 142 0 132 0 142 0 133 0 142 0 137 0 142 0 139 0 142 0 142 0 142 0 143 0 142 0 147 0 142 0 150 0 142 0 167 0 142 0 168 0 142 0 171 7 225 0 172 0 142 0 173 22 181 0 228 22 181 0 229 22 181 0 233 0 142 1 142] 
#[0 22 185 0 172] 
#[1 8 65 0 3 22 189 0 69 22 193 0 253] 
#[0 9 98 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 22 197 0 104] 
#[0 9 102 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 9 106 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 9 110 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 22 201 0 131] 
#[0 22 205 0 172] 
#[0 9 114 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 9 118 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 9 122 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[1 4 205 0 165 22 209 0 187] 
#[1 4 205 0 165 22 213 0 187] 
#[0 22 217 0 97] 
#[0 22 221 0 172] 
#[0 22 225 0 172] 
#[0 22 229 0 104] 
#[0 22 233 0 172] 
#[0 22 237 0 97] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 22 241 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 22 245 0 172] 
#[0 22 249 0 172] 
#[0 22 253 0 142] 
#[0 23 1 0 172] 
#[0 9 126 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 23 5 0 142] 
#[1 2 71 0 1 0 142 0 3 13 217 0 5 2 71 0 9 2 71 0 11 2 71 0 22 6 177 0 23 2 71 0 24 2 71 0 26 2 71 0 41 2 71 0 42 2 71 0 43 2 71 0 44 2 71 0 48 2 71 0 53 2 71 0 54 2 71 0 55 2 71 0 57 2 71 0 58 2 71 0 71 2 71 0 73 2 71 0 75 2 71 0 82 2 71 0 84 2 71 0 86 2 71 0 87 2 71 0 90 2 71 0 91 2 71 0 98 2 71 0 100 2 71 0 101 2 71 0 103 2 71 0 105 2 71 0 106 2 71 0 107 2 71 0 108 2 71 0 109 2 71 0 113 2 71 0 114 2 71 0 121 2 71 0 124 2 71 0 125 2 71 0 130 2 71 0 132 2 71 0 133 2 71 0 134 2 71 0 135 2 71 0 136 2 71 0 137 2 71 0 139 2 71 0 143 2 71 0 147 2 71 0 150 2 71 0 152 2 71 0 153 2 71 0 162 2 71 0 167 2 71 0 168 2 71 0 171 2 211 0 172 2 71 0 173 11 149 0 228 11 149 0 229 11 149 0 233 11 153 1 10 23 9 1 11] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 23 13 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 23 17 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 23 21 0 97] 
#[1 0 29 0 1 0 142 0 3 4 9 0 5 3 31 0 9 3 35 0 11 3 39 0 22 3 43 0 24 3 47 0 26 3 51 0 41 3 55 0 42 3 59 0 43 3 63 0 44 3 67 0 48 3 71 0 53 3 75 0 54 3 79 0 55 3 83 0 57 3 87 0 58 3 91 0 71 3 95 0 73 3 99 0 75 3 103 0 82 3 107 0 84 3 111 0 86 3 115 0 87 3 119 0 90 3 123 0 91 3 127 0 98 3 131 0 100 3 135 0 101 3 139 0 103 3 143 0 105 3 147 0 106 3 151 0 107 3 155 0 108 3 159 0 109 3 163 0 113 3 167 0 114 3 171 0 121 3 175 0 124 3 179 0 125 3 183 0 130 3 187 0 132 3 191 0 133 3 195 0 134 3 199 0 135 3 203 0 136 3 207 0 137 3 211 0 139 3 215 0 143 3 219 0 147 3 223 0 150 3 227 0 152 3 231 0 153 3 235 0 162 3 239 0 167 3 243 0 168 3 247 0 171 3 251 0 172 3 35 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 23 25 0 213 3 193 0 215 1 25 0 223 23 29 0 228 23 29 0 229 23 29 0 233 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 23 33 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 23 37 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 23 41 0 97] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 23 45 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 23 49 0 172] 
#[0 23 53 0 97] 
#[0 23 57 0 97] 
#[0 23 61 0 172] 
#[0 23 65 0 172] 
#[0 23 69 0 104] 
#[0 23 73 0 172] 
#[0 23 77 0 97] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 23 81 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 23 85 0 172] 
#[0 23 89 0 172] 
#[0 23 93 0 142] 
#[0 23 97 0 172] 
#[0 9 130 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 23 101 0 142] 
#[1 7 153 0 159 23 105 0 190] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 23 109 0 191 0 249 0 194 23 109 0 195 23 109 0 196 23 109 0 197] 
#[1 9 134 0 11 9 134 0 80 9 134 0 97 9 134 0 122 9 134 0 162 5 11 0 172 9 134 0 173 9 134 1 142] 
#[0 23 117 0 172] 
#[1 23 121 0 122 3 173 0 162 23 125 0 182] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 8 13 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 23 129 0 122 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 8 13 0 201 8 13 0 203 8 13 0 212 8 17 0 215 1 25 0 223 8 13 0 234 1 33 0 235 8 13 0 236 8 13 0 237 8 13 0 238 8 13 0 239 8 13 0 240 8 13 0 241 8 13 0 242 8 13 0 243 8 13 0 247 8 13 0 248 8 13 1 17 8 13 1 18 8 13 1 19 8 13 1 20 8 13 1 21 8 13 1 22 1 101 1 24 8 13 1 25 8 13 1 26 8 13 1 27 8 13 1 28 8 13 1 29 8 13 1 33 8 13 1 36 1 133 1 55 1 133 1 56 1 133 1 57 8 13 1 61 8 13 1 62 8 13 1 63 8 13 1 66 8 13 1 67 8 13 1 68 8 13 1 69 8 13 1 70 8 13 1 71 8 13 1 72 8 13 1 73 8 13 1 74 8 13 1 75 8 13 1 76 8 13 1 77 8 13 1 78 8 13 1 79 8 13 1 80 8 13 1 81 8 13 1 82 8 13 1 83 8 13 1 88 8 13 1 89 1 237 1 90 8 13 1 95 8 13 1 98 8 13 1 99 8 13 1 100 8 13 1 101 8 13 1 102 8 13 1 107 8 13 1 108 8 13 1 109 8 13 1 110 8 13 1 111 8 13 1 112 8 13 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 8 13 1 127 2 89 1 128 2 93 1 129 8 13 1 137 8 13 1 138 8 13 1 140] 
#[1 9 138 0 11 9 138 0 80 9 138 0 97 9 138 0 122 9 138 0 162 5 15 0 172 9 138 0 173 9 138 1 142] 
#[0 23 137 0 172] 
#[1 0 29 0 1 0 33 0 9 2 127 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 13 33 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 5 19 0 122 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 5 23 0 172 0 54 0 173 23 149 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 13 33 0 201 13 33 0 203 13 33 0 212 23 153 0 213 3 193 0 215 23 157 0 218 13 45 0 220 1 25 0 223 13 33 0 234 1 33 0 235 13 33 0 236 13 33 0 237 13 33 0 238 13 33 0 239 13 33 0 240 13 33 0 241 13 33 0 242 13 33 0 243 13 33 0 247 13 33 0 248 13 33 1 17 13 33 1 18 13 33 1 19 13 33 1 20 13 33 1 21 13 33 1 22 1 101 1 24 13 33 1 25 13 33 1 26 13 33 1 27 13 33 1 28 13 33 1 29 13 33 1 33 13 33 1 36 1 133 1 55 1 133 1 56 1 133 1 57 13 33 1 61 13 33 1 62 13 33 1 63 13 33 1 66 13 33 1 67 13 33 1 68 13 33 1 69 13 33 1 70 13 33 1 71 13 33 1 72 13 33 1 73 13 33 1 74 13 33 1 75 13 33 1 76 13 33 1 77 13 33 1 78 13 33 1 79 13 33 1 80 13 33 1 81 13 33 1 82 13 33 1 83 13 33 1 88 13 33 1 89 1 237 1 90 13 33 1 95 13 33 1 98 13 33 1 99 13 33 1 100 13 33 1 101 13 33 1 102 13 33 1 107 13 33 1 108 13 33 1 109 13 33 1 110 13 33 1 111 13 33 1 112 13 33 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 13 33 1 127 2 89 1 128 2 93 1 129 13 33 1 137 13 33 1 138 13 33 1 140] 
#[1 9 142 0 11 9 142 0 80 9 142 0 97 9 142 0 122 9 142 0 162 5 27 0 172 9 142 0 173 9 142 1 142] 
#[0 23 165 0 172] 
#[0 23 169 0 172] 
#[0 23 173 0 172] 
#[1 6 198 0 4 6 198 0 7 2 247 0 172 15 73 1 3 23 177 1 4] 
#[0 9 146 0 4 0 7 0 172] 
#[1 7 221 0 3 2 119 0 4 4 9 0 5 2 119 0 7 2 123 0 172 23 185 0 228 23 185 0 229 23 181 0 230 23 185 0 233 23 185 1 1 23 185 1 2] 
#[1 6 198 0 4 6 198 0 7 2 247 0 172 15 73 1 3 23 189 1 4] 
#[0 9 150 0 4 0 7 0 172] 
#[1 6 198 0 4 6 198 0 7 2 247 0 172 15 73 1 3 23 193 1 4] 
#[0 9 154 0 4 0 7 0 172] 
#[0 9 158 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 9 157 0 2 9 161 0 5 9 165 0 6 9 169 0 8 9 173 0 10 9 177 0 14 9 181 0 16 9 185 0 17 9 189 0 18 9 193 0 19 9 197 0 20 9 201 0 45 9 205 0 47 9 209 0 52 9 213 0 67 9 217 0 68 9 221 0 70 9 225 0 99 9 229 0 127 23 197 0 144 9 233 0 146 9 237 0 154 9 241 1 46 9 245 1 48 9 249 1 50] 
#[0 9 162 0 97 0 162] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 23 201 0 180 23 201 0 181 23 201 0 182 23 201 0 183 23 201 0 184 23 201 0 185 23 201 0 186 23 201 0 187 23 201 0 188 23 201 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 23 201 1 37 23 201 1 38 23 201 1 39 23 201 1 40 23 201 1 41 23 201 1 42 23 201 1 43 23 201 1 44 23 201 1 45 23 201 1 47 23 201 1 49 23 201 1 51 23 201 1 53 23 201 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 23 201 1 139 23 201 1 141] 
#[0 23 205 0 109] 
#[0 9 166 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 23 209 0 172] 
#[0 23 213 0 172] 
#[1 0 29 0 1 0 33 0 9 2 127 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 13 33 0 73 0 249 0 75 5 31 0 80 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 5 31 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 5 35 0 162 0 233 0 167 0 237 0 168 0 241 0 171 2 135 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 13 33 0 201 13 33 0 203 13 33 0 212 23 217 0 213 3 193 0 215 23 221 0 218 13 45 0 220 1 25 0 223 13 33 0 234 1 33 0 235 13 33 0 236 13 33 0 237 13 33 0 238 13 33 0 239 13 33 0 240 13 33 0 241 13 33 0 242 13 33 0 243 13 33 0 247 13 33 0 248 13 33 1 17 13 33 1 18 13 33 1 19 13 33 1 20 13 33 1 21 13 33 1 22 1 101 1 24 13 33 1 25 13 33 1 26 13 33 1 27 13 33 1 28 13 33 1 29 13 33 1 33 13 33 1 36 1 133 1 55 1 133 1 56 1 133 1 57 13 33 1 61 13 33 1 62 13 33 1 63 13 33 1 66 13 33 1 67 13 33 1 68 13 33 1 69 13 33 1 70 13 33 1 71 13 33 1 72 13 33 1 73 13 33 1 74 13 33 1 75 13 33 1 76 13 33 1 77 13 33 1 78 13 33 1 79 13 33 1 80 13 33 1 81 13 33 1 82 13 33 1 83 13 33 1 88 13 33 1 89 1 237 1 90 13 33 1 95 13 33 1 98 13 33 1 99 13 33 1 100 13 33 1 101 13 33 1 102 13 33 1 107 13 33 1 108 13 33 1 109 13 33 1 110 13 33 1 111 13 33 1 112 13 33 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 13 33 1 127 2 89 1 128 2 93 1 129 13 33 1 137 13 33 1 138 13 33 1 140] 
#[0 9 174 0 80 0 97 0 162] 
#[0 9 178 0 80 0 97 0 162] 
#[0 9 182 0 1 0 7 0 9 0 11 0 22 0 24 0 26 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 75 0 80 0 82 0 84 0 86 0 87 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 105 0 106 0 107 0 108 0 109 0 113 0 114 0 121 0 124 0 125 0 130 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 143 0 147 0 150 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173] 
#[1 0 29 0 1 0 33 0 9 2 127 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 13 33 0 73 0 249 0 75 5 39 0 80 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 5 39 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 5 43 0 162 0 233 0 167 0 237 0 168 0 241 0 171 2 135 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 13 33 0 201 13 33 0 203 13 33 0 212 23 225 0 213 3 193 0 215 23 229 0 218 13 45 0 220 1 25 0 223 13 33 0 234 1 33 0 235 13 33 0 236 13 33 0 237 13 33 0 238 13 33 0 239 13 33 0 240 13 33 0 241 13 33 0 242 13 33 0 243 13 33 0 247 13 33 0 248 13 33 1 17 13 33 1 18 13 33 1 19 13 33 1 20 13 33 1 21 13 33 1 22 1 101 1 24 13 33 1 25 13 33 1 26 13 33 1 27 13 33 1 28 13 33 1 29 13 33 1 33 13 33 1 36 1 133 1 55 1 133 1 56 1 133 1 57 13 33 1 61 13 33 1 62 13 33 1 63 13 33 1 66 13 33 1 67 13 33 1 68 13 33 1 69 13 33 1 70 13 33 1 71 13 33 1 72 13 33 1 73 13 33 1 74 13 33 1 75 13 33 1 76 13 33 1 77 13 33 1 78 13 33 1 79 13 33 1 80 13 33 1 81 13 33 1 82 13 33 1 83 13 33 1 88 13 33 1 89 1 237 1 90 13 33 1 95 13 33 1 98 13 33 1 99 13 33 1 100 13 33 1 101 13 33 1 102 13 33 1 107 13 33 1 108 13 33 1 109 13 33 1 110 13 33 1 111 13 33 1 112 13 33 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 13 33 1 127 2 89 1 128 2 93 1 129 13 33 1 137 13 33 1 138 13 33 1 140] 
#[0 9 190 0 80 0 97 0 162] 
#[0 9 194 0 80 0 97 0 162] 
#[1 8 234 0 1 8 234 0 7 8 234 0 9 8 234 0 11 8 234 0 22 8 234 0 24 8 234 0 26 8 234 0 41 8 234 0 42 8 234 0 43 8 234 0 44 8 234 0 48 8 234 0 53 8 234 0 54 8 234 0 55 8 234 0 57 8 234 0 58 8 234 0 71 8 234 0 73 8 234 0 75 8 234 0 80 8 234 0 82 8 234 0 84 8 234 0 86 8 234 0 87 8 234 0 90 8 234 0 91 8 234 0 97 8 234 0 98 8 234 0 100 8 234 0 101 8 234 0 103 8 234 0 105 8 234 0 106 8 234 0 107 8 234 0 108 8 234 0 109 8 234 0 113 8 234 0 114 8 234 0 121 8 234 0 124 8 234 0 125 8 234 0 130 8 234 0 132 8 234 0 133 8 234 0 134 8 234 0 135 8 234 0 136 8 234 0 137 8 234 0 139 8 234 0 143 8 234 0 147 8 234 0 150 8 234 0 152 8 234 0 153 8 234 0 162 8 234 0 167 8 234 0 168 8 234 0 171 8 234 0 172 8 234 0 173 23 233 1 94] 
#[1 8 234 0 1 8 234 0 7 8 234 0 9 8 234 0 11 8 234 0 22 8 234 0 24 8 234 0 26 8 234 0 41 8 234 0 42 8 234 0 43 8 234 0 44 8 234 0 48 8 234 0 53 8 234 0 54 8 234 0 55 8 234 0 57 8 234 0 58 8 234 0 71 8 234 0 73 8 234 0 75 8 234 0 80 8 234 0 82 8 234 0 84 8 234 0 86 8 234 0 87 8 234 0 90 8 234 0 91 8 234 0 97 8 234 0 98 8 234 0 100 8 234 0 101 8 234 0 103 8 234 0 105 8 234 0 106 8 234 0 107 8 234 0 108 8 234 0 109 8 234 0 113 8 234 0 114 8 234 0 121 8 234 0 124 8 234 0 125 8 234 0 130 8 234 0 132 8 234 0 133 8 234 0 134 8 234 0 135 8 234 0 136 8 234 0 137 8 234 0 139 8 234 0 143 8 234 0 147 8 234 0 150 8 234 0 152 8 234 0 153 8 234 0 162 8 234 0 167 8 234 0 168 8 234 0 171 8 234 0 172 8 234 0 173 23 237 1 94] 
#[0 23 241 0 136] 
#[0 9 198 0 22 0 44 0 54 0 57 0 75 0 82 0 86 0 87 0 97 0 105 0 113 0 114 0 121 0 137 0 143 0 150 0 167 0 168 0 171 0 173] 
#[1 4 205 0 165 23 245 0 187] 
#[0 23 249 0 172] 
#[1 4 9 0 5 0 142 0 22 0 142 0 27 0 142 0 28 0 142 0 29 0 142 0 30 0 142 0 31 0 142 0 32 0 142 0 33 0 142 0 34 0 142 0 35 0 142 0 36 0 142 0 37 0 142 0 38 0 142 0 39 0 142 0 40 0 142 0 44 0 142 0 54 0 142 0 57 0 142 0 71 0 142 0 74 0 142 0 75 0 142 0 82 0 142 0 84 0 142 0 86 0 142 0 87 0 142 0 89 0 142 0 90 0 142 0 98 0 142 0 100 0 142 0 103 0 142 0 104 0 142 0 105 0 142 0 106 0 142 0 110 0 142 0 113 0 142 0 114 0 142 0 121 0 142 0 125 0 142 0 130 0 142 0 131 0 142 0 132 0 142 0 133 0 142 0 137 0 142 0 139 0 142 0 142 0 142 0 143 0 142 0 147 0 142 0 150 0 142 0 167 0 142 0 168 0 142 0 171 7 225 0 172 0 142 0 173 23 253 0 228 23 253 0 229 23 253 0 233 0 142 1 142] 
#[0 9 202 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[1 4 205 0 165 24 1 0 187] 
#[0 24 5 0 172] 
#[0 9 206 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 9 210 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 9 214 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 24 9 0 131] 
#[1 8 65 0 3 24 13 0 69 24 17 0 172 24 21 0 253] 
#[1 8 65 0 3 24 25 0 69 24 29 0 172 24 33 0 253] 
#[0 24 37 0 172] 
#[0 24 41 0 104] 
#[0 24 45 0 104] 
#[0 9 218 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 24 49 0 131] 
#[0 24 53 0 172] 
#[0 24 57 0 97] 
#[0 24 61 0 131] 
#[0 24 65 0 131] 
#[0 9 222 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 24 69 0 142] 
#[0 9 226 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 24 73 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 24 77 0 97] 
#[0 24 81 0 97] 
#[0 24 85 0 172] 
#[0 24 89 0 97] 
#[1 0 29 0 1 7 221 0 3 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 24 93 0 213 3 193 0 215 1 25 0 223 24 97 0 230 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 24 101 0 97] 
#[0 24 105 0 97] 
#[0 24 109 0 172] 
#[0 24 113 0 97] 
#[0 24 117 0 142] 
#[0 24 121 0 172] 
#[0 24 125 0 172] 
#[0 24 129 0 104] 
#[0 24 133 0 104] 
#[0 9 230 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 24 137 0 131] 
#[0 24 141 0 172] 
#[0 24 145 0 97] 
#[0 24 149 0 131] 
#[0 24 153 0 131] 
#[0 9 234 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 24 157 0 142] 
#[0 9 238 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[1 24 161 0 156 9 149 0 159] 
#[0 9 242 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 24 165 0 191 0 249 0 194 24 165 0 195 24 165 0 196 24 165 0 197] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 8 13 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 24 169 0 122 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 8 13 0 201 8 13 0 203 8 13 0 212 8 17 0 215 1 25 0 223 8 13 0 234 1 33 0 235 8 13 0 236 8 13 0 237 8 13 0 238 8 13 0 239 8 13 0 240 8 13 0 241 8 13 0 242 8 13 0 243 8 13 0 247 8 13 0 248 8 13 1 17 8 13 1 18 8 13 1 19 8 13 1 20 8 13 1 21 8 13 1 22 1 101 1 24 8 13 1 25 8 13 1 26 8 13 1 27 8 13 1 28 8 13 1 29 8 13 1 33 8 13 1 36 1 133 1 55 1 133 1 56 1 133 1 57 8 13 1 61 8 13 1 62 8 13 1 63 8 13 1 66 8 13 1 67 8 13 1 68 8 13 1 69 8 13 1 70 8 13 1 71 8 13 1 72 8 13 1 73 8 13 1 74 8 13 1 75 8 13 1 76 8 13 1 77 8 13 1 78 8 13 1 79 8 13 1 80 8 13 1 81 8 13 1 82 8 13 1 83 8 13 1 88 8 13 1 89 1 237 1 90 8 13 1 95 8 13 1 98 8 13 1 99 8 13 1 100 8 13 1 101 8 13 1 102 8 13 1 107 8 13 1 108 8 13 1 109 8 13 1 110 8 13 1 111 8 13 1 112 8 13 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 8 13 1 127 2 89 1 128 2 93 1 129 8 13 1 137 8 13 1 138 8 13 1 140] 
#[1 9 246 0 11 9 246 0 80 9 246 0 97 9 246 0 122 9 246 0 162 5 47 0 172 9 246 0 173 9 246 1 142] 
#[0 24 177 0 172] 
#[1 9 250 0 11 9 250 0 80 9 250 0 97 9 250 0 122 9 250 0 162 5 51 0 172 9 250 0 173 9 250 1 142] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 24 185 0 191 0 249 0 194 24 185 0 195 24 185 0 196 24 185 0 197] 
#[0 24 189 0 122] 
#[1 5 55 0 11 5 55 0 80 5 55 0 97 5 55 0 122 5 55 0 162 5 59 0 172 5 55 0 173 5 55 1 142] 
#[1 0 29 0 1 9 157 0 2 9 161 0 5 9 165 0 6 9 169 0 8 0 33 0 9 9 173 0 10 5 226 0 11 9 177 0 14 9 181 0 16 9 185 0 17 9 189 0 18 9 193 0 19 9 197 0 20 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 9 201 0 45 9 205 0 47 0 65 0 48 9 209 0 52 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 9 213 0 67 9 217 0 68 9 221 0 70 0 89 0 71 15 117 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 9 225 0 99 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 5 226 0 122 0 173 0 124 0 177 0 125 9 229 0 127 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 24 197 0 140 0 249 0 143 9 233 0 146 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 9 237 0 154 0 233 0 167 0 237 0 168 0 241 0 171 5 226 0 172 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 15 117 0 201 15 117 0 203 15 117 0 212 15 121 0 220 1 25 0 223 15 117 0 234 1 33 0 235 15 117 0 236 15 117 0 237 15 117 0 238 15 117 0 239 15 117 0 240 15 117 0 241 15 117 0 242 15 117 0 243 15 117 0 247 15 117 0 248 15 117 1 17 15 117 1 18 15 117 1 19 15 117 1 20 15 117 1 21 15 117 1 22 1 101 1 24 15 117 1 25 15 117 1 26 15 117 1 27 15 117 1 28 15 117 1 29 15 117 1 33 15 117 1 36 9 241 1 46 9 245 1 48 9 249 1 50 1 133 1 55 1 133 1 56 1 133 1 57 15 117 1 61 15 117 1 62 15 117 1 63 15 117 1 66 15 117 1 67 15 117 1 68 15 117 1 69 15 117 1 70 15 117 1 71 15 117 1 72 15 117 1 73 15 117 1 74 15 117 1 75 15 117 1 76 15 117 1 77 15 117 1 78 15 117 1 79 15 117 1 80 15 117 1 81 15 117 1 82 15 117 1 83 15 117 1 88 15 117 1 89 1 237 1 90 15 117 1 95 15 117 1 98 15 117 1 99 15 117 1 100 15 117 1 101 15 117 1 102 15 117 1 107 15 117 1 108 15 117 1 109 15 117 1 110 15 117 1 111 15 117 1 112 15 117 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 15 117 1 127 2 89 1 128 2 93 1 129 15 117 1 137 15 117 1 138 15 117 1 140] 
#[0 24 201 0 172] 
#[1 24 205 0 122 3 173 0 162 24 209 0 182] 
#[0 24 213 0 122] 
#[1 9 157 0 2 9 161 0 5 9 165 0 6 9 169 0 8 9 173 0 10 9 177 0 14 9 181 0 16 9 185 0 17 9 189 0 18 9 193 0 19 9 197 0 20 9 201 0 45 9 205 0 47 9 209 0 52 9 213 0 67 9 217 0 68 9 221 0 70 9 225 0 99 24 217 0 113 9 229 0 127 9 233 0 146 9 237 0 154 9 241 1 46 9 245 1 48 9 249 1 50] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 24 221 0 180 24 221 0 181 24 221 0 182 24 221 0 183 24 221 0 184 24 221 0 185 24 221 0 186 24 221 0 187 24 221 0 188 24 221 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 24 221 1 37 24 221 1 38 24 221 1 39 24 221 1 40 24 221 1 41 24 221 1 42 24 221 1 43 24 221 1 44 24 221 1 45 24 221 1 47 24 221 1 49 24 221 1 51 24 221 1 53 24 221 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 24 221 1 139 24 221 1 141] 
#[0 24 225 0 23] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 24 229 0 180 24 229 0 181 24 229 0 182 24 229 0 183 24 229 0 184 24 229 0 185 24 229 0 186 24 229 0 187 24 229 0 188 24 229 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 24 229 1 37 24 229 1 38 24 229 1 39 24 229 1 40 24 229 1 41 24 229 1 42 24 229 1 43 24 229 1 44 24 229 1 45 24 229 1 47 24 229 1 49 24 229 1 51 24 229 1 53 24 229 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 24 229 1 139 24 229 1 141] 
#[0 10 6 0 4 0 7 0 172] 
#[1 2 119 0 4 4 9 0 5 2 119 0 7 2 123 0 172 24 233 0 228 24 233 0 229 24 233 0 233 24 233 1 1 24 233 1 2] 
#[1 6 198 0 4 6 198 0 7 2 247 0 172 15 73 1 3 24 237 1 4] 
#[0 10 10 0 4 0 7 0 172] 
#[0 10 14 0 4 0 7 0 172] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 10 18 0 94 10 18 0 96 10 18 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 5 63 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 24 241 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 24 245 0 172] 
#[0 10 22 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 24 249 0 109] 
#[1 0 29 0 1 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 24 253 0 180 24 253 0 181 24 253 0 182 24 253 0 183 24 253 0 184 24 253 0 185 24 253 0 186 24 253 0 187 24 253 0 188 24 253 0 189 19 137 0 191 0 249 0 194 19 137 0 195 19 137 0 196 19 137 0 197 1 133 1 55 1 133 1 56 1 133 1 57 24 253 1 91 4 149 1 122 2 77 1 123 19 145 1 124 2 77 1 125 2 89 1 128 5 73 1 129 24 253 1 139 24 253 1 141] 
#[0 10 26 0 80 0 97 0 162] 
#[0 10 30 0 80 0 97 0 162] 
#[0 10 34 0 80 0 97 0 162] 
#[0 10 38 0 80 0 97 0 162] 
#[1 0 29 0 1 22 121 0 7 0 33 0 9 5 67 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 13 33 0 73 0 249 0 75 5 71 0 80 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 5 71 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 5 75 0 162 0 233 0 167 0 237 0 168 0 241 0 171 2 135 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 13 33 0 201 13 33 0 203 13 33 0 212 25 5 0 213 3 193 0 215 25 9 0 218 13 45 0 220 1 25 0 223 13 33 0 234 1 33 0 235 13 33 0 236 13 33 0 237 13 33 0 238 13 33 0 239 13 33 0 240 13 33 0 241 13 33 0 242 13 33 0 243 13 33 0 247 13 33 0 248 13 33 1 17 13 33 1 18 13 33 1 19 13 33 1 20 13 33 1 21 13 33 1 22 1 101 1 24 13 33 1 25 13 33 1 26 13 33 1 27 13 33 1 28 13 33 1 29 13 33 1 33 13 33 1 36 1 133 1 55 1 133 1 56 1 133 1 57 13 33 1 61 13 33 1 62 13 33 1 63 13 33 1 66 13 33 1 67 13 33 1 68 13 33 1 69 13 33 1 70 13 33 1 71 13 33 1 72 13 33 1 73 13 33 1 74 13 33 1 75 13 33 1 76 13 33 1 77 13 33 1 78 13 33 1 79 13 33 1 80 13 33 1 81 13 33 1 82 13 33 1 83 13 33 1 88 13 33 1 89 1 237 1 90 22 137 1 93 13 33 1 95 13 33 1 98 13 33 1 99 13 33 1 100 13 33 1 101 13 33 1 102 13 33 1 107 13 33 1 108 13 33 1 109 13 33 1 110 13 33 1 111 13 33 1 112 13 33 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 13 33 1 127 2 89 1 128 2 93 1 129 13 33 1 137 13 33 1 138 13 33 1 140] 
#[1 0 29 0 1 22 121 0 7 0 33 0 9 5 79 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 13 33 0 73 0 249 0 75 5 83 0 80 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 5 83 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 5 87 0 162 0 233 0 167 0 237 0 168 0 241 0 171 2 135 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 13 33 0 201 13 33 0 203 13 33 0 212 25 17 0 213 3 193 0 215 25 21 0 218 13 45 0 220 1 25 0 223 13 33 0 234 1 33 0 235 13 33 0 236 13 33 0 237 13 33 0 238 13 33 0 239 13 33 0 240 13 33 0 241 13 33 0 242 13 33 0 243 13 33 0 247 13 33 0 248 13 33 1 17 13 33 1 18 13 33 1 19 13 33 1 20 13 33 1 21 13 33 1 22 1 101 1 24 13 33 1 25 13 33 1 26 13 33 1 27 13 33 1 28 13 33 1 29 13 33 1 33 13 33 1 36 1 133 1 55 1 133 1 56 1 133 1 57 13 33 1 61 13 33 1 62 13 33 1 63 13 33 1 66 13 33 1 67 13 33 1 68 13 33 1 69 13 33 1 70 13 33 1 71 13 33 1 72 13 33 1 73 13 33 1 74 13 33 1 75 13 33 1 76 13 33 1 77 13 33 1 78 13 33 1 79 13 33 1 80 13 33 1 81 13 33 1 82 13 33 1 83 13 33 1 88 13 33 1 89 1 237 1 90 22 137 1 93 13 33 1 95 13 33 1 98 13 33 1 99 13 33 1 100 13 33 1 101 13 33 1 102 13 33 1 107 13 33 1 108 13 33 1 109 13 33 1 110 13 33 1 111 13 33 1 112 13 33 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 13 33 1 127 2 89 1 128 2 93 1 129 13 33 1 137 13 33 1 138 13 33 1 140] 
#[0 10 50 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 8 65 0 3 25 25 0 172 25 29 0 253] 
#[1 4 205 0 165 25 33 0 187] 
#[0 10 54 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[1 8 65 0 3 25 37 0 172 25 41 0 253] 
#[1 4 205 0 165 25 45 0 187] 
#[0 10 58 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 25 49 0 172] 
#[1 8 65 0 3 25 53 0 69 25 57 0 253] 
#[1 4 9 0 5 0 142 0 22 0 142 0 27 0 142 0 28 0 142 0 29 0 142 0 30 0 142 0 31 0 142 0 32 0 142 0 33 0 142 0 34 0 142 0 35 0 142 0 36 0 142 0 37 0 142 0 38 0 142 0 39 0 142 0 40 0 142 0 44 0 142 0 54 0 142 0 57 0 142 0 71 0 142 0 74 0 142 0 75 0 142 0 82 0 142 0 84 0 142 0 86 0 142 0 87 0 142 0 89 0 142 0 90 0 142 0 98 0 142 0 100 0 142 0 103 0 142 0 104 0 142 0 105 0 142 0 106 0 142 0 110 0 142 0 113 0 142 0 114 0 142 0 121 0 142 0 125 0 142 0 130 0 142 0 131 0 142 0 132 0 142 0 133 0 142 0 137 0 142 0 139 0 142 0 142 0 142 0 143 0 142 0 147 0 142 0 150 0 142 0 167 0 142 0 168 0 142 0 171 7 225 0 172 0 142 0 173 25 61 0 228 25 61 0 229 25 61 0 233 0 142 1 142] 
#[0 25 65 0 172] 
#[1 8 65 0 3 25 69 0 69 25 73 0 253] 
#[0 10 62 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 25 77 0 104] 
#[0 10 66 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 10 70 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 10 74 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 25 81 0 131] 
#[0 25 85 0 172] 
#[0 10 78 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 10 82 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 10 86 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 25 89 0 97] 
#[0 25 93 0 172] 
#[0 25 97 0 172] 
#[0 25 101 0 104] 
#[0 25 105 0 172] 
#[0 25 109 0 97] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 25 113 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 25 117 0 172] 
#[0 25 121 0 172] 
#[0 25 125 0 142] 
#[0 25 129 0 172] 
#[0 10 90 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 25 133 0 142] 
#[0 25 137 0 104] 
#[0 10 94 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 10 98 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 10 102 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 25 141 0 131] 
#[0 25 145 0 172] 
#[0 10 106 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 10 110 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 10 114 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 10 118 0 1 0 3 0 4 0 5 0 7 0 9 0 11 0 13 0 22 0 24 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 74 0 75 0 80 0 82 0 84 0 86 0 87 0 89 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 113 0 114 0 119 0 121 0 122 0 124 0 125 0 130 0 131 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 142 0 143 0 147 0 150 0 151 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173 1 142] 
#[0 10 122 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 10 126 0 11 10 126 0 80 10 126 0 97 10 126 0 122 10 126 0 162 5 91 0 172 10 126 0 173 10 126 1 142] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 25 153 0 191 0 249 0 194 25 153 0 195 25 153 0 196 25 153 0 197] 
#[0 25 157 0 122] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 25 161 0 191 0 249 0 194 25 161 0 195 25 161 0 196 25 161 0 197] 
#[0 10 130 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 10 134 0 11 10 134 0 80 10 134 0 97 10 134 0 122 10 134 0 162 5 95 0 172 10 134 0 173 10 134 1 142] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 25 169 0 191 0 249 0 194 25 169 0 195 25 169 0 196 25 169 0 197] 
#[0 25 173 0 172] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 8 13 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 25 177 0 122 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 8 13 0 201 8 13 0 203 8 13 0 212 8 17 0 215 1 25 0 223 8 13 0 234 1 33 0 235 8 13 0 236 8 13 0 237 8 13 0 238 8 13 0 239 8 13 0 240 8 13 0 241 8 13 0 242 8 13 0 243 8 13 0 247 8 13 0 248 8 13 1 17 8 13 1 18 8 13 1 19 8 13 1 20 8 13 1 21 8 13 1 22 1 101 1 24 8 13 1 25 8 13 1 26 8 13 1 27 8 13 1 28 8 13 1 29 8 13 1 33 8 13 1 36 1 133 1 55 1 133 1 56 1 133 1 57 8 13 1 61 8 13 1 62 8 13 1 63 8 13 1 66 8 13 1 67 8 13 1 68 8 13 1 69 8 13 1 70 8 13 1 71 8 13 1 72 8 13 1 73 8 13 1 74 8 13 1 75 8 13 1 76 8 13 1 77 8 13 1 78 8 13 1 79 8 13 1 80 8 13 1 81 8 13 1 82 8 13 1 83 8 13 1 88 8 13 1 89 1 237 1 90 8 13 1 95 8 13 1 98 8 13 1 99 8 13 1 100 8 13 1 101 8 13 1 102 8 13 1 107 8 13 1 108 8 13 1 109 8 13 1 110 8 13 1 111 8 13 1 112 8 13 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 8 13 1 127 2 89 1 128 2 93 1 129 8 13 1 137 8 13 1 138 8 13 1 140] 
#[1 10 138 0 11 10 138 0 80 10 138 0 97 10 138 0 122 10 138 0 162 5 99 0 172 10 138 0 173 10 138 1 142] 
#[0 25 185 0 172] 
#[0 10 142 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 25 189 0 172] 
#[1 10 146 0 11 10 146 0 80 10 146 0 97 10 146 0 122 10 146 0 162 5 103 0 172 10 146 0 173 10 146 1 142] 
#[0 25 197 0 172] 
#[1 10 150 0 11 10 150 0 80 10 150 0 97 10 150 0 122 10 150 0 162 5 107 0 172 10 150 0 173 10 150 1 142] 
#[1 6 198 0 4 6 198 0 7 2 247 0 172 15 73 1 3 25 205 1 4] 
#[0 10 154 0 4 0 7 0 172] 
#[0 10 158 0 94 0 96 0 97 0 162] 
#[1 9 157 0 2 9 161 0 5 9 165 0 6 9 169 0 8 9 173 0 10 9 177 0 14 9 181 0 16 9 185 0 17 9 189 0 18 9 193 0 19 9 197 0 20 9 201 0 45 9 205 0 47 9 209 0 52 9 213 0 67 9 217 0 68 9 221 0 70 9 225 0 99 9 229 0 127 25 209 0 144 9 233 0 146 9 237 0 154 9 241 1 46 9 245 1 48 9 249 1 50] 
#[0 10 162 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[0 10 166 0 1 0 7 0 9 0 11 0 22 0 24 0 26 0 41 0 42 0 43 0 44 0 48 0 53 0 54 0 55 0 57 0 58 0 71 0 73 0 75 0 80 0 82 0 84 0 86 0 87 0 90 0 91 0 97 0 98 0 100 0 101 0 103 0 105 0 106 0 107 0 108 0 109 0 113 0 114 0 121 0 124 0 125 0 130 0 132 0 133 0 134 0 135 0 136 0 137 0 139 0 143 0 147 0 150 0 152 0 153 0 162 0 167 0 168 0 171 0 172 0 173] 
#[1 0 29 0 1 0 33 0 9 2 127 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 13 33 0 73 0 249 0 75 5 111 0 80 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 5 111 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 5 115 0 162 0 233 0 167 0 237 0 168 0 241 0 171 2 135 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 13 33 0 201 13 33 0 203 13 33 0 212 25 213 0 213 3 193 0 215 25 217 0 218 13 45 0 220 1 25 0 223 13 33 0 234 1 33 0 235 13 33 0 236 13 33 0 237 13 33 0 238 13 33 0 239 13 33 0 240 13 33 0 241 13 33 0 242 13 33 0 243 13 33 0 247 13 33 0 248 13 33 1 17 13 33 1 18 13 33 1 19 13 33 1 20 13 33 1 21 13 33 1 22 1 101 1 24 13 33 1 25 13 33 1 26 13 33 1 27 13 33 1 28 13 33 1 29 13 33 1 33 13 33 1 36 1 133 1 55 1 133 1 56 1 133 1 57 13 33 1 61 13 33 1 62 13 33 1 63 13 33 1 66 13 33 1 67 13 33 1 68 13 33 1 69 13 33 1 70 13 33 1 71 13 33 1 72 13 33 1 73 13 33 1 74 13 33 1 75 13 33 1 76 13 33 1 77 13 33 1 78 13 33 1 79 13 33 1 80 13 33 1 81 13 33 1 82 13 33 1 83 13 33 1 88 13 33 1 89 1 237 1 90 13 33 1 95 13 33 1 98 13 33 1 99 13 33 1 100 13 33 1 101 13 33 1 102 13 33 1 107 13 33 1 108 13 33 1 109 13 33 1 110 13 33 1 111 13 33 1 112 13 33 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 13 33 1 127 2 89 1 128 2 93 1 129 13 33 1 137 13 33 1 138 13 33 1 140] 
#[0 10 174 0 80 0 97 0 162] 
#[0 10 178 0 80 0 97 0 162] 
#[1 0 29 0 1 0 33 0 9 2 127 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 13 33 0 73 0 249 0 75 5 119 0 80 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 5 119 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 5 123 0 162 0 233 0 167 0 237 0 168 0 241 0 171 2 135 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 13 33 0 201 13 33 0 203 13 33 0 212 25 221 0 213 3 193 0 215 25 225 0 218 13 45 0 220 1 25 0 223 13 33 0 234 1 33 0 235 13 33 0 236 13 33 0 237 13 33 0 238 13 33 0 239 13 33 0 240 13 33 0 241 13 33 0 242 13 33 0 243 13 33 0 247 13 33 0 248 13 33 1 17 13 33 1 18 13 33 1 19 13 33 1 20 13 33 1 21 13 33 1 22 1 101 1 24 13 33 1 25 13 33 1 26 13 33 1 27 13 33 1 28 13 33 1 29 13 33 1 33 13 33 1 36 1 133 1 55 1 133 1 56 1 133 1 57 13 33 1 61 13 33 1 62 13 33 1 63 13 33 1 66 13 33 1 67 13 33 1 68 13 33 1 69 13 33 1 70 13 33 1 71 13 33 1 72 13 33 1 73 13 33 1 74 13 33 1 75 13 33 1 76 13 33 1 77 13 33 1 78 13 33 1 79 13 33 1 80 13 33 1 81 13 33 1 82 13 33 1 83 13 33 1 88 13 33 1 89 1 237 1 90 13 33 1 95 13 33 1 98 13 33 1 99 13 33 1 100 13 33 1 101 13 33 1 102 13 33 1 107 13 33 1 108 13 33 1 109 13 33 1 110 13 33 1 111 13 33 1 112 13 33 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 13 33 1 127 2 89 1 128 2 93 1 129 13 33 1 137 13 33 1 138 13 33 1 140] 
#[0 10 186 0 80 0 97 0 162] 
#[0 10 190 0 80 0 97 0 162] 
#[1 8 65 0 3 25 229 0 253] 
#[1 4 9 0 5 0 142 0 22 0 142 0 27 0 142 0 28 0 142 0 29 0 142 0 30 0 142 0 31 0 142 0 32 0 142 0 33 0 142 0 34 0 142 0 35 0 142 0 36 0 142 0 37 0 142 0 38 0 142 0 39 0 142 0 40 0 142 0 44 0 142 0 54 0 142 0 57 0 142 0 71 0 142 0 74 0 142 0 75 0 142 0 82 0 142 0 84 0 142 0 86 0 142 0 87 0 142 0 89 0 142 0 90 0 142 0 98 0 142 0 100 0 142 0 103 0 142 0 104 0 142 0 105 0 142 0 106 0 142 0 110 0 142 0 113 0 142 0 114 0 142 0 121 0 142 0 125 0 142 0 130 0 142 0 131 0 142 0 132 0 142 0 133 0 142 0 137 0 142 0 139 0 142 0 142 0 142 0 143 0 142 0 147 0 142 0 150 0 142 0 167 0 142 0 168 0 142 0 171 7 225 0 172 0 142 0 173 25 233 0 228 25 233 0 229 25 233 0 233 0 142 1 142] 
#[1 8 65 0 3 25 237 0 172 25 241 0 253] 
#[1 8 65 0 3 25 245 0 253] 
#[0 10 194 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[1 8 65 0 3 25 249 0 172 25 253 0 253] 
#[1 4 205 0 165 26 1 0 187] 
#[0 26 5 0 172] 
#[1 4 9 0 5 0 142 0 22 0 142 0 27 0 142 0 28 0 142 0 29 0 142 0 30 0 142 0 31 0 142 0 32 0 142 0 33 0 142 0 34 0 142 0 35 0 142 0 36 0 142 0 37 0 142 0 38 0 142 0 39 0 142 0 40 0 142 0 44 0 142 0 54 0 142 0 57 0 142 0 71 0 142 0 74 0 142 0 75 0 142 0 82 0 142 0 84 0 142 0 86 0 142 0 87 0 142 0 89 0 142 0 90 0 142 0 98 0 142 0 100 0 142 0 103 0 142 0 104 0 142 0 105 0 142 0 106 0 142 0 110 0 142 0 113 0 142 0 114 0 142 0 121 0 142 0 125 0 142 0 130 0 142 0 131 0 142 0 132 0 142 0 133 0 142 0 137 0 142 0 139 0 142 0 142 0 142 0 143 0 142 0 147 0 142 0 150 0 142 0 167 0 142 0 168 0 142 0 171 7 225 0 172 0 142 0 173 26 9 0 228 26 9 0 229 26 9 0 233 0 142 1 142] 
#[0 10 198 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[1 4 205 0 165 26 13 0 187] 
#[0 26 17 0 172] 
#[0 10 202 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 10 206 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 10 210 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 26 21 0 131] 
#[0 26 25 0 172] 
#[0 26 29 0 104] 
#[0 26 33 0 104] 
#[0 10 214 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 26 37 0 131] 
#[0 26 41 0 172] 
#[0 26 45 0 97] 
#[0 26 49 0 131] 
#[0 26 53 0 131] 
#[0 10 218 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 26 57 0 142] 
#[0 10 222 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 10 226 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 10 230 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 26 61 0 131] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 26 65 0 191 0 249 0 194 26 65 0 195 26 65 0 196 26 65 0 197] 
#[0 10 234 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 10 238 0 11 10 238 0 80 10 238 0 97 10 238 0 122 10 238 0 162 5 127 0 172 10 238 0 173 10 238 1 142] 
#[0 10 242 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 26 73 0 191 0 249 0 194 26 73 0 195 26 73 0 196 26 73 0 197] 
#[0 10 246 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 26 77 0 180 26 77 0 181 26 77 0 182 26 77 0 183 26 77 0 184 26 77 0 185 26 77 0 186 26 77 0 187 26 77 0 188 26 77 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 26 77 1 37 26 77 1 38 26 77 1 39 26 77 1 40 26 77 1 41 26 77 1 42 26 77 1 43 26 77 1 44 26 77 1 45 26 77 1 47 26 77 1 49 26 77 1 51 26 77 1 53 26 77 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 26 77 1 139 26 77 1 141] 
#[1 10 250 0 11 10 250 0 80 10 250 0 97 10 250 0 122 10 250 0 162 5 131 0 172 10 250 0 173 10 250 1 142] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 26 85 0 191 0 249 0 194 26 85 0 195 26 85 0 196 26 85 0 197] 
#[0 26 89 0 122] 
#[0 26 93 0 18] 
#[1 9 157 0 2 9 161 0 5 9 165 0 6 9 169 0 8 9 173 0 10 9 177 0 14 9 181 0 16 9 185 0 17 9 189 0 18 9 193 0 19 9 197 0 20 9 201 0 45 9 205 0 47 9 209 0 52 9 213 0 67 9 217 0 68 9 221 0 70 9 225 0 99 26 97 0 113 9 229 0 127 9 233 0 146 9 237 0 154 9 241 1 46 9 245 1 48 9 249 1 50] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 26 101 0 180 26 101 0 181 26 101 0 182 26 101 0 183 26 101 0 184 26 101 0 185 26 101 0 186 26 101 0 187 26 101 0 188 26 101 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 26 101 1 37 26 101 1 38 26 101 1 39 26 101 1 40 26 101 1 41 26 101 1 42 26 101 1 43 26 101 1 44 26 101 1 45 26 101 1 47 26 101 1 49 26 101 1 51 26 101 1 53 26 101 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 26 101 1 139 26 101 1 141] 
#[1 9 157 0 2 9 161 0 5 9 165 0 6 9 169 0 8 9 173 0 10 9 177 0 14 9 181 0 16 9 185 0 17 9 189 0 18 9 193 0 19 9 197 0 20 9 201 0 45 9 205 0 47 9 209 0 52 9 213 0 67 9 217 0 68 9 221 0 70 9 225 0 99 26 105 0 113 9 229 0 127 9 233 0 146 9 237 0 154 9 241 1 46 9 245 1 48 9 249 1 50] 
#[0 10 254 0 4 0 7 0 172] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 11 2 0 94 11 2 0 96 11 2 0 97 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 5 135 0 162 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 8 129 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 26 109 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[0 11 6 0 80 0 97 0 162] 
#[0 11 10 0 80 0 97 0 162] 
#[0 11 14 0 80 0 97 0 162] 
#[0 11 18 0 80 0 97 0 162] 
#[1 4 9 0 5 0 142 0 22 0 142 0 27 0 142 0 28 0 142 0 29 0 142 0 30 0 142 0 31 0 142 0 32 0 142 0 33 0 142 0 34 0 142 0 35 0 142 0 36 0 142 0 37 0 142 0 38 0 142 0 39 0 142 0 40 0 142 0 44 0 142 0 54 0 142 0 57 0 142 0 71 0 142 0 74 0 142 0 75 0 142 0 82 0 142 0 84 0 142 0 86 0 142 0 87 0 142 0 89 0 142 0 90 0 142 0 98 0 142 0 100 0 142 0 103 0 142 0 104 0 142 0 105 0 142 0 106 0 142 0 110 0 142 0 113 0 142 0 114 0 142 0 121 0 142 0 125 0 142 0 130 0 142 0 131 0 142 0 132 0 142 0 133 0 142 0 137 0 142 0 139 0 142 0 142 0 142 0 143 0 142 0 147 0 142 0 150 0 142 0 167 0 142 0 168 0 142 0 171 7 225 0 172 0 142 0 173 26 113 0 228 26 113 0 229 26 113 0 233 0 142 1 142] 
#[0 11 22 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[1 8 65 0 3 26 117 0 253] 
#[1 4 9 0 5 0 142 0 22 0 142 0 27 0 142 0 28 0 142 0 29 0 142 0 30 0 142 0 31 0 142 0 32 0 142 0 33 0 142 0 34 0 142 0 35 0 142 0 36 0 142 0 37 0 142 0 38 0 142 0 39 0 142 0 40 0 142 0 44 0 142 0 54 0 142 0 57 0 142 0 71 0 142 0 74 0 142 0 75 0 142 0 82 0 142 0 84 0 142 0 86 0 142 0 87 0 142 0 89 0 142 0 90 0 142 0 98 0 142 0 100 0 142 0 103 0 142 0 104 0 142 0 105 0 142 0 106 0 142 0 110 0 142 0 113 0 142 0 114 0 142 0 121 0 142 0 125 0 142 0 130 0 142 0 131 0 142 0 132 0 142 0 133 0 142 0 137 0 142 0 139 0 142 0 142 0 142 0 143 0 142 0 147 0 142 0 150 0 142 0 167 0 142 0 168 0 142 0 171 7 225 0 172 0 142 0 173 26 121 0 228 26 121 0 229 26 121 0 233 0 142 1 142] 
#[0 11 26 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[1 8 65 0 3 26 125 0 253] 
#[0 11 30 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[1 8 65 0 3 26 129 0 172 26 133 0 253] 
#[1 4 205 0 165 26 137 0 187] 
#[0 11 34 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[1 8 65 0 3 26 141 0 172 26 145 0 253] 
#[1 4 205 0 165 26 149 0 187] 
#[0 11 38 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 26 153 0 104] 
#[0 11 42 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 11 46 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 11 50 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 26 157 0 131] 
#[0 26 161 0 172] 
#[0 11 54 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 11 58 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 11 62 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 11 66 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 11 70 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 26 165 0 191 0 249 0 194 26 165 0 195 26 165 0 196 26 165 0 197] 
#[0 11 74 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 3 185 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 26 169 0 122 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 3 173 0 162 0 233 0 167 0 237 0 168 0 241 0 171 1 219 0 172 0 54 0 173 26 173 0 182 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 3 185 0 201 3 185 0 203 3 185 0 212 26 177 0 213 3 193 0 215 1 25 0 223 3 185 0 234 1 33 0 235 3 185 0 236 3 185 0 237 3 185 0 238 3 185 0 239 3 185 0 240 3 185 0 241 3 185 0 242 3 185 0 243 3 185 0 247 3 185 0 248 3 185 1 17 3 185 1 18 3 185 1 19 3 185 1 20 3 185 1 21 3 185 1 22 1 101 1 24 3 185 1 25 3 185 1 26 3 185 1 27 3 185 1 28 3 185 1 29 3 185 1 33 3 185 1 36 1 133 1 55 1 133 1 56 1 133 1 57 3 185 1 61 3 185 1 62 3 185 1 63 3 185 1 66 3 185 1 67 3 185 1 68 3 185 1 69 3 185 1 70 3 185 1 71 3 185 1 72 3 185 1 73 3 185 1 74 3 185 1 75 3 185 1 76 3 185 1 77 3 185 1 78 3 185 1 79 3 185 1 80 3 185 1 81 3 185 1 82 3 185 1 83 3 185 1 88 3 185 1 89 1 237 1 90 3 185 1 95 3 185 1 98 3 185 1 99 3 185 1 100 3 185 1 101 3 185 1 102 3 185 1 107 3 185 1 108 3 185 1 109 3 185 1 110 3 185 1 111 3 185 1 112 3 185 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 3 185 1 127 2 89 1 128 2 93 1 129 3 185 1 137 3 185 1 138 3 185 1 140] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 26 181 0 191 0 249 0 194 26 181 0 195 26 181 0 196 26 181 0 197] 
#[0 11 78 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 11 82 0 11 11 82 0 80 11 82 0 97 11 82 0 122 11 82 0 162 5 139 0 172 11 82 0 173 11 82 1 142] 
#[0 26 189 0 172] 
#[0 26 193 0 172] 
#[1 11 86 0 11 11 86 0 80 11 86 0 97 11 86 0 122 11 86 0 162 5 143 0 172 11 86 0 173 11 86 1 142] 
#[0 26 201 0 172] 
#[0 11 90 0 94 0 96 0 97 0 162] 
#[0 11 94 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[1 4 9 0 5 0 142 0 22 0 142 0 27 0 142 0 28 0 142 0 29 0 142 0 30 0 142 0 31 0 142 0 32 0 142 0 33 0 142 0 34 0 142 0 35 0 142 0 36 0 142 0 37 0 142 0 38 0 142 0 39 0 142 0 40 0 142 0 44 0 142 0 54 0 142 0 57 0 142 0 71 0 142 0 74 0 142 0 75 0 142 0 82 0 142 0 84 0 142 0 86 0 142 0 87 0 142 0 89 0 142 0 90 0 142 0 98 0 142 0 100 0 142 0 103 0 142 0 104 0 142 0 105 0 142 0 106 0 142 0 110 0 142 0 113 0 142 0 114 0 142 0 121 0 142 0 125 0 142 0 130 0 142 0 131 0 142 0 132 0 142 0 133 0 142 0 137 0 142 0 139 0 142 0 142 0 142 0 143 0 142 0 147 0 142 0 150 0 142 0 167 0 142 0 168 0 142 0 171 7 225 0 172 0 142 0 173 26 205 0 228 26 205 0 229 26 205 0 233 0 142 1 142] 
#[0 11 98 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 11 102 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[1 8 65 0 3 26 209 0 253] 
#[1 4 9 0 5 0 142 0 22 0 142 0 27 0 142 0 28 0 142 0 29 0 142 0 30 0 142 0 31 0 142 0 32 0 142 0 33 0 142 0 34 0 142 0 35 0 142 0 36 0 142 0 37 0 142 0 38 0 142 0 39 0 142 0 40 0 142 0 44 0 142 0 54 0 142 0 57 0 142 0 71 0 142 0 74 0 142 0 75 0 142 0 82 0 142 0 84 0 142 0 86 0 142 0 87 0 142 0 89 0 142 0 90 0 142 0 98 0 142 0 100 0 142 0 103 0 142 0 104 0 142 0 105 0 142 0 106 0 142 0 110 0 142 0 113 0 142 0 114 0 142 0 121 0 142 0 125 0 142 0 130 0 142 0 131 0 142 0 132 0 142 0 133 0 142 0 137 0 142 0 139 0 142 0 142 0 142 0 143 0 142 0 147 0 142 0 150 0 142 0 167 0 142 0 168 0 142 0 171 7 225 0 172 0 142 0 173 26 213 0 228 26 213 0 229 26 213 0 233 0 142 1 142] 
#[1 8 65 0 3 26 217 0 172 26 221 0 253] 
#[1 8 65 0 3 26 225 0 253] 
#[0 11 106 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[1 8 65 0 3 26 229 0 172 26 233 0 253] 
#[0 11 110 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 11 114 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 26 237 0 131] 
#[0 11 118 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 11 122 0 11 11 122 0 80 11 122 0 97 11 122 0 122 11 122 0 162 5 147 0 172 11 122 0 173 11 122 1 142] 
#[0 26 245 0 172] 
#[1 26 249 0 122 3 173 0 162 26 253 0 182] 
#[0 11 126 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 27 1 0 191 0 249 0 194 27 1 0 195 27 1 0 196 27 1 0 197] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 27 5 0 180 27 5 0 181 27 5 0 182 27 5 0 183 27 5 0 184 27 5 0 185 27 5 0 186 27 5 0 187 27 5 0 188 27 5 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 27 5 1 37 27 5 1 38 27 5 1 39 27 5 1 40 27 5 1 41 27 5 1 42 27 5 1 43 27 5 1 44 27 5 1 45 27 5 1 47 27 5 1 49 27 5 1 51 27 5 1 53 27 5 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 27 5 1 139 27 5 1 141] 
#[0 27 9 0 18] 
#[1 9 157 0 2 9 161 0 5 9 165 0 6 9 169 0 8 9 173 0 10 9 177 0 14 9 181 0 16 9 185 0 17 9 189 0 18 9 193 0 19 9 197 0 20 9 201 0 45 9 205 0 47 9 209 0 52 9 213 0 67 9 217 0 68 9 221 0 70 9 225 0 99 27 13 0 113 9 229 0 127 9 233 0 146 9 237 0 154 9 241 1 46 9 245 1 48 9 249 1 50] 
#[0 27 17 0 18] 
#[0 11 130 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[1 4 9 0 5 0 142 0 22 0 142 0 27 0 142 0 28 0 142 0 29 0 142 0 30 0 142 0 31 0 142 0 32 0 142 0 33 0 142 0 34 0 142 0 35 0 142 0 36 0 142 0 37 0 142 0 38 0 142 0 39 0 142 0 40 0 142 0 44 0 142 0 54 0 142 0 57 0 142 0 71 0 142 0 74 0 142 0 75 0 142 0 82 0 142 0 84 0 142 0 86 0 142 0 87 0 142 0 89 0 142 0 90 0 142 0 98 0 142 0 100 0 142 0 103 0 142 0 104 0 142 0 105 0 142 0 106 0 142 0 110 0 142 0 113 0 142 0 114 0 142 0 121 0 142 0 125 0 142 0 130 0 142 0 131 0 142 0 132 0 142 0 133 0 142 0 137 0 142 0 139 0 142 0 142 0 142 0 143 0 142 0 147 0 142 0 150 0 142 0 167 0 142 0 168 0 142 0 171 7 225 0 172 0 142 0 173 27 21 0 228 27 21 0 229 27 21 0 233 0 142 1 142] 
#[0 11 134 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[1 8 65 0 3 27 25 0 253] 
#[1 4 9 0 5 0 142 0 22 0 142 0 27 0 142 0 28 0 142 0 29 0 142 0 30 0 142 0 31 0 142 0 32 0 142 0 33 0 142 0 34 0 142 0 35 0 142 0 36 0 142 0 37 0 142 0 38 0 142 0 39 0 142 0 40 0 142 0 44 0 142 0 54 0 142 0 57 0 142 0 71 0 142 0 74 0 142 0 75 0 142 0 82 0 142 0 84 0 142 0 86 0 142 0 87 0 142 0 89 0 142 0 90 0 142 0 98 0 142 0 100 0 142 0 103 0 142 0 104 0 142 0 105 0 142 0 106 0 142 0 110 0 142 0 113 0 142 0 114 0 142 0 121 0 142 0 125 0 142 0 130 0 142 0 131 0 142 0 132 0 142 0 133 0 142 0 137 0 142 0 139 0 142 0 142 0 142 0 143 0 142 0 147 0 142 0 150 0 142 0 167 0 142 0 168 0 142 0 171 7 225 0 172 0 142 0 173 27 29 0 228 27 29 0 229 27 29 0 233 0 142 1 142] 
#[0 11 138 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[1 8 65 0 3 27 33 0 253] 
#[0 11 142 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 11 146 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 27 37 0 191 0 249 0 194 27 37 0 195 27 37 0 196 27 37 0 197] 
#[1 0 29 0 1 0 33 0 9 0 54 0 11 0 249 0 22 0 41 0 24 0 45 0 26 0 49 0 41 0 53 0 42 0 57 0 43 0 249 0 44 0 65 0 48 0 69 0 53 0 249 0 54 0 77 0 55 0 81 0 57 0 85 0 58 0 89 0 71 8 13 0 73 0 249 0 75 0 249 0 82 0 105 0 84 0 249 0 86 0 249 0 87 0 117 0 90 0 121 0 91 0 125 0 98 0 129 0 100 0 133 0 101 1 25 0 103 0 249 0 105 1 25 0 106 0 149 0 107 0 153 0 108 0 157 0 109 0 249 0 113 0 165 0 114 0 169 0 121 27 41 0 122 0 173 0 124 0 177 0 125 1 25 0 130 1 25 0 132 0 189 0 133 0 193 0 134 0 197 0 135 0 201 0 136 0 205 0 137 0 209 0 139 0 249 0 143 0 217 0 147 0 249 0 150 0 225 0 152 0 229 0 153 0 233 0 167 0 237 0 168 0 241 0 171 0 54 0 172 0 54 0 173 0 245 0 191 0 249 0 194 0 245 0 195 0 245 0 196 0 245 0 197 1 9 0 198 8 13 0 201 8 13 0 203 8 13 0 212 8 17 0 215 1 25 0 223 8 13 0 234 1 33 0 235 8 13 0 236 8 13 0 237 8 13 0 238 8 13 0 239 8 13 0 240 8 13 0 241 8 13 0 242 8 13 0 243 8 13 0 247 8 13 0 248 8 13 1 17 8 13 1 18 8 13 1 19 8 13 1 20 8 13 1 21 8 13 1 22 1 101 1 24 8 13 1 25 8 13 1 26 8 13 1 27 8 13 1 28 8 13 1 29 8 13 1 33 8 13 1 36 1 133 1 55 1 133 1 56 1 133 1 57 8 13 1 61 8 13 1 62 8 13 1 63 8 13 1 66 8 13 1 67 8 13 1 68 8 13 1 69 8 13 1 70 8 13 1 71 8 13 1 72 8 13 1 73 8 13 1 74 8 13 1 75 8 13 1 76 8 13 1 77 8 13 1 78 8 13 1 79 8 13 1 80 8 13 1 81 8 13 1 82 8 13 1 83 8 13 1 88 8 13 1 89 1 237 1 90 8 13 1 95 8 13 1 98 8 13 1 99 8 13 1 100 8 13 1 101 8 13 1 102 8 13 1 107 8 13 1 108 8 13 1 109 8 13 1 110 8 13 1 111 8 13 1 112 8 13 1 114 2 37 1 115 2 37 1 116 2 37 1 117 2 37 1 118 2 37 1 119 2 37 1 120 2 37 1 121 2 65 1 122 2 77 1 123 2 73 1 124 2 77 1 125 2 81 1 126 8 13 1 127 2 89 1 128 2 93 1 129 8 13 1 137 8 13 1 138 8 13 1 140] 
#[1 11 150 0 11 11 150 0 80 11 150 0 97 11 150 0 122 11 150 0 162 5 151 0 172 11 150 0 173 11 150 1 142] 
#[0 27 49 0 172] 
#[0 11 154 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 11 158 0 11 11 158 0 80 11 158 0 97 11 158 0 122 11 158 0 162 5 155 0 172 11 158 0 173 11 158 1 142] 
#[0 27 53 0 172] 
#[0 27 57 0 172] 
#[0 27 61 0 172] 
#[0 11 162 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[1 4 9 0 5 0 142 0 22 0 142 0 27 0 142 0 28 0 142 0 29 0 142 0 30 0 142 0 31 0 142 0 32 0 142 0 33 0 142 0 34 0 142 0 35 0 142 0 36 0 142 0 37 0 142 0 38 0 142 0 39 0 142 0 40 0 142 0 44 0 142 0 54 0 142 0 57 0 142 0 71 0 142 0 74 0 142 0 75 0 142 0 82 0 142 0 84 0 142 0 86 0 142 0 87 0 142 0 89 0 142 0 90 0 142 0 98 0 142 0 100 0 142 0 103 0 142 0 104 0 142 0 105 0 142 0 106 0 142 0 110 0 142 0 113 0 142 0 114 0 142 0 121 0 142 0 125 0 142 0 130 0 142 0 131 0 142 0 132 0 142 0 133 0 142 0 137 0 142 0 139 0 142 0 142 0 142 0 143 0 142 0 147 0 142 0 150 0 142 0 167 0 142 0 168 0 142 0 171 7 225 0 172 0 142 0 173 27 65 0 228 27 65 0 229 27 65 0 233 0 142 1 142] 
#[0 11 166 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 11 170 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[0 11 174 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 11 178 0 11 11 178 0 80 11 178 0 97 11 178 0 122 11 178 0 162 5 159 0 172 11 178 0 173 11 178 1 142] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 27 73 0 191 0 249 0 194 27 73 0 195 27 73 0 196 27 73 0 197] 
#[0 27 77 0 122] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 27 81 0 180 27 81 0 181 27 81 0 182 27 81 0 183 27 81 0 184 27 81 0 185 27 81 0 186 27 81 0 187 27 81 0 188 27 81 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 27 81 1 37 27 81 1 38 27 81 1 39 27 81 1 40 27 81 1 41 27 81 1 42 27 81 1 43 27 81 1 44 27 81 1 45 27 81 1 47 27 81 1 49 27 81 1 51 27 81 1 53 27 81 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 27 81 1 139 27 81 1 141] 
#[0 27 85 0 18] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 27 89 0 180 27 89 0 181 27 89 0 182 27 89 0 183 27 89 0 184 27 89 0 185 27 89 0 186 27 89 0 187 27 89 0 188 27 89 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 27 89 1 37 27 89 1 38 27 89 1 39 27 89 1 40 27 89 1 41 27 89 1 42 27 89 1 43 27 89 1 44 27 89 1 45 27 89 1 47 27 89 1 49 27 89 1 51 27 89 1 53 27 89 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 27 89 1 139 27 89 1 141] 
#[0 11 182 0 22 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 44 0 54 0 57 0 71 0 74 0 75 0 82 0 84 0 86 0 87 0 89 0 90 0 98 0 100 0 103 0 104 0 105 0 106 0 110 0 113 0 114 0 121 0 125 0 130 0 131 0 132 0 133 0 137 0 139 0 142 0 143 0 147 0 150 0 167 0 168 0 171 0 173 1 142] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 27 93 0 191 0 249 0 194 27 93 0 195 27 93 0 196 27 93 0 197] 
#[0 11 186 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 11 190 0 11 11 190 0 80 11 190 0 97 11 190 0 122 11 190 0 162 5 163 0 172 11 190 0 173 11 190 1 142] 
#[1 11 194 0 11 11 194 0 80 11 194 0 97 11 194 0 122 11 194 0 162 5 167 0 172 11 194 0 173 11 194 1 142] 
#[0 27 101 0 172] 
#[1 11 198 0 11 11 198 0 80 11 198 0 97 11 198 0 122 11 198 0 162 5 171 0 172 11 198 0 173 11 198 1 142] 
#[0 11 202 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 0 249 0 22 0 249 0 44 0 249 0 54 0 249 0 57 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 0 249 0 137 0 249 0 143 0 249 0 150 0 249 0 167 0 237 0 168 0 241 0 171 27 105 0 191 0 249 0 194 27 105 0 195 27 105 0 196 27 105 0 197] 
#[1 0 29 0 1 4 165 0 3 4 169 0 6 4 173 0 8 0 33 0 9 0 249 0 22 0 41 0 24 0 249 0 44 0 69 0 53 0 249 0 54 0 249 0 57 4 177 0 63 0 249 0 75 0 249 0 82 0 249 0 86 0 249 0 87 0 249 0 105 0 249 0 113 0 249 0 114 0 249 0 121 4 181 0 123 0 249 0 137 0 249 0 143 0 249 0 150 4 185 0 155 4 189 0 160 4 193 0 161 3 173 0 162 4 197 0 163 4 201 0 164 4 205 0 165 4 209 0 166 0 249 0 167 0 237 0 168 4 213 0 170 0 241 0 171 27 109 0 180 27 109 0 181 27 109 0 182 27 109 0 183 27 109 0 184 27 109 0 185 27 109 0 186 27 109 0 187 27 109 0 188 27 109 0 189 5 1 0 191 0 249 0 194 5 1 0 195 5 1 0 196 5 1 0 197 27 109 1 37 27 109 1 38 27 109 1 39 27 109 1 40 27 109 1 41 27 109 1 42 27 109 1 43 27 109 1 44 27 109 1 45 27 109 1 47 27 109 1 49 27 109 1 51 27 109 1 53 27 109 1 54 5 61 1 55 5 61 1 56 5 61 1 57 4 149 1 122 5 69 1 123 5 65 1 124 5 69 1 125 2 89 1 128 5 73 1 129 27 109 1 139 27 109 1 141] 
#[0 11 206 0 11 0 80 0 97 0 122 0 162 0 172 0 173 1 142] 
#[1 11 210 0 11 11 210 0 80 11 210 0 97 11 210 0 122 11 210 0 162 5 175 0 172 11 210 0 173 11 210 1 142]
	).
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForAddressOfClause1: nodes [
	| result |
	result := VBAddressOfClauseNode new.
	result addressOfToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result name: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgument2: nodes [
	| result |
	result := VBArgumentNode new.
	result value: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgument4: nodes [
	| result |
	result := VBArgumentNode new.
	result paramarrayToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgument6: nodes [
	| result |
	result := VBArgumentNode new.
	result strategy: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgument8: nodes [
	| result |
	result := VBArgumentNode new.
	result strategy: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result paramarrayToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result value: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgumentList1: nodes [
	| result |
	result := VBArgumentListNode new.
	result addTokens: ((nodes at: 1) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 1) at: 2) to: result whitespaceTokens.
	result addTokens: ((nodes at: 1) at: 3) to: result semicolonTokens.
	result addNodes: ((nodes at: 1) at: 4) to: result arguments.
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 2) at: 2) to: result arguments.
	result addTokens: ((nodes at: 2) at: 3) to: result whitespaceTokens.
	result addTokens: ((nodes at: 2) at: 4) to: result semicolonTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArgumentList2: nodes [
	| result |
	result := VBArgumentListNode new.
	result addTokens: ((nodes at: 1) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 1) at: 2) to: result whitespaceTokens.
	result addTokens: ((nodes at: 1) at: 3) to: result semicolonTokens.
	result addNodes: ((nodes at: 1) at: 4) to: result arguments.
	result addNode: (nodes at: 2) to: result arguments.
	result addTokens: ((nodes at: 3) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 3) at: 2) to: result arguments.
	result addTokens: ((nodes at: 3) at: 3) to: result whitespaceTokens.
	result addTokens: ((nodes at: 3) at: 4) to: result semicolonTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperation1: nodes [
	| result |
	result := VBArithmeticOperationNode new.
	result left: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result timesToken: ((nodes at: 3) at: 1).
	result plusToken: ((nodes at: 3) at: 2).
	result minusToken: ((nodes at: 3) at: 3).
	result divideToken: ((nodes at: 3) at: 4).
	result upArrowToken: ((nodes at: 3) at: 5).
	result _Token: ((nodes at: 3) at: 6).
	result modToken: ((nodes at: 3) at: 7).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result right: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator1: nodes [
	| result |
	result := Array new: 7.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator2: nodes [
	| result |
	result := Array new: 7.
	result at: 2 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator3: nodes [
	| result |
	result := Array new: 7.
	result at: 3 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForArithmeticOperator4: nodes [
	| result |
	result := Array new: 7.
	result at: 4 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForAssignment2: nodes [
	| result |
	result := VBExplicitAssignementNode new.
	result left: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result operator: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result right: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForAttribute1: nodes [
	| result |
	result := VBModuleAttributeNode new.
	result attributeToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result setting: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBaseType15: nodes [
	| result |
	result := VBBaseTypeNode new.
	result variantToken: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBlock1: nodes [
	| result |
	result := VBBlockNode new.
	result addObjects: ((nodes at: 1) at: 1) to: result statements.
	result addNodes: ((nodes at: 1) at: 2) to: result lineNumbers.
	result addTokens: ((nodes at: 1) at: 3) to: result whitespaceTokens.
	result addTokens: ((nodes at: 1) at: 4) to: result eolTokens.
	result addTokens: ((nodes at: 1) at: 5) to: result colonTokens.
	result addTokens: (nodes at: 2) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBlock2: nodes [
	| result |
	result := VBBlockNode new.
	result addObject: (nodes at: 1) to: result statements.
	result addObjects: ((nodes at: 2) at: 1) to: result statements.
	result addNodes: ((nodes at: 2) at: 2) to: result lineNumbers.
	result addTokens: ((nodes at: 2) at: 3) to: result whitespaceTokens.
	result addTokens: ((nodes at: 2) at: 4) to: result eolTokens.
	result addTokens: ((nodes at: 2) at: 5) to: result colonTokens.
	result addTokens: (nodes at: 3) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBlock3: nodes [
	| result |
	result := VBBlockNode new.
	result addNode: (nodes at: 1) to: result lineNumbers.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addObjects: ((nodes at: 3) at: 1) to: result statements.
	result addNodes: ((nodes at: 3) at: 2) to: result lineNumbers.
	result addTokens: ((nodes at: 3) at: 3) to: result whitespaceTokens.
	result addTokens: ((nodes at: 3) at: 4) to: result eolTokens.
	result addTokens: ((nodes at: 3) at: 5) to: result colonTokens.
	result addTokens: (nodes at: 4) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBlock4: nodes [
	| result |
	result := VBBlockNode new.
	result addNode: (nodes at: 1) to: result lineNumbers.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addObject: (nodes at: 3) to: result statements.
	result addObjects: ((nodes at: 4) at: 1) to: result statements.
	result addNodes: ((nodes at: 4) at: 2) to: result lineNumbers.
	result addTokens: ((nodes at: 4) at: 3) to: result whitespaceTokens.
	result addTokens: ((nodes at: 4) at: 4) to: result eolTokens.
	result addTokens: ((nodes at: 4) at: 5) to: result colonTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanBinaryOperation1: nodes [
	| result |
	result := VBArithmeticOperationNode new.
	result left: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result andToken: ((nodes at: 3) at: 1).
	result orToken: ((nodes at: 3) at: 2).
	result xorToken: ((nodes at: 3) at: 3).
	result eqvToken: ((nodes at: 3) at: 4).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result right: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanLiteral1: nodes [
	| result |
	result := VBBooleanLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanOperator2: nodes [
	| result |
	result := Array new: 4.
	result at: 2 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForBooleanOperator4: nodes [
	| result |
	result := Array new: 4.
	result at: 4 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase10: nodes [
	| result |
	result := VBCaseNode new.
	result caseToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result elseToken: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 4) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 4) at: 3) to: result expressions.
	result colonToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase11: nodes [
	| result |
	result := VBCaseNode new.
	result caseToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result elseToken: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 4) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 4) at: 3) to: result expressions.
	result colonToken: (nodes at: 5).
	result body: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase13: nodes [
	| result |
	result := VBCaseNode new.
	result lineNumber: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result caseToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result expressions.
	result addTokens: ((nodes at: 6) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 6) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 6) at: 3) to: result expressions.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase14: nodes [
	| result |
	result := VBCaseNode new.
	result lineNumber: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result caseToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result expressions.
	result addTokens: ((nodes at: 6) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 6) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 6) at: 3) to: result expressions.
	result body: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase16: nodes [
	| result |
	result := VBCaseNode new.
	result lineNumber: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result caseToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result expressions.
	result addTokens: ((nodes at: 6) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 6) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 6) at: 3) to: result expressions.
	result colonToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase17: nodes [
	| result |
	result := VBCaseNode new.
	result lineNumber: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result caseToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result expressions.
	result addTokens: ((nodes at: 6) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 6) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 6) at: 3) to: result expressions.
	result colonToken: (nodes at: 7).
	result body: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase19: nodes [
	| result |
	result := VBCaseNode new.
	result lineNumber: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result caseToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result elseToken: (nodes at: 5).
	result addTokens: ((nodes at: 6) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 6) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 6) at: 3) to: result expressions.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase1: nodes [
	| result |
	result := VBCaseNode new.
	result caseToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addNode: (nodes at: 3) to: result expressions.
	result addTokens: ((nodes at: 4) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 4) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 4) at: 3) to: result expressions.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase20: nodes [
	| result |
	result := VBCaseNode new.
	result lineNumber: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result caseToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result elseToken: (nodes at: 5).
	result addTokens: ((nodes at: 6) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 6) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 6) at: 3) to: result expressions.
	result body: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase22: nodes [
	| result |
	result := VBCaseNode new.
	result lineNumber: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result caseToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result elseToken: (nodes at: 5).
	result addTokens: ((nodes at: 6) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 6) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 6) at: 3) to: result expressions.
	result colonToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase23: nodes [
	| result |
	result := VBCaseNode new.
	result lineNumber: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result caseToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result elseToken: (nodes at: 5).
	result addTokens: ((nodes at: 6) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 6) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 6) at: 3) to: result expressions.
	result colonToken: (nodes at: 7).
	result body: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase2: nodes [
	| result |
	result := VBCaseNode new.
	result caseToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addNode: (nodes at: 3) to: result expressions.
	result addTokens: ((nodes at: 4) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 4) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 4) at: 3) to: result expressions.
	result body: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase4: nodes [
	| result |
	result := VBCaseNode new.
	result caseToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addNode: (nodes at: 3) to: result expressions.
	result addTokens: ((nodes at: 4) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 4) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 4) at: 3) to: result expressions.
	result colonToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase5: nodes [
	| result |
	result := VBCaseNode new.
	result caseToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addNode: (nodes at: 3) to: result expressions.
	result addTokens: ((nodes at: 4) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 4) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 4) at: 3) to: result expressions.
	result colonToken: (nodes at: 5).
	result body: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase7: nodes [
	| result |
	result := VBCaseNode new.
	result caseToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result elseToken: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 4) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 4) at: 3) to: result expressions.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForCase8: nodes [
	| result |
	result := VBCaseNode new.
	result caseToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result elseToken: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 4) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 4) at: 3) to: result expressions.
	result body: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForColorLiteral1: nodes [
	| result |
	result := VBColorLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForComparisonOperation1: nodes [
	| result |
	result := VBComparisonOperationNode new.
	result left: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result greaterThanToken: ((nodes at: 3) at: 1).
	result lessThanToken: ((nodes at: 3) at: 2).
	result lessThanGreaterThanToken: ((nodes at: 3) at: 3).
	result lessThanEqualToken: ((nodes at: 3) at: 4).
	result greaterThanEqualToken: ((nodes at: 3) at: 5).
	result iSToken: ((nodes at: 3) at: 6).
	result lIKEToken: ((nodes at: 3) at: 7).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result right: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForComparisonOperator5: nodes [
	| result |
	result := Array new: 7.
	result at: 5 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForComparisonOperator6: nodes [
	| result |
	result := Array new: 7.
	result at: 6 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForComparisonOperator7: nodes [
	| result |
	result := Array new: 7.
	result at: 7 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForComplexType1: nodes [
	| result |
	result := VBComplexTypeNode new.
	result addTokens: ((nodes at: 1) at: 1) to: result periodTokens.
	result addTokens: ((nodes at: 1) at: 2) to: result members.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForComplexType2: nodes [
	| result |
	result := VBComplexTypeNode new.
	result base: (nodes at: 1).
	result addTokens: ((nodes at: 2) at: 1) to: result periodTokens.
	result addTokens: ((nodes at: 2) at: 2) to: result members.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConcatenationOperation1: nodes [
	| result |
	result := VBConcatenationOperationNode new.
	result left: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result andToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result right: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConfiguration1: nodes [
	| result |
	result := VBConfigurationNode new.
	result beginToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result eolTokens.
	result addNode: (nodes at: 3) to: result settings.
	result addNodes: ((nodes at: 4) at: 1) to: result settings.
	result addTokens: ((nodes at: 4) at: 2) to: result eolTokens.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConstant1: nodes [
	| result |
	result := VBConstantNode new.
	result constant: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result equalToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result value: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConstant2: nodes [
	| result |
	result := VBConstantNode new.
	result constant: (nodes at: 1).
	result type: (nodes at: 2).
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result equalToken: (nodes at: 4).
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result value: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForConstantList1: nodes [
	| result |
	result := VBConstantListNode new.
	result addNode: (nodes at: 1) to: result constants.
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 2) at: 2) to: result constants.
	result addTokens: ((nodes at: 2) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDateLiteral1: nodes [
	| result |
	result := VBDateLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction10: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result declareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result functionToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result libToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result library: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result parameters: (nodes at: 13).
	result type: (nodes at: 14).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction11: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result declareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result functionToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result libToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result library: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result aliasToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result alias: (nodes at: 15).
	result parameters: (nodes at: 16).
	result type: (nodes at: 17).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction12: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result declareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result functionToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result libToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result library: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result aliasToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result alias: (nodes at: 15).
	result addToken: (nodes at: 16) to: result whitespaceTokens.
	result parameters: (nodes at: 17).
	result type: (nodes at: 18).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction1: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result declareToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result functionToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result libToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result library: (nodes at: 9).
	result parameters: (nodes at: 10).
	result type: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction2: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result declareToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result functionToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result libToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result library: (nodes at: 9).
	result aliasToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result alias: (nodes at: 12).
	result parameters: (nodes at: 13).
	result type: (nodes at: 14).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction3: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result declareToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result functionToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result libToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result library: (nodes at: 9).
	result aliasToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result alias: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result parameters: (nodes at: 14).
	result type: (nodes at: 15).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction4: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result declareToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result functionToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result libToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result library: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result parameters: (nodes at: 11).
	result type: (nodes at: 12).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction5: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result declareToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result functionToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result libToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result library: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result aliasToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result alias: (nodes at: 13).
	result parameters: (nodes at: 14).
	result type: (nodes at: 15).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction6: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result declareToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result functionToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result libToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result library: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result aliasToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result alias: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result parameters: (nodes at: 15).
	result type: (nodes at: 16).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction7: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result declareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result functionToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result libToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result library: (nodes at: 11).
	result parameters: (nodes at: 12).
	result type: (nodes at: 13).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction8: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result declareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result functionToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result libToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result library: (nodes at: 11).
	result aliasToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result alias: (nodes at: 14).
	result parameters: (nodes at: 15).
	result type: (nodes at: 16).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareFunction9: nodes [
	| result |
	result := VBExternalFunctionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result declareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result functionToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result libToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result library: (nodes at: 11).
	result aliasToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result alias: (nodes at: 14).
	result addToken: (nodes at: 15) to: result whitespaceTokens.
	result parameters: (nodes at: 16).
	result type: (nodes at: 17).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub10: nodes [
	| result |
	result := VBExternalSubNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result declareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result subToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result libToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result library: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result parameters: (nodes at: 13).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub11: nodes [
	| result |
	result := VBExternalSubNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result declareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result subToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result libToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result library: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result aliasToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result alias: (nodes at: 15).
	result parameters: (nodes at: 16).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub12: nodes [
	| result |
	result := VBExternalSubNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result declareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result subToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result libToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result library: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result aliasToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result alias: (nodes at: 15).
	result addToken: (nodes at: 16) to: result whitespaceTokens.
	result parameters: (nodes at: 17).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub1: nodes [
	| result |
	result := VBExternalSubNode new.
	result declareToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result subToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result libToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result library: (nodes at: 9).
	result parameters: (nodes at: 10).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub2: nodes [
	| result |
	result := VBExternalSubNode new.
	result declareToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result subToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result libToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result library: (nodes at: 9).
	result aliasToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result alias: (nodes at: 12).
	result parameters: (nodes at: 13).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub3: nodes [
	| result |
	result := VBExternalSubNode new.
	result declareToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result subToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result libToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result library: (nodes at: 9).
	result aliasToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result alias: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result parameters: (nodes at: 14).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub4: nodes [
	| result |
	result := VBExternalSubNode new.
	result declareToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result subToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result libToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result library: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result parameters: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub5: nodes [
	| result |
	result := VBExternalSubNode new.
	result declareToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result subToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result libToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result library: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result aliasToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result alias: (nodes at: 13).
	result parameters: (nodes at: 14).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub6: nodes [
	| result |
	result := VBExternalSubNode new.
	result declareToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result subToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result libToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result library: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result aliasToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result alias: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result parameters: (nodes at: 15).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub7: nodes [
	| result |
	result := VBExternalSubNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result declareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result subToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result libToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result library: (nodes at: 11).
	result parameters: (nodes at: 12).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub8: nodes [
	| result |
	result := VBExternalSubNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result declareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result subToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result libToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result library: (nodes at: 11).
	result aliasToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result alias: (nodes at: 14).
	result parameters: (nodes at: 15).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDeclareSub9: nodes [
	| result |
	result := VBExternalSubNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result declareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result subToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result libToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result library: (nodes at: 11).
	result aliasToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result alias: (nodes at: 14).
	result addToken: (nodes at: 15) to: result whitespaceTokens.
	result parameters: (nodes at: 16).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefType1: nodes [
	| result |
	result := VBDefTypeNode new.
	result deftype: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result pattern: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineEnum1: nodes [
	| result |
	result := VBDefineEnumNode new.
	result addToken: (nodes at: 1) to: result enumTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result name: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 4) at: 2) to: result fields.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result addToken: (nodes at: 8) to: result enumTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineEnum2: nodes [
	| result |
	result := VBDefineEnumNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result enumTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result name: (nodes at: 5).
	result addTokens: ((nodes at: 6) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 6) at: 2) to: result fields.
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result addToken: (nodes at: 10) to: result enumTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction10: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result functionTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result type: ((nodes at: 8) at: 1).
	result _size: ((nodes at: 8) at: 2).
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction11: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result functionTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result parameters: (nodes at: 7).
	result type: ((nodes at: 8) at: 1).
	result _size: ((nodes at: 8) at: 2).
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction12: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result functionTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result parameters: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result type: ((nodes at: 9) at: 1).
	result _size: ((nodes at: 9) at: 2).
	result block: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result addToken: (nodes at: 13) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction13: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result modifier: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result functionTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result parameters: (nodes at: 8).
	result type: ((nodes at: 9) at: 1).
	result _size: ((nodes at: 9) at: 2).
	result block: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result addToken: (nodes at: 13) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction14: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result modifier: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result functionTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result parameters: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result type: ((nodes at: 10) at: 1).
	result _size: ((nodes at: 10) at: 2).
	result block: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result addToken: (nodes at: 14) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction15: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result modifier: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result functionTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result parameters: (nodes at: 9).
	result type: ((nodes at: 10) at: 1).
	result _size: ((nodes at: 10) at: 2).
	result block: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result addToken: (nodes at: 14) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction16: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result modifier: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result functionTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result parameters: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result type: ((nodes at: 11) at: 1).
	result _size: ((nodes at: 11) at: 2).
	result block: (nodes at: 12).
	result endToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result addToken: (nodes at: 15) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction1: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result addToken: (nodes at: 1) to: result functionTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result type: ((nodes at: 5) at: 1).
	result _size: ((nodes at: 5) at: 2).
	result block: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result addToken: (nodes at: 9) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction2: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result addToken: (nodes at: 1) to: result functionTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result type: ((nodes at: 6) at: 1).
	result _size: ((nodes at: 6) at: 2).
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result addToken: (nodes at: 10) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction3: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result addToken: (nodes at: 1) to: result functionTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result selector: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result parameters: (nodes at: 5).
	result type: ((nodes at: 6) at: 1).
	result _size: ((nodes at: 6) at: 2).
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result addToken: (nodes at: 10) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction4: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result addToken: (nodes at: 1) to: result functionTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result selector: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result parameters: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result type: ((nodes at: 7) at: 1).
	result _size: ((nodes at: 7) at: 2).
	result block: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result addToken: (nodes at: 11) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction5: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result functionTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result type: ((nodes at: 7) at: 1).
	result _size: ((nodes at: 7) at: 2).
	result block: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result addToken: (nodes at: 11) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction6: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result functionTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result type: ((nodes at: 8) at: 1).
	result _size: ((nodes at: 8) at: 2).
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction7: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result functionTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result parameters: (nodes at: 7).
	result type: ((nodes at: 8) at: 1).
	result _size: ((nodes at: 8) at: 2).
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction8: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result functionTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result parameters: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result type: ((nodes at: 9) at: 1).
	result _size: ((nodes at: 9) at: 2).
	result block: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result addToken: (nodes at: 13) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineFunction9: nodes [
	| result |
	result := VBFunctionDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result functionTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result type: ((nodes at: 7) at: 1).
	result _size: ((nodes at: 7) at: 2).
	result block: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result addToken: (nodes at: 11) to: result functionTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub10: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result subTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result block: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result addToken: (nodes at: 11) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub11: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result subTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result block: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result addToken: (nodes at: 11) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub12: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result subTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result parameters: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub13: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result modifier: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result subTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub14: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result modifier: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result subTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result parameters: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result block: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result addToken: (nodes at: 13) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub15: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result modifier: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result subTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result block: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result addToken: (nodes at: 13) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub16: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result modifier: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result subTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result parameters: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result block: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result addToken: (nodes at: 14) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub1: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result addToken: (nodes at: 1) to: result subTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result selector: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result block: (nodes at: 5).
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result addToken: (nodes at: 8) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub2: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result addToken: (nodes at: 1) to: result subTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result block: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result addToken: (nodes at: 9) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub3: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result addToken: (nodes at: 1) to: result subTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result selector: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result block: (nodes at: 6).
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result addToken: (nodes at: 9) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub4: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result addToken: (nodes at: 1) to: result subTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result selector: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result parameters: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result addToken: (nodes at: 10) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub5: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result subTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result addToken: (nodes at: 10) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub6: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result subTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result block: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result addToken: (nodes at: 11) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub7: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result subTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result block: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result addToken: (nodes at: 11) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub8: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result subTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result parameters: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineSub9: nodes [
	| result |
	result := VBSubDefinitionNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result subTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result addToken: (nodes at: 10) to: result subTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineType1: nodes [
	| result |
	result := VBDefineTypeNode new.
	result addToken: (nodes at: 1) to: result typeTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result name: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 4) at: 2) to: result fields.
	result addTokens: (nodes at: 5) to: result eolTokens.
	result endToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result addToken: (nodes at: 8) to: result typeTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineType2: nodes [
	| result |
	result := VBDefineTypeNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result typeTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result name: (nodes at: 5).
	result addTokens: ((nodes at: 6) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 6) at: 2) to: result fields.
	result addTokens: (nodes at: 7) to: result eolTokens.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result addToken: (nodes at: 10) to: result typeTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineVariable1: nodes [
	| result |
	result := VBDimVariableNode new.
	result dimToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result variable: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDefineVariables1: nodes [
	| result |
	result := VBDimMultipleVariablesNode new.
	result dimToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result variables: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDestinationList1: nodes [
	| result |
	result := VBDestinationListNode new.
	result addNode: (nodes at: 1) to: result labels.
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 2) at: 2) to: result labels.
	result addTokens: ((nodes at: 2) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDictionaryAccess1: nodes [
	| result |
	result := VBDictionaryAccessNode new.
	result bangToken: (nodes at: 1).
	result member: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDictionaryAccess2: nodes [
	| result |
	result := VBDictionaryAccessNode new.
	result receiver: (nodes at: 1).
	result bangToken: (nodes at: 2).
	result member: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoEvents1: nodes [
	| result |
	result := VBDoEventsNode new.
	result doEventsToken: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoUntilTrue1: nodes [
	| result |
	result := VBDoUntilTrueNode new.
	result doToken: (nodes at: 1).
	result body: (nodes at: 2).
	result loopToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result untilToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result condition: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoUntilTrue2: nodes [
	| result |
	result := VBDoUntilTrueNode new.
	result doToken: (nodes at: 1).
	result body: (nodes at: 2).
	result endLineNumber: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result loopToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result untilToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result condition: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoWhileTrue1: nodes [
	| result |
	result := VBDoWhileTrueNode new.
	result doToken: (nodes at: 1).
	result loopToken: (nodes at: 2).
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result whileToken: (nodes at: 4).
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result condition: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoWhileTrue2: nodes [
	| result |
	result := VBDoWhileTrueNode new.
	result doToken: (nodes at: 1).
	result endLineNumber: (nodes at: 2).
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result loopToken: (nodes at: 4).
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result whileToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result condition: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoWhileTrue3: nodes [
	| result |
	result := VBDoWhileTrueNode new.
	result doToken: (nodes at: 1).
	result body: (nodes at: 2).
	result loopToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result whileToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result condition: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForDoWhileTrue4: nodes [
	| result |
	result := VBDoWhileTrueNode new.
	result doToken: (nodes at: 1).
	result body: (nodes at: 2).
	result endLineNumber: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result loopToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result whileToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result condition: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElse1: nodes [
	| result |
	result := VBElseIfBlockNode new.
	result elseToken: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElse2: nodes [
	| result |
	result := VBElseIfBlockNode new.
	result elseToken: (nodes at: 1).
	result ifMatch: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElse3: nodes [
	| result |
	result := VBElseIfBlockNode new.
	result endLineNumber: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result elseToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElse4: nodes [
	| result |
	result := VBElseIfBlockNode new.
	result endLineNumber: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result elseToken: (nodes at: 3).
	result ifMatch: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElseIf1: nodes [
	| result |
	result := VBElseIfBlockNode new.
	result elseifToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result thenToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElseIf2: nodes [
	| result |
	result := VBElseIfBlockNode new.
	result elseifToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result thenToken: (nodes at: 5).
	result ifMatch: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElseIf3: nodes [
	| result |
	result := VBElseIfBlockNode new.
	result endLineNumber: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result elseifToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result condition: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result thenToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForElseIf4: nodes [
	| result |
	result := VBElseIfBlockNode new.
	result endLineNumber: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result elseifToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result condition: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result thenToken: (nodes at: 7).
	result ifMatch: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEnumEntry1: nodes [
	| result |
	result := VBEnumEntryNode new.
	result name: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEnumEntry2: nodes [
	| result |
	result := VBEnumEntryNode new.
	result name: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result equalToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result value: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEquals1: nodes [
	| result |
	result := VBEqualsNode new.
	result left: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result operator: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result right: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEvent1: nodes [
	| result |
	result := VBEventNode new.
	result eventToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result selector: (nodes at: 3).
	result parameters: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEvent2: nodes [
	| result |
	result := VBEventNode new.
	result eventToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result selector: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result parameters: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEvent3: nodes [
	| result |
	result := VBEventNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eventToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForEvent4: nodes [
	| result |
	result := VBEventNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eventToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result parameters: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitDo1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result doToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitFor1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result fORToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitFunction1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result functionToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitProperty1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result propertyToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExitSub1: nodes [
	| result |
	result := VBExitsNode new.
	result exitToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result subToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExplicitAssignement2: nodes [
	| result |
	result := VBExplicitAssignementNode new.
	result kind: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result left: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result operator: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result right: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForExplicitCall1: nodes [
	| result |
	result := VBExplicitCallNode new.
	result callToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result selector: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForFileDescriptorLiteral1: nodes [
	| result |
	result := VBFileDescriptorLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForFloatLiteral1: nodes [
	| result |
	result := VBFloatLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach10: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result nextToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result addNode: (nodes at: 13) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach11: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result endLineNumber: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result nextToken: (nodes at: 13).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach12: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result endLineNumber: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result nextToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result addNode: (nodes at: 15) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach13: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result body: (nodes at: 11).
	result nextToken: (nodes at: 12).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach14: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result body: (nodes at: 11).
	result nextToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result addNode: (nodes at: 14) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach15: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result body: (nodes at: 11).
	result endLineNumber: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result nextToken: (nodes at: 14).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach16: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result body: (nodes at: 11).
	result endLineNumber: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result nextToken: (nodes at: 14).
	result addToken: (nodes at: 15) to: result whitespaceTokens.
	result addNode: (nodes at: 16) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach1: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result nextToken: (nodes at: 10).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach2: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result nextToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addNode: (nodes at: 12) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach3: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result endLineNumber: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result nextToken: (nodes at: 12).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach4: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result endLineNumber: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result nextToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result addNode: (nodes at: 14) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach5: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result body: (nodes at: 10).
	result nextToken: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach6: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result body: (nodes at: 10).
	result nextToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result addNode: (nodes at: 13) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach7: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result body: (nodes at: 10).
	result endLineNumber: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result nextToken: (nodes at: 13).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach8: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result body: (nodes at: 10).
	result endLineNumber: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result nextToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result addNode: (nodes at: 15) to: result elements.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForEach9: nodes [
	| result |
	result := VBForEachNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eachToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addNode: (nodes at: 5) to: result elements.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result inToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result group: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result nextToken: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext1: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result nextToken: (nodes at: 12).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext2: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result nextToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result element: (nodes at: 14).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext3: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result endLineNumber: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result nextToken: (nodes at: 14).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext4: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result endLineNumber: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result nextToken: (nodes at: 14).
	result addToken: (nodes at: 15) to: result whitespaceTokens.
	result element: (nodes at: 16).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext5: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result body: (nodes at: 12).
	result nextToken: (nodes at: 13).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext6: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result body: (nodes at: 12).
	result nextToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result element: (nodes at: 15).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext7: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result body: (nodes at: 12).
	result endLineNumber: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result nextToken: (nodes at: 15).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForNext8: nodes [
	| result |
	result := VBForNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result body: (nodes at: 12).
	result endLineNumber: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result nextToken: (nodes at: 15).
	result addToken: (nodes at: 16) to: result whitespaceTokens.
	result element: (nodes at: 17).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext1: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result stepToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result step: (nodes at: 15).
	result nextToken: (nodes at: 16).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext2: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result stepToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result step: (nodes at: 15).
	result nextToken: (nodes at: 16).
	result addToken: (nodes at: 17) to: result whitespaceTokens.
	result element: (nodes at: 18).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext3: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result stepToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result step: (nodes at: 15).
	result endLineNumber: (nodes at: 16).
	result addToken: (nodes at: 17) to: result whitespaceTokens.
	result nextToken: (nodes at: 18).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext4: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result stepToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result step: (nodes at: 15).
	result endLineNumber: (nodes at: 16).
	result addToken: (nodes at: 17) to: result whitespaceTokens.
	result nextToken: (nodes at: 18).
	result addToken: (nodes at: 19) to: result whitespaceTokens.
	result element: (nodes at: 20).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext5: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result stepToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result step: (nodes at: 15).
	result body: (nodes at: 16).
	result nextToken: (nodes at: 17).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext6: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result stepToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result step: (nodes at: 15).
	result body: (nodes at: 16).
	result nextToken: (nodes at: 17).
	result addToken: (nodes at: 18) to: result whitespaceTokens.
	result element: (nodes at: 19).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext7: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result stepToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result step: (nodes at: 15).
	result body: (nodes at: 16).
	result endLineNumber: (nodes at: 17).
	result addToken: (nodes at: 18) to: result whitespaceTokens.
	result nextToken: (nodes at: 19).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForForStepNext8: nodes [
	| result |
	result := VBForStepNextNode new.
	result fORToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result counter: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result equalToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result initialValue: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result toToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result limit: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result stepToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result step: (nodes at: 15).
	result body: (nodes at: 16).
	result endLineNumber: (nodes at: 17).
	result addToken: (nodes at: 18) to: result whitespaceTokens.
	result nextToken: (nodes at: 19).
	result addToken: (nodes at: 20) to: result whitespaceTokens.
	result element: (nodes at: 21).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForGoSub1: nodes [
	| result |
	result := VBGoSubNode new.
	result gosubToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result destination: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForGoToStatement1: nodes [
	| result |
	result := VBGoToStatementNode new.
	result gotoToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result destination: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForGuidLiteral1: nodes [
	| result |
	result := VBGuidLiteralNode new.
	result leftBraceToken: (nodes at: 1).
	result addTokens: (nodes at: 2) to: result hEX_INTEGERTokens.
	result addToken: (nodes at: 3) to: result minusTokens.
	result addTokens: (nodes at: 4) to: result hEX_INTEGERTokens.
	result addToken: (nodes at: 5) to: result minusTokens.
	result addTokens: (nodes at: 6) to: result hEX_INTEGERTokens.
	result addToken: (nodes at: 7) to: result minusTokens.
	result addTokens: (nodes at: 8) to: result hEX_INTEGERTokens.
	result addToken: (nodes at: 9) to: result minusTokens.
	result addTokens: (nodes at: 10) to: result hEX_INTEGERTokens.
	result rightBraceToken: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForHashIdentifier1: nodes [
	| result |
	result := VBHashIdentifierNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse1: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result thenToken: (nodes at: 5).
	result
		ifTrue: (nodes at: 6).
	result addNodes: (nodes at: 7) to: result elseifs.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result addToken: (nodes at: 10) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse2: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result thenToken: (nodes at: 5).
	result
		ifTrue: (nodes at: 6).
	result addNodes: (nodes at: 7) to: result elseifs.
	result endLineNumber: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse3: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result thenToken: (nodes at: 5).
	result
		ifTrue: (nodes at: 6).
	result addNodes: (nodes at: 7) to: result elseifs.
	result else: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result addToken: (nodes at: 11) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElse4: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result thenToken: (nodes at: 5).
	result
		ifTrue: (nodes at: 6).
	result addNodes: (nodes at: 7) to: result elseifs.
	result else: (nodes at: 8).
	result endLineNumber: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result addToken: (nodes at: 13) to: result ifTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseOneLine1: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result thenToken: (nodes at: 5).
	result
		ifTrue: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseOneLine2: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result thenToken: (nodes at: 5).
	result
		ifTrue: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result elseToken: (nodes at: 8).
	result
		ifFalse: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseOneLine3: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result thenToken: (nodes at: 5).
	result
		ifTrue: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result elseColonToken: (nodes at: 8).
	result
		ifFalse: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseOneLine4: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result thenColonToken: (nodes at: 5).
	result
		ifTrue: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseOneLine5: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result thenColonToken: (nodes at: 5).
	result
		ifTrue: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result elseToken: (nodes at: 8).
	result
		ifFalse: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIfThenElseOneLine6: nodes [
	| result |
	result := VBIfThenElseNode new.
	result addToken: (nodes at: 1) to: result ifTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result thenColonToken: (nodes at: 5).
	result
		ifTrue: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result elseColonToken: (nodes at: 8).
	result
		ifFalse: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForImplements1: nodes [
	| result |
	result := VBImplementsNode new.
	result implementsToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result interface: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForImplicitParenthesesLessCall1: nodes [
	| result |
	result := VBImplicitParenthesesLessCallNode new.
	result selector: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result arguments: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForImplicitParenthesesLessCall2: nodes [
	| result |
	result := VBImplicitParenthesesLessCallNode new.
	result selector: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForInfinityLoop1: nodes [
	| result |
	result := VBInfinityLoopNode new.
	result doToken: (nodes at: 1).
	result loopToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForInfinityLoop2: nodes [
	| result |
	result := VBInfinityLoopNode new.
	result doToken: (nodes at: 1).
	result endLineNumber: (nodes at: 2).
	result whitespaceToken: (nodes at: 3).
	result loopToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForInfinityLoop3: nodes [
	| result |
	result := VBInfinityLoopNode new.
	result doToken: (nodes at: 1).
	result body: (nodes at: 2).
	result loopToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForInfinityLoop4: nodes [
	| result |
	result := VBInfinityLoopNode new.
	result doToken: (nodes at: 1).
	result body: (nodes at: 2).
	result endLineNumber: (nodes at: 3).
	result whitespaceToken: (nodes at: 4).
	result loopToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForIntegerLiteral1: nodes [
	| result |
	result := VBIntegerLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForInterval1: nodes [
	| result |
	result := VBIntervalNode new.
	result from: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result toToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result to: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabel1: nodes [
	| result |
	result := VBLabelNode new.
	result label: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLabelTag1: nodes [
	| result |
	result := VBLabelTagNode new.
	result name: (nodes at: 1).
	result colonToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLineInputClause5: nodes [
	| result |
	result := VBLineInputClauseNode new.
	result lineToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result iNPUTToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result fileNumber: (nodes at: 5).
	result commaToken: (nodes at: 6).
	result value: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLineInputClause6: nodes [
	| result |
	result := VBLineInputClauseNode new.
	result lineToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result iNPUTToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result fileNumber: (nodes at: 5).
	result commaToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result value: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLineInputClause7: nodes [
	| result |
	result := VBLineInputClauseNode new.
	result lineToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result iNPUTToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result fileNumber: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result commaToken: (nodes at: 7).
	result value: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForLineInputClause8: nodes [
	| result |
	result := VBLineInputClauseNode new.
	result lineToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result iNPUTToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result fileNumber: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result commaToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result value: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForMemberAccess1: nodes [
	| result |
	result := VBMemberAccessNode new.
	result periodToken: (nodes at: 1).
	result member: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForMemberAccess2: nodes [
	| result |
	result := VBMemberAccessNode new.
	result receiver: (nodes at: 1).
	result periodToken: (nodes at: 2).
	result member: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleConstant1: nodes [
	| result |
	result := VBModuleConstantNode new.
	result constToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result constant: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleConstant2: nodes [
	| result |
	result := VBModuleConstantNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result constToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result constant: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleConstants1: nodes [
	| result |
	result := VBModuleMultipleConstantsNode new.
	result constToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result constants: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleConstants2: nodes [
	| result |
	result := VBModuleMultipleConstantsNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result constToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result constants: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleProperties1: nodes [
	| result |
	result := VBModuleMultiplePropertiesNode new.
	result visibility: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result variables: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModuleProperty1: nodes [
	| result |
	result := VBModulePropertyNode new.
	result visibility: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result variable: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet10: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result modifier: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result propertyTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result getToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result selector: (nodes at: 9).
	result parameters: (nodes at: 10).
	result block: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result addToken: (nodes at: 14) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet11: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result modifier: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result propertyTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result getToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result selector: (nodes at: 9).
	result parameters: (nodes at: 10).
	result type: (nodes at: 11).
	result block: (nodes at: 12).
	result endToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result addToken: (nodes at: 15) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet12: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result modifier: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result propertyTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result getToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result selector: (nodes at: 9).
	result parameters: (nodes at: 10).
	result type: (nodes at: 11).
	result _size: (nodes at: 12).
	result block: (nodes at: 13).
	result endToken: (nodes at: 14).
	result addToken: (nodes at: 15) to: result whitespaceTokens.
	result addToken: (nodes at: 16) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet1: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result getToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet2: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result getToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result type: (nodes at: 7).
	result block: (nodes at: 8).
	result endToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result addToken: (nodes at: 11) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet3: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result getToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result type: (nodes at: 7).
	result _size: (nodes at: 8).
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet4: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result propertyTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result getToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result parameters: (nodes at: 8).
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet5: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result propertyTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result getToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result parameters: (nodes at: 8).
	result type: (nodes at: 9).
	result block: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result addToken: (nodes at: 13) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet6: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result propertyTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result getToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result parameters: (nodes at: 8).
	result type: (nodes at: 9).
	result _size: (nodes at: 10).
	result block: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result addToken: (nodes at: 14) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet7: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result propertyTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result getToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result parameters: (nodes at: 8).
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet8: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result propertyTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result getToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result parameters: (nodes at: 8).
	result type: (nodes at: 9).
	result block: (nodes at: 10).
	result endToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result addToken: (nodes at: 13) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyGet9: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result propertyTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result getToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result parameters: (nodes at: 8).
	result type: (nodes at: 9).
	result _size: (nodes at: 10).
	result block: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result addToken: (nodes at: 14) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet1: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result letToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet2: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result propertyTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result letToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result parameters: (nodes at: 8).
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet3: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result propertyTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result letToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result parameters: (nodes at: 8).
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertyLet4: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result modifier: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result propertyTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result letToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result selector: (nodes at: 9).
	result parameters: (nodes at: 10).
	result block: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result addToken: (nodes at: 14) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet1: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result addToken: (nodes at: 1) to: result propertyTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result setToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result selector: (nodes at: 5).
	result parameters: (nodes at: 6).
	result block: (nodes at: 7).
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result addToken: (nodes at: 10) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet2: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result modifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result propertyTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result setToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result parameters: (nodes at: 8).
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet3: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result propertyTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result setToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result selector: (nodes at: 7).
	result parameters: (nodes at: 8).
	result block: (nodes at: 9).
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForModulePropertySet4: nodes [
	| result |
	result := VBModulePropertyGetNode new.
	result visibility: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result modifier: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result propertyTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result setToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result selector: (nodes at: 9).
	result parameters: (nodes at: 10).
	result block: (nodes at: 11).
	result endToken: (nodes at: 12).
	result addToken: (nodes at: 13) to: result whitespaceTokens.
	result addToken: (nodes at: 14) to: result propertyTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForNegatedOperation2: nodes [
	| result |
	result := VBNegatedOperationNode new.
	result minusToken: (nodes at: 1).
	result value: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForNewClause1: nodes [
	| result |
	result := VBNewClauseNode new.
	result nEWToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result typeName: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForNotOperation2: nodes [
	| result |
	result := VBNotOperationNode new.
	result notToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForNull1: nodes [
	| result |
	result := VBNullNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOnErrorGoTo1: nodes [
	| result |
	result := VBOnErrorGoToNode new.
	result onToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eRRORToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result to: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOnErrorResumeNext1: nodes [
	| result |
	result := VBOnErrorResumeNextNode new.
	result onToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result eRRORToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result resumeToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result nextToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOnExpressionGo1: nodes [
	| result |
	result := VBOnExpressionGoNode new.
	result onToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result integerExpression: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result to: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOneLineBlock10: nodes [
	| result |
	result := VBBlockNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result addObject: (nodes at: 2) to: result statements.
	result addTokens: ((nodes at: 3) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 3) at: 2) to: result statements.
	result addTokens: ((nodes at: 3) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOneLineBlock11: nodes [
	| result |
	result := VBBlockNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result addObject: (nodes at: 2) to: result statements.
	result addTokens: ((nodes at: 3) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 3) at: 2) to: result statements.
	result addTokens: ((nodes at: 3) at: 3) to: result whitespaceTokens.
	result addToken: (nodes at: 4) to: result colonTokens.
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOneLineBlock12: nodes [
	| result |
	result := VBBlockNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result addObject: (nodes at: 2) to: result statements.
	result addTokens: ((nodes at: 3) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 3) at: 2) to: result statements.
	result addTokens: ((nodes at: 3) at: 3) to: result whitespaceTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result addToken: (nodes at: 5) to: result colonTokens.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOneLineBlock1: nodes [
	| result |
	result := VBBlockNode new.
	result addTokens: ((nodes at: 1) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 1) at: 2) to: result statements.
	result addTokens: ((nodes at: 1) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOneLineBlock2: nodes [
	| result |
	result := VBBlockNode new.
	result addTokens: ((nodes at: 1) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 1) at: 2) to: result statements.
	result addTokens: ((nodes at: 1) at: 3) to: result whitespaceTokens.
	result addToken: (nodes at: 2) to: result colonTokens.
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOneLineBlock3: nodes [
	| result |
	result := VBBlockNode new.
	result addTokens: ((nodes at: 1) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 1) at: 2) to: result statements.
	result addTokens: ((nodes at: 1) at: 3) to: result whitespaceTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result colonTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOneLineBlock4: nodes [
	| result |
	result := VBBlockNode new.
	result addObject: (nodes at: 1) to: result statements.
	result addTokens: ((nodes at: 2) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 2) at: 2) to: result statements.
	result addTokens: ((nodes at: 2) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOneLineBlock5: nodes [
	| result |
	result := VBBlockNode new.
	result addObject: (nodes at: 1) to: result statements.
	result addTokens: ((nodes at: 2) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 2) at: 2) to: result statements.
	result addTokens: ((nodes at: 2) at: 3) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result colonTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOneLineBlock6: nodes [
	| result |
	result := VBBlockNode new.
	result addObject: (nodes at: 1) to: result statements.
	result addTokens: ((nodes at: 2) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 2) at: 2) to: result statements.
	result addTokens: ((nodes at: 2) at: 3) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result addToken: (nodes at: 4) to: result colonTokens.
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOneLineBlock7: nodes [
	| result |
	result := VBBlockNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result addTokens: ((nodes at: 2) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 2) at: 2) to: result statements.
	result addTokens: ((nodes at: 2) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOneLineBlock8: nodes [
	| result |
	result := VBBlockNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result addTokens: ((nodes at: 2) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 2) at: 2) to: result statements.
	result addTokens: ((nodes at: 2) at: 3) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result colonTokens.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOneLineBlock9: nodes [
	| result |
	result := VBBlockNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result addTokens: ((nodes at: 2) at: 1) to: result colonTokens.
	result addObjects: ((nodes at: 2) at: 2) to: result statements.
	result addTokens: ((nodes at: 2) at: 3) to: result whitespaceTokens.
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result addToken: (nodes at: 4) to: result colonTokens.
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause1: nodes [
	| result |
	result := VBOpenClauseNode new.
	result oPENToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result filepath: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result fORToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result mode: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result aSToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result fileDescriptor: (nodes at: 11).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause2: nodes [
	| result |
	result := VBOpenClauseNode new.
	result oPENToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result filepath: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result fORToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result mode: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result aSToken: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result fileDescriptor: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result lenToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result equalToken: (nodes at: 15).
	result addToken: (nodes at: 16) to: result whitespaceTokens.
	result length: (nodes at: 17).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause3: nodes [
	| result |
	result := VBOpenClauseNode new.
	result oPENToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result filepath: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result fORToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result mode: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result lock: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result aSToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result fileDescriptor: (nodes at: 13).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause4: nodes [
	| result |
	result := VBOpenClauseNode new.
	result oPENToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result filepath: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result fORToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result mode: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result lock: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result aSToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result fileDescriptor: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result lenToken: (nodes at: 15).
	result addToken: (nodes at: 16) to: result whitespaceTokens.
	result equalToken: (nodes at: 17).
	result addToken: (nodes at: 18) to: result whitespaceTokens.
	result length: (nodes at: 19).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause5: nodes [
	| result |
	result := VBOpenClauseNode new.
	result oPENToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result filepath: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result fORToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result mode: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result access: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result aSToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result fileDescriptor: (nodes at: 13).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause6: nodes [
	| result |
	result := VBOpenClauseNode new.
	result oPENToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result filepath: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result fORToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result mode: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result access: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result aSToken: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result fileDescriptor: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result lenToken: (nodes at: 15).
	result addToken: (nodes at: 16) to: result whitespaceTokens.
	result equalToken: (nodes at: 17).
	result addToken: (nodes at: 18) to: result whitespaceTokens.
	result length: (nodes at: 19).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause7: nodes [
	| result |
	result := VBOpenClauseNode new.
	result oPENToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result filepath: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result fORToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result mode: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result access: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result lock: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result aSToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result fileDescriptor: (nodes at: 15).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOpenFileClause8: nodes [
	| result |
	result := VBOpenClauseNode new.
	result oPENToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result filepath: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result fORToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result mode: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result access: (nodes at: 9).
	result addToken: (nodes at: 10) to: result whitespaceTokens.
	result lock: (nodes at: 11).
	result addToken: (nodes at: 12) to: result whitespaceTokens.
	result aSToken: (nodes at: 13).
	result addToken: (nodes at: 14) to: result whitespaceTokens.
	result fileDescriptor: (nodes at: 15).
	result addToken: (nodes at: 16) to: result whitespaceTokens.
	result lenToken: (nodes at: 17).
	result addToken: (nodes at: 18) to: result whitespaceTokens.
	result equalToken: (nodes at: 19).
	result addToken: (nodes at: 20) to: result whitespaceTokens.
	result length: (nodes at: 21).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption1: nodes [
	| result |
	result := VBOptionValueNode new.
	result optionToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption2: nodes [
	| result |
	result := VBOptionCompareDatabaseNode new.
	result optionToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result compareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result databaseToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption3: nodes [
	| result |
	result := VBOptionCompareNode new.
	result optionToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result compareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result bINARYToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption4: nodes [
	| result |
	result := VBOptionCompareNode new.
	result optionToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result compareToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result compare: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption5: nodes [
	| result |
	result := VBOptionExplicitNode new.
	result optionToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result explicitToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOption6: nodes [
	| result |
	result := VBOptionPrivateModuleNode new.
	result optionToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result privateToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result moduleToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForOptionBase1: nodes [
	| result |
	result := VBOptionBaseNode new.
	result optionToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result baseToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result value: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter10: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result name: (nodes at: 3).
	result _size: (nodes at: 4).
	result type: (nodes at: 5).
	result addTokens: ((nodes at: 6) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 6) at: 2).
	result default: ((nodes at: 6) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter11: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result paramarrayToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result name: (nodes at: 5).
	result type: (nodes at: 6).
	result addTokens: ((nodes at: 7) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 7) at: 2).
	result default: ((nodes at: 7) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter12: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result paramarrayToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result name: (nodes at: 5).
	result _size: (nodes at: 6).
	result type: (nodes at: 7).
	result addTokens: ((nodes at: 8) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 8) at: 2).
	result default: ((nodes at: 8) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter13: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result strategy: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result name: (nodes at: 5).
	result type: (nodes at: 6).
	result addTokens: ((nodes at: 7) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 7) at: 2).
	result default: ((nodes at: 7) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter14: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result strategy: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result name: (nodes at: 5).
	result _size: (nodes at: 6).
	result type: (nodes at: 7).
	result addTokens: ((nodes at: 8) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 8) at: 2).
	result default: ((nodes at: 8) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter15: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result strategy: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result paramarrayToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result name: (nodes at: 7).
	result type: (nodes at: 8).
	result addTokens: ((nodes at: 9) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 9) at: 2).
	result default: ((nodes at: 9) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter16: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result strategy: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result paramarrayToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result name: (nodes at: 7).
	result _size: (nodes at: 8).
	result type: (nodes at: 9).
	result addTokens: ((nodes at: 10) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 10) at: 2).
	result default: ((nodes at: 10) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter1: nodes [
	| result |
	result := VBParameterNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	result addTokens: ((nodes at: 3) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 3) at: 2).
	result default: ((nodes at: 3) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter2: nodes [
	| result |
	result := VBParameterNode new.
	result name: (nodes at: 1).
	result _size: (nodes at: 2).
	result type: (nodes at: 3).
	result addTokens: ((nodes at: 4) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 4) at: 2).
	result default: ((nodes at: 4) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter3: nodes [
	| result |
	result := VBParameterNode new.
	result paramarrayToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result name: (nodes at: 3).
	result type: (nodes at: 4).
	result addTokens: ((nodes at: 5) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 5) at: 2).
	result default: ((nodes at: 5) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter4: nodes [
	| result |
	result := VBParameterNode new.
	result paramarrayToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result name: (nodes at: 3).
	result _size: (nodes at: 4).
	result type: (nodes at: 5).
	result addTokens: ((nodes at: 6) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 6) at: 2).
	result default: ((nodes at: 6) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter5: nodes [
	| result |
	result := VBParameterNode new.
	result strategy: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result name: (nodes at: 3).
	result type: (nodes at: 4).
	result addTokens: ((nodes at: 5) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 5) at: 2).
	result default: ((nodes at: 5) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter6: nodes [
	| result |
	result := VBParameterNode new.
	result strategy: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result name: (nodes at: 3).
	result _size: (nodes at: 4).
	result type: (nodes at: 5).
	result addTokens: ((nodes at: 6) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 6) at: 2).
	result default: ((nodes at: 6) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter7: nodes [
	| result |
	result := VBParameterNode new.
	result strategy: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result paramarrayToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result name: (nodes at: 5).
	result type: (nodes at: 6).
	result addTokens: ((nodes at: 7) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 7) at: 2).
	result default: ((nodes at: 7) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter8: nodes [
	| result |
	result := VBParameterNode new.
	result strategy: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result paramarrayToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result name: (nodes at: 5).
	result _size: (nodes at: 6).
	result type: (nodes at: 7).
	result addTokens: ((nodes at: 8) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 8) at: 2).
	result default: ((nodes at: 8) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameter9: nodes [
	| result |
	result := VBParameterNode new.
	result optionalToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result name: (nodes at: 3).
	result type: (nodes at: 4).
	result addTokens: ((nodes at: 5) at: 1) to: result whitespaceTokens.
	result equalToken: ((nodes at: 5) at: 2).
	result default: ((nodes at: 5) at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameterList1: nodes [
	| result |
	result := VBParameterListNode new.
	result leftParenToken: (nodes at: 1).
	result rightParenToken: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameterList2: nodes [
	| result |
	result := VBParameterListNode new.
	result leftParenToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result rightParenToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameterList3: nodes [
	| result |
	result := VBParameterListNode new.
	result leftParenToken: (nodes at: 1).
	result addNode: (nodes at: 2) to: result parameters.
	result addTokens: ((nodes at: 3) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 3) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 3) at: 3) to: result parameters.
	result rightParenToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameterList4: nodes [
	| result |
	result := VBParameterListNode new.
	result leftParenToken: (nodes at: 1).
	result addNode: (nodes at: 2) to: result parameters.
	result addTokens: ((nodes at: 3) at: 1) to: result commaTokens.
	result addTokens: ((nodes at: 3) at: 2) to: result whitespaceTokens.
	result addNodes: ((nodes at: 3) at: 3) to: result parameters.
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result rightParenToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParameterPassingStrategy2: nodes [
	| result |
	result := VBParameterPassingStrategyNode new.
	result byrefToken: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParentheseesExpression1: nodes [
	| result |
	result := VBParentheseesExpressionNode new.
	result leftParenToken: (nodes at: 1).
	result expression: (nodes at: 2).
	result rightParenToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParentheseesExpression2: nodes [
	| result |
	result := VBParentheseesExpressionNode new.
	result leftParenToken: (nodes at: 1).
	result expression: (nodes at: 2).
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result rightParenToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParentheseesExpression3: nodes [
	| result |
	result := VBParentheseesExpressionNode new.
	result leftParenToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result expression: (nodes at: 3).
	result rightParenToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForParentheseesExpression4: nodes [
	| result |
	result := VBParentheseesExpressionNode new.
	result leftParenToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result expression: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result rightParenToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPositiveOperation2: nodes [
	| result |
	result := VBPositiveOperationNode new.
	result plusToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result value: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPrintFileClause10: nodes [
	| result |
	result := VBPrintIntoFileClauseNode new.
	result pRINTToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result fileNumber: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result commaToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result addTokens: ((nodes at: 7) at: 1) to: result semicolonTokens.
	result addNodes: ((nodes at: 7) at: 2) to: result values.
	result addTokens: ((nodes at: 7) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPrintFileClause11: nodes [
	| result |
	result := VBPrintIntoFileClauseNode new.
	result pRINTToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result fileNumber: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result commaToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result addNode: (nodes at: 7) to: result values.
	result addTokens: ((nodes at: 8) at: 1) to: result semicolonTokens.
	result addNodes: ((nodes at: 8) at: 2) to: result values.
	result addTokens: ((nodes at: 8) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPrintFileClause12: nodes [
	| result |
	result := VBPrintIntoFileClauseNode new.
	result pRINTToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result fileNumber: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result commaToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result addNode: (nodes at: 7) to: result values.
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result addTokens: ((nodes at: 9) at: 1) to: result semicolonTokens.
	result addNodes: ((nodes at: 9) at: 2) to: result values.
	result addTokens: ((nodes at: 9) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPrintFileClause1: nodes [
	| result |
	result := VBPrintIntoFileClauseNode new.
	result pRINTToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result fileNumber: (nodes at: 3).
	result commaToken: (nodes at: 4).
	result addTokens: ((nodes at: 5) at: 1) to: result semicolonTokens.
	result addNodes: ((nodes at: 5) at: 2) to: result values.
	result addTokens: ((nodes at: 5) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPrintFileClause2: nodes [
	| result |
	result := VBPrintIntoFileClauseNode new.
	result pRINTToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result fileNumber: (nodes at: 3).
	result commaToken: (nodes at: 4).
	result addNode: (nodes at: 5) to: result values.
	result addTokens: ((nodes at: 6) at: 1) to: result semicolonTokens.
	result addNodes: ((nodes at: 6) at: 2) to: result values.
	result addTokens: ((nodes at: 6) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPrintFileClause3: nodes [
	| result |
	result := VBPrintIntoFileClauseNode new.
	result pRINTToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result fileNumber: (nodes at: 3).
	result commaToken: (nodes at: 4).
	result addNode: (nodes at: 5) to: result values.
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result addTokens: ((nodes at: 7) at: 1) to: result semicolonTokens.
	result addNodes: ((nodes at: 7) at: 2) to: result values.
	result addTokens: ((nodes at: 7) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPrintFileClause4: nodes [
	| result |
	result := VBPrintIntoFileClauseNode new.
	result pRINTToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result fileNumber: (nodes at: 3).
	result commaToken: (nodes at: 4).
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result addTokens: ((nodes at: 6) at: 1) to: result semicolonTokens.
	result addNodes: ((nodes at: 6) at: 2) to: result values.
	result addTokens: ((nodes at: 6) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPrintFileClause5: nodes [
	| result |
	result := VBPrintIntoFileClauseNode new.
	result pRINTToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result fileNumber: (nodes at: 3).
	result commaToken: (nodes at: 4).
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result addNode: (nodes at: 6) to: result values.
	result addTokens: ((nodes at: 7) at: 1) to: result semicolonTokens.
	result addNodes: ((nodes at: 7) at: 2) to: result values.
	result addTokens: ((nodes at: 7) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPrintFileClause6: nodes [
	| result |
	result := VBPrintIntoFileClauseNode new.
	result pRINTToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result fileNumber: (nodes at: 3).
	result commaToken: (nodes at: 4).
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result addNode: (nodes at: 6) to: result values.
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result addTokens: ((nodes at: 8) at: 1) to: result semicolonTokens.
	result addNodes: ((nodes at: 8) at: 2) to: result values.
	result addTokens: ((nodes at: 8) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPrintFileClause7: nodes [
	| result |
	result := VBPrintIntoFileClauseNode new.
	result pRINTToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result fileNumber: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result commaToken: (nodes at: 5).
	result addTokens: ((nodes at: 6) at: 1) to: result semicolonTokens.
	result addNodes: ((nodes at: 6) at: 2) to: result values.
	result addTokens: ((nodes at: 6) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPrintFileClause8: nodes [
	| result |
	result := VBPrintIntoFileClauseNode new.
	result pRINTToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result fileNumber: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result commaToken: (nodes at: 5).
	result addNode: (nodes at: 6) to: result values.
	result addTokens: ((nodes at: 7) at: 1) to: result semicolonTokens.
	result addNodes: ((nodes at: 7) at: 2) to: result values.
	result addTokens: ((nodes at: 7) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForPrintFileClause9: nodes [
	| result |
	result := VBPrintIntoFileClauseNode new.
	result pRINTToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result fileNumber: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result commaToken: (nodes at: 5).
	result addNode: (nodes at: 6) to: result values.
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result addTokens: ((nodes at: 8) at: 1) to: result semicolonTokens.
	result addNodes: ((nodes at: 8) at: 2) to: result values.
	result addTokens: ((nodes at: 8) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForProcedureCallOrArrayAccess1: nodes [
	| result |
	result := VBProcedureCallOrArrayAccessNode new.
	result selector: (nodes at: 1).
	result leftParenToken: (nodes at: 2).
	result arguments: (nodes at: 3).
	result rightParenToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForProcedureCallOrArrayAccess2: nodes [
	| result |
	result := VBProcedureCallOrArrayAccessNode new.
	result selector: (nodes at: 1).
	result leftParenToken: (nodes at: 2).
	result arguments: (nodes at: 3).
	result whitespaceToken: (nodes at: 4).
	result rightParenToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForRaiseError1: nodes [
	| result |
	result := VBRaiseErrorNode new.
	result eRRORToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result errorCode: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForRaiseEvent1: nodes [
	| result |
	result := VBRaiseEventNode new.
	result raiseEventToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result selector: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForReDefineVariable1: nodes [
	| result |
	result := VBReDimVariableNode new.
	result redimToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result variable: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForReDefineVariable2: nodes [
	| result |
	result := VBReDimVariableNode new.
	result redimToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result preserveToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result variable: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForReDefineVariables1: nodes [
	| result |
	result := VBReDimMultipleVariablesNode new.
	result redimToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result variables: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForReDefineVariables2: nodes [
	| result |
	result := VBReDimMultipleVariablesNode new.
	result redimToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result preserveToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result variables: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForRename1: nodes [
	| result |
	result := VBRenameNode new.
	result nameToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result oldName: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result aSToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result newName: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForResumeEmpty1: nodes [
	| result |
	result := VBResumeEmptyNode new.
	result resumeToken: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForResumeLabel1: nodes [
	| result |
	result := VBResumeLabelNode new.
	result resumeToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result destination: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForResumeNext1: nodes [
	| result |
	result := VBResumeNextNode new.
	result resumeToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result nextToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForReturn1: nodes [
	| result |
	result := VBReturnNode new.
	result returnToken: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSelect1: nodes [
	| result |
	result := VBSelectNode new.
	result addToken: (nodes at: 1) to: result selectTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result caseToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result expression: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addNodes: (nodes at: 7) to: result cases.
	result endToken: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result addToken: (nodes at: 10) to: result selectTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSelect2: nodes [
	| result |
	result := VBSelectNode new.
	result addToken: (nodes at: 1) to: result selectTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result caseToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result expression: (nodes at: 5).
	result addTokens: (nodes at: 6) to: result eolTokens.
	result addNodes: (nodes at: 7) to: result cases.
	result endLineNumber: (nodes at: 8).
	result addToken: (nodes at: 9) to: result whitespaceTokens.
	result endToken: (nodes at: 10).
	result addToken: (nodes at: 11) to: result whitespaceTokens.
	result addToken: (nodes at: 12) to: result selectTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSetUpAssignation1: nodes [
	| result |
	result := VBSetUpAssignationNode new.
	result identifier: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result equalToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result value: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSimpleIdentifier1: nodes [
	| result |
	result := VBSimpleIdentifierNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForSquareBracketIdentifier1: nodes [
	| result |
	result := VBSquareBracketIdentifierNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForStaticVariable1: nodes [
	| result |
	result := VBStaticVariableNode new.
	result staticToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result variable: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForStaticVariables1: nodes [
	| result |
	result := VBStaticMultipleVariablesNode new.
	result staticToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result variables: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForStringLiteral1: nodes [
	| result |
	result := VBStringLiteralNode new.
	result token: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeEntry1: nodes [
	| result |
	result := VBTypeEntryNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeEntry2: nodes [
	| result |
	result := VBTypeEntryNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	result timesToken: (nodes at: 3).
	result _size: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeEntry3: nodes [
	| result |
	result := VBTypeEntryNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	result timesToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result _size: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeEntry4: nodes [
	| result |
	result := VBTypeEntryNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result timesToken: (nodes at: 4).
	result _size: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeEntry5: nodes [
	| result |
	result := VBTypeEntryNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result timesToken: (nodes at: 4).
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result _size: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeOf1: nodes [
	| result |
	result := VBTypeOfNode new.
	result typeOfToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result argument: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result iSToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result type: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeOf2: nodes [
	| result |
	result := VBTypeOfNode new.
	result typeOfToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result argument: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result isNotToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result type: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeSize1: nodes [
	| result |
	result := VBTypeSizeNode new.
	result leftParenToken: (nodes at: 1).
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 2) at: 2) to: result sizes.
	result addTokens: ((nodes at: 2) at: 3) to: result whitespaceTokens.
	result rightParenToken: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypeSize2: nodes [
	| result |
	result := VBTypeSizeNode new.
	result leftParenToken: (nodes at: 1).
	result addNode: (nodes at: 2) to: result sizes.
	result addTokens: ((nodes at: 3) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 3) at: 2) to: result sizes.
	result addTokens: ((nodes at: 3) at: 3) to: result whitespaceTokens.
	result rightParenToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedAndInstantiatedThing1: nodes [
	| result |
	result := VBAsTypeAndNewNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result aSToken: (nodes at: 2).
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result nEWToken: (nodes at: 4).
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result type: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing10: nodes [
	| result |
	result := VBTypedThingNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result aSToken: (nodes at: 2).
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result type: (nodes at: 4).
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result timesToken: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result fixedSize: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing1: nodes [
	| result |
	result := VBTypedThingNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing2: nodes [
	| result |
	result := VBTypedThingNode new.
	result timesToken: (nodes at: 1).
	result fixedSize: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing3: nodes [
	| result |
	result := VBTypedThingNode new.
	result timesToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result fixedSize: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing4: nodes [
	| result |
	result := VBTypedThingNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result timesToken: (nodes at: 2).
	result fixedSize: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing5: nodes [
	| result |
	result := VBTypedThingNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result timesToken: (nodes at: 2).
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result fixedSize: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing6: nodes [
	| result |
	result := VBTypedThingNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result aSToken: (nodes at: 2).
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result type: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing7: nodes [
	| result |
	result := VBTypedThingNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result aSToken: (nodes at: 2).
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result type: (nodes at: 4).
	result timesToken: (nodes at: 5).
	result fixedSize: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing8: nodes [
	| result |
	result := VBTypedThingNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result aSToken: (nodes at: 2).
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result type: (nodes at: 4).
	result timesToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result fixedSize: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForTypedThing9: nodes [
	| result |
	result := VBTypedThingNode new.
	result addToken: (nodes at: 1) to: result whitespaceTokens.
	result aSToken: (nodes at: 2).
	result addToken: (nodes at: 3) to: result whitespaceTokens.
	result type: (nodes at: 4).
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result timesToken: (nodes at: 6).
	result fixedSize: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForUntilTrue1: nodes [
	| result |
	result := VBUntilTrueNode new.
	result doToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result untilToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result condition: (nodes at: 5).
	result body: (nodes at: 6).
	result loopToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForUntilTrue2: nodes [
	| result |
	result := VBUntilTrueNode new.
	result doToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result untilToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result condition: (nodes at: 5).
	result body: (nodes at: 6).
	result endLineNumber: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result loopToken: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable1: nodes [
	| result |
	result := VBVariableNode new.
	result name: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable2: nodes [
	| result |
	result := VBVariableNode new.
	result name: (nodes at: 1).
	result type: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable3: nodes [
	| result |
	result := VBVariableNode new.
	result name: (nodes at: 1).
	result _size: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable4: nodes [
	| result |
	result := VBVariableNode new.
	result name: (nodes at: 1).
	result _size: (nodes at: 2).
	result type: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable5: nodes [
	| result |
	result := VBVariableNode new.
	result withEventsToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result name: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable6: nodes [
	| result |
	result := VBVariableNode new.
	result withEventsToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result name: (nodes at: 3).
	result type: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable7: nodes [
	| result |
	result := VBVariableNode new.
	result withEventsToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result name: (nodes at: 3).
	result _size: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariable8: nodes [
	| result |
	result := VBVariableNode new.
	result withEventsToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result name: (nodes at: 3).
	result _size: (nodes at: 4).
	result type: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForVariableList1: nodes [
	| result |
	result := VBVariableListNode new.
	result addNode: (nodes at: 1) to: result variables.
	result addTokens: ((nodes at: 2) at: 1) to: result commaTokens.
	result addNodes: ((nodes at: 2) at: 2) to: result variables.
	result addTokens: ((nodes at: 2) at: 3) to: result whitespaceTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileTrue1: nodes [
	| result |
	result := VBWhileTrueNode new.
	result doToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result whileToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result condition: (nodes at: 5).
	result loopToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileTrue2: nodes [
	| result |
	result := VBWhileTrueNode new.
	result doToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result whileToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result condition: (nodes at: 5).
	result endLineNumber: (nodes at: 6).
	result addToken: (nodes at: 7) to: result whitespaceTokens.
	result loopToken: (nodes at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileTrue3: nodes [
	| result |
	result := VBWhileTrueNode new.
	result doToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result whileToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result condition: (nodes at: 5).
	result body: (nodes at: 6).
	result loopToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileTrue4: nodes [
	| result |
	result := VBWhileTrueNode new.
	result doToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result whileToken: (nodes at: 3).
	result addToken: (nodes at: 4) to: result whitespaceTokens.
	result condition: (nodes at: 5).
	result body: (nodes at: 6).
	result endLineNumber: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result loopToken: (nodes at: 9).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileWend1: nodes [
	| result |
	result := VBWhileWendNode new.
	result whileToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result wendToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileWend2: nodes [
	| result |
	result := VBWhileWendNode new.
	result whileToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result endLineNumber: (nodes at: 4).
	result addToken: (nodes at: 5) to: result whitespaceTokens.
	result wendToken: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileWend3: nodes [
	| result |
	result := VBWhileWendNode new.
	result whileToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result body: (nodes at: 4).
	result wendToken: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWhileWend4: nodes [
	| result |
	result := VBWhileWendNode new.
	result whileToken: (nodes at: 1).
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result condition: (nodes at: 3).
	result body: (nodes at: 4).
	result endLineNumber: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result wendToken: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWith1: nodes [
	| result |
	result := VBWithNode new.
	result addToken: (nodes at: 1) to: result withTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result with: (nodes at: 3).
	result block: (nodes at: 4).
	result endToken: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result addToken: (nodes at: 7) to: result withTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForWith2: nodes [
	| result |
	result := VBWithNode new.
	result addToken: (nodes at: 1) to: result withTokens.
	result addToken: (nodes at: 2) to: result whitespaceTokens.
	result with: (nodes at: 3).
	result block: (nodes at: 4).
	result endLineNumber: (nodes at: 5).
	result addToken: (nodes at: 6) to: result whitespaceTokens.
	result endToken: (nodes at: 7).
	result addToken: (nodes at: 8) to: result whitespaceTokens.
	result addToken: (nodes at: 9) to: result withTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument___________________whitespace___1: nodes [
	| result |
	result := Array new: 4.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument___________________whitespace___2: nodes [
	| result |
	result := Array new: 4.
	result at: 1 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument___________________whitespace___3: nodes [
	| result |
	result := Array new: 4.
	result at: 3 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument___________________whitespace___4: nodes [
	| result |
	result := Array new: 4.
	result at: 3 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument___________________whitespace___5: nodes [
	| result |
	result := Array new: 4.
	result at: 4 put: (nodes at: 1).
	result at: 1 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument___________________whitespace___6: nodes [
	| result |
	result := Array new: 4.
	result at: 4 put: (nodes at: 1).
	result at: 1 put: (nodes at: 2).
	result at: 2 put: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument___________________whitespace___7: nodes [
	| result |
	result := Array new: 4.
	result at: 4 put: (nodes at: 1).
	result at: 3 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument___________________whitespace___8: nodes [
	| result |
	result := Array new: 4.
	result at: 4 put: (nodes at: 1).
	result at: 3 put: (nodes at: 2).
	result at: 2 put: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument___________________whitespace____1: nodes [
	| result |
	result := Array new: 4.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_Argument__argument___________________whitespace____2: nodes [
	| result |
	result := nodes at: 1.
	self add: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	self add: ((nodes at: 2) at: 3) to: (result at: 3).
	self add: ((nodes at: 2) at: 4) to: (result at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_AsType__type__TypeSize__size_____1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_AsType__type__TypeSize__size______1: nodes [
	| result |
	result := Array new: 2.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_AsType__type__TypeSize__size______2: nodes [
	| result |
	result := nodes at: 1.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_HEX_INTEGER___1: nodes [
	| result |
	result := OrderedCollection new: 2.
	self add: (nodes at: 1) to: result.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_____UsableKeywords__member__1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_____UsableKeywords__member___2: nodes [
	| result |
	result := nodes at: 1.
	self add: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_______________whitespace___Argument__argument_____3: nodes [
	| result |
	result := Array new: 4.
	result at: 1 put: (nodes at: 1).
	result at: 3 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_______________whitespace___Argument__argument_____4: nodes [
	| result |
	result := Array new: 4.
	result at: 1 put: (nodes at: 1).
	result at: 3 put: (nodes at: 2).
	result at: 2 put: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_______________whitespace___Argument__argument_____6: nodes [
	| result |
	result := Array new: 4.
	result at: 4 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_______eol____whitespace______whitespace__________IntegerLiteral__lineNumber___whitespace_________Statement__statement________1: nodes [
	| result |
	result := Array new: 5.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	self addAll: ((nodes at: 1) at: 1) to: (result at: 1).
	self addAll: ((nodes at: 1) at: 2) to: (result at: 2).
	self addAll: ((nodes at: 1) at: 3) to: (result at: 3).
	result at: 4 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_______eol____whitespace______whitespace__________IntegerLiteral__lineNumber___whitespace_________Statement__statement________2: nodes [
	| result |
	result := Array new: 5.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	self addAll: ((nodes at: 1) at: 1) to: (result at: 1).
	self addAll: ((nodes at: 1) at: 2) to: (result at: 2).
	self addAll: ((nodes at: 1) at: 3) to: (result at: 3).
	result at: 5 put: (nodes at: 2).
	self add: (nodes at: 3) to: (result at: 3).
	result at: 4 put: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_______eol____whitespace______whitespace__________IntegerLiteral__lineNumber___whitespace_________Statement__statement_________1: nodes [
	| result |
	result := Array new: 5.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_______eol____whitespace______whitespace__________IntegerLiteral__lineNumber___whitespace_________Statement__statement_________2: nodes [
	| result |
	result := nodes at: 1.
	self addAll: ((nodes at: 2) at: 1) to: (result at: 4).
	self addAll: ((nodes at: 2) at: 2) to: (result at: 5).
	self addAll: ((nodes at: 2) at: 3) to: (result at: 3).
	self add: ((nodes at: 2) at: 4) to: (result at: 1).
	self add: ((nodes at: 2) at: 5) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______whitespace__Parameter__parameter__1: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	result at: 3 put: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______whitespace___Expression__value__1: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______whitespace___Expression__value__2: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (nodes at: 1).
	result at: 3 put: (nodes at: 2).
	result at: 2 put: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor______whitespace___Expression__value___2: nodes [
	| result |
	result := nodes at: 1.
	self add: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	self add: ((nodes at: 2) at: 3) to: (result at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor___eol___SetUpAssignation__setting___2: nodes [
	| result |
	result := nodes at: 1.
	self addAll: ((nodes at: 2) at: 1) to: (result at: 2).
	self add: ((nodes at: 2) at: 2) to: (result at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor___whitespace_________whitespace____Constant__constant___1: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (OrderedCollection new: 2).
	result at: 1 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor___whitespace_________whitespace____Constant__constant___2: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (OrderedCollection new: 2).
	result at: 1 put: (nodes at: 1).
	self add: (nodes at: 2) to: (result at: 3).
	result at: 2 put: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor___whitespace_________whitespace____Constant__constant___3: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (OrderedCollection new: 2).
	self add: (nodes at: 1) to: (result at: 3).
	result at: 1 put: (nodes at: 2).
	result at: 2 put: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor___whitespace_________whitespace____Constant__constant___4: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (OrderedCollection new: 2).
	self add: (nodes at: 1) to: (result at: 3).
	result at: 1 put: (nodes at: 2).
	self add: (nodes at: 3) to: (result at: 3).
	result at: 2 put: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor___whitespace_________whitespace____Constant__constant____1: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	self add: ((nodes at: 1) at: 1) to: (result at: 1).
	self add: ((nodes at: 1) at: 2) to: (result at: 2).
	self addAll: ((nodes at: 1) at: 3) to: (result at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor___whitespace_________whitespace____Constant__constant____2: nodes [
	| result |
	result := nodes at: 1.
	self add: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	self addAll: ((nodes at: 2) at: 3) to: (result at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol___ModuleStatement__element___1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (OrderedCollection new: 2).
	self addAll: (nodes at: 1) to: (result at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol___ModuleStatement__element____1: nodes [
	| result |
	result := Array new: 2.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol___ModuleStatement__element____2: nodes [
	| result |
	result := nodes at: 1.
	self addAll: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol____whitespace______whitespace___1: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (OrderedCollection new: 2).
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol____whitespace______whitespace___2: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (OrderedCollection new: 2).
	result at: 2 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol____whitespace______whitespace___3: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (OrderedCollection new: 2).
	result at: 2 put: (nodes at: 1).
	self add: (nodes at: 2) to: (result at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol____whitespace______whitespace___4: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (OrderedCollection new: 2).
	self add: (nodes at: 1) to: (result at: 3).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__eol____whitespace______whitespace___5: nodes [
	| result |
	result := Array new: 3.
	result at: 3 put: (OrderedCollection new: 2).
	self add: (nodes at: 1) to: (result at: 3).
	result at: 2 put: (nodes at: 2).
	self add: (nodes at: 3) to: (result at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__whitespace_______whitespace__Destination__label___1: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__whitespace_______whitespace__Expression__default__1: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (OrderedCollection new: 2).
	self add: (nodes at: 1) to: (result at: 1).
	result at: 2 put: (nodes at: 2).
	self add: (nodes at: 3) to: (result at: 1).
	result at: 3 put: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor__whitespace_______whitespace__Expression__default___1: nodes [
	| result |
	result := Array new: 3.
	result at: 1 put: (OrderedCollection new: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_eol__1: nodes [
	| result |
	result := OrderedCollection new: 2.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFor_eol__2: nodes [
	| result |
	result := nodes at: 1.
	self add: (nodes at: 2) to: result.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForheader1: nodes [
	| result |
	result := VBHeaderNode new.
	result versionToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result version: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionForheader2: nodes [
	| result |
	result := VBHeaderNode new.
	result versionToken: (nodes at: 1).
	result whitespaceToken: (nodes at: 2).
	result version: (nodes at: 3).
	result classToken: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFormodule1: nodes [
	| result |
	result := VBModuleNode new.
	result addTokens: (nodes at: 1) to: result eolTokens.
	result addTokens: ((nodes at: 2) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 2) at: 2) to: result elements.
	result addTokens: (nodes at: 3) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFormodule2: nodes [
	| result |
	result := VBModuleNode new.
	result addTokens: (nodes at: 1) to: result eolTokens.
	result addNode: (nodes at: 2) to: result elements.
	result addTokens: ((nodes at: 3) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 3) at: 2) to: result elements.
	result addTokens: (nodes at: 4) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFormodule3: nodes [
	| result |
	result := VBModuleNode new.
	result addTokens: (nodes at: 1) to: result eolTokens.
	result header: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addTokens: ((nodes at: 4) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 4) at: 2) to: result elements.
	result addTokens: (nodes at: 5) to: result eolTokens.
	^ result
]

{ #category : #'generated-reduction actions' }
VBParser >> reduceActionFormodule4: nodes [
	| result |
	result := VBModuleNode new.
	result addTokens: (nodes at: 1) to: result eolTokens.
	result header: (nodes at: 2).
	result addTokens: (nodes at: 3) to: result eolTokens.
	result addNode: (nodes at: 4) to: result elements.
	result addTokens: ((nodes at: 5) at: 1) to: result eolTokens.
	result addNodes: ((nodes at: 5) at: 2) to: result elements.
	result addTokens: (nodes at: 6) to: result eolTokens.
	^ result
]
